<Symbol IsArchivable="no" IsPlaceable="no" MainGUID="CFF2725E-BD09-4ED4-9558-8C1DC9FB19C7" MigrationValue="Normal" Owner="1196638531" Signature="1465080141" Version="34">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="no">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>6ACDA889-69B2-4EC5-936C-CB1DA7032A92</MainGUID>
	<MainGUID>F6AE9687-2BC7-4D47-88C9-8F793E1DE2D6</MainGUID>
	<MainGUID>4ABD0A6E-634B-4931-B3AA-9BEE01F35CDF</MainGUID>
	<MainGUID>7DDE9DC4-66BD-41C8-8376-46D0B352F69B</MainGUID>
	<MainGUID>84240918-5461-492B-B3FF-5F19600A4E40</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

! Contact person: <NJ>

! =============================================================================
! BO 3D
! =============================================================================
!lod3D = 0	! Off
!lod3D = 1	! Simple
!lod3D = 2	! Detailed

lod3D				= 0										! Don't draw anything
bShowUnitHotspots	= gs_unit_nominal
bShowAddHotspots	= 0
bSectionElevation	= (GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 44)
retDetlevel3D		= DETLEVEL_3D_OFF
if GLOB_CONTEXT = 6 then
	lod3D = 2		! Detailed in listing
	retDetlevel3D = DETLEVEL_3D_10
else
	if bGetMVOValueDlevSE then	iDetLevelSE = iMVODetlevelSE
	if bSectionElevation then	iDetLevel3D = iDetLevelSE

	if iDetLevel3D = DETLEVEL_3D_SCALE then
		if GLOB_SCALE > 75 then
			lod3D			= 1
			retDetlevel3D	= DETLEVEL_3D_100
		else
			lod3D = 2
			if GLOB_SCALE > 25 then
				retDetlevel3D = DETLEVEL_3D_50
			else
				retDetlevel3D = DETLEVEL_3D_10
			endif
		endif
	else
		retDetlevel3D	= iDetLevel3D
		if iDetLevel3D	= DETLEVEL_3D_10	then lod3D = 2
		if iDetLevel3D	= DETLEVEL_3D_50	then lod3D = 2
		if iDetLevel3D	= DETLEVEL_3D_100	then lod3D = 1
	endif

	if bSectionElevation then
		bShowUnitHotspots = (lod3D = 2 | gs_unit_nominal)
	endif

	if not(bForbiddenScaleChangeMoving) then
		if	retDetlevel3D = DETLEVEL_3D_10 &\
			(GLOB_CONTEXT > 20 & \
			GLOB_CONTEXT < 30) then
			retDetlevel3D = DETLEVEL_3D_50
		endif
	endif
endif




! =============================================================================
! Section detail level settings
! =============================================================================

!!lodSE = LODSE_20
!!if GLOB_SCALE > 21  then lodSE = LODSE_50
!!if GLOB_SCALE > 51  then lodSE = LODSE_100
!!if GLOB_SCALE > 101 then lodSE = LODSE_200
!!if GLOB_SCALE > 201 then lodSE = LODSE_500


! =============================================================================
! Request globals for Opening Lines
! =============================================================================

bOplines3d				= 0
opLineType3dIn			= 1
opLineType3dOut			= 1
gs_opline_style_m		= 1
gs_opLinePen			= 1

call "OpeningOptions_WMCC" parameters	gs_opening_dir_m	= 2,
									bWindow				= 1,
									bOverride_MVO_3D	= bOverride_MVO_3D,
									or_bOplines3d		= or_bOplines3d,
									or_iOpLineType3dIn	= or_iOpLineType3dIn,
									or_iOpLineType3dOut	= or_iOpLineType3dOut,
									or_iOplineStyle		= or_iOplineStyle,
									or_opLinePen		= or_opLinePen,
									bEnableSecondaryOpLineTypes = 0,
						returned_parameters bOplines3d,
											opLineType3dIn,
											opLineType3dOut,
											dummy,
											gs_opline_style_m,
											gs_opLinePen


! -----------------------------------------------------------------------------
! Hotspot Display Control
! -----------------------------------------------------------------------------

!!if GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 then
!!	if lodSE = LODSE_200 | lodSE = LODSE_500 then
!!		bShowUnitHotspots	= 0
!!		bShowAddHotspots	= 0
!!	else
!!		bShowUnitHotspots	= (lodSE = LODSE_20 | lodSE = LODSE_50 | gs_unit_nominal)
!!	endif
!!else
!!	bShowUnitHotspots	= 0
!!	bShowAddHotspots	= 0
!!endif

if bShowAddHotspotsForIS then
	bShowUnitHotspots	= 1
	bShowAddHotspots	= 1
endif


! -----------------------------------------------------------------------------
! Sunshading Detail Level control
! -----------------------------------------------------------------------------

LOD3D_SIMPLEPLANE = 1
LOD3D_DETAILEDPLANE = 2
LOD3D_SIMPLEPANEL = 3
LOD3D_DETAILEDPANEL = 4

lod3D_sunShade = 0
if lod3D = 1 then lod3D_sunShade = LOD3D_SIMPLEPANEL		! Simple 3D
if lod3D = 2 then lod3D_sunShade = LOD3D_DETAILEDPANEL		! Detailed 3D


! -----------------------------------------------------------------------------
! CHI Simple 3D Model
! -----------------------------------------------------------------------------

! CHI Specific ================================================================
if lod3D = 5 then  ! Trims , Sills and shutters dont appear in chinese 2D symbol
	bEnableMasonryArch	= 0
	bEnableSill = 0
	bEnableBoard = 0
	bEnableCasing = 0
	bEnableShutter = 0
endif


! =============================================================================
! Wallhole Structure
! =============================================================================

call "WallholeStructure_WMCC" parameters all A = A,
	AC_Sill_To_Curr_Story	= AC_Sill_To_Curr_Story,
	refWidth				= refWidth,
	leftWidth				= leftWallholeWidth,
	rightWidth				= rightWallholeWidth,
	iRevealType				= iRevealType,
	iSillRevealType			= iSillRevealType,
	iBoardRevealType		= iBoardRevealType,
	leftWallholeRevealPnts	= leftWallholeRevealPnts,
	rightWallholeRevealPnts	= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	revealInnerLeft			= revealInnerLeft,
	revealInnerRight		= revealInnerRight,
	iClosureType			= iClosureType,
	radSill					= radSill,
	radBoard				= radBoard,
	WOD						= WOD,
	overSizeLeft			= overSizeLeft,
	overSizeRight			= overSizeRight,
	overSizeUpper			= overSizeUpper,
	overSizeLower			= overSizeLower,
! --- Function Control Parameters
	bEnableParapetInset		= bEnableParapetInset,
	bEnableMasonryArch		= bEnableMasonryArch,
	bEnableFaschen			= bEnableFaschen,
	bDWSymbolAtMiddle		= bDWSymbolAtMiddle,
! --- Macro Control Parameters
	isWindow				= 1,
	gs_IsCurved				= gs_IsCurved,
	bParalellInCurvedWalls	= bParalellInCurvedWalls,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
	leftCornerAngle			= leftCornerAngle,
	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
	rightCornerAngle		= rightCornerAngle,
	rightConnWallThk		= rightConnWallThk,
! --- sunShade wallhole size modification
	includeBoxHeight		= _includeBoxHeight,
! --- Turn Plaster
	possibleSkinTurnIn		= possibleSkinTurnIn,
	possibleSkinTurnOut		= possibleSkinTurnOut,
	gs_turn_plaster_show_3D	= gs_turn_plaster_show_3D,
	thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
	thkPlasterAtSillRight	= thkPlasterAtSillRight,
	thkPlasterAtSillTop		= thkPlasterAtSillTop,
	thkPlasterAtSillBottom	= thkPlasterAtSillBottom,
	thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
	thkPlasterAtBoardTop	= thkPlasterAtBoardTop,
	thkPlasterAtBoardBottom	= thkPlasterAtBoardBottom,
! --- Casing
	bDrawOutsideTrim		= bDrawOutsideTrim,
	bDrawInsideTrim			= bDrawInsideTrim,
! --- String Resources
	stWallContourLine		= stWallContourLine,
	stMasonryArchTypes		= stMasonryArchTypes,
	stMasonryArchStructure	= stMasonryArchStructure,
! --- Parapet
	iParapetBottom			= iParapetBottom,
	iParapetSize			= iParapetSize,
	bShowAddHotspotsForIS	= bShowAddHotspotsForIS


! =============================================================================
! Wallhole Framing
! =============================================================================

if lod3D > 0 then

	gs_sill_pen_3D	= 0
	gs_board_pen_3D	= 0

	call "WallholeFraming_WMCC" parameters all A = A,
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		iRevealType				= iRevealType,
		iSillRevealType			= iSillRevealType,
		leftWallFrameRevealPnts	= leftWallFrameRevealPnts,
		rightWallFrameRevealPnts= rightWallFrameRevealPnts,
		iRevealPointsIdx		= iRevealPointsIdx,
		revealInnerLeft			= revealInnerLeft,
		revealInnerRight		= revealInnerRight,
		radSill					= radSill,
		radBoard				= radBoard,
		WOD						= WOD,
		overSizeLeft			= overSizeLeft,
		overSizeRight			= overSizeRight,
		overSizeUpper			= overSizeUpper,
		overSizeLower			= overSizeLower,
	! --- Function Control Parameters
		bEnableSill				= bEnableSill,
		bEnableBoard			= bEnableBoard,
		bEnableThreshold		= bEnableThreshold,
		bEnableCasing			= bEnableCasing,
		bEnableShutter			= bEnableShutter,
		bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
		bEnableCustomCornerRight	= bEnableCustomCornerRight,
		bBoardInPolyWall		= bBoardInPolyWall,
	! --- Macro Control Parameters
		isWindow				= 1,
		gs_IsCurved				= gs_IsCurved,
		bParalellInCurvedWalls	= bParalellInCurvedWalls,
		bCasingTolerance		= 0,
		bSillPlaneCut			= bSillPlaneCut,
		bBoardPlaneCut			= bBoardPlaneCut,
	! --- Corner Functions
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		leftConnWallThk			= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
		rightConnWallThk		= rightConnWallThk,
	! --- sunShade wallhole size modification
		includeBoxHeight		= _includeBoxHeight,
	! --- Turn Plaster
		gs_turn_plaster_show_3D	= gs_turn_plaster_show_3D,
		thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
		thkPlasterAtSillRight	= thkPlasterAtSillRight,
		thkPlasterAtSillTop		= thkPlasterAtSillTop,
		thkPlasterAtSillBottom	= thkPlasterAtSillBottom,
		thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
		thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
		thkPlasterAtBoardTop	= thkPlasterAtBoardTop,
		thkPlasterAtBoardBottom	= thkPlasterAtBoardBottom,
	! --- String Resources
		stSillTypes				= stSillTypes,
		stBsilldetlevel 		= stBsilldetlevel,

		lod3D_sunShade			= lod3D_sunShade
endif


! =============================================================================
! Returned Parameters
! =============================================================================

if gs_stack_top then
	gs_frame_ovhg_top_out	= 0
	gs_frame_ovhg_top_in	= 0
else
	if iRevealType = REVEAL_SLANTED then
		gs_frame_ovhg_top_out	= overSize + gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame + WIDO_FRAME_THICKNESS * tan(gs_reveal_top_angle)
		gs_frame_ovhg_top_in	= overSize + gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
	else
		gs_frame_ovhg_top_out	= overSize + gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
		gs_frame_ovhg_top_in	= overSize + gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
	endif
endif

if gs_stack_bottom then
	gs_frame_ovhg_bottom_out	= 0
	gs_frame_ovhg_bottom_in		= 0
else
	if iRevealType = REVEAL_SLANTED & (not(bDrawSill) & not(bDrawBoard)) then
		gs_frame_ovhg_bottom_out	= overSizeLower + gs_tolerance_lower + WIDO_FRAME_THICKNESS * tan(gs_reveal_bottom_angle)
		gs_frame_ovhg_bottom_in		= overSizeLower + gs_tolerance_lower
	else
		gs_frame_ovhg_bottom_out	= overSizeLower + gs_tolerance_lower
		gs_frame_ovhg_bottom_in		= overSizeLower + gs_tolerance_lower
	endif
endif

if iRevealType = REVEAL_SLANTED & not(WIDO_REVEAL_SIDE) then
	temp = gs_frame_ovhg_top_in
	gs_frame_ovhg_top_in = gs_frame_ovhg_top_out
	gs_frame_ovhg_top_out = temp

	temp = gs_frame_ovhg_bottom_in
	gs_frame_ovhg_bottom_in = gs_frame_ovhg_bottom_out
	gs_frame_ovhg_bottom_out = temp
endif


! =============================================================================

addPrmX = offsWindowX
addPrmY = gs_tolerance_lower
addPrmZ = SymbolMid_shiftDy
mulPrmX = 1
mulPrmY = 1

if not(bShowReveal) then
	leftUnitWidth	= min(-leftWallFrameRevealPnts[idxFrameStartRevealLeft][1], -leftWallFrameRevealPnts[idxFrameEndRevealLeft][1])
	rightUnitWidth	= min(rightWallFrameRevealPnts[idxFrameStartRevealRight][1], rightWallFrameRevealPnts[idxFrameEndRevealRight][1])

	ac_unit_width = leftUnitWidth + rightUnitWidth - cornerPostXRight - cornerPostXLeft
endif

end ac_unit_width,
	ac_unit_height,
	gs_frame_ovhg_left_out,
	gs_frame_ovhg_right_out,
	gs_frame_ovhg_top_out,
	gs_frame_ovhg_bottom_out,
	gs_frame_ovhg_left_in,
	gs_frame_ovhg_right_in,
	gs_frame_ovhg_top_in,
	gs_frame_ovhg_bottom_in,
	bMirrored,
	retDetlevel3D,

	mulPrmX, 0,					 0,					 addPrmX,
	0,		 mulPrmY * cos(-90),-sin(-90),			 addPrmY,
	0,		 mulPrmY * sin(-90), mulPrmY * cos(-90),-addPrmZ,

	bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen,
	bShowAddHotspots, bShowAddHotspotsForIS, bShowUnitHotspots


]]></Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

! Contact person: <NJ>

!! ==============================================================================
!! Visualize Wallhole Points
!! ==============================================================================
!
!if WIDO_REVEAL_SIDE then
!	add2 0,-WIDO_FRAME_THICKNESS
!else
!	mul2 1,-1
!endif
!
!! Left Reveal Points
!pen 20
!for iii = 1 to iRevealPointsIdx[6]
!	circle2 leftWallholeRevealPnts[iii][1], leftWallholeRevealPnts[iii][2], 0.008
!	hotspot2 leftWallholeRevealPnts[iii][1], leftWallholeRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = 1 to iRevealPointsIdx[6] - 1
!	line2 leftWallholeRevealPnts[iii][1],   leftWallholeRevealPnts[iii][2],
!		  leftWallholeRevealPnts[iii+1][1], leftWallholeRevealPnts[iii+1][2]
!next iii
!
!! Left Plaster Points
!pen 6
!for iii = iRevealPointsIdx[7] to iRevealPointsIdx[10]
!	circle2 leftWallholeRevealPnts[iii][1], leftWallholeRevealPnts[iii][2], 0.006
!	hotspot2 leftWallholeRevealPnts[iii][1], leftWallholeRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = iRevealPointsIdx[7] to iRevealPointsIdx[10] - 1
!	line2 leftWallholeRevealPnts[iii][1],   leftWallholeRevealPnts[iii][2],
!		  leftWallholeRevealPnts[iii+1][1], leftWallholeRevealPnts[iii+1][2]
!next iii
!
!! Right Reveal Points
!pen 4
!for iii = 1 to iRevealPointsIdx[16]
!	circle2 rightWallholeRevealPnts[iii][1], rightWallholeRevealPnts[iii][2], 0.008
!	hotspot2 rightWallholeRevealPnts[iii][1], rightWallholeRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = 1 to iRevealPointsIdx[16] - 1
!	line2 rightWallholeRevealPnts[iii][1],   rightWallholeRevealPnts[iii][2],
!		  rightWallholeRevealPnts[iii+1][1], rightWallholeRevealPnts[iii+1][2]
!next iii
!
!! Right Plaster Points
!pen 15
!for iii = iRevealPointsIdx[17] to iRevealPointsIdx[20]
!	circle2 rightWallholeRevealPnts[iii][1], rightWallholeRevealPnts[iii][2], 0.006
!	hotspot2 rightWallholeRevealPnts[iii][1], rightWallholeRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = iRevealPointsIdx[17] to iRevealPointsIdx[20] - 1
!	line2 rightWallholeRevealPnts[iii][1],   rightWallholeRevealPnts[iii][2],
!		  rightWallholeRevealPnts[iii+1][1], rightWallholeRevealPnts[iii+1][2]
!next iii
!
!del 1
!
!
!! ==============================================================================
!! Visualize WallFrame Points
!! ==============================================================================
!
!if WIDO_REVEAL_SIDE then
!	add2 0,-WIDO_FRAME_THICKNESS
!else
!	mul2 1,-1
!endif
!
!! Left Reveal Points
!pen 20
!for iii = 1 to iRevealPointsIdx[6]
!	circle2 leftWallFrameRevealPnts[iii][1], leftWallFrameRevealPnts[iii][2], 0.008
!	hotspot2 leftWallFrameRevealPnts[iii][1], leftWallFrameRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = 1 to iRevealPointsIdx[6] - 1
!	line2 leftWallFrameRevealPnts[iii][1],   leftWallFrameRevealPnts[iii][2],
!		  leftWallFrameRevealPnts[iii+1][1], leftWallFrameRevealPnts[iii+1][2]
!next iii
!
!! Left Plaster Points
!pen 6
!for iii = iRevealPointsIdx[7] to iRevealPointsIdx[10]
!	circle2 leftWallFrameRevealPnts[iii][1], leftWallFrameRevealPnts[iii][2], 0.006
!	hotspot2 leftWallFrameRevealPnts[iii][1], leftWallFrameRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = iRevealPointsIdx[7] to iRevealPointsIdx[10] - 1
!	line2 leftWallFrameRevealPnts[iii][1],   leftWallFrameRevealPnts[iii][2],
!		  leftWallFrameRevealPnts[iii+1][1], leftWallFrameRevealPnts[iii+1][2]
!next iii
!
!! Right Reveal Points
!pen 4
!for iii = 1 to iRevealPointsIdx[16]
!	circle2 rightWallFrameRevealPnts[iii][1], rightWallFrameRevealPnts[iii][2], 0.008
!	hotspot2 rightWallFrameRevealPnts[iii][1], rightWallFrameRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = 1 to iRevealPointsIdx[16] - 1
!	line2 rightWallFrameRevealPnts[iii][1],   rightWallFrameRevealPnts[iii][2],
!		  rightWallFrameRevealPnts[iii+1][1], rightWallFrameRevealPnts[iii+1][2]
!next iii
!
!! Right Plaster Points
!pen 15
!for iii = iRevealPointsIdx[17] to iRevealPointsIdx[20]
!	circle2 rightWallFrameRevealPnts[iii][1], rightWallFrameRevealPnts[iii][2], 0.006
!	hotspot2 rightWallFrameRevealPnts[iii][1], rightWallFrameRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = iRevealPointsIdx[17] to iRevealPointsIdx[20] - 1
!	line2 rightWallFrameRevealPnts[iii][1],   rightWallFrameRevealPnts[iii][2],
!		  rightWallFrameRevealPnts[iii+1][1], rightWallFrameRevealPnts[iii+1][2]
!next iii
!
!del 1


! =============================================================================
! Center Hotspot
! =============================================================================

if curvedWall then
	if WIDO_REVEAL_SIDE exor SYMB_ROTANGLE < EPS then
		radSill = sqr(A^2 / 4 + WOD^2) - WIDO_SILL
		radBoard = radSill + WALL_THICKNESS
	else
		radSill = sqr(A^2 / 4 + WOD^2) + WIDO_SILL
		radBoard = radSill - WALL_THICKNESS
	endif
	if wallIsLeft then
		if WIDO_REVEAL_SIDE then
			py = -radSill * cos(leftAlfa) + WOD - WIDO_FRAME_THICKNESS
		else
			py = radSill * cos(leftAlfa) - WOD
		endif
	else
		if WIDO_REVEAL_SIDE then
			py = radBoard * cos(leftAlfa) + WOD - WIDO_FRAME_THICKNESS
		else
			py = -radBoard * cos(leftAlfa) - WOD
		endif
	endif
else
	if AC_WallType = 2 then
		idx1 = AC_WindowInWallContour[1]
		idx2 = AC_WindowInWallContour[2]
		if idx1 > 0 & idx2 > 0 then
			py = (AC_WallContourPolygon[idx1][2] + AC_WallContourPolygon[idx2][2]) / 2
		else
			py = 0
			if idx1 > 0 then py = AC_WallContourPolygon[idx1][2]
			if idx2 > 0 then py = AC_WallContourPolygon[idx2][2]
		endif
	else
		if bInclinedWall | wallIsLeft then
			if WIDO_REVEAL_SIDE then
				py = -WIDO_SILL - WIDO_FRAME_THICKNESS
			else
				py = WIDO_SILL
			endif
		else
			if WIDO_REVEAL_SIDE then
				py = WALL_THICKNESS - WIDO_SILL - WIDO_FRAME_THICKNESS
			else
				py = WIDO_SILL - WALL_THICKNESS
			endif
		endif
	endif
endif

hotspot2 0,py, 9999


! =============================================================================
! 2D detail level settings
! =============================================================================

! Detail values of Fixtures and Fittings
!lod2D_SillBoard: 0-Off, 1-On
!lod2D_Treshold	: 0-Off, 1-Simple, 2-Detailed
!lod2D_Casing	: 0-Off, 1-On
!lod2D_sunShade	: 0-Off, 1-Simple, 2-Detailed

lod2D_SillBoard		= 0
lod2D_Treshold		= 0
lod2D_Casing		= 0
lod2D_sunShade		= 0
lod2D_CornerColumn	= 1 + 2 * not(bDWSymbolAtMiddle | bDWSymbolAtMiddle2)		! Corner column is just one line when symbol at middle
bOneLineSymbolin2D	= 0

if iLoD2D = SYMBW_S_1LINE then 					! Simple - One Line --> INT 200
	if bGetMVOValueDlev2D and bOneLineSymbolinMVO then bOneLineSymbolin2D = 1		!!! Histroic and Bay and Bow Windows
	lod2D_SillBoard = 0
	lod2D_Treshold 	= 0
	lod2D_Casing 	= 0
	lod2D_sunShade 	= 0
endif

if iLoD2D = SYMBW_S_CENTERLINE then 			! Simple - Center Line --> SWE 200
	if bGetMVOValueDlev2D and bOneLineSymbolinMVO then bOneLineSymbolin2D = 1		!!! Histroic and Bay and Bow Windows
	lod2D_SillBoard = 0
	lod2D_Treshold 	= 0
	lod2D_Casing 	= 0
	lod2D_sunShade 	= 0
endif

if iLoD2D = SYMBW_S_2LINE_ACC then 				! Simple - Two Lines
	lod2D_SillBoard = 1
	lod2D_Treshold	= 1
	lod2D_Casing	= 0
	lod2D_sunShade	= 1

	! Drawing Sill and Board instead of Casing
	if not (gs_sill_outside) and gs_trim_outside then
		gs_sill_outside = 1
		gs_sill_nosing 		= gs_trim_thk_out
		gs_sill_ovhg_left 	= gs_tw_left_out - gs_trim_width_out + gs_trim_offs_out
		gs_sill_ovhg_right 	= gs_tw_right_out - gs_trim_width_out + gs_trim_offs_out
	endif
	if not (gs_board_inside) and gs_trim_inside then
		gs_board_inside = 1
		gs_board_nosing 	= gs_trim_thk_in
		gs_board_ovhg_left 	= gs_tw_left_in - gs_trim_width_in + gs_trim_offs_in
		gs_board_ovhg_right = gs_tw_right_in - gs_trim_width_in + gs_trim_offs_in
	endif
endif

if iLoD2D = SYMBW_M_2LINE_GLASS then 				! Middle - without acc
	lod2D_SillBoard = 1
	lod2D_Treshold	= 1
	lod2D_Casing	= 0
	lod2D_sunShade	= 1
endif

if iLoD2D = SYMBW_M_2LINE_NOGLASS then 			! Middle - with acc --> INT 100
	if bShowSillBoardIn2D100NED then
		lod2D_SillBoard = 1
	else
		lod2D_SillBoard = 0
	endif
	lod2D_Treshold	= 1
	lod2D_Casing	= 0
	lod2D_sunShade	= 1

	! Drawing Sill and Board instead of Casing
	if not (gs_sill_outside) and gs_trim_outside then
		gs_sill_outside = 1
		gs_sill_nosing 		= gs_trim_thk_out
		gs_sill_ovhg_left 	= gs_tw_left_out  - gs_trim_width_out + gs_trim_offs_out
		gs_sill_ovhg_right 	= gs_tw_right_out - gs_trim_width_out + gs_trim_offs_out
	endif
	if not (gs_board_inside) and gs_trim_inside then
		gs_board_inside = 1
		gs_board_nosing 	= gs_trim_thk_in
		gs_board_ovhg_left 	= gs_tw_left_in  - gs_trim_width_in + gs_trim_offs_in
		gs_board_ovhg_right = gs_tw_right_in - gs_trim_width_in + gs_trim_offs_in
	endif
endif

if	iLoD2D = SYMBW_D_SGLASS |\
	iLoD2D = SYMBW_D_REBATEONGLASS |\
	iLoD2D = SYMBW_D_2GLASS then 			! INT 50, NLD 50, DAN 20
	lod2D_SillBoard = 1
	lod2D_Treshold	= 2
	if bNotShowCasingIn2DNOR then
		lod2D_Casing	= bMVOCasing2D
	else
		lod2D_Casing	= 1
	endif
	lod2D_sunShade	= 2
endif

if iLoD2D = SYMBW_M_FRAMESASH then					! Middle NLD
	if bShowSillBoardIn2D100NED then
		lod2D_SillBoard = 1
	else
		lod2D_SillBoard = 0
	endif
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if iLoD2D = SYMBW_S_2LINE then					! Chinese Simple
	lod2D_SillBoard	= 0
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if iLoD2D = SYMBW_D_2LINE_HS then				! Chinese Detailed
	lod2D_SillBoard	= 0
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if iLoD2D = SYMBW_SCALESENS then							! Scale sensitive
	if GLOB_SCALE > 150 then
		iLoD2D = SYMBW_S_1LINE
		if bCenterLineInSimple2D then iLoD2D = SYMBW_S_CENTERLINE
		lod2D_SillBoard = 0
		lod2D_Treshold 	= 0
		lod2D_Casing 	= 0
		lod2D_sunShade 	= 0
	endif
	if GLOB_SCALE <= 150 and GLOB_SCALE > 75 then
		iLoD2D = SYMBW_M_2LINE_NOGLASS
		if bShowSashInMiddle2D then		iLoD2D = SYMBW_M_FRAMESASH			! Middle --> NLD 100
		if bShowGlassInMiddle2D then	iLoD2D = SYMBW_M_2LINE_GLASS		! Middle --> SWE 100
		if bShowSillBoardIn2D100NED then
			lod2D_SillBoard = 1
		else
			lod2D_SillBoard = 0
		endif
		lod2D_Treshold	= 1
		lod2D_Casing	= 0
		lod2D_sunShade	= 1
		! Drawing Sill and Board instead of Casing
		if not (gs_sill_outside) and gs_trim_outside then
			gs_sill_outside = 1
			gs_sill_nosing 		= gs_trim_thk_out
			gs_sill_ovhg_left 	= gs_tw_left_out  - gs_trim_width_out + gs_trim_offs_out
			gs_sill_ovhg_right 	= gs_tw_right_out - gs_trim_width_out + gs_trim_offs_out
		endif
		if not (gs_board_inside) and gs_trim_inside then
			gs_board_inside = 1
			gs_board_nosing 	= gs_trim_thk_in
			gs_board_ovhg_left 	= gs_tw_left_in  - gs_trim_width_in + gs_trim_offs_in
			gs_board_ovhg_right = gs_tw_right_in - gs_trim_width_in + gs_trim_offs_in
		endif
	endif
	if GLOB_SCALE <= 75 then
		iLoD2D = SYMBW_D_SGLASS
		if bShowRebateOnFixGlass then	iLoD2D = SYMBW_D_REBATEONGLASS		! Detailed --> NLD 50
		lod2D_SillBoard = 1
		lod2D_Treshold	= 2
		lod2D_Casing	= 1
		lod2D_sunShade	= 2
	endif
	if bNotShowCasingIn2DNOR then
		if GLOB_SCALE > 49 then
			lod2D_Casing	= 0
		else
			lod2D_Casing	= 1
		endif
	endif
endif

if lod2D_SillBoard = 0 | lod2D_Casing = 0 then
	if (lod2D_SillBoard = 0 & bDrawSill) | (lod2D_Casing = 0 & bDrawOutsideTrim) then
		if iWallContourLine = WALL_CONTOUR_OFF		then iWallContourLine = WALL_CONTOUR_OUTSIDE
		if iWallContourLine = WALL_CONTOUR_INSIDE	then iWallContourLine = WALL_CONTOUR_BOTHSIDES
	endif
	if (lod2D_SillBoard = 0 & bDrawBoard) | (lod2D_Casing = 0 & bDrawInsideTrim) then
		if iWallContourLine = WALL_CONTOUR_OFF		then iWallContourLine = WALL_CONTOUR_INSIDE
		if iWallContourLine = WALL_CONTOUR_OUTSIDE	then iWallContourLine = WALL_CONTOUR_BOTHSIDES
	endif
endif


! =============================================================================
! Request Globals for Opening Lines and Hotspots
! =============================================================================

gs_opLinePen			= 1
gs_iSwingType			= 1
gs_swingLineType		= 1

call "OpeningOptions_WMCC" parameters	bWindow				= 1,
									iLineShapeCategory	= iLineShapeCategory,
									bOverride_MVO_2D	= bOverride_MVO_2D,
									or_opLinePen		= or_opLinePen,
									or_iSwingType		= or_iSwingType,
									or_iSlidingType		= or_iSlidingType,
									or_swingLineType	= or_swingLineType,
									bEnableSecondaryOpLineTypes = 0,
									bDisable2DOverride = bDisable2DOverride,
						returned_parameters dummy,
											gs_opLinePen,
											gs_iSwingType,
											gs_iSlidingType,
											gs_swingLineType,
											dummy


! -----------------------------------------------------------------------------
! Hotspot Display Control
! -----------------------------------------------------------------------------

if iLoD2D < SYMBW_M_2LINE_NOGLASS then
	bShowUnitHotspots	= 0
	bShowAddHotspots	= 0
else
	bShowUnitHotspots	= ((iLoD2D > SYMBW_M_9) | gs_unit_nominal)
endif

if bShowAddHotspotsForIS then
	bShowUnitHotspots	= 1
	bShowAddHotspots	= 1
endif

if iLoD2D = SYMBW_OFF then 100


! =============================================================================
! Demolition / New construction
! =============================================================================

if iTypeDemolitionFill = RENOVATION_FILL_EXIST then
	gs_wallhole_fill = gs_wallhole_fill
	gs_wallhole_pen_fg = gs_wallhole_pen_fg
	gs_wallhole_pen_bg = gs_wallhole_pen_bg
endif

if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then
	gs_wallhole_fill = gs_Demolition_fill
	gs_wallhole_pen_fg = gs_Demolition_pen_fg
	gs_wallhole_pen_bg = gs_Demolition_pen_bg
endif

if	iTypeDemolitionFill = RENOVATION_FILL_NEW |\
	iTypeDemolitionFill = RENOVATION_FILL_NEW_FULL then 

	gs_wallhole_fill = gs_New_fill
	gs_wallhole_pen_fg = gs_New_pen_fg
	gs_wallhole_pen_bg = gs_New_pen_bg
endif


! =============================================================================
! SWE New Symbol
! =============================================================================

if gs_bShowNewOnCC & iTypeDemolitionFill = RENOVATION_FILL_NEW then
	bEnableMasonryArch			= 0
	bEnableFaschen				= 0
	bEnableSill					= 0
	bEnableBoard				= 0
	bEnableThreshold			= 0
	bEnableCasing				= 0
	bEnableShutter				= 0
	bEnableCustomCornerLeft		= 0
	bEnableCustomCornerRight	= 0
endif


! =============================================================================
! Wallhole Structure
! =============================================================================

bDrawSillFill	= not((bDrawSill  & lod2D_SillBoard > 0) | (bDrawOutsideTrim & lod2D_Casing > 0))
bDrawBoardFill	= not((bDrawBoard & lod2D_SillBoard > 0) | (bDrawInsideTrim & lod2D_Casing > 0))

bWallContHiddenLineOut	= ( (bEnableSill & (bDrawSill & lod2D_SillBoard > 0) & ((iSillType <> SILL_DUTCH) | (iSillType = SILL_DUTCH & (gs_sill_width > (WIDO_FRAME_THICKNESS + WIDO_SILL))))) |\
							(bEnableCasing & (bDrawOutsideTrim & lod2D_Casing > 0)) )
bWallContHiddenLineIn	= (bWallContHiddenLineIn) | (bEnableBoard & (bDrawBoard & lod2D_SillBoard > 0)) | (bEnableCasing & (bDrawInsideTrim & lod2D_Casing > 0))

call "WallholeStructure_WMCC" parameters all A = A,
	iTypeDemolitionFill		= iTypeDemolitionFill,
	refWidth				= refWidth,
	leftWidth				= leftWallholeWidth,
	rightWidth				= rightWallholeWidth,
	iRevealType				= iRevealTypeForDisplay,
	leftWallholeRevealPnts	= leftWallholeRevealPnts,
	rightWallholeRevealPnts	= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	bAddPoint				= bAddPoint,
	iClosureType			= iClosureType,
	radSill					= radSill,
	radBoard				= radBoard,
	WOD						= WOD,
	overSizeLeft			= overSizeLeft,
	overSizeRight			= overSizeRight,
	overSizeUpper			= overSizeUpper,
	overSizeLower			= overSizeLower,
	lineSections			= lineSections,
! --- Turned Plaster Skins
	possibleSkinTurnIn		= possibleSkinTurnIn,
	possibleSkinTurnOut		= possibleSkinTurnOut,
	maxSkinTurnIn			= maxSkinTurnIn,
	maxSkinTurnOut			= maxSkinTurnOut,
	nSkinTurnIn				= nSkinTurnIn,
	nSkinTurnOut			= nSkinTurnOut,
	thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
	thkPlasterAtSillRight	= thkPlasterAtSillRight,
	thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
! --- Function Control Parameters
	bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
	bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
	bEnablePlasterRightIn	= bEnablePlasterRightIn,
	bEnablePlasterRightOut	= bEnablePlasterRightOut,
	bEnableParapetInset		= bEnableParapetInset,
	bEnableMasonryArch		= bEnableMasonryArch,
	bEnableFaschen			= bEnableFaschen,
	bEnableWallContourHiddenLine	= bEnableWallContourHiddenLine,
	bWallContHiddenLineIn	= bWallContHiddenLineIn,
	bWallContHiddenLineOut	= bWallContHiddenLineOut,
! --- Macro Control Parameters
	isWindow				= 1,
	gs_IsCurved				= gs_IsCurved,
	bParalellInCurvedWalls	= bParalellInCurvedWalls,
	bDrawSillFill			= bDrawSillFill,
	bDrawBoardFill			= bDrawBoardFill,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
	leftCornerAngle			= leftCornerAngle,
	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
	rightCornerAngle		= rightCornerAngle,
	rightConnWallThk		= rightConnWallThk,
! --- Window Sizes
	gs_wallhole_hotspots	= 1,
	gs_reveal_hotspots		= 1,
! --- Reveal and Closure Type
	gs_reveal_left			= gs_reveal_left,
	gs_reveal_right			= gs_reveal_right,
	revealInnerLeft 		= revealInnerLeft,
	revealInnerRight		= revealInnerRight,
! --- Casing
	bDrawOutsideTrim		= bDrawOutsideTrim,
	bDrawInsideTrim			= bDrawInsideTrim,
! --- String Resources
	stWallContourLine		= stWallContourLine,
	stCavityClosureSide		= stCavityClosureSide,
	stCavityClosureTurnDir	= stCavityClosureTurnDir,
	stMasonryArchTypes		= stMasonryArchTypes,
	stMasonryArchStructure	= stMasonryArchStructure,
! --- Parapet
	iParapetSize			= iParapetSize


! =============================================================================
! Wallhole Framing
! =============================================================================

call "WallholeFraming_WMCC" parameters all A = A,
	refWidth				= refWidth,
	leftWidth				= leftWidth,
	rightWidth				= rightWidth,
	SymbolMid_shiftDy		= SymbolMid_shiftDy,
	iRevealType				= iRevealTypeForDisplay,
	leftWallFrameRevealPnts	= leftWallFrameRevealPnts,
	rightWallFrameRevealPnts= rightWallFrameRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	radSill					= radSill,
	radBoard				= radBoard,
	WOD						= WOD,
	overSizeLeft			= overSizeLeft,
	overSizeRight			= overSizeRight,
	overSizeUpper			= overSizeUpper,
	overSizeLower			= overSizeLower,
	lod2D_SillBoard			= lod2D_SillBoard,
	lod2D_Treshold			= lod2D_Treshold,
	lod2D_Casing			= lod2D_Casing,
	lod2D_sunShade			= lod2D_sunShade,
	lod2D_CornerColumn		= lod2D_CornerColumn,
! --- Function Control Parameters
	bShowAddHotspots		= bShowAddHotspots,
	bEnableSill				= bEnableSill,
	bEnableBoard			= bEnableBoard,
	bEnableThreshold		= bEnableThreshold,
	bEnableCasing			= bEnableCasing,
	bEnableShutter			= bEnableShutter,
	bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
	bEnableCustomCornerRight	= bEnableCustomCornerRight,
	bBoardInPolyWall		= bBoardInPolyWall,
! --- Macro Control Parameters
	isWindow				= 1,
	gs_IsCurved				= gs_IsCurved,
	bParalellInCurvedWalls	= bParalellInCurvedWalls,
	bCasingTolerance		= 0,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
	leftCornerAngle			= leftCornerAngle,
	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
	rightCornerAngle		= rightCornerAngle,
	rightConnWallThk		= rightConnWallThk,
! --- Reveal and Closure Type
	gs_reveal_left			= gs_reveal_left,
	gs_reveal_right			= gs_reveal_right,
	revealInnerLeft 		= revealInnerLeft,
	revealInnerRight		= revealInnerRight,
! --- String Resources
	stSillTypes				= stSillTypes


! =============================================================================
! NED Fire Rating Symbol
! =============================================================================

if bEnableNEDFireRating then
	_bSuccess = 0
	_bShowSymbol = 0
	_bSuccess = LIBRARYGLOBAL ("LibraryGlobals13", "bShowFireRating", _bShowSymbol)
	if _bSuccess then
		_bSuccess = LIBRARYGLOBAL ("LibraryGlobals13", "fireRatingSymbPen", _fireSymbPen)
	endif

	if _bSuccess and _bShowSymbol and iNEDFireRating > 0 and iNEDFireRating < 6 then
		pen _fireSymbPen

		_dx = 0.08
		_dy1 = 0.5
		_dy2 = 0.3
		_dy3 = 0.16

		hotspot2 0, -_dy1 - _dy3, 10501, NEDFireRatingPos, 1+128
		hotspot2 NEDFireRatingPos, -_dy1 - _dy3, 10502, NEDFireRatingPos, 2
		hotspot2 -1, -_dy1 - _dy3, 10503, NEDFireRatingPos, 3

		hotspot2 0, _dy1 + _dy3, 10504, NEDFireRatingPos, 1+128
		hotspot2 NEDFireRatingPos, _dy1 + _dy3, 10505, NEDFireRatingPos, 2
		hotspot2 -1, _dy1 + _dy3, 10506, NEDFireRatingPos, 3

		add2 NEDFireRatingPos, 0

		if iNEDFireRating = 2 or iNEDFireRating = 3 then
			line2 -_dx,	 _dy1,	 _dx,	 _dy1 + _dy3
			line2 -_dx,	-_dy1,	 _dx,	-_dy1 - _dy3
			line2  _dx,	 _dy1,	-_dx,	 _dy1 + _dy3
			line2  _dx,	-_dy1,	-_dx,	-_dy1 - _dy3
		endif

		if iNEDFireRating = 3 then
			line2 -_dx,	 _dy2,	 _dx,	 _dy2 + _dy3
			line2 -_dx,	-_dy2,	 _dx,	-_dy2 - _dy3
			line2  _dx,	 _dy2,	-_dx,	 _dy2 + _dy3
			line2  _dx,	-_dy2,	-_dx,	-_dy2 - _dy3
		endif

		line2 0, -_dy1 - _dy3, 0, _dy1 + _dy3

		del 1
	endif
endif


100:
! =============================================================================
! Returned Parameters
! =============================================================================

drawindex 40	! Draw Window Panel in the Middle

addPrmX = offsWindowX + (SymbMid_RightDx - SymbMid_LeftDx)/2
addPrmY = SymbolMid_shiftDy
mulPrmX = 1
mulPrmY = 1

if not(bShowReveal) then
	leftUnitWidth	= min(-leftWallFrameRevealPnts[idxFrameStartRevealLeft][1], -leftWallFrameRevealPnts[idxFrameEndRevealLeft][1])
	rightUnitWidth	= min(rightWallFrameRevealPnts[idxFrameStartRevealRight][1], rightWallFrameRevealPnts[idxFrameEndRevealRight][1])

	ac_unit_width = leftUnitWidth + rightUnitWidth - cornerPostXRight - cornerPostXLeft
endif

ac_unit_width = ac_unit_width + SymbMid_RightDx + SymbMid_LeftDx

end ac_unit_width,
	gs_frame_ovhg_left_out,
	gs_frame_ovhg_right_out,
	gs_frame_ovhg_left_in,
	gs_frame_ovhg_right_in,
	bMirrored,
	addPrmX, addPrmY,
	mulPrmX, mulPrmY,
	iLoD2D,
	retDetlevel2D,

	gs_opLinePen,
	gs_iSwingType,
	gs_iSlidingType,
	gs_swingLineType,
	bShowAddHotspots, bShowUnitHotspots,
	bOneLineSymbolin2D

]]></Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

! const values for parameter: iDWDet2D
DETLEVEL_DW2D_MVO     = 1
DETLEVEL_DW2D_SCSENS  = 2
DETLEVEL_DW2D_50      = 3
DETLEVEL_DW2D_100     = 4
DETLEVEL_DW2D_MIDDET  = 5
DETLEVEL_DW2D_SMPL2L  = 6
DETLEVEL_DW2D_200     = 7
DETLEVEL_DW2D_OFF     = 8
DETLEVEL_DW2D_MIDUSA  = 9
DETLEVEL_DW2D_CHISMPL = 10
DETLEVEL_DW2D_CHIDET  = 11
DETLEVEL_DW2D_20      = 12


! const values for parameter: iDWDet3D
DETLEVEL_DW3D_SCALESENS    = 1
DETLEVEL_DW3D_DETAILED     = 2
DETLEVEL_DW3D_SIMPLE       = 3
DETLEVEL_DW3D_OFF          = 4
DETLEVEL_DW3D_CHI_SIMPLE   = 5
DETLEVEL_DW3D_CHI_DETAILED = 6


! const values for parameter: iTypeDemolitionFill
RENOVATION_FILL_EXIST		= 1
RENOVATION_FILL_DEMOLISHED	= 2
RENOVATION_FILL_NEW			= 3
RENOVATION_FILL_NEW_FULL	= 4


! const values for parameter: iBoardInPolyWall
BOARD_PARALLEL_WINDOW      = 1
BOARD_PARALLEL_WALLPOLYGON = 2


! const values for parameter: iCornerConnTypeRight
CONNECTION_TYPE_FRAME  = 1
CONNECTION_TYPE_COLUMN = 2
CONNECTION_TYPE_GLASS  = 3


! const values for parameter: iCornerConnTypeLeft
CONNECTION_TYPE_FRAME  = 1
CONNECTION_TYPE_COLUMN = 2
CONNECTION_TYPE_GLASS  = 3


! const values for parameter: iCustomCCEditWallSide
EDITED_WALL_FACE_OUTSIDE = 1
EDITED_WALL_FACE_INSIDE  = 2


! const values for parameter: iCustomCCEditJambSide
EDITED_JAMB_SIDE_BOTH  = 1
EDITED_JAMB_SIDE_LEFT  = 2
EDITED_JAMB_SIDE_RIGHT = 3


! const values for parameter: iCustomCCThicknessType
THICKNESS_TYPE_ORIGINAL = 1
THICKNESS_TYPE_CUSTOM   = 2


! const values for parameter: iCustomCCEditSkin
EDITED_SKIN_1 = 1
EDITED_SKIN_2 = 2
EDITED_SKIN_3 = 3
EDITED_SKIN_4 = 4


! const values for parameter: iCustomCCOrientation
ORIENTATION_ORIGINAL  = 1
ORIENTATION_TURNED_IN = 2


! const values for parameter: iSillType
SILL_TIMBER       = 1
SILL_BRICK        = 2
SILL_STONE        = 3
SILL_CERAMIC      = 4
SILL_ETHERNIT     = 5
SILL_CONCRETE_TUB = 6
SILL_ALUMINIUM    = 7
SILL_SOLID_11     = 8
SILL_SOLID_12     = 9
SILL_SOLID_22     = 10
SILL_METAL_1      = 11
SILL_PARALLEL     = 12
SILL_METAL_2      = 13
SILL_PARALLEL_2   = 14
SILL_SIMPLEBLOCK  = 15
SILL_BLOCK        = 16
SILL_DUTCH        = 17

! Contact person: <NJ>

EPS = 0.0001

! iWindowClass:
WINCLASS_NORMAL				= 1
WINCLASS_HISTORIC			= 2
WINCLASS_SINGLE_HUNG		= 3
WINCLASS_DOUBLE_HUNG		= 4
WINCLASS_HORIZONTAL_SLIDING	= 5
WINCLASS_SPECIAL			= 6
WINCLASS_DOORSASH			= 7
WINCLASS_MULTISASH			= 8
WINCLASS_SHELL				= 10

! iRevealType:
REVEAL_EDGE				= 0
REVEAL_NO				= 1
REVEAL_POSITIVE			= 2
REVEAL_NEGATIVE			= 3
REVEAL_SLANTED			= 4
REVEAL_SPLAYED			= 5
REVEAL_HISTORIC			= 6
REVEAL_DOUBLE			= 7
REVEAL_DOUBLE_SPLAYED	= 8
REVEAL_OUTSIDE_SPLAYED	= 9

! iRevealOnSymbol
SHOWREV_MVO		= 1
SHOWREV_ALWAYS	= 2
SHOWREV_UPTO50	= 3
SHOWREV_UPTO100	= 4
SHOWREV_UPTO200	= 5
SHOWREV_NEVER	= 6

! iClosureType:
CLOSURE_NO					= 0
CLOSURE_TRADITIONAL			= 1
CLOSURE_PREFABRICATED		= 2
CLOSURE_CUSTOM				= 3
CLOSURE_SOLID_WALL			= 4
CLOSURE_STUD_WALL			= 5
CLOSURE_STUD_WALL_SIDING	= 6
CLOSURE_BRICK_VENEER		= 7
CLOSURE_VARIABLE			= 8
CLOSURE_PLASTER_REVEAL	 			= 9
CLOSURE_INSULATED_REVEAL			= 10
CLOSURE_INSULATED_FOR_RENOVATION	= 11
CLOSURE_FINISH						= 12
CLOSURE_AIR_SPACE					= 13
CLOSURE_DUTCH_VARIABLE				= 14

! Partial Stucture Display defines:
STRUCTURE_ENTIRE_STRUCTURE	= 0
STRUCTURE_CORE_ONLY			= 1
STRUCTURE_WITHOUT_FINISHES	= 2

! lod2d
DET2D_FS_OFF				= 0
DET2D_FS_SCALESENS			= -1
DET2D_FS_SIMPLE_ONE			= 11
DET2D_FS_SIMPLE_TWO			= 12
DET2D_FS_MIDDLE				= 21
DET2D_FS_MIDDLE_USA			= 22
DET2D_FS_DETAILED			= 30
DET2D_FS_DETAILED_FIX_GRID	= 31
DET2D_FS_DETAILED_USA		= 32
DET2D_FS_SIMPLE_CHI			= 51
DET2D_FS_DETAILED_CHI		= 52

! iLoD2D
SYMBW_OFF					= 0
SYMBW_SCALESENS				= 1
SYMBW_S_1LINE				= 11
SYMBW_S_2LINE				= 12
SYMBW_S_CENTERLINE			= 13
SYMBW_S_2LINE_ACC			= 14
SYMBW_S_5					= 15
SYMBW_S_6					= 16
SYMBW_S_7					= 17
SYMBW_S_8					= 18
SYMBW_S_9					= 19
SYMBW_M_2LINE_NOGLASS		= 21
SYMBW_M_2LINE_GLASS			= 22
SYMBW_M_FRAMESASH			= 23
SYMBW_M_2LINE_FRAME			= 24
SYMBW_M_5					= 25
SYMBW_M_6					= 26
SYMBW_M_7					= 27
SYMBW_M_8					= 28
SYMBW_M_9					= 29
SYMBW_D_SGLASS				= 31
SYMBW_D_2GLASS				= 32
SYMBW_D_2LINE_HS			= 33
SYMBW_D_NOGLASS				= 34
SYMBW_D_REBATEONGLASS		= 35
SYMBW_D_2GLASS_OVERLAP		= 36
SYMBW_D_7					= 37
SYMBW_D_8					= 38
SYMBW_D_9					= 39

! iWindowShape:
SHAPE_RECTANGULAR			= 0
SHAPE_ARCHED				= 1
SHAPE_ROUND					= 2
SHAPE_EYEBROWS				= 3
SHAPE_HALFCIRCLE			= 4 	! straight side is horizontal
SHAPE_MULTISIDE				= 5
SHAPE_OCTAGONAL				= 6
SHAPE_HALFARCH				= 7
SHAPE_PENTAGON				= 8
SHAPE_QUARTERROUND			= 9
SHAPE_HALFROUND				= 10 	! straight side is vertical
SHAPE_TRAPEZOID				= 11
SHAPE_TRIANGLE				= 12
SHAPE_GOTHICARCH			= 13
SHAPE_ELLIPSEARCH			= 14
SHAPE_ROMBUS				= 15
SHAPE_HORSESHOE				= 16
SHAPE_OGEECENTERED			= 17
SHAPE_SARACENIC				= 18
SHAPE_T						= 19
SHAPE_HALF_T_LEFT			= 20
SHAPE_ARCHED_T				= 21
SHAPE_ARCHED_HALF_T_LEFT	= 22
SHAPE_PARALLELOGRAM			= 23
SHAPE_ELLIPSE				= 24
SHAPE_CORNER_TRIANGLE		= 25
SHAPE_QUARTERROUND_NOFRAME	= 26
SHAPE_HALF_T_RIGHT			= 27
SHAPE_ARCHED_HALF_T_RIGHT	= 28

! gs_leaf_optype_m:
LEAF_1L_SIDE_HUNG			= 1
LEAF_1L_SIDE_HUNG_M			= 2
LEAF_1L_DOUBLE_ACTING		= 3
LEAF_1L_DOUBLE_ACTING_M		= 4
LEAF_2L_SIDE_HUNG			= 5
LEAF_2L_DOUBLE_ACTING		= 6
LEAF_2L_DOUBLE_EGRESS		= 7
LEAF_2L_DOUBLE_EGRESS_M		= 8
LEAF_1L_PIVOT				= 9
LEAF_1L_PIVOT_M				= 10
LEAF_2L_1SLIDING			= 11
LEAF_2L_1SLIDING_M			= 12
LEAF_2L_2SLIDING			= 13
LEAF_2L_2SLIDING_M			= 14
LEAF_3L_2SLIDING			= 15
LEAF_3L_2SLIDING_M			= 16
LEAF_4L_2SLIDING			= 17
LEAF_4L_3SLIDING			= 18
LEAF_4L_3SLIDING_M			= 19
LEAF_4L_4SLIDING			= 20
LEAF_4L_4SLIDING_M			= 21
LEAF_1L_EXTERNAL_SLIDING	= 22
LEAF_1L_EXTERNAL_SLIDING_M	= 23
LEAF_2L_EXTERNAL_SLIDING	= 24
LEAF_1L_POCKET				= 25
LEAF_1L_POCKET_M			= 26
LEAF_2L_POCKET				= 27
LEAF_1L_MULTIPANEL			= 28
LEAF_1L_MULTIPANEL_M		= 29
LEAF_2L_MULTIPANEL			= 30
LEAF_REVOLVING				= 31
LEAF_3L_2SLIDING_CENTER		= 32
LEAF_GAR_1L_UP_AND_OVER		= 100
LEAF_GAR_1L_UP_SLIDING		= 101
LEAF_GAR_1L_SECTIONAL		= 102
LEAF_GAR_2L_SIDE_HUNG		= 103
LEAF_GAR_2L_ROLLSIDE		= 104
LEAF_GAR_1L_ROLLUP			= 105

! iLineShapeCategory:
LINE_SHAPE_CATEGORY_SWING	= 1
LINE_SHAPE_CATEGORY_SLIDING	= 2

! iWindowType:
WIN_HistoricWindowSingle2		= 10
WIN_HistoricWindowSingle		= 11
WIN_HistoricWindowDouble		= 12
WIN_HistoricWindowTriple		= 13
WIN_HistoricWindowSegmented		= 14
WIN_HistoricWindowTripleArched	= 15
WIN_W2HorizontalSlide			= 16
WIN_W4HorizontalSlide			= 17
WIN_Curved						= 18
WIN_Bow							= 19
WIN_SplayBay					= 20
WIN_SquareBay					= 21
WIN_Ribbon						= 22
WIN_WSingleHung1				= 23
WIN_WSingleHung2				= 24
WIN_WSingleHung3				= 25
WIN_WDoubleHung1				= 26
WIN_WDoubleHung2				= 27
WIN_WDoubleHung3				= 28
WIN_WRound						= 29
WIN_WOval						= 30
WIN_WMultiside					= 31
WIN_WHalfRound					= 32
WIN_WQuarterRound 				= 33
WIN_WPentagon					= 34
WIN_WTriangle					= 35
WIN_WEyebrows					= 36
WIN_WArched						= 37
WIN_WTrapezoid					= 38
WIN_WTrapezoidDoubleSash		= 39
WIN_VentWindow					= 40
WIN_2SashSliding				= 41
WIN_MultisashHorizontal			= 42
WIN_MultisashVertical			= 43
WIN_GlassBlock					= 44
WIN_TerraceDoorSWE				= 45
WIN_W3HorizontalSlide			= 46
WIN_W6HorizontalSlide			= 47
WIN_VentilationBrick			= 48
WIN_Rhomb						= 49
WIN_Skewed						= 50

! lodSE - S/E Detail level
LODSE_20	= 1
LODSE_50	= 2
LODSE_100	= 3
LODSE_200	= 4
LODSE_500	= 5

! Turn Skin on Side
CAVITY_SIDE_BOTH	= 1
CAVITY_SIDE_LEFT	= 2
CAVITY_SIDE_RIGHT	= 3
CAVITY_SIDE_NONE	= 4

! Wall Inset Sizes
PARAPET_SIZE_AUTO	= 1
PARAPET_SIZE_SYMM	= 2
PARAPET_SIZE_ASYMM	= 3

! Wall Inset Bottom at
PARAPET_BOTTOM_CURRENTSTORY	= 1
PARAPET_BOTTOM_WALLBASE		= 2

! Wall Contour Line - iWallContourLine
WALL_CONTOUR_OFF		= 1
WALL_CONTOUR_INSIDE		= 2
WALL_CONTOUR_OUTSIDE	= 3
WALL_CONTOUR_BOTHSIDES	= 4

! iVentilationProfileType
VENTPROFILE_OVER_FRAME		= 2
VENTPROFILE_OVER_GLAZING	= 3

! iDetLevel2D
	DETLEVEL_2D_MVO		= -2
	DETLEVEL_2D_SCALE	= -1
	DETLEVEL_2D_OFF		= 0
	DETLEVEL_2D_10		= 10
	DETLEVEL_2D_50		= 50
	DETLEVEL_2D_100		= 100
	DETLEVEL_2D_200		= 200

! iDetLevel3D
	DETLEVEL_3D_MVO		= -2
	DETLEVEL_3D_SCALE	= -1
	DETLEVEL_3D_OFF		= 0
	DETLEVEL_3D_10		= 10
	DETLEVEL_3D_50		= 50
	DETLEVEL_3D_100		= 100

! iDimLimitations
	DIMLIM_OFF			= 1
	DIMLIM_RANGE		= 2
	DIMLIM_LIST			= 3
	DIMLIM_LIST_RANGE	= 4

! ==============================================================================
! Localization
! ==============================================================================

dim stDetail2D[12]
	stDetail2D[1]	= `by MVO`
	stDetail2D[2]	= `Scale Sensitive`
	stDetail2D[3]	= `1:50`
	stDetail2D[4]	= `1:100`
	stDetail2D[5]	= `Middle Detail - without Acc.`
	stDetail2D[6]	= `Simple - Two Lines`
	stDetail2D[7]	= `1:200`
	stDetail2D[8]	= `Off`
	stDetail2D[9]	= `Middle USA`
	stDetail2D[10]	= `Chinese Simple`
	stDetail2D[11]	= `Chinese Detailed`
	stDetail2D[12]	= `1:20`

dim stRevealTypes[10]	! gs_reveal_type
	stRevealTypes[ 1] = `No Reveal - Edge`
	stRevealTypes[ 2] = `No Reveal`
	stRevealTypes[ 3] = `Reveal`
	stRevealTypes[ 4] = `Negative Reveal`
	stRevealTypes[ 5] = `Slanted Reveal`
	stRevealTypes[ 6] = `Splayed Reveal`
	stRevealTypes[ 7] = `Historic Reveal`
	stRevealTypes[ 8] = `Custom Reveal`
	stRevealTypes[ 9] = `Double Splayed Reveal`
	stRevealTypes[10] = `Outside Splayed Reveal`

dim stRevealTypesBottom[4]		! gs_reveal_type_bottom
	stRevealTypesBottom[1] = `Uniform`
	stRevealTypesBottom[2] = `No Reveal`
	stRevealTypesBottom[3] = `Reveal`
	stRevealTypesBottom[4] = `Negative Reveal`

dim stRevealAngleEditBy[2]	! gs_reveal_angle_edit_by
	stRevealAngleEditBy[1] = `Angle and Depth`
	stRevealAngleEditBy[2] = `Width and Depth`

dim stClosureTypes[15]	! gs_closure_type
	stClosureTypes[ 1] = `No Closure`
	stClosureTypes[ 2] = `Traditional Cavity Closure`
	stClosureTypes[ 3] = `Prefabricated Cavity Closure`
	stClosureTypes[ 4] = `Custom Closure`
	stClosureTypes[ 5] = `Solid Wall`
	stClosureTypes[ 6] = `Stud Wall`
	stClosureTypes[ 7] = `Stud Wall with Siding`
	stClosureTypes[ 8] = `Brick Veneer`
	stClosureTypes[ 9] = `Variable Closure`
	stClosureTypes[10] = `Plaster Reveal`
	stClosureTypes[11] = `Insulated Reveal`
	stClosureTypes[12] = `Insulation Closure for Renovation`
	stClosureTypes[13] = `Finish Closure`
	stClosureTypes[14] = `Air Space Closure`
	stClosureTypes[15] = `Dutch Closure`

dim stRevealOnSymbValues[6]
	stRevealOnSymbValues[1] = `by MVO`
	stRevealOnSymbValues[2] = `Always`
	stRevealOnSymbValues[3] = `Up to 1:50`
	stRevealOnSymbValues[4] = `Up to 1:100`
	stRevealOnSymbValues[5] = `Up to 1:200`
	stRevealOnSymbValues[6] = `Never`

dim stWallContourLine[4]	! gs_wcont_line_sl
	stWallContourLine[1] = `Off`
	stWallContourLine[2] = `Inside`
	stWallContourLine[3] = `Outside`
	stWallContourLine[4] = `Both Sides`

dim stCavityClosureSide[4]		! gs_cavity_side
	stCavityClosureSide[1] = `Both`
	stCavityClosureSide[2] = `Left`
	stCavityClosureSide[3] = `Right`
	stCavityClosureSide[4] = `None`

dim stCavityClosureTurnDir[2]	! gs_nTurnDir
	stCavityClosureTurnDir[1] = `Outside Face`
	stCavityClosureTurnDir[2] = `Inside Face`

dim stDutchClosureToSide[2]
	stDutchClosureToSide[1] = `Outside Face`
	stDutchClosureToSide[2] = `Inside Face`

dim stCavityClosureEditedJambSide[3]
	stCavityClosureEditedJambSide[1] = `Edit Both Jambs`
	stCavityClosureEditedJambSide[2] = `Edit Left Jamb`
	stCavityClosureEditedJambSide[3] = `Edit Right Jamb`

dim stCavityClosureEditedWallSide[2]
	stCavityClosureEditedWallSide[1] = `Outside Face`
	stCavityClosureEditedWallSide[2] = `Inside Face`

dim stCavityClosureEditedSkinNumber[4]
	stCavityClosureEditedSkinNumber[1] = `1. Skin`
	stCavityClosureEditedSkinNumber[2] = `2. Skin`
	stCavityClosureEditedSkinNumber[3] = `3. Skin`
	stCavityClosureEditedSkinNumber[4] = `4. Skin`

dim stCavityClosureTurnInThickness[2]
	stCavityClosureTurnInThickness[1] = `Original`
	stCavityClosureTurnInThickness[2] = `Custom`

dim stCavityClosureHatchOrientation[2]
	stCavityClosureHatchOrientation[1] = `Original`
	stCavityClosureHatchOrientation[2] = `Turned in`

dim stMasonryArchTypes[7]	! gs_masonry_arch_int
	stMasonryArchTypes[1] = `Off`
	stMasonryArchTypes[2] = `Masonry Straight Arch`
	stMasonryArchTypes[3] = `Masonry Jack Arch`
	stMasonryArchTypes[4] = `Masonry Jack Arch with Keystone`
	stMasonryArchTypes[5] = `Masonry Segmental Arch`
	stMasonryArchTypes[6] = `Masonry Segmental Arch with Keystone`
	stMasonryArchTypes[7] = `Masonry Bullseye Arch`

dim gs_faschen_type[2]	! faschen
	gs_faschen_type[1] = `Plaster`
	gs_faschen_type[2] = `Brickwork`

dim stMasonryArchStructure[2]	! gs_masonry_arch_structure
	stMasonryArchStructure[1] = `Stucco Arch`
	stMasonryArchStructure[2] = `Brick Arch`

dim stSillTypes[17]	! gs_sill_type
	stSillTypes[ 1] = `Timber Sill`			! Timber Sill
	stSillTypes[ 2] = `Brick Sill`
	stSillTypes[ 3] = `Stone Sill`
	stSillTypes[ 4] = `Ceramic Sill`
	stSillTypes[ 5] = `Eternit Sill`
	stSillTypes[ 6] = `Concrete Tub`
	stSillTypes[ 7] = `Aluminum Sill`
	stSillTypes[ 8] = `Solid Sill 1.1`	! Massiv-Fensterbank 1.1
	stSillTypes[ 9] = `Solid Sill 1.2`	! Massiv-Fensterbank 1.2
	stSillTypes[10] = `Solid Sill`		! Massiv-Fensterbank 2.2
	stSillTypes[11] = `Metal Sheet`		! Metallfensterbank 1.1
	stSillTypes[12] = `Solid Parallel`	! Massiv parallel
	stSillTypes[13] = `Metal Sheet 2`
	stSillTypes[14] = `Solid Parallel 2`	! Massiv parallel 2
	stSillTypes[15] = `Simple Block`
	stSillTypes[16] = `Block Sill`
	stSillTypes[17] = `Dutch Profiled Sill`

dim stBsilldetlevel[2]	! gs_brick_sill_detlev
	stBsilldetlevel[1] = `Simple`
	stBsilldetlevel[2] = `Detailed`

dim stShowSashOnSymbol[10]
	stShowSashOnSymbol[1] = `1. Sash`
	stShowSashOnSymbol[2] = `2. Sash`
	stShowSashOnSymbol[3] = `3. Sash`
	stShowSashOnSymbol[4] = `4. Sash`
	stShowSashOnSymbol[5] = `5. Sash`
	stShowSashOnSymbol[6] = `6. Sash`
	stShowSashOnSymbol[7] = `7. Sash`
	stShowSashOnSymbol[8] = `8. Sash`
	stShowSashOnSymbol[9] = `9. Sash`
	stShowSashOnSymbol[10] = `10. Sash`

dim stCornerConnType[3] ! gs_connTypeRight, gs_connTypeLeft
	stCornerConnType[1] = `Frame`
	stCornerConnType[2] = `Corner Column`
	stCornerConnType[3] = `Glass`

dim stParapetBottom[2]	! gs_parapet_bottom_st
	stParapetBottom[1] = `Current Story`
	stParapetBottom[2] = `Wall Base`

dim stParapetSize[3] ! gs_parapet_sizes_st
	stParapetSize[1] = `Automatic`
	stParapetSize[2] = `Symmetric`
	stParapetSize[3] = `Asymmetric`

dim stBoardInPolyWall[2] ! gs_boardInPolyWall
	stBoardInPolyWall[1] = `Parallel to Window`
	stBoardInPolyWall[2] = `Parallel to Wall Polygon`

dim stCasingType[3] ! gs_trimtype_in, gs_trimtype_out
	stCasingType[1] = `Simple`
	stCasingType[2] = `Simple with Overhang`
	stCasingType[3] = `Complex with Overhang`

dim stCasingHeadType[4] ! iCasingHeadTypeOut
	stCasingHeadType[1] = `Rectangular`
	stCasingHeadType[2] = `Decorative 1`
	stCasingHeadType[3] = `Decorative 2`
	stCasingHeadType[4] = `Decorative 3`

dim stArchitraveCapitalType[4] ! iArchitraveCapitalType
	stArchitraveCapitalType[1] = `Square on Side Casing`
	stArchitraveCapitalType[2] = `Square next to Side Casing`
	stArchitraveCapitalType[3] = `Decorative on Side Casing`
	stArchitraveCapitalType[4] = `Decorative next to Side Casing`

dim stSunShadeTypes[ 9]
	stSunShadeTypes[ 1] = `None`
	stSunShadeTypes[ 2] = `Decorative`
	stSunShadeTypes[ 3] = `Regular`
	stSunShadeTypes[ 4] = `Folding to Reveal`
	stSunShadeTypes[ 5] = `Folding to Wall Face`
	stSunShadeTypes[ 6] = `Sliding`
	stSunShadeTypes[ 7] = `Rolling`
	stSunShadeTypes[ 8] = `External Venetian Blinds`
	stSunShadeTypes[ 9] = `Venetian Blinds in Lintel`

dim stShutterPanelPos[11]
	stShutterPanelPos[ 1] = `Symmetrical`
	stShutterPanelPos[ 2] = `Left`
	stShutterPanelPos[ 3] = `Right`
	stShutterPanelPos[ 4] = `Mostly Left`
	stShutterPanelPos[ 5] = `Mostly Right`
	stShutterPanelPos[ 6] = `Left Top`
	stShutterPanelPos[ 7] = `Left Bottom`
	stShutterPanelPos[ 8] = `Right Top`
	stShutterPanelPos[ 9] = `Right Bottom`
	stShutterPanelPos[10] = `Double Top`
	stShutterPanelPos[11] = `Double Bottom`

dim stFoldingShutterStacking[2]
	stFoldingShutterStacking[1] = `Inside`
	stFoldingShutterStacking[2] = `Outside`

dim stSlidingShutterCover[3]
	stSlidingShutterCover[1] = `None`
	stSlidingShutterCover[2] = `Z-Profile`
	stSlidingShutterCover[3] = `Box`

dim stShutterPanelTypes[11]
	stShutterPanelTypes[ 1] = `Style 1`
	stShutterPanelTypes[ 2] = `Style 2`
	stShutterPanelTypes[ 3] = `Style 3`
	stShutterPanelTypes[ 4] = `Style 4`
	stShutterPanelTypes[ 5] = `Style 5`
	stShutterPanelTypes[ 6] = `Style 6`
	stShutterPanelTypes[ 7] = `Style 7`
	stShutterPanelTypes[ 8] = `Style 8`
	stShutterPanelTypes[ 9] = `Style 9`
	stShutterPanelTypes[10] = `Style 10`
	stShutterPanelTypes[11] = `Custom`

dim stShutRollPlacement[3]
	stShutRollPlacement[1] = `On Facade`
	stShutRollPlacement[2] = `To Window`
	stShutRollPlacement[3] = `Behind Facade`

dim stShutRollBoxType[2]
	stShutRollBoxType[1] = `Rectangular`
	stShutRollBoxType[2] = `Arched`

dim stShutRollBoxDefaultSize[2]
	stShutRollBoxDefaultSize[1] = `To Reveal Width`
	stShutRollBoxDefaultSize[2] = `To Wallhole Width`

dim stShutLamPlacement[3]
	stShutLamPlacement[1] = `On Facade`
	stShutLamPlacement[2] = `To Window`
	stShutLamPlacement[3] = `Behind Facade`

dim stShutRollRailPos[2]
	stShutRollRailPos[1] = `On Casing`
	stShutRollRailPos[2] = `On Wall`

dim stShutLamRailPos[2]
	stShutLamRailPos[1] = `On Casing`
	stShutLamRailPos[2] = `On Wall`


! =============================================================================
! Array index definitions
! =============================================================================

iRevealType = gs_reveal_type_int - 1

if gs_bShowNewOnCC & iTypeDemolitionFill = RENOVATION_FILL_NEW then iRevealType = REVEAL_NO

iSillRevealType  = gs_reveal_doubleOuterTypeInt - 1
iBoardRevealType = gs_reveal_doubleInnerTypeInt - 1


! ==============================================================================
! Function Control
! ==============================================================================

if bEnableParapetInset		< 0	then bEnableParapetInset = 1
if bEnableMasonryArch		< 0	then
	bEnableMasonryArch = (iWindowShape = SHAPE_RECTANGULAR | iWindowShape = SHAPE_ARCHED | iWindowShape = SHAPE_ROUND | iWindowShape = SHAPE_ELLIPSE)
endif
if bEnableSill				< 0 then bEnableSill	= 1
if bEnableBoard				< 0 then bEnableBoard	= 1

if bEnableFaschen			< 0 then bEnableFaschen = 0
if bEnableThreshold			< 0 then bEnableThreshold = 0

if bEnableCasing			< 0 then bEnableCasing	= 1
if bEnableShutter			< 0 then bEnableShutter	= 1

if bEnableCustomCornerLeft	< 0 then bEnableCustomCornerLeft	= 1
if bEnableCustomCornerRight	< 0 then bEnableCustomCornerRight	= 1

bEnableWallContourHiddenLine	= 1

if gs_RevealTypeEnable = 0 then
	gs_RevealTypeEnable	 = 1 + 2
	if iWindowShape = SHAPE_RECTANGULAR then
		gs_RevealTypeEnable	= 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128
	endif
	if iWindowShape = SHAPE_ARCHED then
		gs_RevealTypeEnable	= 1 + 2 + 4 + 8 + 128
	endif
	if iWindowShape = SHAPE_TRAPEZOID then
		gs_RevealTypeEnable	= 1 + 2 + 4 + 8 + 128
	endif
endif
if gs_ClosureTypeEnable = 0 then gs_ClosureTypeEnable = 1 + 2 + 4 + 8 + 256 + 512 + 1024 + 2048
if gs_SillTypeEnable = 0 then
	gs_SillTypeEnable	= 1 + 2 + 4 + 512 + 1024  !+ 8 + 16 + 32 + 64 + 128 + 256
		! Ceramic, Eternite, Concrete, Aluminum and German massiv sill types are hidden
endif
if gs_CasingOutTypeEnable = 0 then
	gs_CasingOutTypeEnable = 1+2+4
endif
if gs_CasingInTypeEnable = 0 then
	gs_CasingInTypeEnable = 1+2
endif

defaultSillDepth	= 0.120

bCasingTolerance	= 0
bSillPlaneCut		= 1
bBoardPlaneCut		= 1

iLineShapeCategory		= LINE_SHAPE_CATEGORY_SWING
if	gs_leaf_optype_m = LEAF_2L_1SLIDING		|\
	gs_leaf_optype_m = LEAF_2L_1SLIDING_M	|\
	gs_leaf_optype_m = LEAF_2L_2SLIDING		|\
	gs_leaf_optype_m = LEAF_2L_2SLIDING_M	|\
	gs_leaf_optype_m = LEAF_3L_2SLIDING		|\
	gs_leaf_optype_m = LEAF_3L_2SLIDING_M	|\
	gs_leaf_optype_m = LEAF_4L_2SLIDING		|\
	gs_leaf_optype_m = LEAF_4L_3SLIDING		|\
	gs_leaf_optype_m = LEAF_4L_3SLIDING_M	|\
	gs_leaf_optype_m = LEAF_4L_4SLIDING		|\
	gs_leaf_optype_m = LEAF_4L_4SLIDING_M	|\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING		|\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M	|\
	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING		|\
	gs_leaf_optype_m = LEAF_1L_POCKET		|\
	gs_leaf_optype_m = LEAF_1L_POCKET_M		|\
	gs_leaf_optype_m = LEAF_2L_POCKET		then
	iLineShapeCategory 		= LINE_SHAPE_CATEGORY_SLIDING
endif

iLineShapeSwingEnable	= 2+4		! Curved, Straight
iLineShapeSlidingEnable = 1+2		! None, Arrow

! in case of SUNSHADE_ROLLING and SHUTROLL_BEHIND placement
if bEnableShutter & bSunshade & (gs_sunShade_iType = 6) & (gs_shutRoll_iPlacement = 3) & gs_shutRoll_bIncludeBoxHeight then
	_excludeRevealHeight	= 0
	_excludeCasingHeight	= 0
	
	if iRevealType = REVEAL_POSITIVE | iRevealType = REVEAL_SLANTED | iRevealType = REVEAL_HISTORIC | (iRevealType = REVEAL_DOUBLE & (iSillRevealType = 2 | gs_reveal_doubleOuterTypeInt = 3)) then
		if gs_reveal_uniform then
			_excludeRevealHeight = gs_reveal_right
		else
			_excludeRevealHeight = gs_reveal_top
		endif
	endif
	if (bEnableCasing & gs_trim_outside) then
		_excludeCasingHeight	= gs_trim_width_out
	endif

	_includeBoxHeight = (gs_shutRoll_boxHeight + gs_shutRoll_distFromHead - _excludeRevealHeight - _excludeCasingHeight)
else
	_includeBoxHeight = 0
endif


! =============================================================================
! Show Reveal On Symbol
! =============================================================================

bCanHaveReveal = (bittest(gs_RevealTypeEnable, REVEAL_POSITIVE)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_NEGATIVE)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_SLANTED)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_SPLAYED)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_HISTORIC)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_DOUBLE)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_DOUBLE_SPLAYED)	| \
				  bittest(gs_RevealTypeEnable, REVEAL_OUTSIDE_SPLAYED)	)


! ==============================================================================
! Corner Window Calculations
! ==============================================================================

curvedWall		= abs(WIDO_ORIG_DIST) > EPS
wallIsLeft		= (SYMB_ROTANGLE > EPS) exor WIDO_REVEAL_SIDE
bCornerWindow	= (ac_cw_function & ac_corner_window)

temp_leftcornerangle = leftcornerangle
temp_rightcornerangle = rightcornerangle

resize_Lca = int ((abs(temp_leftcornerangle))/360)
resize_Rca = int ((abs(temp_rightcornerangle))/360)

temp_leftcornerangle = temp_leftcornerangle + resize_Lca * 360 - (leftcornerangle > 0) * 2 * resize_Lca * 360
temp_rightcornerangle = temp_rightcornerangle + resize_Rca * 360 - (rightcornerangle > 0) * 2 * resize_Rca * 360

leftcornerangle = temp_leftcornerangle + 360 * (temp_leftcornerangle < 0)
rightcornerangle = temp_rightcornerangle + 360 * (temp_rightcornerangle < 0)

if not(bCornerWindow) & (abs(WALL_INCL) > EPS | abs(WIDO_ORIG_DIST) > EPS | AC_WallType = 2) then
	bLeftCornerFunction  = 0
	bRightCornerFunction = 0
endif

if not (bLeftDiffConnWall)  then leftConnWallThk  = WALL_THICKNESS
if not (bRightDiffConnWall) then rightConnWallThk = WALL_THICKNESS

if not(bCornerWindow) then
	if abs(leftCornerAngle  - 180) < EPS | abs(leftCornerAngle  - 360) < EPS then leftCornerAngle  = 0
	if abs(rightCornerAngle - 180) < EPS | abs(rightCornerAngle - 360) < EPS then rightCornerAngle = 0
endif

if bLeftCornerFunction  & abs(leftCornerAngle)  < EPS then bLeftCornerFunction  = 0
if bRightCornerFunction & abs(rightCornerAngle) < EPS then bRightCornerFunction = 0

if not(bLeftCornerFunction) then
	leftCornerAngle	= 0
	leftConnWallThk	= 0
endif
if bCornerWindow then
	bRightCornerFunction	= 1
	bRightCornerFunction	= (ac_cw_function & ac_corner_window)
	rightCornerAngle	= ac_corner_angle
	rightConnWallThk	= ac_con_wall_thk
else
	if not(bRightCornerFunction) then
		rightCornerAngle	= 0
		rightConnWallThk	= 0
	endif
endif


! =============================================================================
! Request globals for 2D (MVO Detail Level, MVO Reveal, Hotspots for IS)
! =============================================================================

iMVODetlevel2D			= 0
bMVOCasing2D			= 0
bShowAddHotspots		= 1
bMVODetlevelReveal		= 0
bShowAddHotspotsForIS	= 0

if GLOB_SCRIPT_TYPE = 2 then
	bGetMVOValueDlev2D		= (iDetLevel2D = DETLEVEL_2D_MVO)
	bGetMVOValueCasing2D	= (bGetMVOValueDlev2D and bNotShowCasingIn2DNOR)
	bGetMVOValueDlevReveal	= (iRevealOnSymbol = SHOWREV_MVO)
	bGetHotspotsForIS		= (GLOB_CONTEXT = 6)

	if bGetMVOValueDlev2D | bGetMVOValueDlevReveal | bGetHotspotsForIS then
		call "GetDWSymbSettings_WMCC" parameters	bWindow					= 1,
											bGetMVOValueDlev2D		= bGetMVOValueDlev2D,
											bGetMVOValueCasing2D	= bGetMVOValueCasing2D,
											bGetMVOValueDlevReveal	= bGetMVOValueDlevReveal,
											bGetHotspotsForIS		= bGetHotspotsForIS,
						returned_parameters iMVODetlevel2D,
											bMVOCasing2D,
											bMVODetlevelReveal,
											bShowAddHotspotsForIS
	endif
endif


! =============================================================================
! Request globals for 3D (MVO SE Detail Level, Hotspots for IS)
! =============================================================================

if GLOB_SCRIPT_TYPE = 3 then
	iMVODetlevelSE			= 0
	bGetMVOValueDlevSE		= 0					! not used in INT
	bGetHotspotsForIS		= (GLOB_CONTEXT = 6)

	if bGetMVOValueDlevSE | bGetHotspotsForIS then
		call "GetDWSymbSettings_WMCC" parameters	bWindow					= 1,
											bGetMVOValueDlevSE		= bGetMVOValueDlevSE,
											bGetHotspotsForIS		= bGetHotspotsForIS,
						returned_parameters iMVODetlevelSE,
											bShowAddHotspotsForIS
	endif
endif


! =============================================================================
! Corner Column Calculation
! =============================================================================

gs_cc_thk = max(gs_cc_thk, WIDO_FRAME_THICKNESS + gs_cc_pr)

if bLeftCornerFunction & gs_corner_column then
	if (leftCornerAngle > 180) exor (rightCornerAngle > 180) then
		cornerPostXbyWidth	= (gs_cc_pr - gs_cc_thk) * abs(tan(90 - leftCornerAngle / 2)) + gs_cc_width
		cornerPostXbyThk	= (gs_cc_pr) * abs(tan(90 - leftCornerAngle / 2))
		cornerPostXLeft		= max(cornerPostXbyWidth, cornerPostXbyThk)
	else
		cornerPostXbyWidth	= (-WIDO_FRAME_THICKNESS - gs_cc_pr) * abs(tan(90 - leftCornerAngle / 2)) + gs_cc_width
		cornerPostXbyThk	= (gs_cc_thk - WIDO_FRAME_THICKNESS - gs_cc_pr) * abs(tan(90 - leftCornerAngle / 2))
		cornerPostXLeft		= max(cornerPostXbyWidth, cornerPostXbyThk)
	endif
else
	cornerPostXLeft = 0
endif

if bRightCornerFunction & gs_corner_column then
	cornerPostXbyWidth	= (-WIDO_FRAME_THICKNESS - gs_cc_pr) * abs(tan(90 - rightCornerAngle / 2)) + gs_cc_width
	cornerPostXbyThk	= (gs_cc_thk - WIDO_FRAME_THICKNESS - gs_cc_pr) * abs(tan(90 - rightCornerAngle / 2))
	cornerPostXRight	= max(cornerPostXbyWidth, cornerPostXbyThk)
else
	cornerPostXRight = 0
endif


! =============================================================================
! 2D detail level settings
! =============================================================================
iLoD2D	= SYMBW_SCALESENS
!!if GLOB_SCRIPT_TYPE = 2 then
!!	if bGetMVOValueDlev2D then													! by MVO
!!		iLoD2D	= iMVODetlevel2D
!!		if	iLoD2D = SYMBW_M_2LINE_FRAME |\
!!			iLoD2D = SYMBW_D_2GLASS_OVERLAP then
!!
!!			iLoD2D = SYMBW_D_SGLASS
!!			if iMVODetlevel2D < SYMBW_D_SGLASS then				iLoD2D	= SYMBW_M_2LINE_NOGLASS
!!			if iMVODetlevel2D < SYMBW_M_2LINE_NOGLASS then		iLoD2D	= SYMBW_S_1LINE
!!		endif
!!
!!!!		if GLOB_PREVIEW_MODE = 3 then				! in case of 2D-3D Favorite Preview
!!!!			iLoD2D = SYMBW_D_SGLASS
!!!!		endif
!!	else
!!		if iDWDet2D = DETLEVEL_DW2D_50 then
!!			iLoD2D = SYMBW_D_SGLASS														! Detailed --> INT 50
!!			if bShowRebateOnFixGlass		then	iLoD2D = SYMBW_D_REBATEONGLASS		! Detailed --> NLD 50
!!		endif
!!		if iDWDet2D = DETLEVEL_DW2D_100 then
!!			iLoD2D = SYMBW_M_2LINE_NOGLASS												! Middle - with acc --> INT 100
!!			if bShowGlassInMiddle2D			then	iLoD2D = SYMBW_M_2LINE_GLASS		! Middle --> SWE 100
!!			if bShowSashInMiddle2D			then	iLoD2D = SYMBW_M_FRAMESASH			! Middle --> NLD 100
!!		endif
!!		if iDWDet2D = DETLEVEL_DW2D_MIDDET	then	iLoD2D = SYMBW_M_2LINE_GLASS		! Middle - without acc
!!		if iDWDet2D = DETLEVEL_DW2D_SMPL2L	then	iLoD2D = SYMBW_S_2LINE_ACC			! Simple - Two Lines
!!		if iDWDet2D = DETLEVEL_DW2D_200 then
!!			iLoD2D = SYMBW_S_1LINE														! Simple - One Line --> INT 200
!!			if bCenterLineInSimple2D		then	iLoD2D = SYMBW_S_CENTERLINE			! Simple - Center Line --> SWE 200
!!		endif
!!		if iDWDet2D = DETLEVEL_DW2D_OFF		then	iLoD2D = SYMBW_OFF					! Off
!!		if iDWDet2D = DETLEVEL_DW2D_MIDUSA	then	iLoD2D = SYMBW_M_FRAMESASH			! Middle USA
!!		if iDWDet2D = DETLEVEL_DW2D_CHISMPL	then	iLoD2D = SYMBW_S_2LINE				! Chinese Simple
!!		if iDWDet2D = DETLEVEL_DW2D_CHIDET	then	iLoD2D = SYMBW_D_2LINE_HS			! Chinese Detailed
!!		if iDWDet2D = DETLEVEL_DW2D_20		then	iLoD2D = SYMBW_D_2GLASS				! Detailed --> DAN 20
!!	endif
!!endif

!---------BO convert 2D scale---------
if GLOB_SCRIPT_TYPE = 2 then
	retDetlevel = DETLEVEL_2D_OFF
	iDetLev2D	= iDetLevel2D

	if bGetMVOValueDlev2D then  ! by MVO
		iDetLev2D	= DETLEVEL_2D_100
		if	iMVODetlevel2D > 20 &\
			iMVODetlevel2D < 30 then
			iDetLev2D	= DETLEVEL_2D_50
		else
			if	iMVODetlevel2D > 30 then
				iDetLev2D	= DETLEVEL_2D_10
			endif
		endif
!		iDetLev2D	= iMVODetlevel2D
	endif

	if iDetLev2D = DETLEVEL_2D_SCALE then
		iLoD2D = SYMBW_SCALESENS
		if GLOB_SCALE > 150 then
			iLoD2D			= SYMBW_S_1LINE
			retDetlevel2D	= DETLEVEL_2D_200
		else
			if GLOB_SCALE <= 150 and GLOB_SCALE > 75 then
				iLoD2D			= SYMBW_M_2LINE_NOGLASS
				retDetlevel2D	= DETLEVEL_2D_100
			else
				if GLOB_SCALE <= 75 then
					iLoD2D		= SYMBW_D_SGLASS
					if GLOB_SCALE <= 25 then
						retDetlevel2D	= DETLEVEL_2D_10
					else
						retDetlevel2D	= DETLEVEL_2D_50
					endif
				endif
			endif
		endif
	else
		retDetlevel2D	= iDetLev2D
		if iDetLev2D	= DETLEVEL_2D_OFF	then iLoD2D = SYMBW_OFF
		if iDetLev2D	= DETLEVEL_2D_10	then iLoD2D = SYMBW_D_SGLASS
		if iDetLev2D	= DETLEVEL_2D_50	then iLoD2D = SYMBW_D_SGLASS
		if iDetLev2D	= DETLEVEL_2D_100	then iLoD2D = SYMBW_M_2LINE_NOGLASS
		if iDetLev2D	= DETLEVEL_2D_200	then iLoD2D = SYMBW_S_1LINE
	endif

	if not(bForbiddenScaleChangeMoving) then
		if	retDetlevel2D	= 10 &\
			GLOB_CONTEXT > 20 &\
			GLOB_CONTEXT < 30 then
			retDetlevel2D	= 50
		endif
	endif
endif


! =============================================================================
! Show Reveal On Symbol
! =============================================================================

bShowReveal = 1
if GLOB_SCRIPT_TYPE = 2 then
	if bGetMVOValueDlevReveal then																				! by MVO
		bShowReveal = bMVODetlevelReveal
	else
		bShowReveal = 1
		if iRevealOnSymbol = SHOWREV_NEVER											then bShowReveal = 0		! Never
		if iLoD2D = SYMBW_SCALESENS then																		! Scale sensitive
			if iRevealOnSymbol = SHOWREV_UPTO50 & GLOB_SCALE > 75					then bShowReveal = 0		! Up to 1:50
			if iRevealOnSymbol = SHOWREV_UPTO100 & GLOB_SCALE > 150					then bShowReveal = 0		! Up to 1:100
		else
			if iRevealOnSymbol = SHOWREV_UPTO50 & iLoD2D < SYMBW_D_SGLASS			then bShowReveal = 0		! Up to 1:50
			if iRevealOnSymbol = SHOWREV_UPTO100 & iLoD2D < SYMBW_M_2LINE_NOGLASS	then bShowReveal = 0		! Up to 1:100
		endif
		if iRevealOnSymbol = SHOWREV_UPTO200 & GLOB_SCALE > 200						then bShowReveal = 0		! Up to 1:200
	endif
endif

! =============================================================================
! Hide Variable Closure Type NED, FLA
! =============================================================================

iClosureType = gs_closure_type_int - 1
if GLOB_SCRIPT_TYPE = 2 then
	if	bHideVariClosTypeInSimple2D &\
		iClosureType = CLOSURE_VARIABLE	&\
		((iLoD2D < SYMBW_M_2LINE_NOGLASS & iLoD2D > SYMBW_SCALESENS) | (iLoD2D = SYMBW_SCALESENS & GLOB_SCALE > 150)) then
		iClosureType = CLOSURE_NO
	endif
endif

! ==============================================================================
! Symbol at Middle
! ==============================================================================

signRevealSide = not(WIDO_REVEAL_SIDE) - WIDO_REVEAL_SIDE

if GLOB_SCRIPT_TYPE = 2 then
	if GLOB_CONTEXT = 2 | GLOB_CONTEXT = 22 then
		if	iLoD2D = SYMBW_S_2LINE | iLoD2D = SYMBW_D_2LINE_HS then bDWSymbolAtMiddle = 1
		if	iLoD2D = SYMBW_S_CENTERLINE |\
			(iLoD2D = SYMBW_SCALESENS and GLOB_SCALE > 150 and bCenterLineInSimple2D) then bDWSymbolAtMiddle2 = 1
	endif
endif
if GLOB_SCRIPT_TYPE = 3 then
	if GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6 then
		if lod3D = 5 then bDWSymbolAtMiddle = 1
	endif
endif

SymbMid_LeftDx		= 0
SymbMid_RightDx		= 0
SymbolMid_shiftDy	= 0

if bDWSymbolAtMiddle then
	SymbolMid_shiftDy = (WIDO_SILL - WALL_THICKNESS / 2 + WIDO_FRAME_THICKNESS / 2) * signRevealSide

	if bRightCornerFunction then
		if gs_corner_column then
			SymbMid_RightDx = cornerPostXRight + (WIDO_FRAME_THICKNESS/2 + SymbolMid_shiftDy) / tan(rightCornerAngle/2)
		else
			SymbMid_RightDx = signRevealSide * SymbolMid_shiftDy / tan(rightCornerAngle/2)
		endif
	endif
	if bLeftCornerFunction then
		if gs_corner_column then
			SymbMid_LeftDx = cornerPostXLeft + (WIDO_FRAME_THICKNESS/2 + SymbolMid_shiftDy) / tan(leftCornerAngle/2)
		else
			SymbMid_LeftDx = signRevealSide * SymbolMid_shiftDy / tan(leftCornerAngle/2)
		endif
	endif
endif

if bDWSymbolAtMiddle2 then
	SymbolMid_shiftDy = (WIDO_SILL - WALL_THICKNESS / 2) * signRevealSide

	if bRightCornerFunction then
		SymbMid_RightDx = signRevealSide * SymbolMid_shiftDy / tan(rightCornerAngle/2)
	endif
	if bLeftCornerFunction then
		SymbMid_LeftDx = signRevealSide * SymbolMid_shiftDy / tan(leftCornerAngle/2)
	endif
endif


! =============================================================================
! Array index definitions
! =============================================================================

if not(bEnableSill) then
	iSillType = 0
endif

bBoardInPolyWall = 0
if iBoardInPolyWall = BOARD_PARALLEL_WINDOW then bBoardInPolyWall = 1 ! Parallel to Window


! =============================================================================
! Nominal Size
! =============================================================================

if gs_nominal_size > 0 then
	gs_wallhole_nominal	= 0
	gs_reveal_nominal	= 0
	gs_unit_nominal		= 0
	bSetParams = 0

	if not(bSetParams) & bittest(gs_nominal_size, 0) then: gs_wallhole_nominal	= 1: bSetParams = 1: endif
	if not(bSetParams) & bittest(gs_nominal_size, 1) then: gs_reveal_nominal	= 1: bSetParams = 1: endif
	if not(bSetParams) & bittest(gs_nominal_size, 2) then: gs_unit_nominal		= 1: bSetParams = 1: endif

	if bSetParams & GLOB_SCRIPT_TYPE = 5 then
		parameters	gs_wallhole_nominal	= gs_wallhole_nominal,
					gs_reveal_nominal	= gs_reveal_nominal,
					gs_unit_nominal		= gs_unit_nominal
	endif
endif


! =============================================================================
! Definitions
! =============================================================================

bDrawOutsideTrim	= (gs_trim_outside)
bDrawInsideTrim		= (gs_trim_inside)
bDrawSill			= (gs_sill_outside)
bDrawBoard			= (gs_board_inside)

bMirrored = (bDisabeMirroring & SYMB_MIRRORED)

ac_zone_on_reveal_side = 1
if WIDO_REVEAL_SIDE exor not(gs_bOpeningToZone) then
	ac_zone_on_reveal_side = not(ac_zone_on_reveal_side)
endif
parameters ac_zone_on_reveal_side = ac_zone_on_reveal_side

isVentilationOverFrame = (bEnableVentilationProfile & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME))


! ==============================================================================
! Partial Stucture Display related calculations
! ==============================================================================

if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 then
	if GLOB_STRUCTURE_DISPLAY = STRUCTURE_CORE_ONLY & \
	  (GLOB_CONTEXT = 2 | GLOB_CONTEXT = 22 | \		! Floor plan
	   GLOB_CONTEXT = 3 | GLOB_CONTEXT = 23 | \		! 3D
	   GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | \		! Section
!!	   (GLOB_PREVIEW_MODE = 2) | \	! IS but not surface
	   GLOB_CONTEXT = 6 | \	! IS
	   GLOB_CONTEXT = 8 | GLOB_CONTEXT = 28) then	! Layout
		bDrawOutsideTrim	= 0
		bDrawInsideTrim		= 0
		bDrawSill			= 0
		bDrawBoard			= 0
	endif
endif

! =============================================================================
! Wallhole Oversize
! =============================================================================

overSize = 0

overSizeLeft	= 0
overSizeRight	= 0

if not(bDrawSill) & not(bDrawBoard) then
	overSizeLower = 0
else
	if not(bDrawSill) & bDrawBoard then
		overSizeLower = gs_sill_oversize * gs_board_thk
	else
		overSizeLower = 0
	endif
	if bDrawSill & not(bDrawBoard) then
		if iSillType = 1 then
			overSizeLower = gs_sill_oversize * (gs_sill_thk + gs_sill_elev)
		else
			overSizeLower = 0
		endif
	endif
	if bDrawSill & bDrawBoard then
		if iSillType = 1 then
			if gs_sill_oversize then
				overSizeLower = max((gs_sill_thk + gs_sill_elev), gs_board_thk)
			else
				overSizeLower = 0
			endif
		else
			overSizeLower = 0
		endif
	endif
endif
overSizeUpper	= 0


! ==============================================================================
! Calculations for Trapezoid Walls
! ==============================================================================

if abs(WALL_INCL) > EPS then
	bInclinedWall = 1
	bInclDir = SYMB_MIRRORED exor (SYMB_ROTANGLE > EPS)	! (0 / 1)
	iInclDir = not(bInclDir) - bInclDir					! (1 / -1)

	incH = cos(WALL_INCL)
	incV = sin(WALL_INCL) * iInclDir

	incHor = tan(WALL_INCL)
else
	bInclinedWall = 0
endif


! ==============================================================================
! Hide Casing in Special Cases
! ==============================================================================

call "CasingEnable_WMCC" parameters A=A,
	iRevealType		= iRevealType,
	iWindowShape	= iWindowShape,
	returned_parameters bInsideCasingNotAvailableByWallType,
						bInsideCasingNotAvailableByReveal,
						bOutsideCasingNotAvailableByReveal,
						dummy,
						dummy

if (bInsideCasingNotAvailableByWallType |\
	bInsideCasingNotAvailableByReveal) then
	gs_trim_inside	= 0
	bDrawInsideTrim	= 0
endif
if bOutsideCasingNotAvailableByReveal then
	gs_trim_outside	 = 0
	bDrawOutsideTrim = 0
endif


! ==============================================================================
! Retroactive Logic
! ==============================================================================

if gs_sill_outside then
	if iSillType = 2 | iSillType = 3 | iSillType = 4 | iSillType = 5 | iSillType = 6 | iSillType = 7 | iSillType = 15 | iSillType = 17 then
		WIDO_THRES_DEPTH = 0
		gs_reveal_bottom = 0
	endif
endif

if gs_board_inside then
	gs_reveal_bottom_angle = 0
endif

bEnablePlasterLeftIn	= 1
bEnablePlasterLeftOut	= 1
bEnablePlasterRightIn	= 1
bEnablePlasterRightOut	= 1
bEnablePlasterTopIn		= 1
bEnablePlasterTopOut	= 1
bEnablePlasterBottomIn	= 1
bEnablePlasterBottomOut	= 1

bOutsideAtRefLine = (wallIsLeft exor (AC_Wall_Direction_Type <> 1 & AC_Wall_Direction_Type <> 3))
if bOutsideAtRefLine then
	if bDrawInsideTrim then
		bEnablePlasterLeftOut	= 0
		bEnablePlasterRightOut	= 0
		bEnablePlasterTopOut	= 0
		bEnablePlasterBottomOut	= 0
	endif
	if bDrawOutsideTrim then
		bEnablePlasterLeftIn	= 0
		bEnablePlasterRightIn	= 0
		bEnablePlasterTopIn		= 0
		bEnablePlasterBottomIn	= 0
	endif
	if bDrawSill then
		bEnablePlasterBottomIn	= 0
	endif
	if bDrawBoard then
		bEnablePlasterBottomOut	= 0
	endif
	if bEnableMasonryArch & bMasonryArch then
		bEnablePlasterTopIn	= 0
	endif
else
	if bDrawOutsideTrim then
		bEnablePlasterLeftOut	= 0
		bEnablePlasterRightOut	= 0
		bEnablePlasterTopOut	= 0
		bEnablePlasterBottomOut	= 0
	endif
	if bDrawInsideTrim then
		bEnablePlasterLeftIn	= 0
		bEnablePlasterRightIn	= 0
		bEnablePlasterTopIn		= 0
		bEnablePlasterBottomIn	= 0
	endif
	if bDrawSill then
		bEnablePlasterBottomOut	= 0
	endif
	if bDrawBoard then
		bEnablePlasterBottomIn	= 0
	endif
	if bEnableMasonryArch & bMasonryArch then
		bEnablePlasterTopOut	= 0
	endif
endif

! =============================================================================
! Disable 2D Opening Lines and Override
! =============================================================================

if iWindowClass = WINCLASS_SINGLE_HUNG | iWindowClass = WINCLASS_DOUBLE_HUNG |\
	iWindowClass = WINCLASS_HORIZONTAL_SLIDING then

	b2ColumnsOnOpLineUI	= 0
	bDisable2DOverride	= 1
endif

! =============================================================================
! Plaster Geometry
! =============================================================================

call "PlasterGeometry_WMCC" parameters gs_macro_version = 12,
	AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
	bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
	bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
	bEnablePlasterRightIn	= bEnablePlasterRightIn,
	bEnablePlasterRightOut	= bEnablePlasterRightOut,
	bEnablePlasterTopIn		= bEnablePlasterTopIn,
	bEnablePlasterTopOut	= bEnablePlasterTopOut,
	bEnablePlasterBottomIn	= bEnablePlasterBottomIn,
	bEnablePlasterBottomOut	= bEnablePlasterBottomOut,
	gs_useWallFinishSkin	= gs_useWallFinishSkin,
	gs_maxPlasterThk		= gs_maxPlasterThk,
	gs_bAutoTurnOut			= gs_bAutoTurnOut,
	gs_bOverOut				= gs_bOverOut,
	gs_bAutoTurnIn			= gs_bAutoTurnIn,
	gs_bOverIn				= gs_bOverIn,
	iClosureType			= iClosureType,
	gs_custom_cc_array_left	= gs_custom_cc_array_left,
	gs_custom_cc_array_right= gs_custom_cc_array_right,
returned_parameters	thkPlasterAtSillLeft,
					thkPlasterAtSillSlLeft,
					thkPlasterAtSillSlLeftBottom,
					thkPlasterAtSillRight,
					thkPlasterAtSillSlRight,
					thkPlasterAtSillSlRightBottom,
					thkPlasterAtSillTop,
					thkPlasterAtSillBottom,
					thkPlasterAtBoardLeft,
					thkPlasterAtBoardSlLeft,
					thkPlasterAtBoardSlLeftBottom,
					thkPlasterAtBoardRight,
					thkPlasterAtBoardSlRight,
					thkPlasterAtBoardSlRightBottom,
					thkPlasterAtBoardTop,
					thkPlasterAtBoardBottom,
					possibleSkinTurnIn,
					possibleSkinTurnOut,
					maxSkinTurnIn,
					maxSkinTurnOut,
					nSkinTurnIn,
					nSkinTurnOut


! =============================================================================
! Wallhole Geometry
! =============================================================================

diff = bCornerWindow * (overSizeLeft - overSizeRight) / 2

refWidth	= A
leftWidth	= ac_wallhole_width / 2 + diff + overSizeLeft  * not(bLeftCornerFunction) + (bCornerWindow) * cornerPostXRight + bLeftCornerFunction * cornerPostXLeft
rightWidth	= ac_wallhole_width / 2 - diff + overSizeRight * not(bRightCornerFunction | bCornerWindow) + (bRightCornerFunction & not(bCornerWIndow)) * cornerPostXRight

openingHeight	= ac_wallhole_height + overSizeLower + overSizeUpper
offsY			= overSizeLower


! ==============================================================================
! Calculations for Curved Walls
! ==============================================================================

if curvedWall then
	WOD = abs(WIDO_ORIG_DIST) - (SYMB_ROTANGLE > EPS) * WIDO_FRAME_THICKNESS

	leftAlfa	= atn(leftWidth  / WOD)
	rightAlfa	= atn(rightWidth / WOD)
endif


! =============================================================================
! Wallhole Reveal Geometry
! =============================================================================

origRevealType					= iRevealType
origRevealLeft					= gs_reveal_left
origRevealRight					= gs_reveal_right
origRevealTop					= gs_reveal_top
origRevealBottom				= gs_reveal_bottom
origRevealLeftAngle				= gs_reveal_left_angle
origRevealRightAngle			= gs_reveal_right_angle
origRevealTopAngle				= gs_reveal_top_angle
origRevealBottomAngle			= gs_reveal_bottom_angle
origRevealSplayedInnerLeft		= gs_reveal_splayed_innerLeft
origRevealSplayedInnerRight		= gs_reveal_splayed_innerRight
origRevealSplayedInnerTop		= gs_reveal_splayed_innerTop
origRevealSplayedInnerBottom	= gs_reveal_splayed_innerBottom
origRevealOuterJambDepth		= gs_reveal_outer_jamb_depth
origRevealDoubleInnerLeft		= gs_reveal_double_innerLeft
origRevealDoubleInnerRight		= gs_reveal_double_innerRight
origRevealDoubleInnerTop		= gs_reveal_double_innerTop
origRevealDoubleInnerBottom		= gs_reveal_double_innerBottom
origRevealOuterLeftAngle		= 0 ! gs_reveal_outerLeft_angle
origRevealOuterRightAngle		= 0 ! gs_reveal_outerRight_angle
origRevealOuterTopAngle			= 0 ! gs_reveal_outerTop_angle
origRevealOuterBottomAngle		= 0 ! gs_reveal_outerBottom_angle
origRevealInnerWidthLeft		= 0 ! gs_reveal_innerLeft_width
origRevealInnerWidthRight		= 0 ! gs_reveal_innerRight_width
origRevealInnerWidthTop			= 0 ! gs_reveal_innerTop_width
origRevealInnerWidthBottom		= 0 ! gs_reveal_innerBottom_width
origRevealOuterWidthLeft		= 0 ! gs_reveal_outerLeft_width
origRevealOuterWidthRight		= 0 ! gs_reveal_outerRight_width
origRevealOuterWidthTop			= 0 ! gs_reveal_outerTop_width
origRevealOuterWidthBottom		= 0 ! gs_reveal_outerBottom_width

dim revealPointsArray[]
dim iRevealPointsIdx[20]

dim bAddPoint[4]

dim  leftWallholeRevealPnts[][2]
dim rightWallholeRevealPnts[][2]

call "RevealGeometry_WMCC" parameters A	= A,
	AC_WallType						= AC_WallType,
	AC_WindowInWallContour			= AC_WindowInWallContour,
	AC_WallContourPolygon			= AC_WallContourPolygon,
	gs_macro_version				= 12,
	iWindowShape					= iWindowShape,
	refWidth						= refWidth,
	leftWidth						= leftWidth  + gs_left_oversize,
	rightWidth						= rightWidth + gs_right_oversize,
	cornerPostX						= cornerPostXRight,
	bWndCurved						= gs_IsCurved,
	bParalellInCurvedWalls			= bParalellInCurvedWalls,
	bShowReveal						= bShowReveal,
	bDWSymbolAtMiddle				= bDWSymbolAtMiddle,
	iClosureType					= iClosureType,
	iRevealType						= origRevealType,
	gs_reveal_type_bottom_int		= gs_reveal_type_bottom_int,
	iSillRevealType					= iSillRevealType,
	iBoardRevealType				= iBoardRevealType,
	gs_wido_sill					= gs_wido_sill,
	gs_reveal_uniform				= gs_reveal_uniform,
	gs_reveal_left					= origRevealLeft,
	gs_reveal_right					= origRevealRight,
	gs_reveal_top					= origRevealTop,
	gs_reveal_bottom				= origRevealBottom,
	gs_reveal_splayed_innerLeft		= origRevealSplayedInnerLeft,
	gs_reveal_splayed_innerRight	= origRevealSplayedInnerRight,
	gs_reveal_splayed_innerTop		= origRevealSplayedInnerTop,
	gs_reveal_splayed_innerBottom	= origRevealSplayedInnerBottom,
	gs_reveal_double_innerLeft		= origRevealDoubleInnerLeft,
	gs_reveal_double_innerRight		= origRevealDoubleInnerRight,
	gs_reveal_double_innerTop		= origRevealDoubleInnerTop,
	gs_reveal_double_innerBottom	= origRevealDoubleInnerBottom,
	gs_reveal_outer_jamb_depth		= origRevealOuterJambDepth,
	gs_reveal_left_angle			= origRevealLeftAngle,
	gs_reveal_right_angle			= origRevealRightAngle,
	gs_reveal_top_angle				= origRevealTopAngle,
	gs_reveal_bottom_angle			= origRevealBottomAngle,
	gs_reveal_outerLeft_angle		= origRevealOuterLeftAngle,
	gs_reveal_outerRight_angle		= origRevealOuterRightAngle,
	gs_reveal_outerTop_angle		= origRevealOuterTopAngle,
	gs_reveal_outerBottom_angle		= origRevealOuterBottomAngle,
	gs_reveal_angle_edit_by_int		= 1,
	gs_reveal_innerLeft_width		= origRevealInnerWidthLeft,
	gs_reveal_innerRight_width		= origRevealInnerWidthRight,
	gs_reveal_innerTop_width		= origRevealInnerWidthTop,
	gs_reveal_innerBottom_width		= origRevealInnerWidthBottom,
	gs_reveal_outerLeft_width		= origRevealOuterWidthLeft,
	gs_reveal_outerRight_width		= origRevealOuterWidthRight,
	gs_reveal_outerTop_width		= origRevealOuterWidthTop,
	gs_reveal_outerBottom_width		= origRevealOuterWidthBottom,
	gs_reveal_left_sL				= 0,
	gs_reveal_right_sR				= 0,
	gs_reveal_bottom_sL				= 0,
	gs_reveal_bottom_sR				= 0,
	gs_reveal_double_innerLeft_sL	= 0,
	gs_reveal_double_innerRight_sR	= 0,
	gs_reveal_double_innerBottom_sL	= 0,
	gs_reveal_double_innerBottom_sR	= 0,
	gs_mountingFrame				= gs_mountingFrame,
	gs_mountingFrame_depth			= gs_mountingFrame_depth,
	thkPlasterAtSillLeft			= thkPlasterAtSillLeft,
	thkPlasterAtSillRight			= thkPlasterAtSillRight,
	thkPlasterAtBoardLeft			= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight			= thkPlasterAtBoardRight,
	bLeftCornerFunction				= bLeftCornerFunction,
	leftCornerAngle					= leftCornerAngle,
	leftConnWallThk					= leftConnWallThk,
	bRightCornerFunction			= bRightCornerFunction,
	rightCornerAngle				= rightCornerAngle,
	rightConnWallThk				= rightConnWallThk,
	bCornerWindow					= bCornerWindow,
	bGangingLeft					= gs_stack_left,
	bGangingRight					= gs_stack_right,
	gs_unit_nominal					= gs_unit_nominal,
	gs_reveal_nominal				= gs_reveal_nominal,
	gs_tolerance_left				= gs_tolerance_left,
	gs_tolerance_right				= gs_tolerance_right,
	gs_left_oversize				= gs_left_oversize,
	gs_right_oversize				= gs_right_oversize,
returned_parameters	iRevealType,
	iRevealTypeForDisplay,
	iClosureType,
	bShowReveal,
	leftWallholeWidth,
	rightWallholeWidth,
	originalOffsWindowX,
	offsWindowX,
	gs_reveal_left,
	gs_reveal_right,
	revealInnerLeft,
	revealInnerRight,
	gs_reveal_top,
	gs_reveal_bottom,
	gs_reveal_splayed_innerTop,
	gs_reveal_splayed_innerBottom,
	gs_reveal_double_innerLeft,
	gs_reveal_double_innerRight,
	gs_reveal_double_innerTop,
	gs_reveal_double_innerBottom,
	gs_reveal_outer_jamb_depth,
	gs_reveal_left_angle,
	gs_reveal_right_angle,
	gs_reveal_top_angle,
	gs_reveal_bottom_angle,
	gs_reveal_outerLeft_angle,
	gs_reveal_outerRight_angle,
	gs_reveal_outerTop_angle,
	gs_reveal_outerBottom_angle,
	gs_reveal_left_sL,
	gs_reveal_right_sR,
	gs_reveal_bottom_sL,
	gs_reveal_bottom_sR,
	gs_reveal_double_innerLeft_sL,
	gs_reveal_double_innerRight_sR,
	gs_reveal_double_innerBottom_sL,
	gs_reveal_double_innerBottom_sR,
	radSill,
	radBoard,
	WOD,
	iRevealPointsIdx,
	bAddPoint,
	revealPointsArray


for i=1 to iRevealPointsIdx[10]
	idx = 2 * (i - 1) + 1
	leftWallholeRevealPnts[i][1] = revealPointsArray[idx]
	leftWallholeRevealPnts[i][2] = revealPointsArray[idx + 1]
next i

for i=1 to iRevealPointsIdx[20]
	idx = 2 * (iRevealPointsIdx[10] + i - 1) + 1
	rightWallholeRevealPnts[i][1] = revealPointsArray[idx]
	rightWallholeRevealPnts[i][2] = revealPointsArray[idx + 1]
next i


! =============================================================================
! Wall Framing Reveal Geometry
! =============================================================================

dim  leftWallFrameRevealPnts[][2]
dim rightWallFrameRevealPnts[][2]

if abs(gs_left_oversize) > EPS | abs(gs_right_oversize) > EPS then
	if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 | ((GLOB_SCRIPT_TYPE = 4 | GLOB_SCRIPT_TYPE = 5) & gs_sunShade_iType <> 0) then
		call "RevealGeometry_WMCC" parameters A	= A,
			AC_WallType						= AC_WallType,
			AC_WindowInWallContour			= AC_WindowInWallContour,
			AC_WallContourPolygon			= AC_WallContourPolygon,
			gs_macro_version				= 12,
			iWindowShape					= iWindowShape,
			refWidth						= refWidth,
			leftWidth						= leftWidth,
			rightWidth						= rightWidth,
			cornerPostX						= cornerPostXRight,
			bWndCurved						= gs_IsCurved,
			bParalellInCurvedWalls			= bParalellInCurvedWalls,
			bShowReveal						= bShowReveal,
			bDWSymbolAtMiddle				= bDWSymbolAtMiddle,
			iClosureType					= iClosureType,
			iRevealType						= origRevealType,
			gs_reveal_type_bottom_int		= gs_reveal_type_bottom_int,
			iSillRevealType					= iSillRevealType,
			iBoardRevealType				= iBoardRevealType,
			gs_wido_sill					= gs_wido_sill,
			gs_reveal_uniform				= gs_reveal_uniform,
			gs_reveal_left					= origRevealLeft,
			gs_reveal_right					= origRevealRight,
			gs_reveal_top					= origRevealTop,
			gs_reveal_bottom				= origRevealBottom,
			gs_reveal_splayed_innerLeft		= origRevealSplayedInnerLeft,
			gs_reveal_splayed_innerRight	= origRevealSplayedInnerRight,
			gs_reveal_splayed_innerTop		= origRevealSplayedInnerTop,
			gs_reveal_splayed_innerBottom	= origRevealSplayedInnerBottom,
			gs_reveal_double_innerLeft		= origRevealDoubleInnerLeft,
			gs_reveal_double_innerRight		= origRevealDoubleInnerRight,
			gs_reveal_double_innerTop		= origRevealDoubleInnerTop,
			gs_reveal_double_innerBottom	= origRevealDoubleInnerBottom,
			gs_reveal_outer_jamb_depth		= origRevealOuterJambDepth,
			gs_reveal_left_angle			= origRevealLeftAngle,
			gs_reveal_right_angle			= origRevealRightAngle,
			gs_reveal_top_angle				= origRevealTopAngle,
			gs_reveal_bottom_angle			= origRevealBottomAngle,
			gs_reveal_outerLeft_angle		= origRevealOuterLeftAngle,
			gs_reveal_outerRight_angle		= origRevealOuterRightAngle,
			gs_reveal_outerTop_angle		= origRevealOuterTopAngle,
			gs_reveal_outerBottom_angle		= origRevealOuterBottomAngle,
			gs_reveal_angle_edit_by_int		= 1,
			gs_reveal_innerLeft_width		= origRevealInnerWidthLeft,
			gs_reveal_innerRight_width		= origRevealInnerWidthRight,
			gs_reveal_innerTop_width		= origRevealInnerWidthTop,
			gs_reveal_innerBottom_width		= origRevealInnerWidthBottom,
			gs_reveal_outerLeft_width		= origRevealOuterWidthLeft,
			gs_reveal_outerRight_width		= origRevealOuterWidthRight,
			gs_reveal_outerTop_width		= origRevealOuterWidthTop,
			gs_reveal_outerBottom_width		= origRevealOuterWidthBottom,
			gs_reveal_left_sL				= 0,
			gs_reveal_right_sR				= 0,
			gs_reveal_bottom_sL				= 0,
			gs_reveal_bottom_sR				= 0,
			gs_reveal_double_innerLeft_sL	= 0,
			gs_reveal_double_innerRight_sR	= 0,
			gs_reveal_double_innerBottom_sL	= 0,
			gs_reveal_double_innerBottom_sR	= 0,
			gs_mountingFrame				= gs_mountingFrame,
			gs_mountingFrame_depth			= gs_mountingFrame_depth,
			thkPlasterAtSillLeft			= thkPlasterAtSillLeft,
			thkPlasterAtSillRight			= thkPlasterAtSillRight,
			thkPlasterAtBoardLeft			= thkPlasterAtBoardLeft,
			thkPlasterAtBoardRight			= thkPlasterAtBoardRight,
			bLeftCornerFunction				= bLeftCornerFunction,
			leftCornerAngle					= leftCornerAngle,
			leftConnWallThk					= leftConnWallThk,
			bRightCornerFunction			= bRightCornerFunction,
			rightCornerAngle				= rightCornerAngle,
			rightConnWallThk				= rightConnWallThk,
			bCornerWindow					= bCornerWindow,
			bGangingLeft					= gs_stack_left,
			bGangingRight					= gs_stack_right,
			gs_unit_nominal					= gs_unit_nominal,
			gs_reveal_nominal				= gs_reveal_nominal,
			gs_tolerance_left				= gs_tolerance_left,
			gs_tolerance_right				= gs_tolerance_right,
			gs_left_oversize				= 0,
			gs_right_oversize				= 0,
		returned_parameters	dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			leftWidth,
			rightWidth,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			iRevealPointsIdx,
			dummyParam,dummyParam,dummyParam,dummyParam,
			revealPointsArray

		for i=1 to iRevealPointsIdx[10]
			idx = 2 * (i - 1) + 1
			leftWallFrameRevealPnts[i][1] = revealPointsArray[idx]
			leftWallFrameRevealPnts[i][2] = revealPointsArray[idx + 1]
		next i

		for i=1 to iRevealPointsIdx[20]
			idx = 2 * (iRevealPointsIdx[10] + i - 1) + 1
			rightWallFrameRevealPnts[i][1] = revealPointsArray[idx]
			rightWallFrameRevealPnts[i][2] = revealPointsArray[idx + 1]
		next i
	endif
else
	 leftWallFrameRevealPnts =  leftWallholeRevealPnts
	rightWallFrameRevealPnts = rightWallholeRevealPnts

	leftWidth	= leftWallholeWidth
	rightWidth	= rightWallholeWidth
endif


! ==============================================================================
! Reveal Points Indexes
! ==============================================================================

idxFrameStartRevealLeft		= iRevealPointsIdx[3]
idxFrameEndRevealLeft		= iRevealPointsIdx[4]
idxFrameStartRevealRight	= iRevealPointsIdx[13]
idxFrameEndRevealRight		= iRevealPointsIdx[14]


! =============================================================================
! Wall Framing Reveal Geometry
! =============================================================================

dim lineSections[][7]
lineSections[1][1] = 0	! Initialization
lineSections[1][2] = 0
lineSections[1][3] = 0
lineSections[1][4] = 0
lineSections[1][5] = 0
lineSections[1][6] = 0
lineSections[1][7] = 0

if GLOB_SCRIPT_TYPE = 2 then

	bCompositeWall		= (WALL_SKINS_NUMBER > 0)

	bSkinTurnLeft	= 0
	bSkinTurnRight	= 0
	if bCompositeWall then
		if	iClosureType = CLOSURE_TRADITIONAL |\
			iClosureType = CLOSURE_VARIABLE |\
			iClosureType = CLOSURE_DUTCH_VARIABLE |\
			iClosureType = CLOSURE_PREFABRICATED then

			bSkinTurnLeft	= (iCavityClosureSide = CAVITY_SIDE_BOTH | iCavityClosureSide = CAVITY_SIDE_LEFT)
			bSkinTurnRight	= (iCavityClosureSide = CAVITY_SIDE_BOTH | iCavityClosureSide = CAVITY_SIDE_RIGHT)
		endif
		if iClosureType = CLOSURE_CUSTOM then
			bSkinTurnLeft	= 1
			bSkinTurnRight	= 1
		endif

		bPlasterTurnSillLeft	= (thkPlasterAtSillLeft > EPS)
		bPlasterTurnSillRight	= (thkPlasterAtSillRight > EPS)
		bPlasterTurnBoardLeft	= (thkPlasterAtBoardLeft > EPS)
		bPlasterTurnBoardRight	= (thkPlasterAtBoardRight > EPS)
	else
		bPlasterTurnSillLeft	= 0
		bPlasterTurnSillRight	= 0
		bPlasterTurnBoardLeft	= 0
		bPlasterTurnBoardRight	= 0
	endif

	dim tempLineSections[]
	tempLineSections[1] = 0	! Initialization

	call "FramingGeometry_WMCC" parameters gs_macro_version = 12,
		refWidth				= refWidth,
		leftWidth				= leftWidth  + gs_left_oversize,
		rightWidth				= rightWidth + gs_right_oversize,
		bWndCurved				= gs_IsCurved,
		bParalellInCurvedWalls	= bParalellInCurvedWalls,
		radSill					= radSill,
		radBoard				= radBoard,
		WOD						= WOD,
		bSkinTurnLeft			= bSkinTurnLeft,
		bSkinTurnRight			= bSkinTurnRight,
		bPlasterTurnSillLeft	= bPlasterTurnSillLeft,
		bPlasterTurnSillRight	= bPlasterTurnSillRight,
		bPlasterTurnBoardLeft	= bPlasterTurnBoardLeft,
		bPlasterTurnBoardRight	= bPlasterTurnBoardRight,
		bLeftCornerFunction		= bLeftCornerFunction,
		bRightCornerFunction	= bRightCornerFunction,
		iRevealType				= iRevealTypeForDisplay,
		gs_reveal_left			= gs_reveal_left,
		gs_reveal_right			= gs_reveal_right,
		gs_reveal_left_angle	= gs_reveal_left_angle,
		gs_reveal_right_angle	= gs_reveal_right_angle,
		leftRevealPnts			= leftWallholeRevealPnts,
		rightRevealPnts			= rightWallholeRevealPnts,
		iRevealPointsIdx		= iRevealPointsIdx,
		bGangingLeft			= gs_stack_left,
		bGangingRight			= gs_stack_right,
		gs_left_oversize		= gs_left_oversize,
		gs_right_oversize		= gs_right_oversize,
		gs_sill_outside			= gs_sill_outside,
		iSillType				= iSillType,
		gs_sill_nosing			= gs_sill_nosing,
		gs_sill_ovhg_left		= gs_sill_ovhg_left,
		gs_sill_ovhg_right		= gs_sill_ovhg_right,
		gs_board_inside			= gs_board_inside,
		gs_board_ovhg_left		= gs_board_ovhg_left,
		gs_board_ovhg_right		= gs_board_ovhg_right,
		bDrawOutsideTrim		= bDrawOutsideTrim,
		bDrawInsideTrim			= bDrawInsideTrim,
		gs_trim_outside_uniform	= gs_trim_outside_uniform,
		gs_trim_inside_uniform	= gs_trim_inside_uniform,
		gs_trim_width_in		= gs_trim_width_in,
		gs_trim_width_out		= gs_trim_width_out,
		gs_trim_offs_in			= gs_trim_offs_in,
		gs_trim_offs_out		= gs_trim_offs_out,
		gs_trim_thk_in			= gs_trim_thk_in,
		gs_trim_thk_out			= gs_trim_thk_out,
		gs_tw_left_in			= gs_tw_left_in,
		gs_tw_right_in			= gs_tw_right_in,
		gs_tw_left_out			= gs_tw_left_out,
		gs_tw_right_out			= gs_tw_right_out,
		gs_trim_atframe_out		= gs_trim_atframe_out,
		gs_trim_atframe_in		= gs_trim_atframe_in,
	returned_parameters	tempLineSections

	numLineSections = round_int(vardim1(tempLineSections) / 7)
	idx = 0
	for i=1 to numLineSections
		for j=1 to 7
			lineSections[i][j] = tempLineSections[idx + j]
		next j
		idx = idx + 7
	next i
endif


! =============================================================================
! Frame Overhang Calculations
! =============================================================================

if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 then
	fx1L = -leftWidth
	fx2L = -leftWidth

	fx1R =  rightWidth
	fx2R =  rightWidth

	fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft][1]
	fx2L = leftWallFrameRevealPnts[idxFrameEndRevealLeft][1]

	fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight][1]
	fx2R = rightWallFrameRevealPnts[idxFrameEndRevealRight][1]

	if bDWSymbolAtMiddle2 then
		if NOT(bLeftCornerFunction) then
			if idxFrameStartRevealLeft = 2 then
				if WIDO_SILL + WIDO_FRAME_THICKNESS < WALL_THICKNESS / 2 then
					if WIDO_SILL < EPS then
						fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft + 2][1] + TAN(gs_reveal_left_angle) * (WALL_THICKNESS / 2 - WIDO_SILL)
					else
						fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft + 2][1] - TAN(gs_reveal_left_angle) * (WALL_THICKNESS / 2 - WIDO_SILL - WIDO_FRAME_THICKNESS)
					endif
				endif
			else
				if WIDO_SILL + WIDO_FRAME_THICKNESS < WALL_THICKNESS / 2 then
					if ABS(leftWallFrameRevealPnts[idxFrameStartRevealLeft + 1][2] - leftWallFrameRevealPnts[idxFrameStartRevealLeft + 2][2]) < EPS then
						fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft + 2][1] - TAN(gs_reveal_left_angle) * (WALL_THICKNESS / 2 - WIDO_SILL - WIDO_FRAME_THICKNESS)
					else
						fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft][1] - TAN(gs_reveal_left_angle) * (WALL_THICKNESS / 2 - WIDO_SILL)			
					endif
				else
					if WIDO_SILL > WALL_THICKNESS / 2 then
						fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft - 1][1]
					else
						if ABS(leftWallFrameRevealPnts[idxFrameStartRevealLeft + 1][2] - leftWallFrameRevealPnts[idxFrameStartRevealLeft + 2][2]) > EPS then
							fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft][1] - TAN(gs_reveal_left_angle) * (WALL_THICKNESS / 2 - WIDO_SILL)
						endif
					endif
				endif
			endif
		endif

		if NOT(bRightCornerFunction) then
			if idxFrameStartRevealRight = 2 then
				if WIDO_SILL + WIDO_FRAME_THICKNESS < WALL_THICKNESS / 2 then
					if WIDO_SILL < EPS then
						fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight + 2][1] - TAN(gs_reveal_right_angle) * (WALL_THICKNESS / 2 - WIDO_SILL)
					else
						fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight + 2][1] + TAN(gs_reveal_right_angle) * (WALL_THICKNESS / 2 - WIDO_SILL - WIDO_FRAME_THICKNESS)
					endif
				endif
			else
				if WIDO_SILL + WIDO_FRAME_THICKNESS < WALL_THICKNESS / 2 then
					if ABS(rightWallFrameRevealPnts[idxFrameStartRevealRight + 1][2] - rightWallFrameRevealPnts[idxFrameStartRevealRight + 2][2]) < EPS then
						fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight + 2][1] + TAN(gs_reveal_right_angle) * (WALL_THICKNESS / 2 - WIDO_SILL - WIDO_FRAME_THICKNESS)
					else
						fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight][1] + TAN(gs_reveal_right_angle) * (WALL_THICKNESS / 2 - WIDO_SILL)			
					endif
				else
					if WIDO_SILL > WALL_THICKNESS / 2 then
						fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight - 1][1]
					else
						if ABS(rightWallFrameRevealPnts[idxFrameStartRevealRight + 1][2] - rightWallFrameRevealPnts[idxFrameStartRevealRight + 2][2]) > EPS then
							fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight][1] + TAN(gs_reveal_right_angle) * (WALL_THICKNESS / 2 - WIDO_SILL)
						endif
					endif
				endif
			endif
		endif
	endif

	! Curved
	if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 then
		if GLOB_CONTEXT = 2 | GLOB_CONTEXT = 22 | GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6 then
			if curvedWall then
				signRotAngle = (abs(SYMB_ROTANGLE - 180) < EPS) - not(SYMB_ROTANGLE > EPS)
				SymbMid_LeftDx	= signRotAngle * SymbolMid_shiftDy * tan(leftAlfa)
				SymbMid_RightDx	= signRotAngle * SymbolMid_shiftDy * tan(rightAlfa)
			endif
		endif
	endif

	leftFrameOverhang	= (not(bLeftCornerFunction) & bShowReveal) * (overSizeLeft + gs_left_oversize) + bShowReveal * gs_tolerance_left - SymbMid_LeftDx * NOT(bDWSymbolAtMiddle2)
	rightFrameOverhang	= (not(bRightCornerFunction) & bShowReveal) * (overSizeRight + gs_right_oversize) + (not(bCornerWindow) & bShowReveal) * gs_tolerance_right - SymbMid_RightDx * NOT(bDWSymbolAtMiddle2)

	if WIDO_REVEAL_SIDE then
		gs_frame_ovhg_left_in	= -fx1L - leftWallholeWidth + leftFrameOverhang + not(bShowReveal) * gs_left_oversize
		gs_frame_ovhg_left_out	= -fx2L - leftWallholeWidth + leftFrameOverhang + not(bShowReveal) * gs_left_oversize

		gs_frame_ovhg_right_in	= fx1R - rightWallholeWidth + rightFrameOverhang + not(bShowReveal) * gs_right_oversize
		gs_frame_ovhg_right_out	= fx2R - rightWallholeWidth + rightFrameOverhang + not(bShowReveal) * gs_right_oversize
	else
		gs_frame_ovhg_left_out	= -fx1L - leftWallholeWidth + leftFrameOverhang + not(bShowReveal) * gs_left_oversize
		gs_frame_ovhg_left_in	= -fx2L - leftWallholeWidth + leftFrameOverhang + not(bShowReveal) * gs_left_oversize

		gs_frame_ovhg_right_out	= fx1R - rightWallholeWidth + rightFrameOverhang + not(bShowReveal) * gs_right_oversize
		gs_frame_ovhg_right_in	= fx2R - rightWallholeWidth + rightFrameOverhang + not(bShowReveal) * gs_right_oversize
	endif

	if NOT(bDWSymbolAtMiddle2) then
		if bLeftCornerFunction & gs_corner_column then
			gs_frame_ovhg_left_out	= bShowReveal * gs_tolerance_left
			gs_frame_ovhg_left_in	= bShowReveal * gs_tolerance_left
		endif
	
		if bRightCornerFunction & gs_corner_column then
			gs_frame_ovhg_right_out	= not(bCornerWindow) * bShowReveal * gs_tolerance_right
			gs_frame_ovhg_right_in	= not(bCornerWindow) * bShowReveal * gs_tolerance_right
		endif
	endif
endif

]]></Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

]]></Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

! =============================================================================
! Localization
! =============================================================================

dim stWallholeCutUI[32]
	stWallholeCutUI[ 1] = `Custom Reveal`
	stWallholeCutUI[ 2] = `Custom Reveal Sizes`
	stWallholeCutUI[ 3] = `Wall Inset`
	stWallholeCutUI[ 4] = `Depth`
	stWallholeCutUI[ 5] = `Custom Reveal`
	stWallholeCutUI[ 6] = `Reveal Type`
	stWallholeCutUI[ 7] = `Show Hidden Parapet on 2D`
	stWallholeCutUI[ 8] = `Automatic Wall Inset Sizes`
	stWallholeCutUI[ 9] = `Hidden Parapet Line Type`
	stWallholeCutUI[10] = `Wall Inset Bottom at`
	stWallholeCutUI[11] = `Width of Wall Inset`
	stWallholeCutUI[12] = `Height of Wall Inset`
	stWallholeCutUI[13] = `Bottom Elevation`
	stWallholeCutUI[14] = `Wall Inset Sizes`
	stWallholeCutUI[15] = `Overhang Side 2`
	stWallholeCutUI[16] = `Overhang Side 1`
	stWallholeCutUI[17] = `Double Splayed Reveal - Reveal Geometry`
	stWallholeCutUI[18] = `Double Splayed Reveal - Mounting Frame Attributes`
	stWallholeCutUI[19] = `Outside Splayed Reveal - Reveal Geometry`
	stWallholeCutUI[20] = `Outside Splayed Reveal - Mounting Frame Attributes`
	stWallholeCutUI[21] = `Mounting Frame`
	stWallholeCutUI[22] = `Edit Jamb by`
	stWallholeCutUI[23] = `Surface`
	stWallholeCutUI[24] = `Cut Line Pen`
	stWallholeCutUI[25] = `Uncut Line Pen`
	stWallholeCutUI[26] = `Cut Fill Type`
	stWallholeCutUI[27] = `Fill Pen`
	stWallholeCutUI[28] = `Fill Background Pen`
	stWallholeCutUI[29] = `Angle and Depth`
	stWallholeCutUI[30] = `Width and Depth`
	stWallholeCutUI[31] = `Set Jamb Depth on`
	stWallholeCutUI[32] = `Bottom Reveal`

dim stCavityClosureUI[60]
	stCavityClosureUI[ 1] = `Cavity Closure`
	stCavityClosureUI[ 2] = `Closure Method`
	stCavityClosureUI[ 3] = `Turn Skin on Side`
	stCavityClosureUI[ 4] = `Number of Outside Skins`
	stCavityClosureUI[ 5] = `Number of Skins to Turn`
	stCavityClosureUI[ 6] = `Number from`
	stCavityClosureUI[ 7] = `Turn at Reveal`
	stCavityClosureUI[ 8] = `Insulation Strip`
	stCavityClosureUI[ 9] = `Strip Thickness`
	stCavityClosureUI[10] = `Contour Pen`
	stCavityClosureUI[11] = `Contour Line Type`
	stCavityClosureUI[12] = `Fill Type`
	stCavityClosureUI[13] = `Fill Pen`
	stCavityClosureUI[14] = `Fill Background Pen`
	stCavityClosureUI[15] = `Profile`
	stCavityClosureUI[16] = `Profile Width`
	stCavityClosureUI[17] = `Turn Plaster`
	stCavityClosureUI[18] = `Outside Face`
	stCavityClosureUI[19] = `Inside Face`
	stCavityClosureUI[20] = `Automatically`
	stCavityClosureUI[21] = `Number of Skins to Turn`
	stCavityClosureUI[22] = `Thickness Limit`
	stCavityClosureUI[23] = `Use Wall Finish Component`
	stCavityClosureUI[24] = `Select Skin to Edit`
	stCavityClosureUI[25] = `Turn-in Skin`
	stCavityClosureUI[26] = `2. Turn-in Thickness`
	stCavityClosureUI[27] = `Custom Thickness`
	stCavityClosureUI[28] = `Hatch Orientation`
	stCavityClosureUI[29] = `Separating Line at Turn-in`
	stCavityClosureUI[30] = `Separating Line Pen`
	stCavityClosureUI[31] = `3. Skin Overhang to Frame Depth`
	stCavityClosureUI[32] = `Consider Skin as Plaster if Thinner Than or Equal To`
	stCavityClosureUI[33] = `Plaster Skin Definition`
	stCavityClosureUI[34] = `Show in 3D`
	stCavityClosureUI[35] = `Note: Plaster is turned outside the wall contour defined in the reveal settings`
	stCavityClosureUI[36] = `Insulation Strip Attributes`
	stCavityClosureUI[37] = `Attributes`
	stCavityClosureUI[38] = `The reveal settings were changed.`
	stCavityClosureUI[39] = ``
	stCavityClosureUI[40] = `1. Consider Skin as Plaster`
	stCavityClosureUI[41] = `Plaster skin is turned outside the wall contour defined in the reveal settings.`
	stCavityClosureUI[42] = `Core skins cannot be turned as plaster.`
	stCavityClosureUI[43] = ``
	stCavityClosureUI[44] = ``
	stCavityClosureUI[45] = `Place Closer to`
	stCavityClosureUI[46] = `from`
	stCavityClosureUI[47] = `Closer Side`
	stCavityClosureUI[48] = `Turn Skin on Side`
	stCavityClosureUI[49] = `Turn Skin to Closer`
	stCavityClosureUI[50] = `1. Skin`
	stCavityClosureUI[51] = `2. Skin`
	stCavityClosureUI[52] = `3. Skin`
	stCavityClosureUI[53] = `4. Skin`
	stCavityClosureUI[54] = `Custom Surface`
	stCavityClosureUI[55] = `Surface`
	stCavityClosureUI[56] = `Distance of Skin from Closer`
	stCavityClosureUI[57] = `Closer Width`
	stCavityClosureUI[58] = `Closer Thickness`
	stCavityClosureUI[59] = `Gap at Outside Skin`
	stCavityClosureUI[60] = `Dimensionable on 2D`

dim stWallholeStructureUI[4]
	stWallholeStructureUI[1] = `Plaster Skin Definition`
	stWallholeStructureUI[2] = `Go to Plaster Skin Settings...`
	stWallholeStructureUI[3] = `Wall Closure Settings`
	stWallholeStructureUI[4] = `Go Back to Closure Settings...`

dim stRevealClusureUITips[31]
	stRevealClusureUITips[ 1] = `Reveal Depth`
	stRevealClusureUITips[ 2] = `Jamb Depth Side 2`
	if gs_reveal_uniform then
		stRevealClusureUITips[ 3] = `Jamb Depth`
		stRevealClusureUITips[ 5] = `Inner Jamb Depth`
		stRevealClusureUITips[11] = `Angle`
		stRevealClusureUITips[15] = `Outer Angle`
	else
		stRevealClusureUITips[ 3] = `Jamb Depth Side 1`
		stRevealClusureUITips[ 5] = `Inner Jamb Depth Side 1`
		stRevealClusureUITips[11] = `Angle Side 1`
		stRevealClusureUITips[15] = `Outer Angle Side 1`
	endif
	stRevealClusureUITips[ 4] = `Inner Jamb Depth Side 2`
	stRevealClusureUITips[ 6] = `Head Height`
	stRevealClusureUITips[ 7] = `Sill Height`
	stRevealClusureUITips[ 8] = `Inner Head Height`
	stRevealClusureUITips[ 9] = `Inner Sill Height`
	stRevealClusureUITips[10] = `Angle Side 2`
	stRevealClusureUITips[12] = `Upper Side Angle`
	stRevealClusureUITips[13] = `Bottom Side Angle`
	stRevealClusureUITips[14] = `Outer Angle Side 2`
	stRevealClusureUITips[16] = `Outer Angle Upper Side`
	stRevealClusureUITips[17] = `Outer Angle Bottom Side`
	stRevealClusureUITips[18] = `Outer Jamb Depth`
	stRevealClusureUITips[19] = `Mounting Frame Width Side 2`
	stRevealClusureUITips[20] = `Mounting Frame Width Side 1`
	stRevealClusureUITips[21] = `Mounting Frame Width Upper`
	stRevealClusureUITips[22] = `Mounting Frame Width Bottom`
	stRevealClusureUITips[23] = `Mounting Frame Thickness`
	stRevealClusureUITips[24] = `Splay Width Side 2`
	stRevealClusureUITips[25] = `Splay Width Side 1`
	stRevealClusureUITips[26] = `Splay Width Upper Side`
	stRevealClusureUITips[27] = `Splay Width Bottom Side`
	stRevealClusureUITips[28] = `Outer Splay Width Side 2`
	stRevealClusureUITips[29] = `Outer Splay Width Side 1`
	stRevealClusureUITips[30] = `Outer Splay Width Upper Side`
	stRevealClusureUITips[31] = `Outer Splay Width Bottom Side`

dim stSillUI[42]
	stSillUI[ 1] = `Sill`
	stSillUI[ 2] = `Sill Type`
	stSillUI[ 3] = `Overhang Left`
	stSillUI[ 4] = `Overhang Right`
	stSillUI[ 5] = `Slip in Depth`
	stSillUI[ 6] = `Is Curved in Curved Walls`
	stSillUI[ 7] = `Sill Oversize`
	stSillUI[ 8] = `Sill Surface`
	stSillUI[ 9] = `Fill Type`
	stSillUI[10] = `Fill Pen`
	stSillUI[11] = `Background Pen`
	stSillUI[12] = `Brick Surface`
	stSillUI[13] = `Mortar`
	stSillUI[14] = `3D Detail Level`
	stSillUI[15] = `Sill Detail Level`
	stSillUI[16] = `Check this option if the parapet height should be measured from the top of the sill.`
	stSillUI[17] = `Brick Thickness`
	stSillUI[18] = `Mortar Thickness`
	stSillUI[19] = `Sill Angle`
	stSillUI[20] = `Sill Thickness`
	stSillUI[21] = `Sill Nosing`
	stSillUI[22] = `Sill Width`
	stSillUI[23] = `Sill Elevation`
	stSillUI[24] = `Sill End Thickness`
	stSillUI[25] = `Sill Drip Length`
	stSillUI[26] = `Sill Drip Width`
	stSillUI[27] = `Section Attributes`
	stSillUI[28] = `Insulation Section Attributes`
	stSillUI[29] = `Uncut Lines Pen`
	stSillUI[30] = ``			! Strings for DACH sill types only
	stSillUI[31] = ``			! Strings for DACH sill types only
	stSillUI[32] = ``			! Strings for DACH sill types only
	stSillUI[33] = ``			! Strings for DACH sill types only
	stSillUI[34] = `Rear Hole Depth`
	stSillUI[35] = `Sill Top Depth`
	stSillUI[36] = ``
	stSillUI[37] = ``
	stSillUI[38] = ``
	stSillUI[39] = ``
	stSillUI[40] = ``
	stSillUI[41] = ``
	stSillUI[42] = `3D/Section Uncut Lines Pen`

dim stBoardUI[16]
	stBoardUI[ 1] = `Board`
	stBoardUI[ 2] = `Overhang Left`
	stBoardUI[ 3] = `Overhang Right`
	stBoardUI[ 4] = `Slip in Depth`
	stBoardUI[ 5] = `Is Curved in Curved Walls`
	stBoardUI[ 6] = `Surface`
	stBoardUI[ 7] = `Fill Type`
	stBoardUI[ 8] = `Fill Pen`
	stBoardUI[ 9] = `Background Pen`
	stBoardUI[10] = `Board Angle`
	stBoardUI[11] = `Board Thickness`
	stBoardUI[12] = `Board Nosing`
	stBoardUI[13] = `In Polygonal Walls`
	stBoardUI[14] = `Board Width`
	stBoardUI[15] = `Section Attributes`
	stBoardUI[16] = `Contour Pen`

dim stCasingUI[21]
	stCasingUI[1] = `Outside Casing`
	stCasingUI[2] = `Inside Casing`
	stCasingUI[3] = `Uniform Casing Widths`
	stCasingUI[4] = `Outside Bottom Casing`
	stCasingUI[5] = `Surface`
	stCasingUI[6] = `Section Attributes`
	stCasingUI[7] = `Fill Type`
	stCasingUI[8] = `Fill Pen`
	stCasingUI[9] = `Background Pen`
	stCasingUI[10] = `Cut Line Pen`
	stCasingUI[11] = `Cut Line Pen on Both Sides`
	stCasingUI[12] = `Casing is not available with trapezoid and curved walls.`
	stCasingUI[13] = `Casing Widths`
	stCasingUI[14] = `Casing Thickness and Offset`
	stCasingUI[15] = `Casing Style`
	stCasingUI[16] = `Cover Outer Wall Surface`
	stCasingUI[17] = `Cover Inner Wall Surface`
	stCasingUI[18] = `Casing is not available with the actual reveal type.`
	stCasingUI[19] = ""
	stCasingUI[20] = `Head Type`
	stCasingUI[21] = `Architrave Capital`

dim stCasingUITooltip[24]
	stCasingUITooltip[1] = `Outside Casing Width Side 1`
	stCasingUITooltip[2] = `Outside Casing Width Side 2`
	stCasingUITooltip[3] = `Outside Casing Width Top`
	stCasingUITooltip[4] = `Outside Casing Width Bottom`
	stCasingUITooltip[5] = `Outside Casing Thickness on Wall`
	stCasingUITooltip[6] = `Outside Casing Thickness in Wallhole`
	stCasingUITooltip[7] = `Outside Casing Offset`
	stCasingUITooltip[8] = `Outside Casing Width`
	stCasingUITooltip[9] = `Outside Top Casing Overhang`
	stCasingUITooltip[10] = `Outside Side Casing Overhang`
	stCasingUITooltip[11] = `Outer Nosing`
	stCasingUITooltip[12] = `Inner Nosing`
	stCasingUITooltip[13] = `Inside Casing Width Side 1`
	stCasingUITooltip[14] = `Inside Casing Width Side 2`
	stCasingUITooltip[15] = `Inside Casing Width Top`
	stCasingUITooltip[16] = `Inside Casing Width Bottom`
	stCasingUITooltip[17] = `Inside Casing Thickness on Wall`
	stCasingUITooltip[18] = `Inside Casing Thickness in Wallhole`
	stCasingUITooltip[19] = `Inside Casing Offset`
	stCasingUITooltip[20] = `Inside Casing Width`
	stCasingUITooltip[21] = `Inside Top Casing Overhang`
	stCasingUITooltip[22] = `Inside Side Casing Overhang`
	stCasingUITooltip[23] = `Architrave Capital Width`
	stCasingUITooltip[24] = `Outside Bottom Casing Overhang`


dim stMasonryArchUI[28]
	stMasonryArchUI[ 1] = `Masonry Arch`
	stMasonryArchUI[ 2] = `Rise`
	stMasonryArchUI[ 3] = `Skewback Angle`
	stMasonryArchUI[ 4] = `Type`
	stMasonryArchUI[ 5] = `Brick Thickness`
	stMasonryArchUI[ 6] = `Mortar Thickness`
	stMasonryArchUI[ 7] = `Keystone`
	stMasonryArchUI[ 8] = `Width`
	stMasonryArchUI[ 9] = `Oversize`
	stMasonryArchUI[10] = `Projection`
	stMasonryArchUI[11] = `Arch on Header`
	stMasonryArchUI[12] = `Niche below Arch`
	stMasonryArchUI[13] = `Surfaces`
	stMasonryArchUI[14] = `Brick`
	stMasonryArchUI[15] = `Mortar`
	stMasonryArchUI[16] = `Keystone`
	stMasonryArchUI[17] = `Section Fill`
	stMasonryArchUI[18] = `Fill Type`
	stMasonryArchUI[19] = `Fill Pen`
	stMasonryArchUI[20] = `Background Pen`
	stMasonryArchUI[21] = `Masonry Arch Height`
	stMasonryArchUI[22] = `Masonry Arch Depth`
	stMasonryArchUI[23] = `Rear Hole Depth`
	stMasonryArchUI[24] = `Masonry Arch Projection`
	stMasonryArchUI[25] = `Masonry Arch Overhang Left`
	stMasonryArchUI[26] = `Masonry Arch Overhang Right`
	stMasonryArchUI[27] = `Distance between Arch and Window`
	stMasonryArchUI[28] = `Pen in 3D`

dim stCustomCornerUI[15]
	stCustomCornerUI[ 1] = `Corner Connection Type`
	stCustomCornerUI[ 2] = `Custom Corner Left`
	stCustomCornerUI[ 3] = `Custom Corner Right`
	stCustomCornerUI[ 4] = `Different Connecting Wall Thickness`
	stCustomCornerUI[ 5] = `Corner Column Width`
	stCustomCornerUI[ 6] = `Corner Column Thickness`
	stCustomCornerUI[ 7] = `Corner Column Projection`
	stCustomCornerUI[ 8] = `Left Corner Angle`
	stCustomCornerUI[ 9] = `Right Corner Angle`
	stCustomCornerUI[10] = `Left Connected Wall Thickness`
	stCustomCornerUI[11] = `Right Connected Wall Thickness`
	stCustomCornerUI[12] = `Corner Miter Line`
	stCustomCornerUI[13] = `This feature doesn't work in curved or trapezoid walls`
	stCustomCornerUI[14] = `Corner Window Function`
	stCustomCornerUI[15] = `Unchecking this option will prevent automatic corner window functions.`

dim stSunShadeUI[59]
	stSunShadeUI[1] = `Sunshade`
	stSunShadeUI[2] = `Number of Panels`
	stSunShadeUI[3] = `Left`
	stSunShadeUI[4] = `Right`
	stSunShadeUI[5] = `Panel Style`
	stSunShadeUI[6] = `Position`
	stSunShadeUI[7] = `3D Opening`
	stSunShadeUI[8] = `3D Opening Angle`
	stSunShadeUI[9] = `Open in 3D`
	stSunShadeUI[10] = `2D Symbol`
	stSunShadeUI[11] = `Divider Width`
	stSunShadeUI[12] = `Horizontal`
	stSunShadeUI[13] = `Vertical`
	stSunShadeUI[14] = `Automatic Shutter Height`
	stSunShadeUI[15] = `Shutter Height`
	stSunShadeUI[16] = `Approximate Board Width`
	stSunShadeUI[17] = `Board Width`
	stSunShadeUI[18] = `Extra Frame`
	stSunShadeUI[19] = `Hole Radius`
	stSunShadeUI[20] = `Holes Horizontal`
	stSunShadeUI[21] = `Holes Vertical`
	stSunShadeUI[22] = `Stacking Direction`
	stSunShadeUI[23] = `Tin Covering`
	stSunShadeUI[24] = `Custom Panel Name`
	stSunShadeUI[25] = `2D Symbol`
	stSunShadeUI[26] = `Line Type`
	stSunShadeUI[27] = `Show Opening Line`
	stSunShadeUI[28] = `Surfaces`
	stSunShadeUI[29] = `Frame`
	stSunShadeUI[30] = `Filling`
	stSunShadeUI[31] = `Rail`
	stSunShadeUI[32] = `Sunshade Attributes`
	stSunShadeUI[33] = `Cut Lines Pen`
	stSunShadeUI[34] = `3D/Section Uncut Lines Pen`
	stSunShadeUI[35] = `Cut Fill Type`
	stSunShadeUI[36] = `Cut Fill Pen`
	stSunShadeUI[37] = `Cut Fill Background Pen`
	stSunShadeUI[38] = `Placement`
	stSunShadeUI[39] = `Box Shape`
	stSunShadeUI[40] = `Box Bottom from Header`
	stSunShadeUI[41] = `Insulation behind Box`
	stSunShadeUI[42] = `Angle of Slats`
	stSunShadeUI[43] = `The Reveal Depth is not large enough to accommodate these settings. Sunshade cannot be generated.`
	stSunShadeUI[44] = `Box`
	stSunShadeUI[45] = `Blades`
	stSunShadeUI[46] = `3D Opening Height`
	stSunShadeUI[47] = `Box Offset Left`
	stSunShadeUI[48] = `Box Offset Right`
	stSunShadeUI[49] = `Box Default Width`
	stSunShadeUI[50] = `Rail Position`
	stSunShadeUI[51] = `Show Casing behind Sunshade`
	stSunShadeUI[52] = `Automatic Shutter Width`
	stSunShadeUI[53] = `Shutter Width`
	stSunShadeUI[54] = `Sunshades are not available with a raised sidelight.`
	stSunShadeUI[55] = `Insulation Attributes`
	stSunShadeUI[56] = `Fill Type`
	stSunShadeUI[57] = `Fill Pen`
	stSunShadeUI[58] = `Fill Background Pen`
	stSunShadeUI[59] = `Include Height in Wallhole Height`

dim stSunshadeTooltip[27]
	stSunshadeTooltip[1] = `Panel Thickness`
	stSunshadeTooltip[2] = `Panel Frame Width`
	stSunshadeTooltip[3] = `Louver Angle`
	stSunshadeTooltip[4] = `Vertical Boards Thickness`
	stSunshadeTooltip[5] = `Filling Thickness`
	stSunshadeTooltip[6] = `Panel Thickness`
	stSunshadeTooltip[7] = `Horizontal Boards Thickness`
	stSunshadeTooltip[8] = `Inner Offset`
	stSunshadeTooltip[9] = `Closing Depth`
	stSunshadeTooltip[10] = `Extra Frame Thickness`
	stSunshadeTooltip[11] = `Extra Frame Width`
	stSunshadeTooltip[12] = `Outside Overhang`
	stSunshadeTooltip[13] = `Inner Panel Width`
	stSunshadeTooltip[14] = `Rail Width`
	stSunshadeTooltip[15] = `Box Top Angle`
	stSunshadeTooltip[16] = `Distance from Wall`
	stSunshadeTooltip[17] = `Rail Depth`
	stSunshadeTooltip[18] = `Box Depth`
	stSunshadeTooltip[19] = `Box Height`
	stSunshadeTooltip[20] = `Blades Width`
	stSunshadeTooltip[21] = `Distance from Header`
	stSunshadeTooltip[22] = `Cover Width`
	stSunshadeTooltip[23] = `Distance from Window`
	stSunshadeTooltip[24] = `Axis from Header`
	stSunshadeTooltip[25] = `Z Frame Width`
	stSunshadeTooltip[26] = `Z Frame Thickness`
	stSunshadeTooltip[27] = `Slat Width`

dim stRevealUI[6]
	stRevealUI[1]		= `Reveal Type`
	stRevealUI[2]		= `The previously selected wall closure type is not available for this reveal.`
	stRevealUI[3]		= `The wall closure was changed.`
	stRevealUI[4]		= `Uniform Jamb Depth`
	stRevealUI[5]		= `Reveal Outside`
	stRevealUI[6]		= `Reveal Inside`

stCutLinePenNote		= `3D/Uncut Line Pen for casing is the same as for the window frame.`

stClosureType			= `Closure Type`

dim st_uiWallOpening[23]
	st_uiWallOpening[1] = `Reveal`
	st_uiWallOpening[2] = `Wall Closure`
	st_uiWallOpening[3] = `Masonry Arch`
	st_uiWallOpening[4] = `Opening Oversizes`
	st_uiWallOpening[5] = `Left`
	st_uiWallOpening[6] = `Right`
	st_uiWallOpening[7] = `Upper`
	st_uiWallOpening[8] = `Lower`
	st_uiWallOpening[9] = `Note: Opening Oversizes don't modify the nominal wall hole sizes.`
	st_uiWallOpening[10] = `Wall Opening Surface`
	st_uiWallOpening[11] = `Same as Wall Edge`
	st_uiWallOpening[12] = `Same as Wall Side`
	st_uiWallOpening[13] = `Wall Inset`
	st_uiWallOpening[14] = `Number of Sides`
	st_uiWallOpening[15] = `Opening Arch Height`
	st_uiWallOpening[16] = `Shorter Radius`
	st_uiWallOpening[17] = `Bottom Height of Arch`
	st_uiWallOpening[18] = `Opening Side in Curved Walls`
	st_uiWallOpening[19] = `Parallel`
	st_uiWallOpening[20] = `Radial`
	st_uiWallOpening[21] = `Frame Thickness`
	st_uiWallOpening[22] = `Curve Resolution`
	st_uiWallOpening[23] = `Shoulder Height`

dim	st_uiFixtureFitting[16]
	st_uiFixtureFitting[1] = `Casing`
	st_uiFixtureFitting[2] = `Outside`
	st_uiFixtureFitting[3] = `Inside`
	st_uiFixtureFitting[4] = `Ganging`
	st_uiFixtureFitting[5] = `Threshold`
	st_uiFixtureFitting[6] = `Sill`
	st_uiFixtureFitting[7] = `Under Sidelight 1`
	st_uiFixtureFitting[8] = `Under Sidelight 2`
	st_uiFixtureFitting[9] = `Under Sidelight`
	st_uiFixtureFitting[10] = `Under Door`
	st_uiFixtureFitting[11] = `Sunshade`
	st_uiFixtureFitting[12] = `Board`
	st_uiFixtureFitting[13] = `Rail`
	st_uiFixtureFitting[14] = `Custom Corner`
	st_uiFixtureFitting[15] = `Right`
	st_uiFixtureFitting[16] = `Left`

! =============================================================================
! Tabpage Structure Definition
! =============================================================================

! call all available page fix IDs
call "ui_tabIDlistHierarchy_m_WMCC" parameters iUITreeStandardType = 11,		! INT_STANDARD_WIN_UI
		returned_parameters iUiID_Root,
							iUiID_Shape,		iParID_Shape,
							iUiID_NominalSizes,	iParID_NominalSizes,
							iUiID_WinSettOpening, iParID_WinSettOpening,
							iUiID_FrameSash,	iParID_FrameSash,
							iUiID_FrameWidth,	iParID_FrameWidth,
							iUiID_SashFrame,	iParID_SashFrame,
							iUiID_SashOption,	iParID_SashOption,
							iUiID_Handle,		iParID_Handle,
							iUiID_VentProfile,	iParID_VentProfile,
							iUiID_OpeningType,	iParID_OpeningType,
							iUiID_OpLines,		iParID_OpLines,
							iUiID_WinSettOpModAttr,	iParID_WinSettOpModAttr,
					
							! Wall Opening group
							iUiID_WallOpening,	iParID_WallOpening,
							iUiID_Reveal,		iParID_Reveal,
							iUiID_Closure,	iParID_Closure,
							iUiID_WallInset,	iParID_WallInset,
							iUiID_MasonryArch,	iParID_MasonryArch,
							iUiID_WallOpModelAttr,	iParID_WallOpModelAttr,
					
							! Fixtures and Fittings group
							iUiID_FixtureFitting,	iParID_FixtureFitting,
							iUiID_CustomCorner,		iParID_CustomCorner,
							iUiID_ThresholdSill,	iParID_ThresholdSill,
							iUiID_Sill,				iParID_Sill,
							iUiID_Board,			iParID_Board,
							iUiID_CasingOut,		iParID_CasingOut,
							iUiID_CasingIn,			iParID_CasingIn,
							iUiID_Shutter,			iParID_Shutter,
							iUiID_BayBowSillBoard,	iParID_BayBowSillBoard,
							iUiID_FixFittingModAttr, iParID_FixFittingModAttr,
					
							iUiID_FloorPlanSection,	iParID_FloorPlanSection,
							iUiID_Descriptions,		iParID_Descriptions

! =============================================================================
! Display actual tabpages
! =============================================================================

ui_current_page gs_ui_current_page

for iTabs = 1 to vardim1(uiUsedPageIDs)
	! --------------------------------------------------------------------------------
	! Independent pages
	! --------------------------------------------------------------------------------
	if uiUsedPageIDs[iTabs][1] = iUiID_NominalSizes then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], `Nominal Sizes and Tolerance`, "uiTab_WindowSizes_flat_WMCC"
		if gs_ui_current_page = iUiID_NominalSizes then
			gosub "pageCallNominalSizes"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_FloorPlanSection then
		! for Show Reveal on Symbol
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_FloorPlanSection then
			gosub "pageCallFloorPlanAndSect"
		endif
	endif

	! --------------------------------------------------------------------------------
	! Window Settings and Opening group
	! --------------------------------------------------------------------------------
	if uiUsedPageIDs[iTabs][1] = iUiID_OpLines then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], `Opening Lines`, "uiTab_DoorOpeningLines_flat_WMCC"
		if gs_ui_current_page = iUiID_OpLines then
			gosub "pageCallOpeningOptions"
		endif
	endif

	! --------------------------------------------------------------------------------
	! Wall Opening group
	! --------------------------------------------------------------------------------
	if uiUsedPageIDs[iTabs][1] = iUiID_WallOpening then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], `Wall Opening`, "uiTab_WindowWallOpening_flat_WMCC"
		if gs_ui_current_page = iUiID_WallOpening then
			gosub "pageCallWallOpening"
		endif
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_Reveal then
		uiUsedPageNames[iTabs][1]	= `Reveal`
		uiUsedPageNames[iTabs][2]	= "uiTab_OpeningReveal_flat_WMCC"
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_Closure then
		uiUsedPageNames[iTabs][1]	= `Wall Closure`
		uiUsedPageNames[iTabs][2]	= "uiTab_OpeningClosure_flat_WMCC"
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_WallInset then
		uiUsedPageNames[iTabs][1]	= `Wall Inset`
		uiUsedPageNames[iTabs][2]	= "uiTab_WindowWallInset_flat_WMCC"
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_MasonryArch then
		uiUsedPageNames[iTabs][1]	= `Masonry Arch`
		uiUsedPageNames[iTabs][2]	= "uiTab_OpeningMasonryArch_flat_WMCC"
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_WallOpModelAttr then
		uiUsedPageNames[iTabs][1]	= `Model Attributes`
		uiUsedPageNames[iTabs][2]	= "uiTab_3DRepr_flat_WMCC"
	endif

	! --------------------------------------------------------------------------------
	! Fixtures and Fittings group
	! --------------------------------------------------------------------------------
	if uiUsedPageIDs[iTabs][1] = iUiID_FixtureFitting then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], `Fixtures and Fittings`, "uiTab_WindowFixturesFittings_flat_WMCC"
		if gs_ui_current_page = iUiID_FixtureFitting then
			gosub "pageCallFixtureFitting"
		endif
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_Sill then
		uiUsedPageNames[iTabs][1]	= `Sill`
		uiUsedPageNames[iTabs][2]	= "uiTab_WindowSill_flat_WMCC"
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_Board then
		uiUsedPageNames[iTabs][1]	= `Board`
		uiUsedPageNames[iTabs][2]	= "uiTab_WindowBoard_flat_WMCC"
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_CasingOut then
		uiUsedPageNames[iTabs][1]	= `Casing Outside`
		uiUsedPageNames[iTabs][2]	= "uiTab_DOutsideCasing_flat_WMCC"
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_CasingIn then
		uiUsedPageNames[iTabs][1]	= `Casing Inside`
		uiUsedPageNames[iTabs][2]	= "uiTab_DInsideCasing_flat_WMCC"
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_Shutter then
		uiUsedPageNames[iTabs][1]	= `Sunshade`
		uiUsedPageNames[iTabs][2]	= "uiTab_OpeningSunshade_flat_WMCC"
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_CustomCorner then
		uiUsedPageNames[iTabs][1]	= `Custom Corner`
		uiUsedPageNames[iTabs][2]	= "uiTab_WindowCustomCorner_flat_WMCC"
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_FixFittingModAttr then
		uiUsedPageNames[iTabs][1]	= `Model Attributes`
		uiUsedPageNames[iTabs][2]	= "uiTab_3DRepr_flat_WMCC"
	endif
next iTabs


gosub "pageCallWallholeStructure"
gosub "pageCallWallholeFraming"


! --------------------------------------------------------------------------------
! Image links for archive
! --------------------------------------------------------------------------------
file_dependence "uiTab_WindowSizes_flat_WMCC"
file_dependence "uiTab_DoorOpeningLines_flat_WMCC"
file_dependence "uiTab_WindowWallOpening_flat_WMCC"
file_dependence "uiTab_DOutsideCasing_flat_WMCC"
file_dependence "uiTab_DInsideCasing_flat_WMCC"
file_dependence "uiTab_WindowSill_flat_WMCC"
file_dependence "uiTab_WindowBoard_flat_WMCC"
file_dependence "uiTab_WindowCustomCorner_flat_WMCC"
file_dependence "uiTab_WindowWallInset_flat_WMCC"
file_dependence "uiTab_OpeningSunshade_flat_WMCC"
file_dependence "uiTab_OpeningReveal_flat_WMCC"
file_dependence "uiTab_OpeningClosure_flat_WMCC"
file_dependence "uiTab_OpeningMasonryArch_flat_WMCC"
file_dependence "uiTab_WindowFixturesFittings_flat_WMCC"
file_dependence "uiTab_3DRepr_flat_WMCC"

! =============================================================================
end	bEnableParapetInset,	! for ui_FloorPlanSection_m
	bEnableMasonryArch,
	bEnableSill,
	bEnableBoard,
	bEnableThreshold,
	bEnableCasing,
	bEnableShutter
! =============================================================================


! --------------------------------------------------------------------------------
! Fixtures and Fittings
! --------------------------------------------------------------------------------
"pageCallFixtureFitting":
	call "ui_FixturesFittings_m_WMCC" parameters ac_cw_function = ac_cw_function,
									bEnableCasing			= bEnableCasing,
									bEnableSill				= bEnableSill,
									bEnableThreshold		= 0,
									bEnableShutter			= bEnableShutter,
									bEnableBoard			= bEnableBoard,
									bEnableCustomCornerLeft	= bEnableCustomCornerLeft,
									bEnableCustomCornerRight= bEnableCustomCornerRight,
									bForceToShowThresholdUI	= 0,
									iWindowShape			= iWindowShape,
									isWindow				= 1,
									isEmptyOpening			= 0,
									iUiID_CasingOut			= iUiID_CasingOut,
									iUiID_CasingIn			= iUiID_CasingIn,
									iUiID_Sill				= iUiID_Sill,
									iUiID_Shutter			= iUiID_Shutter,
									iUiID_Board				= iUiID_Board,
									iUiID_CustomCorner		= iUiID_CustomCorner,
									stSillTypes				= stSillTypes,
									stSunShadeTypes			= stSunShadeTypes,
									st_uiFixtureFitting		= st_uiFixtureFitting
return


! --------------------------------------------------------------------------------
! Wall Opening
! --------------------------------------------------------------------------------
"pageCallWallOpening":
	call "ui_WallOpening_m_WMCC" parameters iWindowShape		= iWindowShape,
									isWindow			= 1,
									isEmptyOpening		= 0,
									iRevealType			= iRevealType,
									gs_RevealTypeEnable	= gs_RevealTypeEnable,
									bEnableParapetInset = bEnableParapetInset,
									bEnableMasonryArch	= bEnableMasonryArch,
									bEnableCavityClosure= bEnableCavityClosure,
									iUiID_Reveal		= iUiID_Reveal,
									iUiID_Closure		= iUiID_Closure,
									iUiID_WallInset		= iUiID_WallInset,
									iUiID_MasonryArch	= iUiID_MasonryArch,
									st_uiWallOpening	= st_uiWallOpening,
									stRevealTypes		= stRevealTypes,
									stClosureTypes		= stClosureTypes,
									gs_reveal_type_int	= gs_reveal_type_int,
									gs_wido_sill		= gs_wido_sill,
									AC_wido_sill		= AC_wido_sill,
									gs_closure_type_int	= gs_closure_type_int,
									bMasonryArch		= bMasonryArch,
									gs_masonry_arch_int	= gs_masonry_arch_int,
									gs_left_oversize	= gs_left_oversize,
									gs_right_oversize	= gs_right_oversize,
									gs_upper_oversize	= gs_upper_oversize,
									gs_lower_oversize	= gs_lower_oversize,
									gs_parapet_wall_inset = gs_parapet_wall_inset
return



! --------------------------------------------------------------------------------
! Nominal Sizes and Tolerance
! --------------------------------------------------------------------------------
"pageCallNominalSizes":

	call "ui_NominalSizesWindow_m_WMCC" parameters	bCornerWindow				= bCornerWindow,
											isVentilationOverFrame		= isVentilationOverFrame,
											bLeftCornerFunction			= bLeftCornerFunction,
											bRightCornerFunction		= bRightCornerFunction,
											gs_wallhole_nominal			= gs_wallhole_nominal,
											gs_reveal_nominal			= gs_reveal_nominal,
											gs_unit_nominal				= gs_unit_nominal,
											gs_stack_left				= gs_stack_left,
											gs_stack_right				= gs_stack_right

return



! --------------------------------------------------------------------------------
! Masonry Arch, Cavity Closure, Reveal
! --------------------------------------------------------------------------------
"pageCallWallholeStructure":
	call "WallholeStructure_WMCC" parameters all A = A,
				iRevealType					= iRevealType,
				iSillRevealType				= iSillRevealType,
				iBoardRevealType			= iBoardRevealType,
				iClosureType				= iClosureType,
			! --- Function Control Parameters
				bEnablePlasterLeftIn		= bEnablePlasterLeftIn,
				bEnablePlasterLeftOut		= bEnablePlasterLeftOut,
				bEnablePlasterRightIn		= bEnablePlasterRightIn,
				bEnablePlasterRightOut		= bEnablePlasterRightOut,
				bEnableParapetInset			= bEnableParapetInset,
				bEnableMasonryArch			= bEnableMasonryArch,
				bEnableFaschen				= bEnableFaschen,
				gs_RevealTypeEnable			= gs_RevealTypeEnable,
				gs_ClosureTypeEnable		= gs_ClosureTypeEnable,
			! --- Macro Control Parameters
				isWindow					= 1,
				iWindowShape				= iWindowShape,
				iParapetSize				= iParapetSize,
				iParapetBottom				= iParapetBottom,
			! --- Corner Functions
				bLeftCornerFunction			= bLeftCornerFunction,
				leftCornerAngle				= leftCornerAngle,
				leftConnWallThk				= leftConnWallThk,
				bRightCornerFunction		= bRightCornerFunction,
				rightCornerAngle			= rightCornerAngle,
				rightConnWallThk			= rightConnWallThk,
			! --- Casing
				bDrawOutsideTrim		= bDrawOutsideTrim,
				bDrawInsideTrim			= bDrawInsideTrim,
			! --- String Resources
				stRevealTypes					= stRevealTypes,
				stRevealTypesBottom				= stRevealTypesBottom,
				stClosureTypes					= stClosureTypes,
				stWallContourLine				= stWallContourLine,
				stCavityClosureSide				= stCavityClosureSide,
				stCavityClosureTurnDir			= stCavityClosureTurnDir,
				stDutchClosureToSide			= stDutchClosureToSide,
				stCavityClosureEditedJambSide	= stCavityClosureEditedJambSide,
				stCavityClosureEditedWallSide	= stCavityClosureEditedWallSide,
				stCavityClosureEditedSkinNumber	= stCavityClosureEditedSkinNumber,
				stCavityClosureTurnInThickness	= stCavityClosureTurnInThickness,
				stCavityClosureHatchOrientation	= stCavityClosureHatchOrientation,
				stMasonryArchTypes				= stMasonryArchTypes,
				stMasonryArchStructure			= stMasonryArchStructure,
				stWallholeCutUI					= stWallholeCutUI,
				stCavityClosureUI				= stCavityClosureUI,
				stWallholeStructureUI			= stWallholeStructureUI,
				stMasonryArchUI					= stMasonryArchUI,
				stRevealClusureUITips			= stRevealClusureUITips,
				stRevealUI						= stRevealUI,
				stSillUI						= stSillUI,
				stClosureType					= stClosureType,
				stParapetSize					= stParapetSize,
				stParapetBottom					= stParapetBottom,
				uiUsedPageIDs					= uiUsedPageIDs,
				uiUsedPageNames					= uiUsedPageNames
return



! --------------------------------------------------------------------------------
! Sill, Board, Casing
! --------------------------------------------------------------------------------
"pageCallWallholeFraming":
	call "WallholeFraming_WMCC" parameters all A = A,
				iRevealType					= iRevealType,
				leftWallFrameRevealPnts 	= leftWallFrameRevealPnts,
				rightWallFrameRevealPnts	= rightWallFrameRevealPnts,
				iRevealPointsIdx			= iRevealPointsIdx,
			! --- Function Control Parameters
				bEnableSill				= bEnableSill,
				bEnableBoard			= bEnableBoard,
				bEnableThreshold		= bEnableThreshold,
				bEnableCasing			= bEnableCasing,
				bEnableShutter			= bEnableShutter,
				bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
				bEnableCustomCornerRight	= bEnableCustomCornerRight,
				bShowCornerMitreLineUI	= bShowCornerMitreLineUI,
				gs_CasingOutTypeEnable	= gs_CasingOutTypeEnable,
				gs_CasingInTypeEnable	= gs_CasingInTypeEnable,
				bBoardInPolyWall		= bBoardInPolyWall,
				bOpeningDirection		= bOpeningDirection,
			! --- Macro Control Parameters
				isWindow				= 1,
				isEmptyOpening			= 0,
				gs_casing_nor			= 0,
				gs_casing_che			= 0,
			! --- Corner Functions
				bLeftCornerFunction		= bLeftCornerFunction,
				leftCornerAngle			= leftCornerAngle,
				leftConnWallThk			= leftConnWallThk,
				bRightCornerFunction	= bRightCornerFunction,
				rightCornerAngle		= rightCornerAngle,
				rightConnWallThk		= rightConnWallThk,
			! --- String Resources
				stSillTypes				= stSillTypes,
				stCasingType			= stCasingType,
				stCasingHeadType		= stCasingHeadType,
				stArchitraveCapitalType	= stArchitraveCapitalType,
				stSillUI				= stSillUI,
				stBoardUI				= stBoardUI,
				stCasingUI				= stCasingUI,
				stCasingUITooltip		= stCasingUITooltip,
				stBsilldetlevel			= stBsilldetlevel,
				stCornerConnType		= stCornerConnType,
				stCustomCornerUI		= stCustomCornerUI,
				stCutLinePenNote		= stCutLinePenNote,

				stSunShadeTypes			= stSunShadeTypes,
				stShutterPanelPos		= stShutterPanelPos,
				stFoldingShutterStacking= stFoldingShutterStacking,
				stSlidingShutterCover	= stSlidingShutterCover,
				stShutterPanelTypes		= stShutterPanelTypes,
				stShutRollPlacement		= stShutRollPlacement,
				stShutRollBoxType		= stShutRollBoxType,
				stShutRollBoxDefaultSize= stShutRollBoxDefaultSize,
				stShutRollRailPos		= stShutRollRailPos,
				stShutLamPlacement		= stShutLamPlacement,
				stShutLamRailPos		= stShutLamRailPos,
				stSunShadeUI			= stSunShadeUI,
				stSunshadeTooltip		= stSunshadeTooltip,

				bEnableOutsideCasingSWEUI	= bittest(gs_CasingOutTypeEnable, 1),
				bEnableInsideCasingSWEUI	= bittest(gs_CasingInTypeEnable, 1),
				uiUsedPageIDs			= uiUsedPageIDs,
				uiUsedPageNames			= uiUsedPageNames
return



! --------------------------------------------------------------------------------
! Opening Lines
! --------------------------------------------------------------------------------
"pageCallOpeningOptions":
	call "OpeningOptions_WMCC" parameters	bWindow					= 1,
										iLineShapeCategory		= iLineShapeCategory,
										iLineShapeSwingEnable	= iLineShapeSwingEnable,
										bOverride_MVO_2D		= bOverride_MVO_2D,
										or_iSwingType			= or_iSwingType,
										or_iSlidingType			= or_iSlidingType,
										bOverride_MVO_3D		= bOverride_MVO_3D,
										or_bOplines3d			= or_bOplines3d,
										or_iOplineStyle			= or_iOplineStyle,
										b2ColumnsOnOplineUI		= b2ColumnsOnOplineUI,
										bHideOplineStyle		= bHideOplineStyle,
										bLockOplineStyle		= bLockOplineStyle,
										bDisable2DOverride		= bDisable2DOverride,
										bDisable3DOverride		= bDisable3DOverride,
										bDisableSwingType		= bDisableSwingType,
										iOpeningParamType		= iOpeningParamType,
										bEnableSecondaryOpLineTypes	= 0

return


! --------------------------------------------------------------------------------
! Floor Plan and Section
! --------------------------------------------------------------------------------
"pageCallFloorPlanAndSect":
	if bCanHaveReveal then
		itemID = 2
		ui_listitem itemID, iUiID_FloorPlanSection, "iRevealOnSymbol", 	0,	"",			`Show Reveal on Symbol`	: itemID = itemID + 1
	endif
return

]]></Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[


! =============================================================================
! Hide All parameters list
! =============================================================================
!!hideparameter all

! =============================================================================
! Dimension Link
! =============================================================================

! Unit Size -> Wallhole Size difference
wallholeDLeft	=  gs_tolerance_left
wallholeDRight	= (gs_tolerance_right) * not(bCornerWindow)
wallholeDUpper	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame + _includeBoxHeight
wallholeDLower	= gs_tolerance_lower

! Reveal Size -> Wallhole Size difference
revealDLeft		= gs_reveal_left
revealDRight	= gs_reveal_right
revealDUpper	= gs_reveal_top + _includeBoxHeight
revealDLower	= gs_reveal_bottom


! =============================================================================
! Wallhole Structure
! =============================================================================

bForceShowWContParamsOutside = (bDrawSill  | bDrawOutsideTrim)
bForceShowWContParamsInside	 = (bDrawBoard | bDrawInsideTrim)


if iWindowType = WIN_MultisashHorizontal then
	if gs_repeat_modules then
		if gs_axis_lock | GLOB_MODPAR_NAME = "gs_axis_distance" | GLOB_MODPAR_NAME = "gs_repeat_modules" then
			if GLOB_MODPAR_NAME = "A" | GLOB_MODPAR_NAME = "B" then
				unitWidth = A
				if gs_wallhole_nominal then
					unitWidth = A - wallholeDLeft - wallholeDRight
				endif
				if gs_reveal_nominal then
					unitWidth = A - wallholeDLeft - wallholeDRight + revealDLeft + revealDRight
				endif

				gs_repeat_modules_number = int(unitWidth/gs_axis_distance)
				parameters gs_repeat_modules_number = gs_repeat_modules_number
			else
				A = gs_frame_width_left + gs_frame_width - MullionWidth + gs_axis_distance * gs_repeat_modules_number
				if gs_wallhole_nominal then
					A = A + wallholeDLeft + wallholeDRight
				endif
				if gs_reveal_nominal then
					A = A + wallholeDLeft + wallholeDRight - revealDLeft - revealDRight
				endif

				parameters A = A
			endif

			lock	"ac_wallhole_width",
					"ac_reveal_width",
					"ac_unit_width"
		else
			unitWidth = A
			if gs_wallhole_nominal then
				unitWidth = A - wallholeDLeft - wallholeDRight
			endif
			if gs_reveal_nominal then
				unitWidth = A - wallholeDLeft - wallholeDRight + revealDLeft + revealDRight
			endif

			gs_axis_distance = (unitWidth - gs_frame_width_left - gs_frame_width + MullionWidth)/gs_repeat_modules_number
			parameters gs_axis_distance = gs_axis_distance
		endif
	else
		if GLOB_MODPAR_NAME = "gs_repeat_modules" then
			A = gs_axis_distance
			if gs_wallhole_nominal then
				A = A + wallholeDLeft + wallholeDRight
			endif
			if gs_reveal_nominal then
				A = A + wallholeDLeft + wallholeDRight - revealDLeft - revealDRight
			endif

			parameters A = A
		else
			parameters gs_axis_distance = ac_unit_width
		endif
	endif
endif

if iWindowType = WIN_MultisashVertical then
	if gs_repeat_modules then
		if gs_axis_lock | GLOB_MODPAR_NAME = "gs_axis_distance" | GLOB_MODPAR_NAME = "gs_repeat_modules" then
			if GLOB_MODPAR_NAME = "A" | GLOB_MODPAR_NAME = "B" then
				unitHeight = B
				if gs_wallhole_nominal then
					unitHeight = B - wallholeDUpper - wallholeDLower
				endif
				if gs_reveal_nominal then
					unitHeight = B - wallholeDUpper - wallholeDLower + revealDUpper + revealDLower
				endif

				gs_repeat_modules_number = int(unitHeight/gs_axis_distance)
				parameters gs_repeat_modules_number = gs_repeat_modules_number
			else
				B = gs_frame_width_upper + gs_frame_width_lower - TransomWidth + gs_axis_distance * gs_repeat_modules_number
				if gs_wallhole_nominal then
					B = B + wallholeDUpper + wallholeDLower
				endif
				if gs_reveal_nominal then
					B = B + wallholeDUpper + wallholeDLower - revealDUpper - revealDLower
				endif

				parameters B = B
			endif

			lock	"ac_wallhole_height",
					"ac_reveal_height",
					"ac_unit_height"
		else
			unitHeight = B
			if gs_wallhole_nominal then
				unitHeight = B - wallholeDUpper - wallholeDLower
			endif
			if gs_reveal_nominal then
				unitHeight = B - wallholeDUpper - wallholeDLower + revealDUpper + revealDLower
			endif

			gs_axis_distance = (unitHeight - gs_frame_width_upper - gs_frame_width_lower + TransomWidth)/gs_repeat_modules_number
			parameters gs_axis_distance = gs_axis_distance
		endif
	else
		if GLOB_MODPAR_NAME = "gs_repeat_modules" then
			B = gs_axis_distance
			if gs_wallhole_nominal then
				B = B + wallholeDUpper + wallholeDLower
			endif
			if gs_reveal_nominal then
				B = B + wallholeDUpper + wallholeDLower - revealDUpper - revealDLower
			endif

			parameters B = B
		else
			parameters gs_axis_distance = ac_unit_height
		endif
	endif
endif


call "WallholeStructure_WMCC" parameters all A = A, B = B,
	refWidth 				= refWidth,
	leftWidth				= leftWidth,
	rightWidth				= rightWidth,
	openingHeight			= openingHeight,
	iRevealType				= iRevealType,
	iSillRevealType			= iSillRevealType,
	iBoardRevealType		= iBoardRevealType,
	leftWallholeRevealPnts	= leftWallholeRevealPnts,
	rightWallholeRevealPnts	= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	iClosureType			= iClosureType,
! --- Coustom CC Settings ---
	gs_custom_cc_turn_in		= gs_custom_cc_turn_in,
	iCustomCCThicknessType = iCustomCCThicknessType,
	iCustomCCOrientation = iCustomCCOrientation,
	gs_custom_cc_separator		= gs_custom_cc_separator,
	iCustomCCEditJambSide = iCustomCCEditJambSide,
	iCustomCCEditWallSide = iCustomCCEditWallSide,
	iCustomCCEditSkin = iCustomCCEditSkin,
	gs_custom_cc_array_left		= gs_custom_cc_array_left,
	gs_custom_cc_array_right	= gs_custom_cc_array_right,
	gs_custom_cc_thickness		= gs_custom_cc_thickness,
	gs_custom_cc_overhang		= gs_custom_cc_overhang,
	gs_custom_cc_separator_pen	= gs_custom_cc_separator_pen,
! --- Connections ---
	gs_stack_left			= gs_stack_left,
	gs_stack_right			= gs_stack_right,
	gs_stack_top			= gs_stack_top,
! --- Function Control Parameters
	bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
	bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
	bEnablePlasterRightIn	= bEnablePlasterRightIn,
	bEnablePlasterRightOut	= bEnablePlasterRightOut,
	bEnablePlasterTopIn		= bEnablePlasterTopIn,
	bEnablePlasterTopOut	= bEnablePlasterTopOut,
	bEnablePlasterBottomIn	= bEnablePlasterBottomIn,
	bEnablePlasterBottomOut	= bEnablePlasterBottomOut,
	bEnableParapetInset		= bEnableParapetInset,
	bEnableMasonryArch		= bEnableMasonryArch,
	bEnableFaschen			= bEnableFaschen,
	gs_RevealTypeEnable		= gs_RevealTypeEnable,
	gs_ClosureTypeEnable	= gs_ClosureTypeEnable,
	bEnableWallContourHiddenLine	= bEnableWallContourHiddenLine,
! --- Macro Control Parameters
	isWindow				= 1,
	iWindowShape			= iWindowShape,
	defaultSillDepth		= defaultSillDepth,
	bForceShowWContParamsOutside	= bForceShowWContParamsOutside,
	bForceShowWContParamsInside		= bForceShowWContParamsInside,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
	leftCornerAngle			= leftCornerAngle,
	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
	rightCornerAngle		= rightCornerAngle,
	rightConnWallThk		= rightConnWallThk,
! --- Casing
	bDrawOutsideTrim		= bDrawOutsideTrim,
	bDrawInsideTrim			= bDrawInsideTrim,
! --- sunShade wallhole size modification
	includeBoxHeight		= _includeBoxHeight,
! --- ventialtion over frame wallhole size modification
	includeVentilationHeight		= VentilationProfileHeight * isVentilationOverFrame,
! --- String Resources
	stRevealTypes					= stRevealTypes,
	stRevealTypesBottom				= stRevealTypesBottom,
	stRevealAngleEditBy				= stRevealAngleEditBy,
	stClosureTypes					= stClosureTypes,
	stWallContourLine				= stWallContourLine,
	stCavityClosureSide				= stCavityClosureSide,
	stCavityClosureTurnDir			= stCavityClosureTurnDir,
	stDutchClosureToSide			= stDutchClosureToSide,
	stCavityClosureEditedJambSide	= stCavityClosureEditedJambSide,
	stCavityClosureEditedWallSide	= stCavityClosureEditedWallSide,
	stCavityClosureEditedSkinNumber	= stCavityClosureEditedSkinNumber,
	stCavityClosureTurnInThickness	= stCavityClosureTurnInThickness,
	stCavityClosureHatchOrientation	= stCavityClosureHatchOrientation,
	stMasonryArchTypes				= stMasonryArchTypes,
	stMasonryArchStructure			= stMasonryArchStructure,
	gs_faschen_type					= gs_faschen_type


! =============================================================================
! Sunshade enable parameters
! =============================================================================

temp_gs_sunShade_typeEnable = gs_sunShade_typeEnable

! Avalilable sunshade types:
! 1 - None (0)
! 2 - Decorative shutter (1)
! 4 - Opening shutter (2)
! 8 - Folding to Reveal shutter (3)
! 16 - Folding to Wall Face shutter (4)
! 32 - Sliding shutter (5)
! 64 - Rolling shutter (6)
! 128 - External venetian (7)
! 256 - Venetian in lintel (8)

gs_sunShade_typeEnable = 2 + 4 + 8 + 16 + 32 + 64

if bLeftCornerFunction | gs_stack_left | bRightCornerFunction | gs_stack_right then
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 3, 0)		! Folding to Reveal
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 4, 0)		! Folding to Wall Face
endif

if (bLeftCornerFunction | gs_stack_left) & (bRightCornerFunction | gs_stack_right) then
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 1, 0)		! Decorative
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 2, 0)		! Opening
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 5, 0)		! Sliding
endif

if (bRightCornerFunction & rightCornerAngle > 180) | \
	(bLeftCornerFunction & leftCornerAngle > 180) then
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 6, 0)		! Rolling
endif

if iWindowShape > 0 then			! not rectangular
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 3, 0)		! Folding to Reveal
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 4, 0)		! Folding to Wall Face
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 6, 0)		! Rolling
endif

if gs_sunShade_typeDisableByObject > 0 then
	for i = 1 to 8
		if bittest (gs_sunShade_typeDisableByObject, i) then gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable, i, 0)
	next i
endif

gs_sunShade_bChangeEnabledTypes = 0
if abs(gs_sunShade_typeEnable - temp_gs_sunShade_typeEnable) > EPS then gs_sunShade_bChangeEnabledTypes = 1

if gs_sunShade_typeEnable = 0 then
	gs_sunShade_typeEnable = 2		! a default value is needed to UI in this case too

	bSunshade = 0
	parameters bSunshade = bSunshade
	lock "bSunshade"
endif

! Available placement types
! 1 - On facade(0)
! 2 - On window(1)
! 4 - Behind facade(2)

gs_shutRoll_placementEnable	= 1 + 2 + 4

if bLeftCornerFunction | bRightCornerFunction then gs_shutRoll_placementEnable = bitset(gs_shutRoll_placementEnable, 2, 0)	! On Facade

gs_shutLam_placementEnable	= 1 + 2 + 4

if gs_sunShade_iType = 6 and gs_shutRoll_iPlacement = 3 then
	if iRevealType = REVEAL_POSITIVE | iRevealType = REVEAL_SLANTED | iRevealType = REVEAL_HISTORIC | (iRevealType = REVEAL_DOUBLE & (iSillRevealType = 2 | gs_reveal_doubleOuterTypeInt = 3)) then
		values "gs_shutRoll_distFromHead" range [(gs_reveal_uniform) * gs_reveal_right + not(gs_reveal_uniform) * gs_reveal_top, )
	else
		values "gs_shutRoll_distFromHead" range [0, )
	endif
endif


! =============================================================================
! Wallhole Framing
! =============================================================================

lock "gs_sill_pen_3D", "gs_board_pen_3D"
hideparameter "gs_sill_pen_3D", "gs_board_pen_3D"

call "WallholeFraming_WMCC" parameters all A = A,
	iRevealType				= iRevealType,
	leftWallFrameRevealPnts = leftWallFrameRevealPnts,
	rightWallFrameRevealPnts= rightWallFrameRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
! --- Function Control Parameters
	bEnableSill				= bEnableSill,
	bEnableBoard			= bEnableBoard,
	bEnableThreshold		= bEnableThreshold,
	bEnableCasing			= bEnableCasing,
	bEnableShutter			= bEnableShutter,
	bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
	bEnableCustomCornerRight	= bEnableCustomCornerRight,
	gs_SillTypeEnable		= gs_SillTypeEnable,
	bBoardInPolyWall		= bBoardInPolyWall,
! --- Macro Control Parameters
	isWindow				= 1,
	iWindowShape			= iWindowShape,
	gs_casing_nor			= 0,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
	iCornerConnTypeLeft = iCornerConnTypeLeft,
	leftCornerAngle			= leftCornerAngle,
	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
	iCornerConnTypeRight = iCornerConnTypeRight,
	rightCornerAngle		= rightCornerAngle,
	rightConnWallThk		= rightConnWallThk,
! --- Sunshade parameters
	gs_sunShade_typeEnable	= gs_sunShade_typeEnable,
	gs_sunShade_bChangeEnabledTypes	= gs_sunShade_bChangeEnabledTypes,
	gs_shutRoll_placementEnable	= gs_shutRoll_placementEnable,
	gs_shutLam_placementEnable	= gs_shutLam_placementEnable,
! --- turn plaster
	gs_turn_plaster_show_3D	= gs_turn_plaster_show_3D,
	thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
	thkPlasterAtSillRight	= thkPlasterAtSillRight,
	thkPlasterAtSillTop		= thkPlasterAtSillTop,
	thkPlasterAtSillBottom	= thkPlasterAtSillBottom,
	thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
	thkPlasterAtBoardTop	= thkPlasterAtBoardTop,
	thkPlasterAtBoardBottom	= thkPlasterAtBoardBottom,
! --- String Resources
	stSillTypes				= stSillTypes,
	stCasingType			= stCasingType,
	stCasingHeadType		= stCasingHeadType,
	stArchitraveCapitalType	= stArchitraveCapitalType,
	stBsilldetlevel 		= stBsilldetlevel,
	stBoardInPolyWall		= stBoardInPolyWall,
	stCornerConnType		= stCornerConnType,

	stSunShadeTypes			= stSunShadeTypes,
	stShutterPanelPos		= stShutterPanelPos,
	stFoldingShutterStacking= stFoldingShutterStacking,
	stSlidingShutterCover	= stSlidingShutterCover,
	stShutterPanelTypes		= stShutterPanelTypes,
	stShutRollPlacement		= stShutRollPlacement,
	stShutRollBoxType		= stShutRollBoxType,
	stShutRollBoxDefaultSize= stShutRollBoxDefaultSize,
	stShutRollRailPos		= stShutRollRailPos,
	stShutLamPlacement		= stShutLamPlacement,
	stShutLamRailPos		= stShutLamRailPos


! =============================================================================
! Parapet
! =============================================================================

if bEnableParapetInset then
	values "gs_parapet_bottom_st" stParapetBottom
	values "iParapetBottom" PARAPET_BOTTOM_CURRENTSTORY, PARAPET_BOTTOM_WALLBASE

	if GLOB_MODPAR_NAME = "gs_parapet_bottom_st" then
		iParapetBottom = PARAPET_BOTTOM_CURRENTSTORY
		for i = 2 to vardim1(stParapetBottom)
			if gs_parapet_bottom_st = stParapetBottom[i] then
				iParapetBottom = i
				i = vardim1(stParapetBottom)
			endif
		next i
		parameters iParapetBottom = iParapetBottom
	else
		gs_parapet_bottom_st = stParapetBottom[min(max(1,iParapetBottom),vardim1(stParapetBottom))]
		parameters gs_parapet_bottom_st = gs_parapet_bottom_st
	endif

	if not(gs_parapet_wall_inset) then
		lock "gs_parapet_bottom_st", "iParapetBottom"
		hideparameter "gs_parapet_bottom_st", "iParapetBottom"
	endif

	values "gs_parapet_sizes_st" stParapetSize
	values "iParapetSize" PARAPET_SIZE_AUTO, PARAPET_SIZE_SYMM, PARAPET_SIZE_ASYMM

	if GLOB_MODPAR_NAME = "gs_parapet_sizes_st" then
		iParapetSize = PARAPET_SIZE_AUTO
		for i = 2 to vardim1(stParapetSize)
			if gs_parapet_sizes_st = stParapetSize[i] then
				iParapetSize = i
				i = vardim1(stParapetSize)
			endif
		next i
		parameters iParapetSize = iParapetSize
	else
		gs_parapet_sizes_st = stParapetSize[min(max(1,iParapetSize),vardim1(stParapetSize))]
		parameters gs_parapet_sizes_st = gs_parapet_sizes_st
	endif

	if iParapetSize = PARAPET_SIZE_ASYMM then
		lock "gs_parapet_width"
		hideparameter "gs_parapet_width"
	else
		if iParapetSize = PARAPET_SIZE_AUTO then
			lock	"gs_parapet_width",
					"gs_parapet_height"
			hideparameter	"gs_parapet_width",
							"gs_parapet_height"
		endif
		lock "gs_parapet_left", "gs_parapet_right"
		hideparameter "gs_parapet_left", "gs_parapet_right"
	endif
endif


! =============================================================================
! Demolition / New construction
! =============================================================================

if gs_bFills = 0 then
	lock "iTypeDemolitionFill"
endif

if gs_bShowDemolitionPar then
	values{2} "iTypeDemolitionFill" 	RENOVATION_FILL_EXIST, `None`,
										RENOVATION_FILL_DEMOLISHED, `Demolition`,
										RENOVATION_FILL_NEW, `New Construction - Empty Symbol`,
										RENOVATION_FILL_NEW_FULL, `New Construction - Full Symbol`

	if iTypeDemolitionFill <> RENOVATION_FILL_EXIST then
		lock "gs_wallhole_fill"
		lock "gs_wallhole_pen_fg"
		lock "gs_wallhole_pen_bg"
	endif
endif


! =============================================================================
! Detail Level
! =============================================================================

values{2} "iDetLevel2D" \
	DETLEVEL_2D_MVO,	`by MVO`,
	DETLEVEL_2D_SCALE,	`Scale Sensitive`,
	DETLEVEL_2D_OFF,	`Off`,
	DETLEVEL_2D_10,		"1:10",
	DETLEVEL_2D_50,		"1:50",
	DETLEVEL_2D_100,	"1:100"!,
!!	DETLEVEL_2D_200,	"1:200"

values{2} "iDetLevel3D" \
!!	DETLEVEL_3D_MVO,	`by MVO`,
!	DETLEVEL_3D_SCALE,	`Scale Sensitive`,
	DETLEVEL_3D_OFF,	`Off`,
	DETLEVEL_3D_10,		"1:10",
	DETLEVEL_3D_50,		"1:50",
	DETLEVEL_3D_100,	"1:100"

values{2} "iDetLevelSE" \
!!	DETLEVEL_3D_MVO,	`by MVO`,
	DETLEVEL_3D_SCALE,	`Scale Sensitive`,
	DETLEVEL_3D_OFF,	`Off`,
	DETLEVEL_3D_10,		"1:10",
	DETLEVEL_3D_50,		"1:50",
	DETLEVEL_3D_100,	"1:100"



! =============================================================================
! Show Reveal On Symbol
! =============================================================================

if bCanHaveReveal then
	values{2} "iRevealOnSymbol"	SHOWREV_MVO, stRevealOnSymbValues[1],
					SHOWREV_ALWAYS, stRevealOnSymbValues[2],
					SHOWREV_UPTO50, stRevealOnSymbValues[3],
					SHOWREV_UPTO100, stRevealOnSymbValues[4],
					SHOWREV_UPTO200, stRevealOnSymbValues[5],
					SHOWREV_NEVER, stRevealOnSymbValues[6]
					
else
	lock "iRevealOnSymbol"
	hideparameter "iRevealOnSymbol"
endif


! =============================================================================
! Display as transom
! =============================================================================

if gs_transom_display = 0 then
	lock "gs_transom_display_pen", "gs_transom_display_linetype"
endif


! =============================================================================
! UI Support
! =============================================================================

if GLOB_UI_BUTTON_ID < 0 then
	parameters gs_ui_current_page = -GLOB_UI_BUTTON_ID
endif


! =============================================================================
! Oversize
! =============================================================================

values "gs_left_oversize"  range[0,]
values "gs_right_oversize" range[0,]
values "gs_upper_oversize" range[0,]
values "gs_lower_oversize" range[0,]

if iWindowShape <> 0 then
	lock "gs_left_oversize", "gs_right_oversize", "gs_upper_oversize", "gs_lower_oversize"
endif

if bRightCornerFunction then
	parameters gs_right_oversize = 0
	lock "gs_right_oversize"
endif


! =============================================================================
! Nominal Size Chooser
! =============================================================================

bSetParams = 0

if GLOB_MODPAR_NAME = "gs_wallhole_nominal" | (gs_reveal_nominal & not(bCanHaveReveal)) then
	gs_wallhole_nominal	= 1
	gs_reveal_nominal	= 0
	gs_unit_nominal		= 0

	bSetParams = 1
endif

if GLOB_MODPAR_NAME = "gs_reveal_nominal" then
	gs_wallhole_nominal	= 0
	gs_reveal_nominal	= 1
	gs_unit_nominal		= 0

	bSetParams = 1
endif

if GLOB_MODPAR_NAME = "gs_unit_nominal" then
	gs_wallhole_nominal	= 0
	gs_reveal_nominal	= 0
	gs_unit_nominal		= 1

	bSetParams = 1
endif

if bSetParams then
	parameters	gs_nominal_size		= gs_wallhole_nominal + 2 * gs_reveal_nominal + 4 * gs_unit_nominal,
				gs_wallhole_nominal	= gs_wallhole_nominal,
				gs_reveal_nominal	= gs_reveal_nominal,
				gs_unit_nominal		= gs_unit_nominal
endif


! =============================================================================
! NED Fire Rating
! =============================================================================
if bEnableNEDFireRating then
	values "gs_list_firerating"			`None`, `30 Minutes`, `60 Minutes`, CUSTOM

	if GLOB_MODPAR_NAME = "gs_list_firerating" then
		iNEDFireRating = 0
		if gs_list_firerating = `30 Minutes` then iNEDFireRating = 2
		if gs_list_firerating = `60 Minutes` then iNEDFireRating = 3
		parameters iNEDFireRating = iNEDFireRating
	else
		if iNEDFireRating = 2 then gs_list_firerating = `30 Minutes`
		if iNEDFireRating = 3 then gs_list_firerating = `60 Minutes`
		parameters gs_list_firerating = gs_list_firerating
	endif

	values "NEDFireRatingPos" range [-ac_unit_width/2, ac_unit_width/2]
endif


! =============================================================================
! Dimension Link
! =============================================================================

! =============================================================================
!!bRecalculate	= 1
bRecalculate	= (	GLOB_MODPAR_NAME = "gs_rebate_width" |		\
					GLOB_MODPAR_NAME = "gs_frame_width" |		\
					GLOB_MODPAR_NAME = "gs_tolerance_left" |	\
					GLOB_MODPAR_NAME = "gs_tolerance_right" |	\
					GLOB_MODPAR_NAME = "gs_tolerance_upper" |	\
					GLOB_MODPAR_NAME = "gs_tolerance_lower" |	\
					GLOB_MODPAR_NAME = "gs_reveal_left" |		\
					GLOB_MODPAR_NAME = "gs_reveal_right" |		\
					GLOB_MODPAR_NAME = "gs_reveal_top" |		\
					GLOB_MODPAR_NAME = "gs_reveal_bottom"|		\
					GLOB_MODPAR_NAME = "bVentilationProfile"|	\
					GLOB_MODPAR_NAME = "iVentilationProfileType"|	\
					(GLOB_MODPAR_NAME = "VentilationProfileHeight" & isVentilationOverFrame))

!GLOB_MODPAR_NAME = "WIDO_LEFT_JAMB" |		\
!GLOB_MODPAR_NAME = "WIDO_RIGHT_JAMB" |		\
!GLOB_MODPAR_NAME = "WIDO_HEAD_DEPTH" |		\
!GLOB_MODPAR_NAME = "WIDO_THRES_DEPTH" |	\

bNominalSelectChanged	= (	GLOB_MODPAR_NAME = "gs_wallhole_nominal" |	\
							GLOB_MODPAR_NAME = "gs_reveal_nominal" |	\
							GLOB_MODPAR_NAME = "gs_unit_nominal")

minWallholeWidth	= minUnitWidth	+ wallholeDLeft  + wallholeDRight
minWallholeHeight	= minUnitHeight + wallholeDUpper + wallholeDLower
minRevealWidth		= minUnitWidth	+ wallholeDLeft	 + wallholeDRight - revealDLeft  - revealDRight
minRevealHeight		= minUnitHeight + wallholeDUpper + wallholeDLower - revealDUpper - revealDLower

maxWallholeWidth	= maxUnitWidth	+ wallholeDLeft  + wallholeDRight
maxWallholeHeight	= maxUnitHeight + wallholeDUpper + wallholeDLower
maxRevealWidth		= maxUnitWidth	+ wallholeDLeft	 + wallholeDRight - revealDLeft  - revealDRight
maxRevealHeight		= maxUnitHeight + wallholeDUpper + wallholeDLower - revealDUpper - revealDLower

bSizeModified	= 0
gosub 100		! Link Dimensions

if gs_wallhole_nominal then
	minWidth	= minWallholeWidth
	minHeight	= minWallholeHeight
	if iDimLimitations	= DIMLIM_RANGE or iDimLimitations = DIMLIM_LIST_RANGE then
		maxWidth	= maxWallholeWidth
		maxHeight	= maxWallholeHeight
	endif
endif
if gs_reveal_nominal then
	minWidth	= minRevealWidth
	minHeight	= minRevealHeight
	if iDimLimitations	= DIMLIM_RANGE or iDimLimitations = DIMLIM_LIST_RANGE then
		maxWidth	= maxRevealWidth
		maxHeight	= maxRevealHeight
	endif
endif
if gs_unit_nominal then
	minWidth	= minUnitWidth
	minHeight	= minUnitHeight
	if iDimLimitations	= DIMLIM_RANGE or iDimLimitations = DIMLIM_LIST_RANGE then
		maxWidth	= maxUnitWidth
		maxHeight	= maxUnitHeight
	endif
endif

bSetDimLim	= 0
if iDimLimitations	= DIMLIM_RANGE then
	values "A" range [minWidth, maxWidth]
	values "B" range [minHeight, maxHeight]

	values "ac_wallhole_width" range [minWallholeWidth, maxWallholeWidth]
	values "ac_wallhole_height" range [minWallholeHeight, maxWallholeHeight]
	values "ac_reveal_width" range [minRevealWidth, maxRevealWidth]
	values "ac_reveal_height" range [minRevealHeight, maxRevealHeight]
	values "ac_unit_width" range [minUnitWidth, maxUnitWidth]
	values "ac_unit_height" range [minUnitHeight, maxUnitHeight]

	bSetDimLim	= 1
endif
if iDimLimitations = DIMLIM_LIST or iDimLimitations = DIMLIM_LIST_RANGE then
	if vardim1(unitWidthArr) > 0 then
		dim	wallholeWidthArr[]
		dim	revealWidthArr[]
		for i = 1 to vardim1(unitWidthArr)
			wallholeWidthArr[i]	= unitWidthArr[i] + wallholeDLeft + wallholeDRight
			revealWidthArr[i]	= unitWidthArr[i] + wallholeDLeft + wallholeDRight - revealDLeft - revealDRight
		next i

		if iDimLimitations = DIMLIM_LIST then
			values "ac_wallhole_width"	wallholeWidthArr
			values "ac_reveal_width"	revealWidthArr
			values "ac_unit_width"		unitWidthArr
		else
			values "ac_wallhole_width"	wallholeWidthArr,	range [minWallholeWidth, maxWallholeWidth]
			values "ac_reveal_width"	revealWidthArr,		range [minRevealWidth, maxRevealWidth]
			values "ac_unit_width"		unitWidthArr,		range [minUnitWidth, maxUnitWidth]
		endif
	endif

	if vardim1(unitHeightArr) > 0 then
		dim	wallholeHeightArr[]
		dim	revealHeightArr[]
		for i = 1 to vardim1(unitHeightArr)
			wallholeHeightArr[i]	= unitHeightArr[i] + wallholeDUpper + wallholeDLower
			revealHeightArr[i]		= unitHeightArr[i] + wallholeDUpper + wallholeDLower - revealDUpper - revealDLower
		next i

		if iDimLimitations = DIMLIM_LIST then
			values "ac_wallhole_height"	wallholeHeightArr
			values "ac_reveal_height"	revealHeightArr
			values "ac_unit_height"		unitHeightArr
		else
			values "ac_wallhole_height"	wallholeHeightArr,	range [minWallholeHeight, maxWallholeHeight]
			values "ac_reveal_height"	revealHeightArr,	range [minRevealHeight, maxRevealHeight]
			values "ac_unit_height"		unitHeightArr,		range [minUnitHeight, maxUnitHeight]
		endif
	endif

	if iDimLimitations = DIMLIM_LIST then
		if gs_wallhole_nominal then
			values "A" wallholeWidthArr
			values "B" wallholeHeightArr
		endif
		if gs_reveal_nominal then
			values "A" revealWidthArr
			values "B" revealHeightArr
		endif
		if gs_unit_nominal then
			values "A" unitWidthArr
			values "B" unitHeightArr
		endif
	else
		if gs_wallhole_nominal then
			values "A" wallholeWidthArr,	range [minWidth, maxWidth]
			values "B" wallholeHeightArr,	range [minHeight, maxHeight]
		endif
		if gs_reveal_nominal then
			values "A" revealWidthArr,		range [minWidth, maxWidth]
			values "B" revealHeightArr,		range [minHeight, maxHeight]
		endif
		if gs_unit_nominal then
			values "A" unitWidthArr,		range [minWidth, maxWidth]
			values "B" unitHeightArr,		range [minHeight, maxHeight]
		endif
	endif

	bSetDimLim	= 1
endif
if not(bSetDimLim) then
	values "A" range [minWidth,]
	values "B" range [minHeight,]
endif



if bSizeModified | (not(gs_retain_nominal_sizes) & bNominalSelectChanged) then

	bSizeModified = 0

	if gs_wallhole_nominal then
		if ac_wallhole_width < minWallholeWidth then
						ac_wallhole_width = minWallholeWidth
			parameters	ac_wallhole_width = minWallholeWidth
			bSizeModified = 1
		endif
		if ac_wallhole_height < minWallholeHeight then
						ac_wallhole_height = minWallholeHeight
			parameters	ac_wallhole_height = minWallholeHeight
			bSizeModified = 1
		endif
		if iDimLimitations	= DIMLIM_RANGE or iDimLimitations = DIMLIM_LIST_RANGE then
			if ac_wallhole_width > maxWallholeWidth then
							ac_wallhole_width = maxWallholeWidth
				parameters	ac_wallhole_width = maxWallholeWidth
				bSizeModified = 1
			endif
			if ac_wallhole_height > maxWallholeHeight then
							ac_wallhole_height = maxWallholeHeight
				parameters	ac_wallhole_height = maxWallholeHeight
				bSizeModified = 1
			endif
		endif
		parameters A = ac_wallhole_width,	B = ac_wallhole_height
	endif
	if gs_reveal_nominal then
		if ac_reveal_width < minRevealWidth then
						ac_reveal_width = minRevealWidth
			parameters	ac_reveal_width = minRevealWidth
			bSizeModified = 1
		endif
		if ac_reveal_height < minRevealHeight then
						ac_reveal_height = minRevealHeight
			parameters	ac_reveal_height = minRevealHeight
			bSizeModified = 1
		endif
		if iDimLimitations	= DIMLIM_RANGE or iDimLimitations = DIMLIM_LIST_RANGE then
			if ac_reveal_width > maxRevealWidth then
							ac_reveal_width = maxRevealWidth
				parameters	ac_reveal_width = maxRevealWidth
				bSizeModified = 1
			endif
			if ac_reveal_height > maxRevealHeight then
							ac_reveal_height = maxRevealHeight
				parameters	ac_reveal_height = maxRevealHeight
				bSizeModified = 1
			endif
		endif
		parameters A = ac_reveal_width,	B = ac_reveal_height
	endif
	if gs_unit_nominal then
		if ac_unit_width < minUnitWidth then
						ac_unit_width = minUnitWidth
			parameters	ac_unit_width = minUnitWidth
			bSizeModified = 1
		endif
		if ac_unit_height < minUnitHeight then
						ac_unit_height = minUnitHeight
			parameters	ac_unit_height = minUnitHeight
			bSizeModified = 1
		endif
		if iDimLimitations	= DIMLIM_RANGE or iDimLimitations = DIMLIM_LIST_RANGE then
			if ac_unit_width > maxUnitWidth then
							ac_unit_width = maxUnitWidth
				parameters	ac_unit_width = maxUnitWidth
				bSizeModified = 1
			endif
			if ac_unit_height > maxUnitHeight then
							ac_unit_height = maxUnitHeight
				parameters	ac_unit_height = maxUnitHeight
				bSizeModified = 1
			endif
		endif
		parameters A = ac_unit_width, B = ac_unit_height
	endif

	if bSizeModified then
		gosub 100		! Link Dimensions
	endif
else
	if A < minWidth then
		A = minWidth
		parameters A = A
	endif
	if B < minHeight then
		B = minHeight
		parameters B = B
	endif
	if iDimLimitations	= DIMLIM_RANGE or iDimLimitations = DIMLIM_LIST_RANGE then
		if A > maxWidth then
			A = maxWidth
			parameters A = A
		endif
		if B > maxHeight then
			B = maxHeight
			parameters B = B
		endif
	endif

	if gs_wallhole_nominal then
		ac_wallhole_width	= A
		ac_wallhole_height	= B
		parameters ac_wallhole_width = A, ac_wallhole_height = B
	endif
	if gs_reveal_nominal then
		ac_reveal_width  = A
		ac_reveal_height = B
		parameters ac_reveal_width = A, ac_reveal_height = B
	endif
	if gs_unit_nominal then
		ac_unit_width	= A
		ac_unit_height	= B
		parameters ac_unit_width = A, ac_unit_height = B
	endif

	bRecalculate = 1
	gosub 100		! Link Dimensions
endif

if	not(bCanHaveReveal)	then
	lock "gs_reveal_nominal", "ac_reveal_width", "ac_reveal_height"
	hideparameter "gs_reveal_nominal", "ac_reveal_width", "ac_reveal_height"
endif

! =============================================================================
! Show / Hide 2D Fills
! =============================================================================

if not(gs_bFills) then	! Hide
	hideparameter	"gs_fillFr",
					"gs_penFr_fg",
					"gs_penFr_bg",
					"gs_fillSash",
					"gs_penSash_fg",
					"gs_penSash_bg",
					"gs_wallhole_fill",
					"gs_wallhole_pen_fg",
					"gs_wallhole_pen_bg",
					"gs_sill_fill",
					"gs_sill_pen_fg",
					"gs_sill_pen_bg",
					"gs_board_fill",
					"gs_board_pen_fg",
					"gs_board_pen_bg",
					"gs_trim_fill_in",
					"gs_trim_pen_fg_in",
					"gs_trim_pen_bg_in",
					"gs_trim_fill_out",
					"gs_trim_pen_fg_out",
					"gs_trim_pen_bg_out",
					"gs_masonry_arch_fill",
					"gs_masonry_arch_pen_fg",
					"gs_masonry_arch_pen_bg",
					"gs_sunShade_cutFillType",
					"gs_sunShade_cutFillPen",
					"gs_sunShade_cutFillBackPen"

	lock	"gs_fillFr",
			"gs_penFr_fg",
			"gs_penFr_bg",
			"gs_fillSash",
			"gs_penSash_fg",
			"gs_penSash_bg",
			"gs_wallhole_fill",
			"gs_wallhole_pen_fg",
			"gs_wallhole_pen_bg",
			"gs_sill_fill",
			"gs_sill_pen_fg",
			"gs_sill_pen_bg",
			"gs_board_fill",
			"gs_board_pen_fg",
			"gs_board_pen_bg",
			"gs_trim_fill_in",
			"gs_trim_pen_fg_in",
			"gs_trim_pen_bg_in",
			"gs_trim_fill_out",
			"gs_trim_pen_fg_out",
			"gs_trim_pen_bg_out",
			"gs_masonry_arch_fill",
			"gs_masonry_arch_pen_fg",
			"gs_masonry_arch_pen_bg",
			"gs_sunShade_cutFillType",
			"gs_sunShade_cutFillPen",
			"gs_sunShade_cutFillBackPen"
endif


! =============================================================================
! Custom Corner Function Control
! =============================================================================

if not(bCornerWindow) & (abs(WALL_INCL) > EPS | abs(WIDO_ORIG_DIST) > EPS | AC_WallType = 2) then
	lock "bLeftCornerFunction", "bRightCornerFunction"
endif

if not(bLeftCornerFunction) AND not(bRightCornerFunction) then
	hideparameter	"iCornerConnTypeLeft"
	lock	"iCornerConnTypeLeft"
endif

if not(bLeftCornerFunction) then
	hideparameter "leftCornerAngle", "bLeftDiffConnWall", "leftConnWallThk"
	lock "leftCornerAngle", "bLeftDiffConnWall", "leftConnWallThk"
endif

if not(bRightCornerFunction) then
	hideparameter "rightCornerAngle", "bRightDiffConnWall", "rightConnWallThk"
	lock "rightCornerAngle", "bRightDiffConnWall", "rightConnWallThk"
endif

if (ac_cw_function & ac_corner_window) then
	hideparameter	"bRightCornerFunction",
				"rightCornerAngle",
				"bRightDiffConnWall",
				"rightConnWallThk",
				"iCornerConnTypeRight"
endif
if not(bLeftDiffConnWall) then hideparameter "leftConnWallThk"
if not(bRightDiffConnWall) then hideparameter "rightConnWallThk"

if bLeftCornerFunction | bRightCornerFunction then
	lock "ac_wallhole_width", "ac_reveal_width"
	hideparameter "ac_wallhole_width", "ac_reveal_width"
endif
if bLeftCornerFunction then
	lock "gs_tolerance_left"
	hideparameter "gs_tolerance_left"
endif
if bRightCornerFunction then
	lock "gs_tolerance_right"
	hideparameter "gs_tolerance_right"
endif


dim CornConnTypeValueMask[]
dim iCornConnTypeValueMask[]

i=1
if bittest( gs_CornConnTypeEnable, 0) then 				! Frame
	CornConnTypeValueMask[i] = stCornerConnType[1]
	iCornConnTypeValueMask[i] = 1
	i = i + 1
endif
if bittest( gs_CornConnTypeEnable, 1) then 				! Corner Column
	CornConnTypeValueMask[i] = stCornerConnType[2]
	iCornConnTypeValueMask[i] = 2
	i = i + 1
endif
if bittest( gs_CornConnTypeEnable, 2) then 				! Glass
	CornConnTypeValueMask[i] = stCornerConnType[3]
	iCornConnTypeValueMask[i] = 3
	i = i + 1
endif

if i > 1 then
	values{2} "iCornerConnTypeRight"	iCornConnTypeValueMask, CornConnTypeValueMask
	values{2} "iCornerConnTypeLeft"		iCornConnTypeValueMask, CornConnTypeValueMask
endif

if GLOB_MODPAR_NAME = "leftCornerAngle" then
	if ABS(leftCornerAngle) < EPS OR ABS(180-leftCornerAngle) < EPS OR ABS(360-leftCornerAngle) < EPS then
		bLeftCornerFunction = 0
	else
		bLeftCornerFunction = 1
	endif
	parameters bLeftCornerFunction = bLeftCornerFunction
endif

if GLOB_MODPAR_NAME = "rightCornerAngle" then
	if ABS(rightCornerAngle) < EPS OR ABS(180-rightCornerAngle) < EPS OR ABS(360-rightCornerAngle) < EPS then
		bRightCornerFunction = 0
	else
		bRightCornerFunction = 1
	endif
	parameters bRightCornerFunction = bRightCornerFunction
endif

if GLOB_MODPAR_NAME = "bLeftCornerFunction" then
	leftCornerAngle = 90.00
	parameters leftCornerAngle = leftCornerAngle
endif

if GLOB_MODPAR_NAME = "bRightCornerFunction" then
	rightCornerAngle = 90.00
	parameters rightCornerAngle = rightCornerAngle
endif

! =============================================================================
! Opline Parameters
! =============================================================================

call "OpeningOptions_WMCC" parameters all	bWindow					= 1,
										iLineShapeCategory			= iLineShapeCategory,
										iLineShapeSwingEnable		= iLineShapeSwingEnable,
										iLineShapeSlidingEnable		= iLineShapeSlidingEnable,
										bDisable2DOverride			= bDisable2DOverride,
										bEnableSecondaryOpLineTypes = 0


! =============================================================================
end
! =============================================================================


100:
! =============================================================================
! Link Dimensions
! =============================================================================

	if GLOB_MODPAR_NAME = "ac_wallhole_width" | (gs_wallhole_nominal & bRecalculate) then
		if ac_wallhole_width < minWallholeWidth then
						ac_wallhole_width = minWallholeWidth
			parameters	ac_wallhole_width = minWallholeWidth
		endif

		ac_reveal_width	= ac_wallhole_width	- revealDLeft	- revealDRight
		ac_unit_width	= ac_wallhole_width	- wallholeDLeft	- wallholeDRight

		parameters	ac_reveal_width	= ac_reveal_width,
					ac_unit_width	= ac_unit_width

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_reveal_width" | (gs_reveal_nominal & bRecalculate) then
		if ac_reveal_width < minRevealWidth then
						ac_reveal_width = minRevealWidth
			parameters	ac_reveal_width = minRevealWidth
		endif

		ac_wallhole_width	= ac_reveal_width	+ revealDLeft	+ revealDRight
		ac_unit_width		= ac_wallhole_width	- wallholeDLeft	- wallholeDRight

		parameters	ac_wallhole_width	= ac_wallhole_width,
					ac_unit_width		= ac_unit_width

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_unit_width" | (gs_unit_nominal & bRecalculate) then
		if ac_unit_width < minUnitWidth then
						ac_unit_width = minUnitWidth
			parameters	ac_unit_width = minUnitWidth
		endif

		ac_wallhole_width	= ac_unit_width		+ wallholeDLeft	+ wallholeDRight
		ac_reveal_width		= ac_wallhole_width	- revealDLeft	- revealDRight

		parameters	ac_wallhole_width	= ac_wallhole_width,
					ac_reveal_width		= ac_reveal_width

		bSizeModified = 1
	endif

	! =============================================================================

	if GLOB_MODPAR_NAME = "ac_wallhole_height" | (gs_wallhole_nominal & bRecalculate) then
		if ac_wallhole_height < minWallholeHeight then
						ac_wallhole_height = minWallholeHeight
			parameters	ac_wallhole_height = minWallholeHeight
		endif

		ac_reveal_height	= ac_wallhole_height - revealDUpper		- revealDLower
		ac_unit_height		= ac_wallhole_height - wallholeDUpper	- wallholeDLower

		parameters	ac_reveal_height	= ac_reveal_height,
					ac_unit_height		= ac_unit_height

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_reveal_height" | (gs_reveal_nominal & bRecalculate) then
		if ac_reveal_height < minRevealHeight then
						ac_reveal_height = minRevealHeight
			parameters	ac_reveal_height = minRevealHeight
		endif

		ac_wallhole_height	= ac_reveal_height	 + revealDUpper		+ revealDLower
		ac_unit_height		= ac_wallhole_height - wallholeDUpper	- wallholeDLower

		parameters	ac_wallhole_height	= ac_wallhole_height,
					ac_unit_height		= ac_unit_height

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_unit_height" | (gs_unit_nominal & bRecalculate) then
		if ac_unit_height < minUnitHeight then
						ac_unit_height = minUnitHeight
			parameters	ac_unit_height = minUnitHeight
		endif

		ac_wallhole_height	= ac_unit_height	+ wallholeDUpper + wallholeDLower
		ac_reveal_height	= ac_wallhole_height - revealDUpper	 - revealDLower

		parameters	ac_wallhole_height	= ac_wallhole_height,
					ac_reveal_height	= ac_reveal_height

		bSizeModified = 1
	endif
return



]]></Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["GetDWSymbSettings_WMCC"]]></MName>
		<MainGUID>E2E8A836-710B-423F-B892-2A2D41932CFA</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["CasingEnable_WMCC"]]></MName>
		<MainGUID>1AA39DBC-134E-4087-AE06-907C1965BE8B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["PlasterGeometry_WMCC"]]></MName>
		<MainGUID>1839B756-F35E-41FB-BC30-E9F03F27AFD4</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["RevealGeometry_WMCC"]]></MName>
		<MainGUID>C152C1FA-DB10-4A76-83E1-CB855939957E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FramingGeometry_WMCC"]]></MName>
		<MainGUID>BF358EBE-7F1C-4541-A68F-8F474335FB60</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["OpeningOptions_WMCC"]]></MName>
		<MainGUID>03578FD9-97ED-4913-8595-5F8097A2B424</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["WallholeStructure_WMCC"]]></MName>
		<MainGUID>77A5D494-76AF-42BA-B426-690A9C11D280</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["WallholeFraming_WMCC"]]></MName>
		<MainGUID>DB55765E-13F6-4123-91E5-56B09BA57211</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["LibraryGlobals13"]]></MName>
		<MainGUID>9137124A-DDF2-4A06-A532-5FC0CE873258</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["GetDWSymbSettings_WMCC"]]></MName>
		<MainGUID>E2E8A836-710B-423F-B892-2A2D41932CFA</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["CasingEnable_WMCC"]]></MName>
		<MainGUID>1AA39DBC-134E-4087-AE06-907C1965BE8B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["PlasterGeometry_WMCC"]]></MName>
		<MainGUID>1839B756-F35E-41FB-BC30-E9F03F27AFD4</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["RevealGeometry_WMCC"]]></MName>
		<MainGUID>C152C1FA-DB10-4A76-83E1-CB855939957E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FramingGeometry_WMCC"]]></MName>
		<MainGUID>BF358EBE-7F1C-4541-A68F-8F474335FB60</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["OpeningOptions_WMCC"]]></MName>
		<MainGUID>03578FD9-97ED-4913-8595-5F8097A2B424</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["WallholeStructure_WMCC"]]></MName>
		<MainGUID>77A5D494-76AF-42BA-B426-690A9C11D280</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["WallholeFraming_WMCC"]]></MName>
		<MainGUID>DB55765E-13F6-4123-91E5-56B09BA57211</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["GetDWSymbSettings_WMCC"]]></MName>
		<MainGUID>E2E8A836-710B-423F-B892-2A2D41932CFA</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["CasingEnable_WMCC"]]></MName>
		<MainGUID>1AA39DBC-134E-4087-AE06-907C1965BE8B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["PlasterGeometry_WMCC"]]></MName>
		<MainGUID>1839B756-F35E-41FB-BC30-E9F03F27AFD4</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["RevealGeometry_WMCC"]]></MName>
		<MainGUID>C152C1FA-DB10-4A76-83E1-CB855939957E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FramingGeometry_WMCC"]]></MName>
		<MainGUID>BF358EBE-7F1C-4541-A68F-8F474335FB60</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabIDlistHierarchy_m_WMCC"]]></MName>
		<MainGUID>83D8979A-C621-4A90-9F64-41CC8948B5F0</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_FixturesFittings_m_WMCC"]]></MName>
		<MainGUID>7D855D80-40F5-4FEE-95B5-E1209B05C9B3</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_WallOpening_m_WMCC"]]></MName>
		<MainGUID>C2CCB97D-32C0-4E7D-976E-FC5C8166A95E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_NominalSizesWindow_m_WMCC"]]></MName>
		<MainGUID>36CE1F1E-757B-49CD-A1BA-70FC8938234E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["WallholeStructure_WMCC"]]></MName>
		<MainGUID>77A5D494-76AF-42BA-B426-690A9C11D280</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["WallholeFraming_WMCC"]]></MName>
		<MainGUID>DB55765E-13F6-4123-91E5-56B09BA57211</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["OpeningOptions_WMCC"]]></MName>
		<MainGUID>03578FD9-97ED-4913-8595-5F8097A2B424</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["GetDWSymbSettings_WMCC"]]></MName>
		<MainGUID>E2E8A836-710B-423F-B892-2A2D41932CFA</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["CasingEnable_WMCC"]]></MName>
		<MainGUID>1AA39DBC-134E-4087-AE06-907C1965BE8B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["PlasterGeometry_WMCC"]]></MName>
		<MainGUID>1839B756-F35E-41FB-BC30-E9F03F27AFD4</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["RevealGeometry_WMCC"]]></MName>
		<MainGUID>C152C1FA-DB10-4A76-83E1-CB855939957E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FramingGeometry_WMCC"]]></MName>
		<MainGUID>BF358EBE-7F1C-4541-A68F-8F474335FB60</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["WallholeStructure_WMCC"]]></MName>
		<MainGUID>77A5D494-76AF-42BA-B426-690A9C11D280</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["WallholeFraming_WMCC"]]></MName>
		<MainGUID>DB55765E-13F6-4123-91E5-56B09BA57211</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["OpeningOptions_WMCC"]]></MName>
		<MainGUID>03578FD9-97ED-4913-8595-5F8097A2B424</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["GetDWSymbSettings_WMCC"]]></MName>
		<MainGUID>E2E8A836-710B-423F-B892-2A2D41932CFA</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["CasingEnable_WMCC"]]></MName>
		<MainGUID>1AA39DBC-134E-4087-AE06-907C1965BE8B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["PlasterGeometry_WMCC"]]></MName>
		<MainGUID>1839B756-F35E-41FB-BC30-E9F03F27AFD4</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["RevealGeometry_WMCC"]]></MName>
		<MainGUID>C152C1FA-DB10-4A76-83E1-CB855939957E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FramingGeometry_WMCC"]]></MName>
		<MainGUID>BF358EBE-7F1C-4541-A68F-8F474335FB60</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["GetDWSymbSettings_WMCC"]]></MName>
		<MainGUID>E2E8A836-710B-423F-B892-2A2D41932CFA</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["CasingEnable_WMCC"]]></MName>
		<MainGUID>1AA39DBC-134E-4087-AE06-907C1965BE8B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["PlasterGeometry_WMCC"]]></MName>
		<MainGUID>1839B756-F35E-41FB-BC30-E9F03F27AFD4</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["RevealGeometry_WMCC"]]></MName>
		<MainGUID>C152C1FA-DB10-4A76-83E1-CB855939957E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FramingGeometry_WMCC"]]></MName>
		<MainGUID>BF358EBE-7F1C-4541-A68F-8F474335FB60</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["GetDWSymbSettings_WMCC"]]></MName>
		<MainGUID>E2E8A836-710B-423F-B892-2A2D41932CFA</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["CasingEnable_WMCC"]]></MName>
		<MainGUID>1AA39DBC-134E-4087-AE06-907C1965BE8B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["PlasterGeometry_WMCC"]]></MName>
		<MainGUID>1839B756-F35E-41FB-BC30-E9F03F27AFD4</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["RevealGeometry_WMCC"]]></MName>
		<MainGUID>C152C1FA-DB10-4A76-83E1-CB855939957E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FramingGeometry_WMCC"]]></MName>
		<MainGUID>BF358EBE-7F1C-4541-A68F-8F474335FB60</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

]]></Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

]]></Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0"><Author>BIMobject</Author><License><Type>CC BY-ND</Type><Version>3.0</Version></License></Copyright><ParamSection SectVersion="25" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>25</Version>
		<AutoHotspots>no</AutoHotspots>
		<HoleBits>
			<WDBit_3DFrame/>
		</HoleBits>
		<StatBits>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Nominal Width"]]></Description>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Nominal Height"]]></Description>
			<Value>1.5</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Z Dimension"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Integer Name="AC_WallContours">
			<Description><![CDATA["Wall Contours (0-None,1-Full,2-Side,3-Length)"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_Hole_Hotspot_Control">
			<Description><![CDATA["Hotspots 0-None,1-2D,2-3D,3-All"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_Sill_To_Curr_Story">
			<Description><![CDATA["Sill Height to Current Story"]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="AC_Hole_Display_Option">
			<Description><![CDATA["Floor Plan Display Option"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Angle Name="AC_Hole_Position_Angle">
			<Description><![CDATA["Hole Position Angle"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Hole has Wall's Side Surface"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_HoleMaterialCurved">
			<Description><![CDATA["Hole Surface's Split is Curved in Curved Walls"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="AC_WallType">
			<Description><![CDATA["Wall Type"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_WindowInWallContour">
			<Description><![CDATA["Window in Wall Contour"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<Length Name="AC_WallContourPolygon">
			<Description><![CDATA["Wall Contour Polygon"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="AC_Wall_Direction_Type">
			<Description><![CDATA["Wall Direction Type"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="ac_revealAnchorPos">
			<Description><![CDATA["Reveal Anchor Position"]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="ac_revealToWallCore">
			<Description><![CDATA["Reveal to Wall Core"]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="ac_wido_hide_options">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Boolean Name="ac_cw_debug">
			<Description><![CDATA["Corner Window Debug Function"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="ac_cw_function">
			<Description><![CDATA["Placement Type (1=CW,0=W)"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- detlevel: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="detlevel">
			<Description><![CDATA[""]]></Description>
		</Title>
		<Integer Name="iDetLevel2D">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="iDetLevel3D">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="iDetLevelSE">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bForbiddenScaleChangeMoving">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_function_control_parameters: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_function_control_parameters">
			<Description><![CDATA["Function Control Parameters"]]></Description>
		</Title>
		<Boolean Name="bEnableSill">
			<Description><![CDATA["Enable/Disable Sill Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableBoard">
			<Description><![CDATA["Enable/Disable Board Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableParapetInset">
			<Description><![CDATA["Enable/Disable Parapet Inset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableMasonryArch">
			<Description><![CDATA["Enable/Disable Masonry Arch"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableFaschen">
			<Description><![CDATA["Enable/Disable Ornamental Window Moldings"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableThreshold">
			<Description><![CDATA["Enable/Disable Threshold"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableCasing">
			<Description><![CDATA["Enable/Disable Casing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableShutter">
			<Description><![CDATA["Enable/Disable Shutter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableCustomCornerLeft">
			<Description><![CDATA["Enable/Disable Custom Corner Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableCustomCornerRight">
			<Description><![CDATA["Enable/Disable Custom Corner Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableCavityClosure">
			<Description><![CDATA["Enable/Disable Cavity Closure"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- gs_macro_control_parameters: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_macro_control_parameters">
			<Description><![CDATA["Macro Control Parameters"]]></Description>
		</Title>
		<Integer Name="gs_macro_version">
			<Description><![CDATA["Macro Version"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Integer Name="iWindowShape">
			<Description><![CDATA["Window Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="openingArchHeight">
			<Description><![CDATA["Opening Arch Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bMirroredOpening">
			<Description><![CDATA["Mirrored Opening"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="nArchResolution">
			<Description><![CDATA["Arch Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>32</Value>
		</Integer>
		<Boolean Name="gs_IsCurved">
			<Description><![CDATA["Curved Window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bParalellInCurvedWalls">
			<Description><![CDATA["Parallel Opening in Curved Walls"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="lod2D">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="lod3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bOpeningDirection">
			<Description><![CDATA["Opening Direction"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDisabeMirroring">
			<Description><![CDATA["Disable Window Mirroring"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iPanelType">
			<Description><![CDATA["Window Panel Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_idUI">
			<Description><![CDATA["ID of Custom Tabpages"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<String Name="gs_stUI">
			<Description><![CDATA["Name of Custom Tabpages"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<String Name="gs_icoUI">
			<Description><![CDATA["Icons of Custom Tabpages"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Integer Name="uiUsedPageIDs">
			<Description><![CDATA["ID of Tabpages"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<String Name="uiUsedPageNames">
			<Description><![CDATA["Name and Icon of Tabpages"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1"><![CDATA[""]]></AVal>
				<AVal Column="2" Row="1"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Boolean Name="bForceContinousMode">
			<Description><![CDATA["Force Continuous Mode"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_RevealTypeEnable">
			<Description><![CDATA["Reveal Type Enable Mask"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_ClosureTypeEnable">
			<Description><![CDATA["Closure Type Enable Mask"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_SillTypeEnable">
			<Description><![CDATA["Sill Type Enable"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_CasingOutTypeEnable">
			<Description><![CDATA["Casing Outside Type Enable"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_CasingInTypeEnable">
			<Description><![CDATA["Casing Inside Type Enable"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bNotShowCasingIn2DNOR">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowSillBoardIn2D100NED">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDWSymbolAtMiddle">
			<Description><![CDATA["Symbol at Middle (Middle Twoline)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDWSymbolAtMiddle2">
			<Description><![CDATA["Symbol at Middle (Simple Centerline)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bCenterLineInSimple2D">
			<Description><![CDATA["Simple Centerline Symbol in 1:200"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowRebateOnFixGlass">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowSashInMiddle2D">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowGlassInMiddle2D">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bOneLineSymbolinMVO">
			<Description><![CDATA["One Line in Simple MVO (Historic and BayBows)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bHideVariClosTypeInSimple2D">
			<Description><![CDATA["Hide Variable Closure Type (NED, FLA)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- ac_corner_window: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="ac_corner_window">
			<Description><![CDATA["Corner Window Function"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Angle Name="ac_corner_angle">
			<Description><![CDATA["Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Boolean Name="ac_diff_con_wall_thk">
			<Description><![CDATA["Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_con_wall_thk">
			<Description><![CDATA["Connecting Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- customCorner: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="customCorner">
			<Description><![CDATA["Custom Corner Function"]]></Description>
		</Title>
		<Boolean Name="gs_corner_column">
			<Description><![CDATA["Corner Column"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bLeftCornerFunction">
			<Description><![CDATA["Left Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="leftCornerAngle">
			<Description><![CDATA["Left Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>180</Value>
		</Angle>
		<Boolean Name="bLeftDiffConnWall">
			<Description><![CDATA["Left Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="leftConnWallThk">
			<Description><![CDATA["Left Connected Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.48</Value>
		</Length>
		<Boolean Name="bRightCornerFunction">
			<Description><![CDATA["Right Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="rightCornerAngle">
			<Description><![CDATA["Right Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>180</Value>
		</Angle>
		<Boolean Name="bRightDiffConnWall">
			<Description><![CDATA["Right Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="rightConnWallThk">
			<Description><![CDATA["Right Connected Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.48</Value>
		</Length>
		<Integer Name="iCornerConnTypeRight">
			<Description><![CDATA["Right Corner Connection Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCornerConnTypeLeft">
			<Description><![CDATA["Corner Connection Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_CornConnTypeEnable">
			<Description><![CDATA["Enable connection type on corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Length Name="gs_cc_width">
			<Description><![CDATA["Corner Column Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_cc_thk">
			<Description><![CDATA["Corner Column Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_cc_pr">
			<Description><![CDATA["Corner Column Projection"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_cc_endline">
			<Description><![CDATA["Corner Column Endline"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowCornerMitreLineUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_options: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_options">
			<Description><![CDATA["Options"]]></Description>
		</Title>
		<Boolean Name="gs_full_edit">
			<Description><![CDATA["Show Editable Hotspots"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iDWDet2D">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_2DDetEnable">
			<Description><![CDATA["2D Detail Level Enable"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bEnable2DScale20">
			<Description><![CDATA["Enable 2D Scale 1:20"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iRevealOnSymbol">
			<Description><![CDATA["Show Reveal on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Detailed"]]></Value>
		</String>
		<Integer Name="iDWDet3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>

		<!-- gs_window_sizes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sizes">
			<Description><![CDATA["Window Sizes"]]></Description>
		</Title>
		<Length Name="minUnitWidth">
			<Description><![CDATA["Minimal Unit Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="minUnitHeight">
			<Description><![CDATA["Minimal Unit Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="maxUnitWidth">
			<Description><![CDATA["Maximal Unit Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="maxUnitHeight">
			<Description><![CDATA["Maximal Unit Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="unitWidthArr">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="unitHeightArr">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="iDimLimitations">
			<Description><![CDATA["Dimension Limitations"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_tolerance_left">
			<Description><![CDATA["Tolerance Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_right">
			<Description><![CDATA["Tolerance Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_upper">
			<Description><![CDATA["Tolerance Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_lower">
			<Description><![CDATA["Tolerance Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_wallhole_width">
			<Description><![CDATA["Wallhole Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_wallhole_height">
			<Description><![CDATA["Wallhole Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_reveal_width">
			<Description><![CDATA["Reveal Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_reveal_height">
			<Description><![CDATA["Reveal Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_unit_width">
			<Description><![CDATA["Unit Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_unit_height">
			<Description><![CDATA["Unit Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Integer Name="gs_nominal_size">
			<Description><![CDATA["Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_wallhole_nominal">
			<Description><![CDATA["Set Wallhole Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_reveal_nominal">
			<Description><![CDATA["Set Reveal Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_unit_nominal">
			<Description><![CDATA["Set Unit Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_retain_nominal_sizes">
			<Description><![CDATA["Transfer Current Nominal Size to Selection"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_opening_params: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_opening_params">
			<Description><![CDATA["Opening"]]></Description>
		</Title>
		<Integer Name="gs_leaf_optype_m">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_window_frame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_frame">
			<Description><![CDATA["Window Frame"]]></Description>
		</Title>
		<Boolean Name="gs_repeat_modules">
			<Description><![CDATA["Repeat Modules"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_repeat_modules_number">
			<Description><![CDATA["Repeat Modules Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_axis_lock">
			<Description><![CDATA["Keep Axis Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_axis_distance">
			<Description><![CDATA["Axis Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_thk">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width">
			<Description><![CDATA["Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.07</Value>
		</Length>
		<Length Name="gs_frame_width_left">
			<Description><![CDATA["Frame Width Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width_upper">
			<Description><![CDATA["Upper Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width_lower">
			<Description><![CDATA["Bottom Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="MullionWidth">
			<Description><![CDATA["Grid Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="TransomWidth">
			<Description><![CDATA["Transom Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>

		<!-- gs_window_sash: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sash">
			<Description><![CDATA["Sash Frame"]]></Description>
		</Title>
		<Length Name="gs_sash_thk">
			<Description><![CDATA["Sash Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_sash_width">
			<Description><![CDATA["Sash Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_glass_thk">
			<Description><![CDATA["Glass Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>

		<!-- gs_window_oversize: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_oversize">
			<Description><![CDATA["Opening Oversize"]]></Description>
		</Title>
		<Length Name="gs_left_oversize">
			<Description><![CDATA["Left Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_right_oversize">
			<Description><![CDATA["Right Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_upper_oversize">
			<Description><![CDATA["Upper Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_lower_oversize">
			<Description><![CDATA["Lower Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_trim_outside: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_trim_outside">
			<Description><![CDATA["Casing Outside"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_trimtype_out">
			<Description><![CDATA["Casing Type Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["Simple"]]></Value>
		</String>
		<Integer Name="gs_trimtype_out_int">
			<Description><![CDATA["Casing Type Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCasingHeadTypeOut">
			<Description><![CDATA["Outside Casing Head Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bArchitraveCapital">
			<Description><![CDATA["Architrave Capital"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iArchitraveCapitalType">
			<Description><![CDATA["Architrave Capital Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="architraveCapitalWidth">
			<Description><![CDATA["Architrave Capital Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Boolean Name="bCasingBottomOutside">
			<Description><![CDATA["Outside Bottom Casing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_trim_show_cover_out">
			<Description><![CDATA["Cover Outer Wall Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_trim_outside_uniform">
			<Description><![CDATA["Uniform Casing Widths"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_tw_right_out">
			<Description><![CDATA["Width Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_tw_left_out">
			<Description><![CDATA["Width Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_tw_top_out">
			<Description><![CDATA["Width Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_tw_bottom_out">
			<Description><![CDATA["Width Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_trim_thk_out">
			<Description><![CDATA["Thickness on Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.019</Value>
		</Length>
		<Length Name="gs_trim_width_out">
			<Description><![CDATA["Thickness in Wallhole"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_trim_offs_out">
			<Description><![CDATA["Offset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trim_jambext_nosing_out">
			<Description><![CDATA["Nosing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_trimov_top_left_out">
			<Description><![CDATA["Top Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trimov_top_right_out">
			<Description><![CDATA["Top Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trimov_bot_left_out">
			<Description><![CDATA["Bottom Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trimov_bot_right_out">
			<Description><![CDATA["Bottom Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="casingOverhangBottomSideOut">
			<Description><![CDATA["Bottom Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>

		<!-- gs_trim_inside: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_trim_inside">
			<Description><![CDATA["Casing Inside"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_trimtype_in">
			<Description><![CDATA["Casing Type Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["Simple"]]></Value>
		</String>
		<Integer Name="gs_trimtype_in_int">
			<Description><![CDATA["Casing Type Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_trim_show_cover_in">
			<Description><![CDATA["Cover Inner Wall Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_trim_inside_uniform">
			<Description><![CDATA["Uniform Casing Widths"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_tw_right_in">
			<Description><![CDATA["Width Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_tw_left_in">
			<Description><![CDATA["Width Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_tw_top_in">
			<Description><![CDATA["Width Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_tw_bottom_in">
			<Description><![CDATA["Width Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_trim_thk_in">
			<Description><![CDATA["Thickness on Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.019</Value>
		</Length>
		<Length Name="gs_trim_width_in">
			<Description><![CDATA["Thickness in Wallhole"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_trim_offs_in">
			<Description><![CDATA["Offset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trim_jambext_nosing_in">
			<Description><![CDATA["Nosing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Boolean Name="gs_apron">
			<Description><![CDATA["Apron"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_apron_thk">
			<Description><![CDATA["Apron Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_trimov_top_left_in">
			<Description><![CDATA["Top Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trimov_top_right_in">
			<Description><![CDATA["Top Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trimov_bot_left_in">
			<Description><![CDATA["Casing Overhang Bottom Left Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trimov_bot_right_in">
			<Description><![CDATA["Bottom Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_trim_atframe_out">
			<Description><![CDATA["Casing at Frame Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_atframe_in">
			<Description><![CDATA["Casing at Frame Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_stack_left">
			<Description><![CDATA["Casing at Ganging Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_stack_right">
			<Description><![CDATA["Casing at Ganging Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_stack_bottom">
			<Description><![CDATA["Casing at Ganging Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_stack_top">
			<Description><![CDATA["Casing at Ganging Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_sill_outside: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_sill_outside">
			<Description><![CDATA["Sill"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sill_oversize">
			<Description><![CDATA["Sill Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iSillType">
			<Description><![CDATA["Type of the Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_sill_thk">
			<Description><![CDATA["Sill Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_sill_endthk">
			<Description><![CDATA["Sill Front Side Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.015</Value>
		</Length>
		<Length Name="gs_sill_elev">
			<Description><![CDATA["Sill Elevation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.005</Value>
		</Length>
		<Length Name="gs_sill_dripnos">
			<Description><![CDATA["Sill Drip Overlap"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="gs_sill_dripwidth">
			<Description><![CDATA["Sill Drip Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="gs_sill_nosing">
			<Description><![CDATA["Sill Nosing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Angle Name="gs_sill_angle">
			<Description><![CDATA["Sill Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Angle>
		<Length Name="gs_sill_ovhg_left">
			<Description><![CDATA["Sill Overhang Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sill_ovhg_right">
			<Description><![CDATA["Sill Overhang Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sill_slip_in">
			<Description><![CDATA["Sill Slip-in Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sill_slip_wall">
			<Description><![CDATA["Sill Slip from Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sill_holeDepthBehind">
			<Description><![CDATA["Rear Hole Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sill_width">
			<Description><![CDATA["Width of Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sill_topWidth">
			<Description><![CDATA["Sill Top Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_sill_topHeight">
			<Description><![CDATA["Sill Top Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Boolean Name="gs_sill_curved">
			<Description><![CDATA["Sill is Curved in Curved Walls"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sill_ins_below">
			<Description><![CDATA["Insulation below Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_sill_ins_use_wall_skin">
			<Description><![CDATA["Use Wall Insulation Skin"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iBrickSilldetlevel">
			<Description><![CDATA["Brick Sill 3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_brick_sill_br_thk">
			<Description><![CDATA["Brick Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.065</Value>
		</Length>
		<Length Name="gs_brick_sill_mort_thk">
			<Description><![CDATA["Mortar Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.015</Value>
		</Length>

		<!-- gs_board_inside: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_board_inside">
			<Description><![CDATA["Board"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_board_width">
			<Description><![CDATA["Board Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.51</Value>
		</Length>
		<Length Name="gs_board_thk">
			<Description><![CDATA["Board Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_board_nosing">
			<Description><![CDATA["Board Nosing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Angle Name="gs_board_angle">
			<Description><![CDATA["Board Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="gs_board_ovhg_left">
			<Description><![CDATA["Board Overhang Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_board_ovhg_right">
			<Description><![CDATA["Board Overhang Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_board_slip_in">
			<Description><![CDATA["Board Slip-in Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_board_curved">
			<Description><![CDATA["Board is Curved in Curved Walls"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iBoardInPolyWall">
			<Description><![CDATA["Board in Polygonal Walls"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- bVentilationProfile: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bVentilationProfile">
			<Description><![CDATA["Natural Ventilation"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iVentilationProfileType">
			<Description><![CDATA["Natural Ventilation Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bEnableVentilationProfile">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="VentilationProfileHeight">
			<Description><![CDATA["Profile Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.065</Value>
		</Length>

		<!-- bSunshade: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bSunshade">
			<Description><![CDATA["Sunshade"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_sunShade_iType">
			<Description><![CDATA["Sunshade Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>5</Value>
		</Integer>
		<Integer Name="gs_sunShade_typeEnable">
			<Description><![CDATA["Enabled Sunshade Types"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>126</Value>
		</Integer>
		<Integer Name="gs_sunShade_typeDisableByObject">
			<Description><![CDATA["Disabled Sunshade Types by Objects"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_sunShade_iCashedEnableTypes">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="6" SecondDimension="0">
				<AVal Row="1">1</AVal>
				<AVal Row="2">2</AVal>
				<AVal Row="3">3</AVal>
				<AVal Row="4">4</AVal>
				<AVal Row="5">5</AVal>
				<AVal Row="6">6</AVal>
			</ArrayValues>
		</Integer>
		<Integer Name="gs_shutter_nPanels">
			<Description><![CDATA["Number of Panels"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_shutter_nPanels2">
			<Description><![CDATA["Number of Panels 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_shutter_panelPos">
			<Description><![CDATA["Panel Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Symmetric"]]></Value>
		</String>
		<Integer Name="gs_shutter_iPanelPos">
			<Description><![CDATA["Panel Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_sunShade_bAutomaticHeight">
			<Description><![CDATA["Automatic Shutter Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_sunShade_height">
			<Description><![CDATA["Panel Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutter_innerOffset">
			<Description><![CDATA["Inner Offset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutter_closingDepth">
			<Description><![CDATA["Closing Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_shutter_bExtraFrame">
			<Description><![CDATA["Extra Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutter_extraFrameWidth">
			<Description><![CDATA["Extra Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutter_extraFrameThk">
			<Description><![CDATA["Extra Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<String Name="gs_slidingShutter_cover">
			<Description><![CDATA["Cover Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["None"]]></Value>
		</String>
		<Integer Name="gs_slidingShutter_iCover">
			<Description><![CDATA["Cover Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_slidingShutter_railWidth">
			<Description><![CDATA["Rail Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.003</Value>
		</Length>
		<Length Name="gs_slidingShutter_stickLength">
			<Description><![CDATA["Hanging Stick Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="gs_slidingShutter_stickRad">
			<Description><![CDATA["Hanging Stick Radius"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.005</Value>
		</Length>
		<Length Name="gs_slidingShutter_panelDist">
			<Description><![CDATA["Panel Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.006</Value>
		</Length>
		<String Name="gs_foldingShutter_stacking">
			<Description><![CDATA["Stacking Direction"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Inside"]]></Value>
		</String>
		<Integer Name="gs_foldingShutter_iStacking">
			<Description><![CDATA["Stacking Direction"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_foldingShutter_ovhg">
			<Description><![CDATA["Outside Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_outFoldingShutter_panelIn">
			<Description><![CDATA["Inner Panel Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="gs_shutter_opened">
			<Description><![CDATA["Open in 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="gs_shutter_opAngle">
			<Description><![CDATA["3D Opening Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>180</Value>
		</Angle>
		<Length Name="gs_shutter_opLength">
			<Description><![CDATA["3D Opening Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="gs_shutter_closedLength">
			<Description><![CDATA["3D Closed Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutter_opLength_1">
			<Description><![CDATA["3D Opening Length 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="gs_shutter_opLength_2">
			<Description><![CDATA["3D Opening Length 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="gs_shutter_opHeight">
			<Description><![CDATA["3D Opening Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="gs_shutter_closedHeight">
			<Description><![CDATA["3D Closed Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_sunShade_bShowIn2D">
			<Description><![CDATA["Show 2D Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sunShade_bShowOpline">
			<Description><![CDATA["Show Opening Lines on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_shutterPanelTitle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutterPanelTitle">
			<Description><![CDATA["Panel Parameters"]]></Description>
		</Title>
		<String Name="gs_shutPanel_type">
			<Description><![CDATA["Panel Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="gs_shutPanel_iType">
			<Description><![CDATA["Panel Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cust_shutterPanel">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="gs_shutPanel_Thk">
			<Description><![CDATA["Panel Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_shutPanel_frameWidth">
			<Description><![CDATA["Panel Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.0025</Value>
		</Length>
		<Boolean Name="gs_shutPanel_BDiffBottomFrame">
			<Description><![CDATA["Different Bottom Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutPanel_frameWidthBottom">
			<Description><![CDATA["Frame Width Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Boolean Name="gs_shutPanel_bAutomaticWidth">
			<Description><![CDATA["Automatic Shutter Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_shutPanel_panelWidth">
			<Description><![CDATA["Panel Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutPanel_fieldThk">
			<Description><![CDATA["Panel Fill Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutPanel_louverThk">
			<Description><![CDATA["Louver Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutPanel_louverWidth">
			<Description><![CDATA["Louver Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Angle Name="gs_shutPanel_louverAngle">
			<Description><![CDATA["Louver Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>30</Value>
		</Angle>
		<Length Name="gs_shutPanel_midFrameHorW">
			<Description><![CDATA["Horizontal Frame Divider Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_shutPanel_midFrameVertW">
			<Description><![CDATA["Vertical Frame Divider Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Integer Name="gs_shutPanel_nHoleHor">
			<Description><![CDATA["Holes Number Horizontal"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>5</Value>
		</Integer>
		<Integer Name="gs_shutPanel_nHoleVert">
			<Description><![CDATA["Holes Number Vertical"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8</Value>
		</Integer>
		<Length Name="gs_shutPanel_holeRadius">
			<Description><![CDATA["Hole Radius"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutPanel_ZBoardW">
			<Description><![CDATA["Vertical Board Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_shutPanel_ZWidth">
			<Description><![CDATA["Z Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_shutPanel_ZThk">
			<Description><![CDATA["Z Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_shutPanel_boardThkVert">
			<Description><![CDATA["Vertical Boards Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_shutPanel_boardThkHor">
			<Description><![CDATA["Horizontal Boards Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_shutPanel_vertBoardW">
			<Description><![CDATA["Vertical Boards Approximate Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Length Name="gs_shutPanel_horBoardW">
			<Description><![CDATA["Horizontal Boards Approximate Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.115</Value>
		</Length>

		<!-- gs_shutRollingTitle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutRollingTitle">
			<Description><![CDATA["Rolling Shutter Parameters"]]></Description>
		</Title>
		<String Name="gs_shutRoll_placement">
			<Description><![CDATA["Rolling Shutter Placement"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["On Facade"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iPlacement">
			<Description><![CDATA["Rolling Shutter Placement"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_shutRoll_placementEnable">
			<Description><![CDATA["Enabled Placement Types"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_shutRoll_boxType">
			<Description><![CDATA["Box Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Rectangular"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iBoxType">
			<Description><![CDATA["Box Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_shutRoll_railPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["On Casing"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iRailPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_shutRoll_showCasingBehind">
			<Description><![CDATA["Show Casing behind Sunshade"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_shutRoll_cutWallBehind">
			<Description><![CDATA["Insulation behind Box"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_shutRoll_bIncludeBoxHeight">
			<Description><![CDATA["Include Height in Wallhole Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutRoll_boxHeight">
			<Description><![CDATA["Box Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="gs_shutRoll_boxWidth">
			<Description><![CDATA["Box Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Angle Name="gs_shutRoll_boxAngle">
			<Description><![CDATA["Box Top Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</Angle>
		<String Name="gs_shutRoll_boxDefaultSize">
			<Description><![CDATA["Box Default Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Reveal Width"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iBoxDefaultSize">
			<Description><![CDATA["Box Default Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_shutRoll_boxOffsetLeft">
			<Description><![CDATA["Box Left Offset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_boxOffsetRight">
			<Description><![CDATA["Box Right Offset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_railDepth">
			<Description><![CDATA["Depth of Rails"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.0725</Value>
		</Length>
		<Length Name="gs_shutRoll_distFromWall">
			<Description><![CDATA["Distance from Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_distFromHead">
			<Description><![CDATA["Distance from Header"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_segmentWidth">
			<Description><![CDATA["Slat Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>

		<!-- gs_shutLamTitle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutLamTitle">
			<Description><![CDATA["Rolling Shutter Parameters"]]></Description>
		</Title>
		<String Name="gs_shutLam_placement">
			<Description><![CDATA["Venetian Blinds Placement"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Fixed on Facade"]]></Value>
		</String>
		<Integer Name="gs_shutLam_iPlacement">
			<Description><![CDATA["Venetian Blinds Placement"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_shutLam_placementEnable">
			<Description><![CDATA["Enabled Placement Types"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_shutLam_cutWallBehind">
			<Description><![CDATA["Insulation behind box"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutLam_boxHeight">
			<Description><![CDATA["Box Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="gs_shutLam_boxWidth">
			<Description><![CDATA["Box Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="gs_shutLam_bOpenBox">
			<Description><![CDATA["Opened Box"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_shutLam_bRail">
			<Description><![CDATA["Rail"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="gs_shutLam_railPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["On Casing"]]></Value>
		</String>
		<Integer Name="gs_shutLam_iRailPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_shutLam_showCasingBehind">
			<Description><![CDATA["Show Casing behind Sunshade"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutLam_coverWidth">
			<Description><![CDATA["Cover Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam_distFromWall">
			<Description><![CDATA["Distance from Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam_distFromHead">
			<Description><![CDATA["Distance from Header"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam_segmentWidth">
			<Description><![CDATA["Segment Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Angle Name="gs_shutLam_rotation">
			<Description><![CDATA["Rotation Angle of Slats"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Angle>

		<!-- gs_shutLamTitle2: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutLamTitle2">
			<Description><![CDATA["Rolling Shutter Parameters"]]></Description>
		</Title>
		<Length Name="gs_shutLam2_boxHeight">
			<Description><![CDATA["Box Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_boxWidth">
			<Description><![CDATA["Box Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_distFromWindow">
			<Description><![CDATA["Distance from Window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_distFromHead">
			<Description><![CDATA["Distance from Header"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_axisFromHead">
			<Description><![CDATA["Box Axis Height from Header"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam2_segmentWidth">
			<Description><![CDATA["Segment Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Angle Name="gs_shutLam2_rotation">
			<Description><![CDATA["Rotation Angle of Slats"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Angle>

		<!-- bMasonryArch: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bMasonryArch">
			<Description><![CDATA["Masonry Arch"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_masonry_arch_int">
			<Description><![CDATA["Masonry Arch"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<String Name="gs_masonry_arch_structure">
			<Description><![CDATA["Masonry Arch Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Stucco Arch"]]></Value>
		</String>
		<Integer Name="gs_masonry_arch_structure_int">
			<Description><![CDATA["Masonry Arch Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_AutomaticArchHeight">
			<Description><![CDATA["Arch on Header"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_MasonryArch_height">
			<Description><![CDATA["Distance between Arch and Window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_NicheBelowArch">
			<Description><![CDATA["Niche below Arch"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_masonry_arch_ovhg_left">
			<Description><![CDATA["Masonry Arch Overhang Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_masonry_arch_ovhg_right">
			<Description><![CDATA["Masonry Arch Overhang Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_masonry_arch_rise">
			<Description><![CDATA["Masonry Arch Rise"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Angle Name="gs_masonry_arch_skewback_angle">
			<Description><![CDATA["Skewback Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>75</Value>
		</Angle>
		<Length Name="gs_masonry_arch_proj">
			<Description><![CDATA["Masonry Arch Projection"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_masonry_arch_height">
			<Description><![CDATA["Masonry Arch Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Length Name="gs_masonry_arch_depth">
			<Description><![CDATA["Masonry Arch Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.12</Value>
		</Length>
		<Length Name="gs_masonry_arch_rearHoleDepth">
			<Description><![CDATA["Rear Hole Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_masonry_arch_brick_thk">
			<Description><![CDATA["Brick Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.065</Value>
		</Length>
		<Length Name="gs_masonry_arch_mort_thk">
			<Description><![CDATA["Mortar Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_masonry_arch_keystone_width">
			<Description><![CDATA["Keystone Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_masonry_arch_keystone_osize">
			<Description><![CDATA["Keystone Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_masonry_arch_keystone_proj">
			<Description><![CDATA["Keystone Projection"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Boolean Name="bCustomMatNicheTop">
			<Description><![CDATA["Custom Niche Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- Faschen: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="Faschen">
			<Description><![CDATA["Ornamental Window Moldings"]]></Description>
		</Title>
		<Boolean Name="gs_faschen_left">
			<Description><![CDATA["Ornamental Window Molding Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_faschen_bottom">
			<Description><![CDATA["Ornamental Window Molding Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_faschen_right">
			<Description><![CDATA["Ornamental Window Molding Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_faschen_top">
			<Description><![CDATA["Ornamental Window Molding Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iFaschenTyp">
			<Description><![CDATA["Ornamental Window Molding Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_faschen_A">
			<Description><![CDATA["Width Left/Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.12</Value>
		</Length>
		<Length Name="gs_faschen_C">
			<Description><![CDATA["Height of Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Length Name="gs_faschen_B">
			<Description><![CDATA["Height of Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Boolean Name="gs_faschen_R">
			<Description><![CDATA["Default Right Side Ornamental Window Molding"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_faschen_R_height">
			<Description><![CDATA["Height of the Right Side Ornamental Window Molding"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Boolean Name="gs_faschen_L">
			<Description><![CDATA["Default Left Side Ornamental Window Molding"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_faschen_L_height">
			<Description><![CDATA["Height of the Left Side Ornamental Window Moldings"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Boolean Name="gs_faschen_t">
			<Description><![CDATA["Ornamental Window Molding Depth >= Reveal Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_faschen_width">
			<Description><![CDATA["Depth of Ornamental Window Molding"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.12</Value>
		</Length>
		<Length Name="gs_faschen_brick_thk">
			<Description><![CDATA["Brick Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.065</Value>
		</Length>
		<Length Name="gs_faschen_mort_thk">
			<Description><![CDATA["Mortar Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<FillPattern Name="gs_faschen_fill">
			<Description><![CDATA["Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</FillPattern>
		<PenColor Name="gs_faschen_fg">
			<Description><![CDATA["Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<PenColor Name="gs_faschen_bg">
			<Description><![CDATA["Section Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_faschen_pen">
			<Description><![CDATA["3D Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Material Name="gs_faschen_plaster_mat">
			<Description><![CDATA["Plaster Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="gs_faschen_brick_mat">
			<Description><![CDATA["Brick Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</Material>
		<Material Name="gs_faschen_mort_mat">
			<Description><![CDATA["Mortar Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>66</Value>
		</Material>

		<!-- gs_reveal_type_new: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_reveal_type_new">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["No Reveal - Edge"]]></Value>
		</String>
		<Integer Name="gs_reveal_type_int">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_reveal_type_bottom">
			<Description><![CDATA["Bottom Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["No Reveal"]]></Value>
		</String>
		<Integer Name="gs_reveal_type_bottom_int">
			<Description><![CDATA["Bottom Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="gs_wido_sill">
			<Description><![CDATA["Reveal Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_wido_sill">
			<Description><![CDATA["Reveal Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="gs_reveal_type">
			<Description><![CDATA["Outer Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["No Reveal"]]></Value>
		</String>
		<Integer Name="gs_reveal_doubleOuterTypeInt">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_reveal_double_innerType">
			<Description><![CDATA["Inner Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["No Reveal"]]></Value>
		</String>
		<Integer Name="gs_reveal_doubleInnerTypeInt">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_reveal_uniform">
			<Description><![CDATA["Uniform Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_reveal_left">
			<Description><![CDATA["Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_right">
			<Description><![CDATA["Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_top">
			<Description><![CDATA["Head Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_bottom">
			<Description><![CDATA["Sill Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerTop">
			<Description><![CDATA["Inner Head Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerBottom">
			<Description><![CDATA["Inner Sill Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerTop">
			<Description><![CDATA["Inner Head Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerBottom">
			<Description><![CDATA["Inner Sill Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_outer_jamb_depth">
			<Description><![CDATA["Outer Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Angle Name="gs_reveal_left_angle">
			<Description><![CDATA["Angle Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_right_angle">
			<Description><![CDATA["Angle Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_top_angle">
			<Description><![CDATA["Upper Side Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_bottom_angle">
			<Description><![CDATA["Bottom Side Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Boolean Name="gs_reveal_auto_changed_by_cc">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_mountingFrame">
			<Description><![CDATA["Mounting Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_mountingFrame_depth">
			<Description><![CDATA["Mounting Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_left">
			<Description><![CDATA["Mounting Frame Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_right">
			<Description><![CDATA["Mounting Frame Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_top">
			<Description><![CDATA["Mounting Frame Width Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_bottom">
			<Description><![CDATA["Mounting Frame Width Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>

		<!-- gs_turn_plaster: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_turn_plaster">
			<Description><![CDATA["Turn Plaster"]]></Description>
		</Title>
		<Boolean Name="gs_useWallFinishSkin">
			<Description><![CDATA["Use Wall Finish Component"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_maxPlasterThk">
			<Description><![CDATA["Plaster Thickness Limit"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Boolean Name="gs_bAutoTurnOut">
			<Description><![CDATA["Auto Turn Inside Face Plaster"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_bOverOut">
			<Description><![CDATA["Turn Inside Face Plaster"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_bAutoTurnIn">
			<Description><![CDATA["Auto Turn Outside Face Plaster"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_bOverIn">
			<Description><![CDATA["Turn Outside Face Plaster"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_turn_plaster_dim_2D">
			<Description><![CDATA["Dimensionable on 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_turn_plaster_show_3D">
			<Description><![CDATA["Show in 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_closure_type: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_closure_type">
			<Description><![CDATA["Closure Type"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["No Closure"]]></Value>
		</String>
		<Integer Name="gs_closure_type_int">
			<Description><![CDATA["Closure Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cavity_side">
			<Description><![CDATA["Turn Skin on Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Both"]]></Value>
		</String>
		<Integer Name="iCavityClosureSide">
			<Description><![CDATA["Turn Skin on Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_nTurn">
			<Description><![CDATA["Number of Skins to Turn"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_nTurnDir">
			<Description><![CDATA["Number from"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Outside Face"]]></Value>
		</String>
		<Integer Name="iCavityClosureTurnDir">
			<Description><![CDATA["Number from"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_cc_dutch_ShowLeft">
			<Description><![CDATA["Place Closer on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowRight">
			<Description><![CDATA["Place Closer on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowTop">
			<Description><![CDATA["Place Closer on Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowBottom">
			<Description><![CDATA["Place Closer on Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_cc_dutch_ClosureToSkin">
			<Description><![CDATA["Place Closer to Skin"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cc_dutch_ClosureToSide_str">
			<Description><![CDATA["Place Closer from Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_cc_dutch_ClosureToSide">
			<Description><![CDATA["Place Closer from Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_cc_dutch_GapAtOutsideSkin">
			<Description><![CDATA["Gap at Outside Skin"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_TurnToClosure">
			<Description><![CDATA["Turn Skin to Closer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_cc_dutch_TurnToClosureOffs">
			<Description><![CDATA["Distance of Skin from Closer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_cc_dutch_widthJoint">
			<Description><![CDATA["Closer Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.038</Value>
		</Length>
		<Length Name="gs_cc_dutch_thkJoint">
			<Description><![CDATA["Closer Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Boolean Name="gs_bJoint">
			<Description><![CDATA["Insert Insulation Strip"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_showJoint">
			<Description><![CDATA["Show Insulation Strip"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_thkJoint">
			<Description><![CDATA["Strip Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<PenColor Name="gs_penJoint">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</PenColor>
		<LineType Name="gs_ltJoint">
			<Description><![CDATA["Contour Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<FillPattern Name="gs_fillJoint">
			<Description><![CDATA["Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</FillPattern>
		<PenColor Name="gs_penJointFg">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_penJointBg">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>93</Value>
		</PenColor>
		<Boolean Name="gs_cc_dutch_matJointCustom">
			<Description><![CDATA["Custom Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Material Name="gs_cc_dutch_matJoint">
			<Description><![CDATA["Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Length Name="gs_widthPlug">
			<Description><![CDATA["Profile Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.075</Value>
		</Length>
		<PenColor Name="gs_penPlug">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</PenColor>
		<LineType Name="gs_ltPlug">
			<Description><![CDATA["Contour Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<FillPattern Name="gs_fillPlug">
			<Description><![CDATA["Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</FillPattern>
		<PenColor Name="gs_penPlugFg">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_penPlugBg">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>93</Value>
		</PenColor>
		<Length Name="gs_custom_cc_array_left">
			<Description><![CDATA["Left Side Skin Data"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="8" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0.015</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0.015</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">1</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0.015</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">1</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0.015</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">1</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0.015</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="4" Row="5">1</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0.015</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="4" Row="6">1</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0.015</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="4" Row="7">1</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0.015</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="4" Row="8">1</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_custom_cc_array_right">
			<Description><![CDATA["Right Side Skin Data"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="8" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0.015</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0.015</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">1</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0.015</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">1</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0.015</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">1</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0.015</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="4" Row="5">1</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0.015</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="4" Row="6">1</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0.015</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="4" Row="7">1</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0.015</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="4" Row="8">1</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="iCustomCCEditJambSide">
			<Description><![CDATA["Edited Jamb Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCustomCCEditWallSide">
			<Description><![CDATA["Edited Wall Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCustomCCEditSkin">
			<Description><![CDATA["Edited Skin Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_custom_cc_turn_in">
			<Description><![CDATA["Turn-in Skin"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_custom_cc_plaster">
			<Description><![CDATA["Consider Skin as Plaster"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iCustomCCThicknessType">
			<Description><![CDATA["Turn-in Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_custom_cc_thickness">
			<Description><![CDATA["Custom Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.015</Value>
		</Length>
		<Integer Name="iCustomCCOrientation">
			<Description><![CDATA["Hatch Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_custom_cc_separator">
			<Description><![CDATA["Separating Line at Turn-in"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_custom_cc_separator_pen">
			<Description><![CDATA["Separating Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<Length Name="gs_custom_cc_overhang">
			<Description><![CDATA["Skin Overhang to Frame Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_custom_cc_last_sel_side">
			<Description><![CDATA["Last Selected Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_closure_auto_changed">
			<Description><![CDATA["Closure Method Changed Automatically"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_window_stack: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_stack">
			<Description><![CDATA["Ganging"]]></Description>
		</Title>
		<Boolean Name="gs_stack_left">
			<Description><![CDATA["Connection on the Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_right">
			<Description><![CDATA["Connection on the Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_top">
			<Description><![CDATA["Connection on the Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_bottom">
			<Description><![CDATA["Connection on the Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_parapet_wall_inset: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_parapet_wall_inset">
			<Description><![CDATA["Wall Inset"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_parapet_inset_thk">
			<Description><![CDATA["Depth of Inset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<String Name="gs_parapet_sizes_st">
			<Description><![CDATA["Wall Inset Sizes"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Automatic"]]></Value>
		</String>
		<Integer Name="iParapetSize">
			<Description><![CDATA["Wall Inset Sizes"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_parapet_autodim">
			<Description><![CDATA["Auto Width and Height Dimensions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_parapet_width">
			<Description><![CDATA["Parapet Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_parapet_right">
			<Description><![CDATA["Overhang Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_parapet_left">
			<Description><![CDATA["Overhang Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_parapet_height">
			<Description><![CDATA["Parapet Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Boolean Name="gs_parapet_2D">
			<Description><![CDATA["Show Hidden Parapet"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="gs_parapet_bottom_st">
			<Description><![CDATA["Wall Inset Bottom at"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Current Story"]]></Value>
		</String>
		<Integer Name="iParapetBottom">
			<Description><![CDATA["Wall Inset Bottom at"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_parapet_botelev">
			<Description><![CDATA["Bottom Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<LineType Name="gs_parapet_line">
			<Description><![CDATA["Hidden Parapet Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>

		<!-- gs_openingParams: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_openingParams">
			<Description><![CDATA["Opening"]]></Description>
		</Title>
		<Angle Name="gs_open_2d">
			<Description><![CDATA["2D Opening Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_open_2d_s">
			<Description><![CDATA["2D Opening Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_open_3d">
			<Description><![CDATA["3D Opening Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_open_3d_s">
			<Description><![CDATA["3D Opening Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="gs_open2d">
			<Description><![CDATA["2D Opening Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_open3D">
			<Description><![CDATA["3D Opening Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bOverride_MVO_2D">
			<Description><![CDATA["Override MVO for 2D Symbolic Display"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="or_swingLineType">
			<Description><![CDATA["Opening Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<String Name="or_SwingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Curved"]]></Value>
		</String>
		<Integer Name="or_iSwingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="or_SlidingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["None"]]></Value>
		</String>
		<Integer Name="or_iSlidingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<PenColor Name="or_opLinePen">
			<Description><![CDATA["Opening Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Integer Name="or_iOpLinePen">
			<Description><![CDATA["Opening Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Boolean Name="bOverride_MVO_3D">
			<Description><![CDATA["Override MVO for 3D Projections"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="or_bOplines3d">
			<Description><![CDATA["Show Opening Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="or_opLineType3dIn">
			<Description><![CDATA["Line Type Opening Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Dashed"]]></Value>
		</String>
		<Integer Name="or_iOpLineType3dIn">
			<Description><![CDATA["Line Type Opening Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="or_opLineType3dOut">
			<Description><![CDATA["Line Type Opposite Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Solid Line"]]></Value>
		</String>
		<Integer Name="or_iOpLineType3dOut">
			<Description><![CDATA["Line Type Opposite Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="or_oplineStyle">
			<Description><![CDATA["Line Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Handle"]]></Value>
		</String>
		<Integer Name="or_iOplineStyle">
			<Description><![CDATA["Line Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="b2ColumnsOnOpLineUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bHideOplineStyle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bLockOplineStyle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDisable2DOverride">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDisable3DOverride">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDisableSwingType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iOpeningParamType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D and Section Representation"]]></Description>
		</Title>
		<Integer Name="gs_iShowSashOnSymbol">
			<Description><![CDATA["Sash to Show on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<PenColor Name="gs_pen_2D">
			<Description><![CDATA["Uncut Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_frame_pen_cont">
			<Description><![CDATA["Cut Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<PenColor Name="gs_trim_pen_cont">
			<Description><![CDATA["Casing Cut Line Pen on Both Sides"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<String Name="gs_wcont_line">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Off"]]></Value>
		</String>
		<Integer Name="iWallContourLine">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<LineType Name="gs_wcont_line_in">
			<Description><![CDATA["Wall Contour Line Type Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_line_out">
			<Description><![CDATA["Wall Contour Line Type Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_hidden_line_in">
			<Description><![CDATA["Hidden Wall Contour Line Type Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<LineType Name="gs_wcont_hidden_line_out">
			<Description><![CDATA["Hidden Wall Contour Line Type Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<PenColor Name="gs_wcont_line_pen">
			<Description><![CDATA["Wall Contour Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Boolean Name="gs_bFills">
			<Description><![CDATA["Use Fills"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<FillPattern Name="gs_fillFr">
			<Description><![CDATA["Frame Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penFr_fg">
			<Description><![CDATA["Frame Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_penFr_bg">
			<Description><![CDATA["Frame Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_fillSash">
			<Description><![CDATA["Sash Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</FillPattern>
		<PenColor Name="gs_penSash_fg">
			<Description><![CDATA["Sash Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_penSash_bg">
			<Description><![CDATA["Sash Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_fillShCover">
			<Description><![CDATA["Uncut Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penShCov_fg">
			<Description><![CDATA["Uncut Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>103</Value>
		</PenColor>
		<PenColor Name="gs_penShCov_bg">
			<Description><![CDATA["Uncut Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_wallhole_fill">
			<Description><![CDATA["Plan Symbol Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_wallhole_pen_fg">
			<Description><![CDATA["Plan Symbol Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_wallhole_pen_bg">
			<Description><![CDATA["Plan Symbol Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_sill_pen_3D">
			<Description><![CDATA["Sill 3D Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sill_pen_sectcont">
			<Description><![CDATA["Section Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<FillPattern Name="gs_sill_fill">
			<Description><![CDATA["Sill Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_sill_pen_fg">
			<Description><![CDATA["Sill Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_sill_pen_bg">
			<Description><![CDATA["Sill Section Fill Bkg. Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_sill_pen_ins_sectcont">
			<Description><![CDATA["Section Insulation Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<FillPattern Name="gs_sill_fill_ins_fg">
			<Description><![CDATA["Section Insulation Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</FillPattern>
		<PenColor Name="gs_sill_pen_ins_fg">
			<Description><![CDATA["Section Insulation Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sill_pen_ins_bg">
			<Description><![CDATA["Section Insulation Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_board_pen_3D">
			<Description><![CDATA["Board 3D Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_board_pen_sectcont">
			<Description><![CDATA["Section Insulation Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<FillPattern Name="gs_board_fill">
			<Description><![CDATA["Board Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_board_pen_fg">
			<Description><![CDATA["Board Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_board_pen_bg">
			<Description><![CDATA["Board Section Fill Bkg. Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_trim_fill_in">
			<Description><![CDATA["Casing Fill Type Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_trim_pen_fg_in">
			<Description><![CDATA["Casing Fill Pen Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_trim_pen_bg_in">
			<Description><![CDATA["Casing Fill Background Pen Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_trim_fill_out">
			<Description><![CDATA["Casing Fill Type Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_trim_pen_fg_out">
			<Description><![CDATA["Casing Fill Pen Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_trim_pen_bg_out">
			<Description><![CDATA["Casing Fill Background Pen Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_masonry_arch_fill">
			<Description><![CDATA["Arch Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_masonry_arch_pen_fg">
			<Description><![CDATA["Arch Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_masonry_arch_pen_bg">
			<Description><![CDATA["Arch Section Fill Bkg. Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<LineType Name="gs_sunShade_lineType">
			<Description><![CDATA["Sunshade Symbol Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="gs_sunShade_cutLinesPen">
			<Description><![CDATA["Sunshade Cut Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_unCutLinesPen">
			<Description><![CDATA["3D/Section Uncut Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<FillPattern Name="gs_sunShade_cutFillType">
			<Description><![CDATA["Sunshade Cut Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_sunShade_cutFillPen">
			<Description><![CDATA["Sunshade Cut Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_cutFillBackPen">
			<Description><![CDATA["Sunshade Cut Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>
		<FillPattern Name="gs_sunShade_insFillType">
			<Description><![CDATA["Sunshade Insulation Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</FillPattern>
		<PenColor Name="gs_sunShade_insFillPen">
			<Description><![CDATA["Sunshade Insulation Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_insFillBackPen">
			<Description><![CDATA["Sunshade Insulation Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<PenColor Name="gs_frame_pen">
			<Description><![CDATA["Frame Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<PenColor Name="gs_sash_pen">
			<Description><![CDATA["Sash Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<PenColor Name="gs_glass_pen">
			<Description><![CDATA["Glass Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<PenColor Name="gs_masonry_arch_pen">
			<Description><![CDATA["Masonry Arch Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<Integer Name="res">
			<Description><![CDATA["Curve Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- gs_window_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_material">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Material Name="gs_frame_mat">
			<Description><![CDATA["Frame Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_sash_mat">
			<Description><![CDATA["Sash Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_glass_mat">
			<Description><![CDATA["Glass Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Material>
		<Material Name="gs_grill_mat">
			<Description><![CDATA["Grid Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Boolean Name="bLinkCasingSurfaces">
			<Description><![CDATA["Uniform Casing Surfaces"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="stored_material">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="2">
				<AVal Column="1" Row="1">-9999</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="1" Row="3">15</AVal>
				<AVal Column="2" Row="3">15</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<Material Name="gs_trim_in_mat">
			<Description><![CDATA["Interior Casing Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_trim_out_mat">
			<Description><![CDATA["Exterior Casing Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_shutPanel_materialMain">
			<Description><![CDATA["Shutter Panel Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_shutPanel_materialAcc">
			<Description><![CDATA["Shutter Panel Frame Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_shutRoll_matBox">
			<Description><![CDATA["Rolling Shutter Box Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="gs_shutRoll_matSegm">
			<Description><![CDATA["Rolling Shutter Blades Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>60</Value>
		</Material>
		<Material Name="gs_shutRoll_matRail">
			<Description><![CDATA["Rolling Shutter Rail Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>60</Value>
		</Material>
		<Material Name="gs_shutLam_matBox">
			<Description><![CDATA["Venetian Blinds Box Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="gs_shutLam_matLam">
			<Description><![CDATA["Venetian Blinds Segments Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>60</Value>
		</Material>
		<Material Name="gs_shutSliding_matRail">
			<Description><![CDATA["Sliding Shutter Rail Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="gs_sill_mat">
			<Description><![CDATA["Sill Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_brick_sill_mort_mat">
			<Description><![CDATA["Brick Sill Mortar Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Material>
		<Material Name="gs_board_mat">
			<Description><![CDATA["Board Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_apron_mat">
			<Description><![CDATA["Apron Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>59</Value>
		</Material>
		<Material Name="gs_masonry_arch_brick_mat">
			<Description><![CDATA["Masonry Arch Brick Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Material>
		<Material Name="gs_masonry_arch_mort_mat">
			<Description><![CDATA["Masonry Arch Mortar Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Material>
		<Material Name="gs_masonry_arch_keystone_mat">
			<Description><![CDATA["Masonry Arch Keystone Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>37</Value>
		</Material>
		<Material Name="matNicheTop">
			<Description><![CDATA["Niche Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>101</Value>
		</Material>
		<Material Name="matCornerColumn">
			<Description><![CDATA["Corner Column Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>

		<!-- ac_details: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="ac_details">
			<Description><![CDATA["Computed Oversize Values"]]></Description>
		</Title>
		<Length Name="ac_left_oversize">
			<Description><![CDATA["AC Left Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_right_oversize">
			<Description><![CDATA["AC Right Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_upper_oversize">
			<Description><![CDATA["AC Upper Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_lower_oversize">
			<Description><![CDATA["AC Lower Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="ac_zone_on_reveal_side">
			<Description><![CDATA["Opening Direction"]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>

		<!-- iTypeDemolitionFill: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Integer Name="iTypeDemolitionFill">
			<Description><![CDATA["Demolition / New construction"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="gs_Demolition_fill">
			<Description><![CDATA["Demolition Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</FillPattern>
		<PenColor Name="gs_Demolition_pen_fg">
			<Description><![CDATA["Demolition Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<PenColor Name="gs_Demolition_pen_bg">
			<Description><![CDATA["Demolition Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_New_fill">
			<Description><![CDATA["New Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</FillPattern>
		<PenColor Name="gs_New_pen_fg">
			<Description><![CDATA["New Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<PenColor Name="gs_New_pen_bg">
			<Description><![CDATA["New Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_new_symb_fill">
			<Description><![CDATA["New Wall Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</FillPattern>
		<PenColor Name="gs_new_symb_pen_Fg">
			<Description><![CDATA["New Wall Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_new_symb_pen_bg">
			<Description><![CDATA["New Wall Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<Length Name="gs_new_symb_width_r">
			<Description><![CDATA["New Wall Fill Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="gs_new_symb_width_l">
			<Description><![CDATA["New Wall Fill Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="gs_bShowNewOnCC">
			<Description><![CDATA["Show new construction on Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_Demolition_linetype">
			<Description><![CDATA["Demolition line type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<Boolean Name="gs_bShowDemolitionPar">
			<Description><![CDATA["Show Demolition/New parameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_transom_display: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_transom_display">
			<Description><![CDATA["Display as Transom"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_transom_display_pen">
			<Description><![CDATA["Wall End Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<LineType Name="gs_transom_display_linetype">
			<Description><![CDATA["Wall End Line Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>21</Value>
		</LineType>

		<!-- gs_head_symbol: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_head_symbol">
			<Description><![CDATA["Head Depth on Symbol"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_head_symbol_line">
			<Description><![CDATA["Head Depth Symbol Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>21</Value>
		</LineType>
		<PenColor Name="gs_head_symbol_pen">
			<Description><![CDATA["Head Depth Symbol Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</PenColor>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_ui_sub_tabpage_closure">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bWallContHiddenLineIn">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iWindowClass">
			<Description><![CDATA["Historic Window"]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="iWindowType">
			<Description><![CDATA["Historic Window"]]></Description>
			<Value>10</Value>
		</Integer>
		<Boolean Name="bWindowSWE">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
		</Title>
		<Boolean Name="gs_bOpeningToZone">
			<Description><![CDATA["Window belongs to the Zone into which it opens"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_glazing">
			<Description><![CDATA["Glazing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_headdet">
			<Description><![CDATA["Header Detail"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_jambdet">
			<Description><![CDATA["Jamb Detail"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_silldet">
			<Description><![CDATA["Sill Detail"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_hwsetno">
			<Description><![CDATA["Hardware Set"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_optype">
			<Description><![CDATA["Operation Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_finish">
			<Description><![CDATA["Finish"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_elevation">
			<Description><![CDATA["Elevation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_hings">
			<Description><![CDATA["Hinges"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_lockset">
			<Description><![CDATA["Lockset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="gs_list_glassarea_tmp">
			<Description><![CDATA["Total Glazed Area"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Boolean Name="gs_list_glassarea_override">
			<Description><![CDATA["Override Glazed Area"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<RealNum Name="gs_list_glassarea">
			<Description><![CDATA["Total Glazed Area"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="gs_list_glassperimeter">
			<Description><![CDATA["Total Glass Perimeter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_heattransfer">
			<Description><![CDATA["U-value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Boolean Name="bEnableNEDFireRating">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_list_firerating">
			<Description><![CDATA["Fire Rating"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iNEDFireRating">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="NEDFireRatingPos">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="gs_list_ventilation">
			<Description><![CDATA["Ventilation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_acousticrating">
			<Description><![CDATA["Acoustic Rating"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Others"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory No."]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial No."]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["kg"]]></Value>
		</String>
		<String Name="ac_OpeningSide">
			<Description><![CDATA["Window Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="ifc_optypestr">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["Not Defined"]]></Value>
		</String>
		<Integer Name="ifc_optype">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="ifc_LiningDepth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_LiningThickness">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_MullionThickness">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<RealNum Name="ifc_FirstMullionOffset">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="ifc_SecondMullionOffset">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Length Name="ifc_TransomThickness">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<RealNum Name="ifc_FirstTransomOffset">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="ifc_SecondTransomOffset">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Length Name="ifc_WindowPanel">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
			</ArrayValues>
		</Length>
	</Parameters>
</ParamSection>
</Symbol>

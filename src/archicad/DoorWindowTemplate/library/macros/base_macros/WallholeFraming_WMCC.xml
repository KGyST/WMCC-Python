<Symbol IsArchivable="no" IsPlaceable="no" MainGUID="DB55765E-13F6-4123-91E5-56B09BA57211" MigrationValue="Normal" Owner="1196638531" Signature="1465080141" Version="34">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="no">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>6ACDA889-69B2-4EC5-936C-CB1DA7032A92</MainGUID>
	<MainGUID>F6AE9687-2BC7-4D47-88C9-8F793E1DE2D6</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

! Contact person: <NJ>

bFeedBack = (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40)

gs_sill_fill			= gs_bFills * gs_sill_fill
gs_sill_pen_fg			= gs_bFills * gs_sill_pen_fg
gs_sill_pen_bg			= gs_bFills * gs_sill_pen_bg
gs_board_fill			= gs_bFills * gs_board_fill
gs_board_pen_fg			= gs_bFills * gs_board_pen_fg
gs_board_pen_bg			= gs_bFills * gs_board_pen_bg
gs_treshold_fill		= gs_bFills * gs_treshold_fill
gs_treshold_pen_fg		= gs_bFills * gs_treshold_pen_fg
gs_treshold_pen_bg		= gs_bFills * gs_treshold_pen_bg
gs_trim_fill_in			= gs_bFills * gs_trim_fill_in
gs_trim_pen_bg_in		= gs_bFills * gs_trim_pen_bg_in
gs_trim_pen_fg_in		= gs_bFills * gs_trim_pen_fg_in
gs_trim_fill_out		= gs_bFills * gs_trim_fill_out
gs_trim_pen_fg_out		= gs_bFills * gs_trim_pen_fg_out
gs_trim_pen_bg_out		= gs_bFills * gs_trim_pen_bg_out
gs_shutter_fill			= gs_bFills * gs_sunShade_cutFillType
gs_shutter_fill_pen_fg	= gs_bFills * gs_sunShade_cutFillPen
gs_shutter_fill_pen_bg	= gs_bFills * gs_sunShade_cutFillBackPen

addy elevationOffset

! =============================================================================
! Draw Sill
! =============================================================================

dim sillPoly[]
sillPoly[1] 		= 0
sillBottom			= 0
sillBottomOutside	= 0
sillSideHeight		= 0
sillSideAngle		= 0
sillRight			= 0
sillLeft			= 0
sillLeft_sL			= 0
sillRight_sL		= 0
sillLeft_sR			= 0
sillRight_sR		= 0

if not(bFeedBack) & bEnableSill & bDrawSill & lod3D_Sill > 0 then
	if isWindow then
		leftFrameOffset		= gs_frame_width_left + gs_tolerance_left
		rightFrameOffset	= gs_frame_width + gs_tolerance_right
	else
		leftFrameOffset		= gs_sidelight_left  * gs_sidelight_width_left  + not(gs_sidelight_left)  * gs_frame_width_left  + gs_tolerance_left
		rightFrameOffset	= gs_sidelight_right * gs_sidelight_width_right + not(gs_sidelight_right) * gs_frame_width_right + gs_tolerance_right
	endif

	call "Sill_WMCC" parameters gs_macro_version = 12,
		B						= openingHeight,
		AC_Hole_Position_Angle	= AC_Hole_Position_Angle,
		AC_HoleSideMaterial		= AC_HoleSideMaterial,
		AC_WallType				= AC_WallType,
		AC_WindowInWallContour	= AC_WindowInWallContour,
		AC_WallContourPolygon	= AC_WallContourPolygon,
		AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
	! --- Wallhole Geometry
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		radSill					= radSill,
		WOD						= WOD,
		overSizeLower			= overSizeLower,
		offsY					= offsY,
		gs_reveal_nominal		= gs_reveal_nominal,
	! --- Sidelight
		gs_sidelight_left				= gs_sidelight_left,
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_right				= gs_sidelight_right,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Macro Control Parameters
		gs_IsCurved					= gs_IsCurved,
		bParalellInCurvedWalls		= bParalellInCurvedWalls,
		iWindowShape				= iWindowShape,
		bDoorWithSidelightSupport	= bDoorWithSidelightSupport,
	! --- Reveal Parameters
		iRevealType					= iRevealType,
		iSillRevealType				= iSillRevealType,
		gs_reveal_left_angle		= gs_reveal_left_angle,
		gs_reveal_right_angle		= gs_reveal_right_angle,
		leftRevealPnts				= leftWallFrameRevealPnts,
		iRevealPointsIdx			= iRevealPointsIdx,
		rightRevealPnts				= rightWallFrameRevealPnts,
		original_gs_reveal_bottom	= original_gs_reveal_bottom,
		gs_reveal_left_sL			= gs_reveal_left_sL,
		gs_reveal_right_sR			= gs_reveal_right_sR,
		gs_reveal_bottom			= gs_reveal_bottom,
		gs_reveal_bottom_sL			= gs_reveal_bottom_sL,
		gs_reveal_bottom_sR			= gs_reveal_bottom_sR,
		gs_reveal_outerBottom_angle	= gs_reveal_outerBottom_angle,
		gs_mountingFrame			= gs_mountingFrame,
		gs_mountingFrame_depth		= gs_mountingFrame_depth,
	! --- Turn Plaster
		gs_turn_plaster_show_3D	= gs_turn_plaster_show_3D,
		nSkinTurnOut			= nSkinTurnOut,
		nSkinTurnIn				= nSkinTurnIn,
		thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
		thkPlasterAtSillSlLeft	= thkPlasterAtSillSlLeft,
		thkPlasterAtSillRight	= thkPlasterAtSillRight,
		thkPlasterAtSillSlRight	= thkPlasterAtSillSlRight,
	! --- Corner Functions
		bLeftCornerFunction	= bLeftCornerFunction,
		leftCornerAngle		= leftCornerAngle,
		leftConnWallThk		= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle	= rightCornerAngle,
		rightConnWallThk	= rightConnWallThk,
	! --- Oversize
		gs_left_oversize	= gs_left_oversize,
		gs_right_oversize	= gs_right_oversize,
		gs_lower_oversize	= gs_lower_oversize,
		ac_right_oversize	= ac_right_oversize,
	! --- Casing
		bDrawOutsideTrim		= bDrawOutsideTrim,
		gs_trim_width_out	= gs_trim_width_out,
	! --- Window Sizes
		thresholdExtraHole3D = thresholdExtraHole3D,
	! --- Sill Parameters
		gs_sill_outside				= gs_sill_outside,
		gs_sill_outside_sl_left		= gs_sill_outside_sl_left,
		gs_sill_outside_sl_right	= gs_sill_outside_sl_right,
		bDrawSill			= bDrawSill,
		gs_fsill			= gs_fsill,
		iSillType			= iSillType,
		gs_sill_thk			= gs_sill_thk,
		gs_sill_nosing		= gs_sill_nosing,
		gs_sill_angle		= gs_sill_angle,
		gs_sill_ovhg_left	= gs_sill_ovhg_left,
		gs_sill_ovhg_right	= gs_sill_ovhg_right,
		gs_sill_slip_in		= gs_sill_slip_in,
		gs_sill_slip_wall	= gs_sill_slip_wall,
		gs_sill_holeDepthBehind = gs_sill_holeDepthBehind,
		gs_sill_width		= gs_sill_width,
		gs_sill_topWidth	= gs_sill_topWidth,
		gs_sill_topHeight	= gs_sill_topHeight,
		gs_sill_edge		= gs_sill_edge,
		gs_sill_element_thk	= gs_sill_element_thk,
		gs_sill_curved		= gs_sill_curved,
		gs_sill_ins_below	= gs_sill_ins_below,
		gs_board_thk		= gs_board_thk,
		gs_board_slip_in	= gs_board_slip_in,
		bShowSillSplice		= 1,
		gs_sill_ins_use_wall_skin = gs_sill_ins_use_wall_skin,

		gs_sill_oversize	= gs_sill_oversize,
		gs_sill_endthk		= gs_sill_endthk,
		gs_sill_elev		= gs_sill_elev,
		gs_sill_drip		= gs_sill_drip,
		gs_sill_dripnos		= gs_sill_dripnos,
		gs_sill_dripwidth	= gs_sill_dripwidth,
		iBrickSilldetlevel	= iBrickSilldetlevel,
		gs_brick_sill_br_thk= gs_brick_sill_br_thk,
		gs_brick_sill_mort_thk = gs_brick_sill_mort_thk,
	! --- 2D Representation
		gs_sill_pen_sectcont	= gs_sill_pen_sectcont,
		gs_sill_fill			= gs_sill_fill,
		gs_sill_pen_fg			= gs_sill_pen_fg,
		gs_sill_pen_bg			= gs_sill_pen_bg,
		gs_sill_pen_ins_sectcont= gs_sill_pen_ins_sectcont,
		gs_sill_fill_ins_fg		= gs_sill_fill_ins_fg,
		gs_sill_pen_ins_fg		= gs_sill_pen_ins_fg,
		gs_sill_pen_ins_bg		= gs_sill_pen_ins_bg,
	! --- 3D Representation
		lod3D				= lod3D,
		iLoD3D				= iLoD3D,
		lod3D_Sill			= lod3D_Sill,
		gs_frame_pen		= gs_frame_pen,
		gs_sill_pen_3D		= gs_sill_pen_3D,
	! --- Materials
		gs_sill_mat			= gs_sill_mat,
		gs_brick_sill_mort_mat	= gs_brick_sill_mort_mat,
	! --- Stacked Window
		gs_stack_left		= gs_stack_left,
		gs_stack_right		= gs_stack_right,
		gs_stack_bottom		= gs_stack_bottom,
		stSillEdge			= stSillEdge,

		leftFrameOffset		= leftFrameOffset,
		rightFrameOffset	= rightFrameOffset,
	returned_parameters sillRight,
						sillLeft,
						sillLeft_sL,
						sillRight_sL,
						sillLeft_sR,
						sillRight_sR,
						sillBottom,
						sillBottomOutside,
						sillSideHeight,
						sillSideAngle,
						sillPoly

endif

!! Sill geometry test ----------------------------------------------------------
!
!rotx -90
!addz sillBottom
!block 0.3, 0.3, 0
!addz sillSideHeight
!rotx -sillSideAngle
!block 0.3, 0.3, 0
!del 3
!del 1


! =============================================================================
! Draw Board
! =============================================================================

dim boardPoly[]
boardPoly[1] = 0
boardLeft_sL	= 0
boardRight_sL	= 0
boardLeft_sR	= 0
boardRight_sR	= 0
boardBottom		= 0
boardSideHeight	= 0
boardSideAngle	= 0

if not(bFeedBack) & bEnableBoard & bDrawBoard & lod3D_Board > 0 then

	call "Board_WMCC" parameters gs_macro_version = 12,
		B						= openingHeight,
		AC_Hole_Position_Angle	= AC_Hole_Position_Angle,
		AC_WallType				= AC_WallType,
		AC_WindowInWallContour	= AC_WindowInWallContour,
		AC_WallContourPolygon	= AC_WallContourPolygon,
		AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
	! --- Wallhole Geometry
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		radBoard				= radBoard,
		WOD						= WOD,
		overSizeLower			= overSizeLower,
		offsY					= offsY,
	! --- Sidelight
		gs_sidelight_left				= gs_sidelight_left,
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_right				= gs_sidelight_right,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Macro Control Parameters
		gs_IsCurved					= gs_IsCurved,
		bParalellInCurvedWalls		= bParalellInCurvedWalls,
		iWindowShape				= iWindowShape,
		bDoorWithSidelightSupport	= bDoorWithSidelightSupport,
	! --- Reveal Parameters
		iRevealType						= iRevealType,
		gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
		gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
		gs_reveal_left_angle			= gs_reveal_left_angle,
		gs_reveal_right_angle			= gs_reveal_right_angle,
		gs_reveal_splayed_innerBottom	= gs_reveal_splayed_innerBottom,
		gs_reveal_double_innerBottom	= gs_reveal_double_innerBottom,
		gs_reveal_double_innerBottom_sL	= gs_reveal_double_innerBottom_sL,
		gs_reveal_double_innerBottom_sR	= gs_reveal_double_innerBottom_sR,
		gs_reveal_bottom_angle			= gs_reveal_bottom_angle,
		leftRevealPnts					= leftWallFrameRevealPnts,
		rightRevealPnts					= rightWallFrameRevealPnts,
		iRevealPointsIdx				= iRevealPointsIdx,
	! --- Turn Plaster
		gs_turn_plaster_show_3D	= gs_turn_plaster_show_3D,
		thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
		thkPlasterAtBoardSlLeft	= thkPlasterAtBoardSlLeft,
		thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
		thkPlasterAtBoardSlRight= thkPlasterAtBoardSlRight,
	! --- Corner Functions
		bLeftCornerFunction	= bLeftCornerFunction,
		leftCornerAngle		= leftCornerAngle,
		leftConnWallThk		= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle	= rightCornerAngle,
		rightConnWallThk	= rightConnWallThk,
	! --- Oversize
		gs_left_oversize	= gs_left_oversize,
		gs_right_oversize	= gs_right_oversize,
		gs_lower_oversize	= gs_lower_oversize,
		ac_right_oversize	= ac_right_oversize,
	! --- Sill Parameters
		iSillType			= iSillType,
		gs_sill_thk			= gs_sill_thk,
	! --- Board Parameters
		gs_board_inside				= gs_board_inside,
		gs_board_inside_sl_left		= gs_board_inside_sl_left,
		gs_board_inside_sl_right	= gs_board_inside_sl_right,
		bDrawBoard			= bDrawBoard,
		gs_board_thk		= gs_board_thk,
		gs_board_nosing		= gs_board_nosing,
		gs_board_angle		= gs_board_angle,
		gs_board_ovhg_left	= gs_board_ovhg_left,
		gs_board_ovhg_right	= gs_board_ovhg_right,
		gs_board_slip_in	= gs_board_slip_in * not(iSillType = SILL_TIMBER),
		gs_board_curved		= gs_board_curved,
		bBoardInPolyWall	= bBoardInPolyWall,
		bShowBoardSplice	= 0,
	! --- Casing
		bDrawInsideTrim		= bDrawInsideTrim,
		gs_trim_width_in	= gs_trim_width_in,
	! --- 2D Representation
		gs_board_fill			= gs_board_fill,
		gs_board_pen_fg			= gs_board_pen_fg,
		gs_board_pen_bg			= gs_board_pen_bg,
		gs_board_pen_sectcont	= gs_board_pen_sectcont,
	! --- 3D Representation
		lod3D = lod3D,
		gs_frame_pen		= gs_frame_pen,
		gs_board_pen_3D		= gs_board_pen_3D,
	! --- Materials
		gs_board_mat		= gs_board_mat,
	! --- Stacked Window
		gs_stack_left		= gs_stack_left,
		gs_stack_right		= gs_stack_right,
		gs_stack_bottom		= gs_stack_bottom,
		bBoardElevUsa		= bBoardElevUsa,
		bBoardNnosUsa		= bBoardNnosUsa,
		frameWidthLeft		= gs_frame_width + gs_tolerance_left,
		frameWidthRight		= gs_frame_width + gs_tolerance_right,
		gs_sill_angle		= gs_sill_angle,
		gs_rebw_lower		= gs_rebw_lower,
	returned_parameters boardRight,
						boardLeft,
						boardLeft_sL,
						boardRight_sL,
						boardLeft_sR,
						boardRight_sR,
						boardBottom,
						boardSideHeight,
						boardSideAngle,
						boardPoly
endif


! =============================================================================
! Draw Threshold
! =============================================================================

if not(bFeedBack) & bEnableThreshold & bDrawThreshold then

	leftFrameOffset		= gs_sidelight_left  * gs_sidelight_width_left  + not(gs_sidelight_left)  * gs_frame_width_left  + gs_tolerance_left
	rightFrameOffset	= gs_sidelight_right * gs_sidelight_width_right + not(gs_sidelight_right) * gs_frame_width_right + gs_tolerance_right

	call "Threshold_WMCC" parameters gs_macro_version = 12,
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		B						= openingHeight,
		leftFrameOffset			= leftFrameOffset,
		rightFrameOffset		= rightFrameOffset,
		gs_tolerance_left		= gs_tolerance_left,
		gs_tolerance_right		= gs_tolerance_right,
		AC_Hole_Position_Angle	= AC_Hole_Position_Angle,
	! --- Macro Control Parameters
		gs_IsCurved				= gs_IsCurved,
		bParalellInCurvedWalls  = bParalellInCurvedWalls,
		iWindowShape			= iWindowShape,
	! --- Wallhole Geometry
		leftRevealPnts 			= leftWallFrameRevealPnts,
		rightRevealPnts			= rightWallFrameRevealPnts,
		iRevealPointsIdx		= iRevealPointsIdx,
		radSill					= radSill,
		radBoard				= radBoard,
		WOD						= WOD,
	! --- Reveal Parameters
		gs_reveal_left_sL				= gs_reveal_left_sL,
		gs_reveal_right_sR				= gs_reveal_right_sR,
		gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
		gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
		iRevealType						= iRevealType,
	! --- Door Frame
		iFrameStyle				= iFrameStyle,
		gs_frame_wthk			= gs_frame_wthk,
		gs_fthk					= gs_fthk,
		gs_frame_thkin			= gs_frame_thkin,
		gs_frame_width_left		= gs_frame_width_left,
		gs_frame_width_right	= gs_frame_width_right,
		gs_ds_thk				= gs_ds_thk,
		gs_ds_w					= gs_ds_w,
		gs_rebate_depth			= gs_rebate_depth,
		gs_rebate_width			= gs_rebate_width,
		gs_frame_oversize_thk	= gs_frame_oversize_thk,
	! --- Door Leaf
		gs_leaf_thk				= gs_leaf_thk,
	! --- Sidelight
		gs_sidelight_left				= gs_sidelight_left,
		gs_sidelight_width_left			= gs_sidelight_width_left,
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_right				= gs_sidelight_right,
		gs_sidelight_width_right		= gs_sidelight_width_right,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Trim Parameters
		gs_trim_outside		= gs_trim_outside,
		gs_trim_inside		= gs_trim_inside,
		gs_trim_width_in	= gs_trim_width_in,
		gs_trim_width_out	= gs_trim_width_out,
	! --- Threshold
		bThreshold			= bThreshold,
		iThresholdType		= iThresholdType,
		gs_treshold_inFloor	= gs_treshold_inFloor,
		gs_treshold_thk		= gs_treshold_thk,
		gs_treshold_width	= gs_treshold_width,
		gs_treshold_angle	= gs_treshold_angle,
		gs_treshold_ext_hgt	= gs_treshold_ext_hgt,
		gs_treshold_nosing	= gs_treshold_nosing,
		gs_treshold_nosing_2 = gs_treshold_nosing_2,
		gs_treshold_ovhg 	= gs_treshold_ovhg,
		gs_treshold_ovhg_2 	= gs_treshold_ovhg_2,
	! --- Turn Plaster
		gs_turn_plaster_show_3D		= gs_turn_plaster_show_3D,
		thkPlasterAtBoardSlLeft		= thkPlasterAtBoardSlLeft,
		thkPlasterAtBoardSlRight	= thkPlasterAtBoardSlRight,
		thkPlasterAtSillSlLeft		= thkPlasterAtSillSlLeft,
		thkPlasterAtSillSlRight		= thkPlasterAtSillSlRight,
	! --- Oversize
		gs_left_oversize	= gs_left_oversize,
		gs_right_oversize	= gs_right_oversize,
		gs_upper_oversize	= gs_upper_oversize,
	! --- Stacked Window
		gs_stack_left		= gs_stack_left,
		gs_stack_right		= gs_stack_right,
	! --- 2D Representation
		gs_treshold_pen_sectcont	= gs_treshold_pen_sectcont,
		gs_treshold_fill			= gs_treshold_fill,
		gs_treshold_pen_fg			= gs_treshold_pen_fg,
		gs_treshold_pen_bg			= gs_treshold_pen_bg,
	! --- 3D Representation
		lod3D				= lod3D,
		gs_frame_pen		= gs_frame_pen,
	! --- Materials
		gs_treshold_mat		= gs_treshold_mat,
		gs_treshold_metal_mat = gs_treshold_metal_mat
endif

! =============================================================================
! Draw Shutter
! =============================================================================
dim sunshadepoly[]
sunshadepoly[1] = 0
posSunShade		= 0
lengthSunShade	= 0

if bEnableShutter & bDrawShutter then
	outfolding_innerPanelLeft = gs_outFoldingShutter_panelIn
	outfolding_innerPanelRight = gs_outFoldingShutter_panelIn

	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		leftWallAngle	= gs_reveal_outerLeft_angle		* not(gs_stack_left)
		rightWallAngle	= gs_reveal_outerRight_angle	* not(gs_stack_right)
		topWallAngle	= gs_reveal_outerTop_angle		* not(gs_stack_top)
		bottomWallAngle	= gs_reveal_outerBottom_angle	* not(gs_stack_bottom)

		slantedRevealDepth = WIDO_SILL - gs_reveal_outer_jamb_depth
	else
		leftWallAngle	= 0
		rightWallAngle	= 0
		topWallAngle	= 0
		bottomWallAngle	= 0

		slantedRevealDepth = 0
	endif

	bUseInnerRevealPoints = 0
	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		if gs_sunShade_iType = SUNSHADE_FOLDING | gs_sunShade_iType = SUNSHADE_OUTFOLDING then bUseInnerRevealPoints = 1

		if gs_sunShade_iType = SUNSHADE_ROLLING & gs_shutRoll_iPlacement <> 1 then bUseInnerRevealPoints = 1
		if gs_sunShade_iType = SUNSHADE_EXTVENETIAN & gs_shutLam_iPlacement <> 1 then bUseInnerRevealPoints = 1
	endif

	if bUseInnerRevealPoints then
		leftCornerX		= leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][1]
		rightCornerX	=  rightWallFrameRevealPnts[idxSillStartPlasterRight+1][1]
		leftX1		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][1]
		rightX1		= rightWallFrameRevealPnts[idxSillStartPlasterRight][1]

		if WIDO_REVEAL_SIDE then
			leftCornerY		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][2] - WIDO_FRAME_THICKNESS
			rightCornerY	= rightWallFrameRevealPnts[idxSillStartPlasterRight][2] - WIDO_FRAME_THICKNESS

			leftY2	= leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][2] - WIDO_FRAME_THICKNESS
			rightY2	= rightWallFrameRevealPnts[idxSillStartPlasterRight+1][2] - WIDO_FRAME_THICKNESS
		else
			leftCornerY		= -leftWallFrameRevealPnts[idxSillStartPlasterLeft][2]
			rightCornerY	= -rightWallFrameRevealPnts[idxSillStartPlasterRight][2]

			leftY2	= -leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][2]
			rightY2	= -rightWallFrameRevealPnts[idxSillStartPlasterRight+1][2]
		endif

		if abs(leftWallAngle) < EPS then
			outfolding_innerPanelLeft = WIDO_SILL - gs_reveal_outer_jamb_depth
		else
			outfolding_innerPanelLeft = sqr((leftCornerX - leftX1)^2 + (leftY2 - leftCornerY)^2)
		endif
		if abs(rightWallAngle) < EPS then
			outfolding_innerPanelRight = WIDO_SILL - gs_reveal_outer_jamb_depth
		else
			outfolding_innerPanelRight = sqr((rightCornerX - rightX1)^2 + (rightY2 -rightCornerY)^2)
		endif
	else
		leftCornerX		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][1]
		rightCornerX	= rightWallFrameRevealPnts[idxSillStartPlasterRight][1]

		if WIDO_REVEAL_SIDE then
			leftCornerY		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][2] - WIDO_FRAME_THICKNESS
			rightCornerY	= rightWallFrameRevealPnts[idxSillStartPlasterRight][2] - WIDO_FRAME_THICKNESS
		else
			leftCornerY		= -leftWallFrameRevealPnts[idxSillStartPlasterLeft][2]
			rightCornerY	= -rightWallFrameRevealPnts[idxSillStartPlasterRight][2]
		endif
	endif

	sunShadeLength = rightCornerX - leftCornerX
	sunShadeLength3D = sunShadeLength
	if not(gs_turn_plaster_show_3D) then
		sunShadeLength3D = sunShadeLength + thkPlasterAtSillLeft * not(gs_stack_left) + thkPlasterAtSillRight * not(gs_stack_right)
	endif

	casingThkAtWindow	= 0
	casingThkOnFacade	= 0

	if gs_trim_outside then
		casingThkAtWindow = gs_trim_width_out
		if gs_sunShade_iType = SUNSHADE_ROLLING &  gs_shutRoll_iPlacement <> SHUTROLL_ONFACADE & gs_shutRoll_iRailPos = 2 then		! ON WALL
			casingThkAtWindow = 0
		endif
		if gs_sunShade_iType = SUNSHADE_EXTVENETIAN & gs_shutLam_iPlacement <> SHUTLAM_ONFACADE & gs_shutLam_iRailPos = 2 then		! ON WALL
			casingThkAtWindow = 0
		endif

		if gs_trim_show_cover_out then
			casingThkOnFacade = gs_trim_thk_out
		else
			casingThkOnFacade = gs_trim_jambext_nosing_out
		endif
	endif

	elevateSunShadeBottom	= 0
	bottomCorrection		= 0
	topCorrection			= 0
	bottomCorrection3D		= 0
	topCorrection3D			= 0

	if gs_sunShade_bModifyRevealSize then	! DACH types
		topCorrection = thkPlasterAtSillTop * not(gs_stack_top)
		topCorrection3D = topCorrection * gs_turn_plaster_show_3D

		if gs_sill_outside then
			if gs_sill_oversize then
				if iSillType = SILL_BRICK | iSillType = SILL_STONE then
					elevateSunShadeBottom = 0
				else
					elevateSunShadeBottom = gs_sill_thk + gs_sill_elev * (iSillType = SILL_TIMBER | iSillType = SILL_SOLID_11 | iSillType =  SILL_SOLID_12 | iSillType = SILL_SOLID_22)
				endif

				bottomCorrection = 0
				bottomCorrection3D = bottomCorrection
			else
				if iSillType = SILL_BRICK | iSillType = SILL_STONE then
					bottomCorrection = 0
				else
					bottomCorrection = gs_sill_thk + gs_sill_elev * (iSillType = SILL_TIMBER | iSillType = SILL_SOLID_11 | iSillType =  SILL_SOLID_12 | iSillType = SILL_SOLID_22)
				endif
				bottomCorrection3D = bottomCorrection

				elevateSunShadeBottom = bottomCorrection
			endif
		else
			if gs_trim_outside then
				bottomCorrection = 0
				elevateSunShadeBottom = gs_trim_width_out
			else
				bottomCorrection = thkPlasterAtSillBottom * not(gs_stack_bottom)
				elevateSunShadeBottom = bottomCorrection * gs_turn_plaster_show_3D
			endif

			bottomCorrection3D = bottomCorrection * gs_turn_plaster_show_3D
		endif

		if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
			elevateSunShadeBottom = not(gs_stack_bottom) * gs_sill_outside * gs_sill_element_thk / cos(gs_reveal_outerBottom_angle)

			if gs_mountingFrame then
				topCorrection	= elevateSunShadeBottom - gs_mountingFrame_width_top - gs_mountingFrame_width_bottom - thresholdExtraHole3D
				topCorrection3D	= elevateSunShadeBottom - gs_mountingFrame_width_top - gs_mountingFrame_width_bottom - thresholdExtraHole3D
			else
				topCorrection	= 0
				topCorrection3D	= 0
			endif
			if gs_sunShade_iType = SUNSHADE_SHUTTER then
				slantedDepthTop		= max(0, WIDO_SILL - gs_shutter_closingDepth - gs_shutter_bExtraFrame * gs_shutter_extraFrameThk - gs_reveal_outer_jamb_depth)
				slantedDepthBottom	= WIDO_SILL - gs_shutter_closingDepth - gs_shutter_bExtraFrame * gs_shutter_extraFrameThk - gs_mountingFrame * gs_mountingFrame_depth
			else
				slantedDepthTop		= WIDO_SILL - gs_reveal_outer_jamb_depth
				slantedDepthBottom	= WIDO_SILL - gs_mountingFrame * gs_mountingFrame_depth
			endif
			slantedCorrectionTop	= not(gs_stack_top) * slantedDepthTop * tan(gs_reveal_outerTop_angle)
			slantedCorrectionBottom	= not(gs_stack_bottom) * slantedDepthBottom * tan(gs_reveal_outerBottom_angle)

			if not(bUseInnerRevealPoints) then
				elevateSunShadeBottom = elevateSunShadeBottom - slantedCorrectionBottom
				elevateSunShadeBottom = elevateSunShadeBottom + gs_stack_bottom * gs_sill_outside * gs_sill_oversize * gs_sill_element_thk / cos(gs_reveal_outerBottom_angle)
			endif
			if bUseInnerRevealPoints then
				topCorrection = 0
			else
				topCorrection	= topCorrection - slantedCorrectionBottom - slantedCorrectionTop
				topCorrection	= topCorrection - gs_stack_top * not(gs_mountingFrame) * gs_reveal_top
			endif
			topCorrection3D	= topCorrection

			if bUseInnerRevealPoints then
				bottomCorrection = 0
			else
				bottomCorrection	= not(gs_stack_bottom) * not(gs_mountingFrame) * gs_sill_outside * not(gs_sill_oversize) * gs_sill_element_thk / cos(gs_reveal_outerBottom_angle)
			endif
			bottomCorrection3D	= bottomCorrection
		endif

		if not(gs_sill_oversize) then
			topCorrection3D	= gs_sunShade_winMountingCorr + gs_sunShade_winMountingCorrTop
		else
			if not(isWindow) then
				topCorrection3D	= elevateSunShadeBottom
			endif
		endif
		
	else	! INT types
		if gs_trim_outside then
			topCorrection = gs_trim_width_out
			topCorrection3D = topCorrection
		else
			topCorrection = thkPlasterAtSillTop * not(gs_stack_top)
			topCorrection3D = topCorrection * gs_turn_plaster_show_3D
		endif

		if gs_sill_outside then

			bSunshadeReachesFrame = (gs_sunShade_iType = SUNSHADE_FOLDING | gs_sunShade_iType = SUNSHADE_OUTFOLDING)
			bottomCorrection = 0

			if	iSillType = SILL_BRICK | \
				iSillType = SILL_STONE | \
				iSillType = SILL_CERAMIC | \
				iSillType = SILL_ETHERNIT | \
				iSillType = SILL_CONCRETE_TUB | \
				iSillType = SILL_ALUMINIUM | \
				iSillType = SILL_SIMPLEBLOCK | \
				iSillType = SILL_BLOCK | \
				iSillType = SILL_DUTCH then

				if iSillType = SILL_BRICK		 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in) * tan(gs_sill_angle)
				if iSillType = SILL_STONE		 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in - gs_sill_frame_nosing) * tan(gs_sill_angle) - gs_sill_frame_keep
				if iSillType = SILL_CERAMIC		 then bottomCorrection = -((gs_sill_thk - gs_sill_endthk) * cos(gs_sill_angle) + tan(gs_sill_angle) * (not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in))
				if iSillType = SILL_ETHERNIT	 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in - gs_sill_frame_nosing) * tan(gs_sill_angle) - gs_sill_frame_keep
				if iSillType = SILL_CONCRETE_TUB then bottomCorrection = not(bSunshadeReachesFrame) * (0.17 * gs_sill_thk / 0.185 - gs_sill_thk)
				if iSillType = SILL_ALUMINIUM	 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in - 0.002) * tan(gs_sill_angle) - 0.01
				if iSillType = SILL_SIMPLEBLOCK	 then bottomCorrection = 0
				if iSillType = SILL_BLOCK		 then bottomCorrection = -gs_sill_thk
				if iSillType = SILL_DUTCH		 then bottomCorrection = -gs_sill_thk
			else
				if iSillType = SILL_TIMBER	 then bottomCorrection = -not(bSunshadeReachesFrame) * max(0, WIDO_SILL) * tan(gs_sill_angle)
				if iSillType = SILL_SOLID_22 then bottomCorrection = - 0.01 - not(bSunshadeReachesFrame) * max(0, gs_sill_thk - gs_sill_endthk - gs_sill_elev - 0.01) + \
					 max(0, gs_sill_thk - gs_sill_endthk - 0.01) / (max(0, WIDO_SILL) + gs_sill_nosing - 0.01) * gs_sill_nosing
				if iSillType = SILL_METAL_1	 then bottomCorrection = - 0.01 - not(bSunshadeReachesFrame) * max(0, gs_sill_thk - gs_sill_endthk - 0.01)

				if not(gs_sill_oversize) then
					bottomCorrection = bottomCorrection + gs_sill_thk + (iSillType = SILL_SOLID_22) * gs_sill_elev
				endif
			endif
			bottomCorrection3D = bottomCorrection
		else
			if gs_trim_outside then
				bottomCorrection = gs_trim_width_out * isWindow
				bottomCorrection3D = bottomCorrection
			else
				bottomCorrection = thkPlasterAtSillBottom * not(gs_stack_bottom) * isWindow
				bottomCorrection3D = bottomCorrection * gs_turn_plaster_show_3D
			endif
		endif

		elevateSunShadeBottom = bottomCorrection3D
	endif

	if gs_shutRoll_iBoxDefaultSize = 2 then 		! internal size
		if abs(leftWallFrameRevealPnts[iRevealPointsIdx[10]] [1]) > sunShadeLength/2 then
			gs_shutRoll_boxOffsetLeft = gs_shutRoll_boxOffsetLeft + abs(leftWallFrameRevealPnts[iRevealPointsIdx[10]] [1]) - sunShadeLength/2
		endif

		if abs(rightWallFrameRevealPnts[iRevealPointsIdx[20]] [1]) > sunShadeLength/2 then
			gs_shutRoll_boxOffsetRight = gs_shutRoll_boxOffsetRight + abs(rightWallFrameRevealPnts[iRevealPointsIdx[20]] [1]) - sunShadeLength/2
		endif
	endif

	gs_shutPanel_archHeight = openingArchHeight
	if iWindowShape = SHAPE_ARCHED then
		halfSegmentAngle = 2 * atn((openingArchHeight) / (ac_wallhole_width / 2))
		radWallhole = (ac_wallhole_width / 2) / sin(halfSegmentAngle)
		origFromTop = -openingArchHeight - sqr(radWallhole^2 - (ac_wallhole_width / 2)^2)

		if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
			diffSlantedReveal = tan(gs_reveal_outerTop_angle) * (gs_wido_sill - gs_reveal_outer_jamb_depth)
		else
			diffSlantedReveal = 0
		endif

		radSunshade = radWallhole - gs_reveal_right - casingThkAtWindow + diffSlantedReveal
		diffSunshadeArchHeight	= origFromTop + sqr(radSunshade^2 - (ac_wallhole_width / 2 - gs_reveal_right - casingThkAtWindow + diffSlantedReveal)^2) + openingArchHeight - diffSlantedReveal

		gs_shutPanel_archHeight = openingArchHeight - gs_reveal_right - casingThkAtWindow - diffSunshadeArchHeight
	endif

	add leftCornerX + sunShadeLength3D / 2 - thkPlasterAtSillLeft * not(gs_stack_left) * not(gs_turn_plaster_show_3D),
		elevateSunShadeBottom + gs_reveal_bottom + gs_sunShade_winMountingCorr, 0

	call "SunShade_WMCC" parameters		A			= sunShadeLength - casingThkAtWindow * 2,
				B								= ac_reveal_height - bottomCorrection - topCorrection,
				AC_HoleSideMaterial				= AC_HoleSideMaterial,
				sunShadeLength3D				= sunShadeLength3D - casingThkAtWindow * 2,
				sunShadeHeight3D				= ac_reveal_height - bottomCorrection3D - topCorrection3D,

				lod3D_sunShade					= lod3D_sunShade,
				gs_sunShade_iType				= gs_sunShade_iType,
				gs_shutter_nPanels				= gs_shutter_nPanels,
				gs_shutter_nPanels2				= gs_shutter_nPanels2,
				gs_shutter_iPanelPos			= gs_shutter_iPanelPos,

				gs_sunShade_bAutomaticHeight	= gs_sunShade_bAutomaticHeight,
				gs_sunShade_height				= gs_sunShade_height,

				gs_shutter_innerOffset			= gs_shutter_innerOffset,
				gs_shutter_closingDepth			= gs_shutter_closingDepth,
				gs_shutter_bExtraFrame			= gs_shutter_bExtraFrame,
				gs_shutter_extraFrameWidth		= gs_shutter_extraFrameWidth,
				gs_shutter_extraFrameThk		= gs_shutter_extraFrameThk,

				gs_slidingShutter_iCover		= gs_slidingShutter_iCover,
				gs_slidingShutter_railWidth		= gs_slidingShutter_railWidth,
				gs_slidingShutter_stickLength	= gs_slidingShutter_stickLength,
				gs_slidingShutter_stickRad		= gs_slidingShutter_stickRad,
				gs_slidingShutter_panelDist		= gs_slidingShutter_panelDist,

				gs_foldingShutter_iStacking		= gs_foldingShutter_iStacking,
				gs_foldingShutter_ovhg			= gs_foldingShutter_ovhg,

				gs_outFoldingShutter_panelIn	= gs_outFoldingShutter_panelIn,
				outfolding_innerPanelLeft		= outfolding_innerPanelLeft,
				outfolding_innerPanelRight		= outfolding_innerPanelRight,

				gs_shutter_opened				= gs_shutter_opened,
				gs_shutter_opAngle				= gs_shutter_opAngle,
				gs_shutter_opLength				= gs_shutter_opLength,
				gs_shutter_closedLength			= gs_shutter_closedLength,
				gs_shutter_opLength_1			= gs_shutter_opLength_1,
				gs_shutter_opLength_2			= gs_shutter_opLength_2,
				gs_shutter_opHeight				= gs_shutter_opHeight,
				gs_shutter_closedHeight			= gs_shutter_closedHeight,

				gs_shutPanel_archHeight			= gs_shutPanel_archHeight,
				gs_shutPanel_iType				= gs_shutPanel_iType,
				gs_cust_shutterPanel			= gs_cust_shutterPanel,
				gs_shutPanel_Thk				= gs_shutPanel_Thk,
				gs_shutPanel_frameWidth			= gs_shutPanel_frameWidth,
				gs_shutPanel_BDiffBottomFrame	= gs_shutPanel_BDiffBottomFrame,
				gs_shutPanel_frameWidthBottom	= gs_shutPanel_frameWidthBottom,
				gs_shutPanel_bAutomaticWidth	= gs_shutPanel_bAutomaticWidth,
				gs_shutPanel_panelWidth			= gs_shutPanel_panelWidth,
				gs_shutPanel_fieldThk			= gs_shutPanel_fieldThk,
				gs_shutPanel_louverThk			= gs_shutPanel_louverThk,
				gs_shutPanel_louverWidth		= gs_shutPanel_louverWidth,
				gs_shutPanel_louverAngle		= gs_shutPanel_louverAngle,
				gs_shutPanel_midFrameHorW		= gs_shutPanel_midFrameHorW,
				gs_shutPanel_midFrameVertW		= gs_shutPanel_midFrameVertW,
				gs_shutPanel_nHoleHor			= gs_shutPanel_nHoleHor,
				gs_shutPanel_nHoleVert			= gs_shutPanel_nHoleVert,
				gs_shutPanel_holeRadius			= gs_shutPanel_holeRadius,
				gs_shutPanel_ZBoardW			= gs_shutPanel_ZBoardW,
				gs_shutPanel_ZWidth				= gs_shutPanel_ZWidth,
				gs_shutPanel_ZThk				= gs_shutPanel_ZThk,
				gs_shutPanel_boardThkVert		= gs_shutPanel_boardThkVert,
				gs_shutPanel_boardThkHor		= gs_shutPanel_boardThkHor,
				gs_shutPanel_vertBoardW			= gs_shutPanel_vertBoardW,
				gs_shutPanel_horBoardW			= gs_shutPanel_horBoardW,

				gs_shutRoll_iPlacement			= gs_shutRoll_iPlacement,
				gs_shutRoll_iBoxType			= gs_shutRoll_iBoxType,
				gs_shutRoll_iRailPos			= gs_shutRoll_iRailPos,
				gs_shutRoll_cutWallBehind		= gs_shutRoll_cutWallBehind,
				gs_shutRoll_boxHeight			= gs_shutRoll_boxHeight,
				gs_shutRoll_boxWidth			= gs_shutRoll_boxWidth,
				gs_shutRoll_boxAngle			= gs_shutRoll_boxAngle,
				gs_shutRoll_iBoxDefaultSize		= gs_shutRoll_iBoxDefaultSize,
				gs_shutRoll_boxOffsetLeft		= gs_shutRoll_boxOffsetLeft,
				gs_shutRoll_boxOffsetRight		= gs_shutRoll_boxOffsetRight,
				gs_shutRoll_railDepth			= gs_shutRoll_railDepth,
				gs_shutRoll_distFromWall		= gs_shutRoll_distFromWall,
				gs_shutRoll_distFromHead		= gs_shutRoll_distFromHead,
				gs_shutRoll_segmentWidth		= gs_shutRoll_segmentWidth,

				gs_shutLam_iPlacement			= gs_shutLam_iPlacement,
				gs_shutLam_cutWallBehind		= gs_shutLam_cutWallBehind,
				gs_shutLam_boxHeight			= gs_shutLam_boxHeight,
				gs_shutLam_boxWidth				= gs_shutLam_boxWidth,
				gs_shutLam_bOpenBox				= gs_shutLam_bOpenBox,
				gs_shutLam_bRail				= gs_shutLam_bRail,
				gs_shutLam_coverWidth			= gs_shutLam_coverWidth,
				gs_shutLam_distFromWall			= gs_shutLam_distFromWall,
				gs_shutLam_distFromHead			= gs_shutLam_distFromHead,
				gs_shutLam_segmentWidth			= gs_shutLam_segmentWidth,
				gs_shutLam_rotation				= gs_shutLam_rotation,

				gs_shutLam2_boxHeight			= gs_shutLam2_boxHeight,
				gs_shutLam2_boxWidth			= gs_shutLam2_boxWidth,
				gs_shutLam2_distFromWindow		= gs_shutLam2_distFromWindow,
				gs_shutLam2_distFromHead		= gs_shutLam2_distFromHead,
				gs_shutLam2_axisFromHead		= gs_shutLam2_axisFromHead,
				gs_shutLam2_segmentWidth		= gs_shutLam2_segmentWidth,
				gs_shutLam2_rotation			= gs_shutLam2_rotation,

				gs_sunShade_cutLinesPen			= gs_sunShade_cutLinesPen,
				gs_sunShade_unCutLinesPen		= gs_sunShade_unCutLinesPen,
				gs_sunShade_cutFillType			= gs_sunShade_cutFillType,
				gs_sunShade_cutFillPen			= gs_sunShade_cutFillPen,
				gs_sunShade_cutFillBackPen		= gs_sunShade_cutFillBackPen,
				gs_sunShade_insFillType			= gs_sunShade_insFillType,
				gs_sunShade_insFillPen			= gs_sunShade_insFillPen,
				gs_sunShade_insFillBackPen		= gs_sunShade_insFillBackPen,

				gs_shutPanel_materialMain		= gs_shutPanel_materialMain,
				gs_shutPanel_materialAcc		= gs_shutPanel_materialAcc,
				gs_shutRoll_matBox				= gs_shutRoll_matBox,
				gs_shutRoll_matSegm				= gs_shutRoll_matSegm,
				gs_shutRoll_matRail				= gs_shutRoll_matRail,
				gs_shutLam_matBox				= gs_shutLam_matBox,
				gs_shutLam_matLam				= gs_shutLam_matLam,
				gs_shutSliding_matRail			= gs_shutSliding_matRail,

				radSill							= radSill,
				radBoard						= radBoard,
				gs_casingThkOnFacade			= casingThkOnFacade,
				gs_casingThkAtWindow			= casingThkAtWindow,
				iWindowShape					= iWindowShape,
				bLeftCornerFunction				= bLeftCornerFunction,
				bRightCornerFunction			= bRightCornerFunction,
				leftCornerAngle					= leftCornerAngle,
				rightCornerAngle				= rightCornerAngle,
				nArchResolution					= nArchResolution,
				smallRadiusEllips				= smallRadiusEllips,

				leftWallAngle					= leftWallAngle,
				rightWallAngle					= rightWallAngle,
				topWallAngle					= topWallAngle,
				bottomWallAngle					= bottomWallAngle,
				iRevealType						= iRevealType,
				slantedRevealDepth				= slantedRevealDepth,
				returned_parameters posSunShade,
									lengthSunShade,
									sunshadepoly
	del 1

endif



! =============================================================================
! Draw Casing
! =============================================================================

if not(bFeedBack) & bEnableCasing & (gs_trim_inside | gs_trim_outside) & lod3D_Casing > 0 then

	if WIDO_REVEAL_SIDE then
		addz WIDO_FRAME_THICKNESS
		mulz -1
	endif

	pen gs_frame_pen

	numCuts = 0

	if bEnableShutter & bDrawShutter & (gs_sunShade_iType = SUNSHADE_ROLLING | gs_sunShade_iType = SUNSHADE_EXTVENETIAN | gs_sunShade_iType = SUNSHADE_VENETIAN) then
		addz -WIDO_SILL
		if vardim1(sunshadepoly) > 1 then
			for i = 1 to (vardim1(sunshadepoly)-2) step 2
				put sunshadepoly[i], sunshadepoly[i+1], 31
			next i


			add 0, elevateSunShadeBottom + gs_reveal_bottom, posSunShade
			roty -90
			addz -lengthSunShade/2

!			prism_ nsp/3, lengthSunShade,
!				use(nsp)

			material gs_trim_in_mat
			cutform nsp/3, 1, 2,
				0, 0, 1, lengthSunShade,
				get (nsp)
			numCuts = numCuts + 1

			del 3
		endif
		del 1
	endif

	if (bEnableBoard & bDrawBoard & gs_trim_inside & not(gs_stack_bottom)) then
		if vardim1(boardPoly) > 1 then

			roty -90
			muly -1

			if (iWindowShape = SHAPE_T | \
				iWindowShape = SHAPE_HALF_T_LEFT | \
				iWindowShape = SHAPE_ARCHED_T | \
				iWindowShape = SHAPE_ARCHED_HALF_T_LEFT) & \
				gs_sidelight_parapet_hgt_left > 0 & \
				gs_board_inside_sl_left then

				add 0, -gs_sidelight_parapet_hgt_left, boardLeft_sL

				if curvedWall then
					if wallIsLeft then
						addx WIDO_FRAME_THICKNESS
						sideAngle = atn(boardLeft_sL / (WOD - WIDO_FRAME_THICKNESS))
						mulRatio = 1/cos(sideAngle)
						roty sideAngle
						addx -mulRatio * WIDO_FRAME_THICKNESS + EPS
					else
						sideAngle = atn(boardLeft_sL / WOD)
						mulRatio = 1/cos(sideAngle)
						roty sideAngle
						addx EPS
					endif

					for i = 1 to (vardim1(boardPoly)-1) step 2
						put mulRatio * boardPoly[i], boardPoly[i+1], 31
					next i

!					prism_ nsp/3, boardRight_sL - boardLeft_sL - EPS+0.1,
!						use (nsp)

					cutform nsp/3, 1, 2,
						-sin(sideAngle), 0, cos(sideAngle), boardRight_sL - boardLeft_sL - EPS,
						get (nsp)
					numCuts = numCuts + 1

					del 2 + wallIsLeft
				endif

				if not(curvedWall) | not(wallIsLeft) then
					for i = 1 to (vardim1(boardPoly)-1) step 2
						put boardPoly[i], boardPoly[i+1], 31
					next i

					addx EPS

!					prism_ nsp/3, boardRight_sL - boardLeft_sL - EPS,
!						use (nsp)

					cutform nsp/3, 1, 2,
						0, 0, 1, boardRight_sL - boardLeft_sL - EPS,
						get (nsp)
					numCuts = numCuts + 1

					del 1
				endif

				del 1
			endif

			if (iWindowShape = SHAPE_T | \
				iWindowShape = SHAPE_HALF_T_RIGHT | \
				iWindowShape = SHAPE_ARCHED_T | \
				iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT) & \
				gs_sidelight_parapet_hgt_right > 0 & \
				gs_board_inside_sl_right then

				add 0, -gs_sidelight_parapet_hgt_right, -boardRight_sR

				if curvedWall then
					if wallIsLeft then
						addx WIDO_FRAME_THICKNESS
						sideAngle = atn(boardRight_sR / (WOD - WIDO_FRAME_THICKNESS))
						mulRatio = 1/cos(sideAngle)
						roty -sideAngle
						addx -mulRatio * WIDO_FRAME_THICKNESS + EPS
					else
						sideAngle = atn(boardRight_sR / WOD)
						mulRatio = 1/cos(sideAngle)
						roty -sideAngle
						addx EPS
					endif

					for i = 1 to (vardim1(boardPoly)-1) step 2
						put mulRatio * boardPoly[i], boardPoly[i+1], 31
					next i

!					prism_ nsp/3, boardRight_sR - boardLeft_sR + EPS,
!						use (nsp)

					cutform nsp/3, 1, 2,
						sin(sideAngle), 0, cos(sideAngle), boardRight_sR - boardLeft_sR + EPS,
						get (nsp)
					numCuts = numCuts + 1

					del 2 + wallIsLeft
				endif

				if not(curvedWall) | not(wallIsLeft) then
					for i = 1 to (vardim1(boardPoly)-1) step 2
						put boardPoly[i], boardPoly[i+1], 31
					next i

					addx EPS

!					prism_ nsp/3, boardRight_sR - boardLeft_sR + EPS,
!						use (nsp)

					cutform nsp/3, 1, 2,
						0, 0, 1, boardRight_sR - boardLeft_sR + EPS,
						get (nsp)
					numCuts = numCuts + 1

					del 1
				endif

				del 1
			endif

			if gs_board_inside then
				addz boardLeft

				for i = 1 to (vardim1(boardPoly)-1) step 2
					put boardPoly[i], boardPoly[i+1], 31
				next i

!				prism_ nsp/3, abs(boardRight) + abs(boardLeft),
!					use(nsp)

				material gs_trim_in_mat
				cutform nsp/3, 1, 2,
					0, 0, 1, abs(boardRight) + abs(boardLeft),
						get(nsp)
				numCuts = numCuts + 1

				del 1
			endif

			for ii= 1 to nsp
				dummy = get(1)
			next ii

			del 2
		endif
		if gs_trim_below_board then bBoardPlaneCut = 0
	else
		bBoardPlaneCut = 0
	endif

	if (gs_trim_outside & not(gs_stack_bottom)) then
		if (bEnableSill & bDrawSill) then
			if vardim1(sillPoly) > 1 then
				for i = 1 to (vardim1(sillPoly)-1) step 2
					put sillPoly[i], sillPoly[i+1], 31
				next i

				roty 90
				muly -1

				material gs_trim_out_mat

				if (iWindowShape = SHAPE_T | \
					iWindowShape = SHAPE_HALF_T_LEFT | \
					iWindowShape = SHAPE_ARCHED_T | \
					iWindowShape = SHAPE_ARCHED_HALF_T_LEFT) & \
					gs_sidelight_parapet_hgt_left > 0 & \
					gs_sill_outside_sl_left then

					add 0, -gs_sidelight_parapet_hgt_left - (gs_reveal_bottom_sL - gs_reveal_bottom), -sillLeft_sL

!					prism_ nsp/3, sillLeft_sL - sillRight_sL + EPS,
!						use (nsp)

					cutform nsp/3, 1, 2,
						0, 0, 1, sillLeft_sL - sillRight_sL + EPS,
						use (nsp)
					numCuts = numCuts + 1
					del 1
				endif

				if (iWindowShape = SHAPE_T | \
					iWindowShape = SHAPE_HALF_T_RIGHT | \
					iWindowShape = SHAPE_ARCHED_T | \
					iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT) & \
					gs_sidelight_parapet_hgt_right > 0 & \
					gs_sill_outside_sl_right then

					add 0, -gs_sidelight_parapet_hgt_right - (gs_reveal_bottom_sR - gs_reveal_bottom), sillRight_sR

!					prism_ nsp/3, sillLeft_sR - sillRight_sR - EPS,
!						use (nsp)

					cutform nsp/3, 1, 2,
						0, 0, -1, sillRight_sR - sillLeft_sR - EPS,
						use (nsp)
					numCuts = numCuts + 1
					del 1
				endif

				if gs_sill_outside then
					addz -sillLeft
					cutform nsp/3, 1, 2,
						0, 0, 1, sillRight + sillLeft,
						use (nsp)
					numCuts = numCuts + 1

!					prism_ nsp/3, sillRight + sillLeft,
!						use (nsp)
					del 1
				endif

				for ii= 1 to nsp
					dummy = get(1)
				next ii

				del 2
			endif
		endif

		if bCasingBottomOutside & (isWindow) then bSillPlaneCut = 0
	else
		bSillPlaneCut = 0
	endif

	if (gs_trim_outside & not(gs_stack_bottom) & gs_wt_m = 4 & gs_sill_nosing2>0) then
			add -sillLeft-A, gs_frame_width_lower-gs_rebate_width, 0
			roty 90
			muly 1
!			prism_ 3, sillRight + sillLeft + 2 * A,
!				0, 0, 31,
!				2*gs_sill_thk/tan(gs_sill_angle2), -2*gs_sill_thk, 31,
!				0, -2*gs_sill_thk, 31

			cutform 3, 1, 2,
				0, 0, 1, sillRight + sillLeft + 2 * A,
				0, 0, 31,
				2*gs_sill_thk/tan(gs_sill_angle2), -2*gs_sill_thk, 31,
				0, -2*gs_sill_thk, 31
			numCuts = numCuts + 1
			del 3
	endif

	if (bEnableSill & bDrawSill & gs_trim_outside & not(gs_stack_bottom) & gs_wt_m = 4) then
			add -sillLeft, 0, gs_sill_slip_in
			roty 90
			muly 1
!			prism_ 3, sillRight + sillLeft,
!				0, 0, 31,
!				2*gs_sill_thk/tan(gs_sill_angle), -2*gs_sill_thk, 31,
!				0, -2*gs_sill_thk, 31

			cutform 3, 1, 2,
				0, 0, 1, sillRight + sillLeft,
				0, 0, 31,
				2*gs_sill_thk/tan(gs_sill_angle), -2*gs_sill_thk, 31,
				0, -2*gs_sill_thk, 31
			numCuts = numCuts + 1
			del 3
	endif

	if WIDO_REVEAL_SIDE then
		del 2
	endif

	bThresholdBoardPlaneCut	 = 0
	bThresholdSillPlaneCut	 = 0
	ThresholdSillSideHeight	 = 0
	ThresholdBoardSideHeight = 0
	if bEnableThreshold & bThreshold then
		if iThresholdType = TRESHOLD_BOTHEXTENDED or (iThresholdType = TRESHOLD_EXTENDED & WIDO_REVEAL_SIDE) then
			bThresholdSillPlaneCut 	= 1
			ThresholdSillSideHeight	= gs_treshold_thk
		endif
		if iThresholdType = TRESHOLD_BOTHEXTENDED or (iThresholdType = TRESHOLD_EXTENDED & not(WIDO_REVEAL_SIDE)) then
			bThresholdBoardPlaneCut  = 1
			ThresholdBoardSideHeight = gs_treshold_thk
		endif
	endif

	addy -overSizeLower

	if	iWindowShape = SHAPE_TRAPEZOID |\
		iWindowShape = SHAPE_PARALLELOGRAM then

		call "CasingTrapezoid_WMCC" parameters A						= A,
			B						= openingHeight,
			AC_Hole_Position_Angle	= AC_Hole_Position_Angle,
		! --- Wallhole Geometry
			refWidth				= refWidth,
			leftWidth				= leftWidth,
			rightWidth				= rightWidth,
		! --- Macro Control Parameters
			iWindowShape			= iWindowShape,
			archHeight				= openingArchHeight,
		! --- Reveal Parameters
			iRevealType				= iRevealType,
			gs_reveal_left			= gs_reveal_left,
			gs_reveal_right			= gs_reveal_right,
			gs_reveal_top			= gs_reveal_top,
			gs_reveal_bottom		= gs_reveal_bottom,
		! --- Corner Functions
			bLeftCornerFunction	= bLeftCornerFunction,
			leftCornerAngle		= leftCornerAngle,
			leftConnWallThk		= leftConnWallThk,
			bRightCornerFunction= bRightCornerFunction,
			rightCornerAngle	= rightCornerAngle,
			rightConnWallThk	= rightConnWallThk,
		! --- Trim Parameters
			bDrawInsideTrim		= bDrawInsideTrim,
			bDrawOutsideTrim	= bDrawOutsideTrim,
			bCasingBottomOutside= bCasingBottomOutside,
			gs_trim_width_in	= gs_trim_width_in,
			gs_trim_width_out	= gs_trim_width_out,
			gs_trim_offs_in		= gs_trim_offs_in,
			gs_trim_offs_out	= gs_trim_offs_out,
			gs_trim_thk_in		= gs_trim_thk_in,
			gs_trim_thk_out		= gs_trim_thk_out,
			gs_tw_right_in		= gs_tw_right_in,
			gs_tw_bottom_in		= gs_tw_bottom_in,
			gs_tw_right_out		= gs_tw_right_out,
			gs_tw_bottom_out	= gs_tw_bottom_out,
			gs_frame_width			= gs_frame_width,
			bLinkCasingSurfaces		= bLinkCasingSurfaces,
		! --- Sill
			bDrawSill				= bDrawSill,
			iSillType				= iSillType,
			sillBottom				= sillBottom + overSizeLower,
			sillBottomOutside		= sillBottomOutside + overSizeLower,
			bSillPlaneCut			= bSillPlaneCut,
			sillSideHeight			= sillSideHeight,
			sillSideAngle			= sillSideAngle,
		! --- Board
			bDrawBoard				= bDrawBoard,
			boardBottom				= boardBottom,
			bBoardPlaneCut			= bBoardPlaneCut,
			boardSideHeight			= boardSideHeight,
			boardSideAngle			= boardSideAngle,
		! --- 2D Representation
			gs_trim_pen_cont	= gs_trim_pen_cont,
			gs_trim_fill_in		= gs_trim_fill_in,
			gs_trim_pen_bg_in	= gs_trim_pen_bg_in,
			gs_trim_pen_fg_in	= gs_trim_pen_fg_in,
			gs_trim_fill_out	= gs_trim_fill_out,
			gs_trim_pen_fg_out	= gs_trim_pen_fg_out,
			gs_trim_pen_bg_out	= gs_trim_pen_bg_out,
			! --- 3D Representation
			lod3D = lod3D,
			gs_frame_pen		= gs_frame_pen,
		! --- Materials
			gs_trim_in_mat		= gs_trim_in_mat,
			gs_trim_out_mat		= gs_trim_out_mat,
		! --- Corner Column Geometry
			gs_corner_column 		= gs_corner_column,
			gs_cc_width				= gs_cc_width,
			gs_cc_thk				= gs_cc_thk,
			gs_cc_pr				= gs_cc_pr,
		! --- USA Parameters
			gs_board_thk			= gs_board_thk
	else
		call "Casing_WMCC" parameters gs_macro_version = 12,
			A						= A,
			B						= openingHeight,
			AC_Hole_Position_Angle	= AC_Hole_Position_Angle,
			AC_HoleSideMaterial		= AC_HoleSideMaterial,
		! --- Wallhole Geometry
			refWidth				= refWidth,
			leftWidth				= leftWidth,
			rightWidth				= rightWidth,
			radSill					= radSill,
			radBoard				= radBoard,
			WOD						= WOD,
			offsY					= offsY,
			sillRight				= sillRight,
			sillLeft				= sillLeft,
			sillLeft_sL				= sillLeft_sL,
			sillRight_sL			= sillRight_sL,
			sillLeft_sR				= sillLeft_sR,
			sillRight_sR			= sillRight_sR,
			boardLeft_sL			= boardLeft_sL,
			boardRight_sL			= boardRight_sL,
			boardLeft_sR			= boardLeft_sR,
			boardRight_sR			= boardRight_sR,
		! --- Macro Control Parameters
			isWindow				= isWindow,
			Suppress_isWindow		= Suppress_isWindow,
			gs_IsCurved				= gs_IsCurved,
			gs_CasingOutTypeEnable	= gs_CasingOutTypeEnable,
			gs_CasingInTypeEnable	= gs_CasingInTypeEnable,
			bParalellInCurvedWalls  = bParalellInCurvedWalls,
			bCasingTolerance		= bCasingTolerance,
			iWindowShape			= iWindowShape,
			archHeight				= openingArchHeight,
			nArchResolution			= nArchResolution,
			smallRadiusEllips		= smallRadiusEllips,
			bTelescopic				= bTelescopic,
			gs_frame_style_m		= iFrameStyle,
			iDoorType				= iDoorType,
		! --- Reveal Parameters
			iRevealType						= iRevealType,
			gs_reveal_left					= gs_reveal_left,
			gs_reveal_right					= gs_reveal_right,
			gs_reveal_top					= gs_reveal_top,
			gs_reveal_bottom				= gs_reveal_bottom,
			revealInnerLeft					= revealInnerLeft,
			revealInnerRight				= revealInnerRight,
			gs_reveal_splayed_innerTop		= gs_reveal_splayed_innerTop,
			gs_reveal_splayed_innerBottom	= gs_reveal_splayed_innerBottom,
			gs_reveal_double_innerTop		= gs_reveal_double_innerTop,
			gs_reveal_double_innerBottom	= gs_reveal_double_innerBottom,
			gs_reveal_left_angle			= gs_reveal_left_angle,
			gs_reveal_right_angle			= gs_reveal_right_angle,
			gs_reveal_top_angle				= gs_reveal_top_angle,
			gs_reveal_bottom_angle			= gs_reveal_bottom_angle,
			gs_reveal_right_sR				= gs_reveal_right_sR,
			gs_reveal_left_sL				= gs_reveal_left_sL,
			gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
			gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
			gs_reveal_bottom_sR				= gs_reveal_bottom_sR,
			gs_reveal_bottom_sL				= gs_reveal_bottom_sL,
			gs_reveal_double_innerBottom_sR	= gs_reveal_double_innerBottom_sR,
			gs_reveal_double_innerBottom_sL	= gs_reveal_double_innerBottom_sL,
			leftRevealPnts					= leftWallFrameRevealPnts,
			rightRevealPnts					= rightWallFrameRevealPnts,
			iRevealPointsIdx				= iRevealPointsIdx,
		! --- Corner Functions
			bLeftCornerFunction	= bLeftCornerFunction,
			leftCornerAngle		= leftCornerAngle,
			leftConnWallThk		= leftConnWallThk,
			bRightCornerFunction= bRightCornerFunction,
			rightCornerAngle	= rightCornerAngle,
			rightConnWallThk	= rightConnWallThk,
		! --- Sidelight
			gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
			gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
			gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
			gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
		! --- Tolerance
			gs_tolerance_left	= gs_tolerance_left,
			gs_tolerance_right	= gs_tolerance_right,
			gs_tolerance_upper	= gs_tolerance_upper,
			gs_tolerance_lower	= gs_tolerance_lower,
		! --- Oversize
			gs_left_oversize	= gs_left_oversize,
			gs_right_oversize	= gs_right_oversize,
			gs_upper_oversize	= gs_upper_oversize,
			gs_lower_oversize	= gs_lower_oversize,
		! --- Trim Parameters
			bDrawInsideTrim			= bDrawInsideTrim,
			bDrawOutsideTrim		= bDrawOutsideTrim,
			gs_trim_below_board		= gs_trim_below_board,
			bCasingBottomOutside	= bCasingBottomOutside,
			gs_trimtype_in_int		= gs_trimtype_in_int,
			gs_trimtype_out_int		= gs_trimtype_out_int,
			gs_trim_inside_uniform	= gs_trim_inside_uniform,
			gs_trim_outside_uniform	= gs_trim_outside_uniform,
			gs_trim_width_in	= gs_trim_width_in,
			gs_trim_width_out	= gs_trim_width_out,
			gs_trim_offs_in		= gs_trim_offs_in,
			gs_trim_offs_out	= gs_trim_offs_out,
			gs_trim_thk_in		= gs_trim_thk_in,
			gs_trim_thk_out		= gs_trim_thk_out,
			gs_tw_left_in		= gs_tw_left_in,
			gs_tw_right_in		= gs_tw_right_in,
			gs_tw_top_in		= gs_tw_top_in,
			gs_tw_bottom_in		= gs_tw_bottom_in,
			gs_tw_left_out		= gs_tw_left_out,
			gs_tw_right_out		= gs_tw_right_out,
			gs_tw_top_out		= gs_tw_top_out,
			gs_tw_bottom_out	= gs_tw_bottom_out,
			gs_trimov_top_left_out	= gs_trimov_top_left_out,
			gs_trimov_top_right_out	= gs_trimov_top_right_out,
			gs_trimov_bot_left_out	= gs_trimov_bot_left_out,
			gs_trimov_bot_right_out	= gs_trimov_bot_right_out,
			gs_trimov_top_left_in	= gs_trimov_top_left_in,
			gs_trimov_top_right_in	= gs_trimov_top_right_in,
			gs_trimov_bot_left_in	= gs_trimov_bot_left_in,
			gs_trimov_bot_right_in	= gs_trimov_bot_right_in,
			casingOverhangBottomSideOut	= casingOverhangBottomSideOut,
			bShowTrimInsideSplice	= 0,
			bShowTrimOutsideSplice	= 0,
			gs_trim_atframe_out		= gs_trim_atframe_out,
			gs_trimb_atframe_out	= gs_trimb_atframe_out,
			gs_trim_atframe_in		= gs_trim_atframe_in,
			gs_trim_stack_left		= gs_trim_stack_left,
			gs_trim_stack_right		= gs_trim_stack_right,
			gs_trim_stack_bottom	= gs_trim_stack_bottom,
			gs_trim_stack_top		= gs_trim_stack_top,
			gs_trim_show_cover_in	= gs_trim_show_cover_in,
			gs_trim_show_cover_out	= gs_trim_show_cover_out,
			gs_trim_jambext_nosing_in	= gs_trim_jambext_nosing_in,
			gs_trim_jambext_nosing_out	= gs_trim_jambext_nosing_out,
			gs_frame_width			= gs_frame_width,
			bLinkCasingSurfaces		= bLinkCasingSurfaces,
		! --- Complex Casing ---
			iCasingHeadTypeOut		= iCasingHeadTypeOut,
			bArchitraveCapital		= bArchitraveCapital,
			iArchitraveCapitalType	= iArchitraveCapitalType,
			architraveCapitalWidth	= architraveCapitalWidth,
		! --- Apron
			bEnableApron			= bEnableApron,
			gs_apron				= gs_apron,
			gs_apron_thk 			= gs_apron_thk,
			gs_apron_width			= gs_apron_width,
		! --- Sill
			bDrawSill				= bDrawSill,
			iSillType				= iSillType,
			sillBottom				= sillBottom + overSizeLower,
			sillBottomOutside		= sillBottomOutside + overSizeLower,
			bSillPlaneCut			= bSillPlaneCut,
			sillSideHeight			= sillSideHeight,
			sillSideAngle			= sillSideAngle,
			bThresholdSillPlaneCut	= bThresholdSillPlaneCut,
			ThresholdSillSideHeight	= ThresholdSillSideHeight,
		! --- Board
			bDrawBoard				= bDrawBoard,
			boardBottom				= boardBottom,
			bBoardPlaneCut			= bBoardPlaneCut,
			boardSideHeight			= boardSideHeight,
			boardSideAngle			= boardSideAngle,
			bThresholdBoardPlaneCut	= bThresholdBoardPlaneCut,
			ThresholdBoardSideHeight= ThresholdBoardSideHeight,
		! --- 2D Representation
			gs_trim_pen_cont		= gs_trim_pen_cont,
			gs_trim_fill_in		= gs_trim_fill_in,
			gs_trim_pen_bg_in	= gs_trim_pen_bg_in,
			gs_trim_pen_fg_in	= gs_trim_pen_fg_in,
			gs_trim_fill_out	= gs_trim_fill_out,
			gs_trim_pen_fg_out	= gs_trim_pen_fg_out,
			gs_trim_pen_bg_out	= gs_trim_pen_bg_out,
			! --- 3D Representation
			lod3D = lod3D,
			gs_frame_pen		= gs_frame_pen,
		! --- Materials
			gs_trim_in_mat		= gs_trim_in_mat,
			gs_trim_out_mat		= gs_trim_out_mat,
			gs_apron_mat		= gs_apron_mat,
		! --- Stacked Window
			bEnableCasingAtGanging	= bEnableCasingAtGanging,
			gs_stack_left		= gs_stack_left,
			gs_stack_right		= gs_stack_right,
			gs_stack_top		= gs_stack_top,
			gs_stack_bottom		= gs_stack_bottom,
			bBoardElevUsa		= bBoardElevUsa,
		! --- Corner Column Geometry
			gs_corner_column 		= gs_corner_column,
			gs_cc_width				= gs_cc_width,
			gs_cc_thk				= gs_cc_thk,
			gs_cc_pr				= gs_cc_pr,
			openingHeight			= openingHeight,
			gs_sill_outside_sl_left	= gs_sill_outside_sl_left,
			gs_sill_outside_sl_right= gs_sill_outside_sl_right,
			gs_board_inside_sl_left	= gs_board_inside_sl_left,
			gs_board_inside_sl_right= gs_board_inside_sl_right,
			gs_frame_wthk			= gs_frame_wthk,
		! --- USA Parameters
			gs_sill_angle 			= gs_sill_angle,
			gs_board_thk			= gs_board_thk,
			gs_fsill				= gs_fsill,
			gs_trim_offs_out_top	= gs_trim_offs_out_top,
			gs_trim_offs_out_bottom	= gs_trim_offs_out_bottom,
			trim_offs_out_modify	= trim_offs_out_modify,
			gs_sectgar				= gs_sectgar,
			gs_casing_nor			= gs_casing_nor,
			bCasingUSA				= bCasingUSA,

		! --- SunShade Parameters

			casingSetBackOnSides_out= casingSetBack3D_out,
			casingSetBackOnSides_in	= casingSetBack3D_in,
			lengthCasingSetBack		= lengthSunshade
	endif

	del 1

	for i=1 to numCuts
		cutend
	next i
	numCuts = 0
endif



! =============================================================================
! Draw Corner Column
! =============================================================================

if gs_corner_column & (bEnableCustomCornerLeft | bEnableCustomCornerRight) then
	call "Corner Column_WMCC" parameters gs_macro_version = 12,
		openingHeight			= openingHeight,
		openingArchHeight		= openingArchHeight,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		ac_wallhole_width		= ac_wallhole_width,
	! --- Reveal Parameters
		iRevealType				= iRevealType,
		leftRevealPnts			= leftWallFrameRevealPnts,
		rightRevealPnts			= rightWallFrameRevealPnts,
		iRevealPointsIdx		= iRevealPointsIdx,
	! --- Corner Functions
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
	! --- Corner Column Geometry
		gs_corner_column 		= gs_corner_column,
		gs_cc_width				= gs_cc_width,
		gs_cc_thk				= gs_cc_thk,
		gs_cc_pr				= gs_cc_pr,
	! --- 2D Representation
		gs_frame_pen_cont		= gs_frame_pen_cont,
		gs_fillFr				= gs_fillFr,
		gs_penFr_fg				= gs_penFr_fg,
		gs_penFr_bg				= gs_penFr_bg,
	! --- 3D Representation
		gs_frame_pen			= gs_frame_pen,
	! --- Materials
		matCornerColumn			= matCornerColumn
endif

! =============================================================================

del 1	! elevationOffset


! =============================================================================
end sillRight,
	sillLeft,
	sillBottom,
	sillBottomOutside,
	sillSideHeight,
	sillSideAngle,
	sillPoly





]]></Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

! Contact person: <NJ>

!	! ==============================================================================
!	! Visualize Reveal Points
!	! ==============================================================================
!
!	del top
!	if WIDO_REVEAL_SIDE then
!		add2 0,-WIDO_FRAME_THICKNESS
!	else
!		mul2 1,-1
!	endif
!
!	pen 1
!	line2 0,0, 0,0.2
!	line2 0,0.2,  0.03,0.2-0.05
!	line2 0,0.2, -0.03,0.2-0.05
!
!	line2 0,0, 0.2,0
!	line2 0.2,0, 0.2-0.05, 0.03
!	line2 0.2,0, 0.2-0.05,-0.03
!	circle2 0,0, 0.02
!	hotspot2 0,0
!
!	pen 3 ! orange
!	for i=iRevealPointsIdx[1] to iRevealPointsIdx[6]
!		add2 leftWallFrameRevealPnts[i][1], leftWallFrameRevealPnts[i][2]		! Core points
!		RR = i*0.005
!		circle2 0,0, RR
!		hotspot2 0,0
!		line2 -RR,-RR, RR, RR
!		line2 -RR, RR, RR,-RR
!		del 1
!	next i
!
!	pen 4 ! green
!	for i=iRevealPointsIdx[7] to iRevealPointsIdx[10]
!		add2 leftWallFrameRevealPnts[i][1], leftWallFrameRevealPnts[i][2]		! Plaster points
!		RR = i*0.005
!		circle2 0,0, RR
!		hotspot2 0,0
!		line2 -RR,-RR, RR, RR
!		line2 -RR, RR, RR,-RR
!		del 1
!	next i
!
!	pen 20 ! red
!	for i=iRevealPointsIdx[11] to iRevealPointsIdx[16]
!		add2 rightWallFrameRevealPnts[i][1], rightWallFrameRevealPnts[i][2]	! Core points
!		RR = i*0.005
!		circle2 0,0, RR
!		hotspot2 0,0
!		line2 -RR,-RR, RR, RR
!		line2 -RR, RR, RR,-RR
!		del 1
!	next i
!
!	pen 6 ! blue
!	for i=iRevealPointsIdx[17] to iRevealPointsIdx[20]
!		add2 rightWallFrameRevealPnts[i][1], rightWallFrameRevealPnts[i][2]	! Plaster points
!		RR = i*0.005
!		circle2 0,0, RR
!		hotspot2 0,0
!		line2 -RR,-RR, RR, RR
!		line2 -RR, RR, RR,-RR
!		del 1
!	next i
!
!	del top


! ==============================================================================
!
! ==============================================================================

bFeedBack = (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40)

if gs_bFills_Wallhole < 0 then		! Compatibility
	gs_bFills_Wallhole = gs_bFills
endif

gs_wallhole_fill	= gs_bFills_Wallhole * gs_wallhole_fill
gs_trim_fill_in		= gs_bFills * gs_trim_fill_in
gs_trim_fill_out	= gs_bFills * gs_trim_fill_out
gs_shutter_fill		= gs_bFills * gs_sunShade_cutFillType

drawindex 20	! Draw Window Functions at the bottom


! =============================================================================
! Draw Sill
! =============================================================================

if not(bFeedBack) & bEnableSill & bDrawSill & not(gs_transom_display) then

	if gs_sill_wallhole_pen_fg <= 0 then
		gs_sill_bFills				= gs_bFills
		gs_sill_wallhole_pen_fg		= gs_wallhole_pen_fg
		gs_sill_wallhole_pen_bg		= gs_wallhole_pen_bg
	endif
	gs_sill_wallhole_fill			= gs_wallhole_fill

	call "Sill_WMCC" parameters gs_macro_version = 12,
		AC_WallType				= AC_WallType,
		AC_WindowInWallContour	= AC_WindowInWallContour,
		AC_WallContourPolygon	= AC_WallContourPolygon,
		AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
	! --- Wallhole Geometry
		iWindowShape			= iWindowShape,
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		radSill					= radSill,
		WOD						= WOD,
	! --- Sidelight
		gs_sidelight_left				= gs_sidelight_left,
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_right				= gs_sidelight_right,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Macro Control Parameters
		isWindow					= isWindow,
		gs_IsCurved					= gs_IsCurved,
		bParalellInCurvedWalls		= bParalellInCurvedWalls,
		bDoorWithSidelightSupport	= bDoorWithSidelightSupport,
	! --- Reveal Parameters
		iRevealType				= iRevealType,
		gs_reveal_left_sL			= gs_reveal_left_sL,
		gs_reveal_right_sR			= gs_reveal_right_sR,
		gs_reveal_left_angle	= gs_reveal_left_angle,
		gs_reveal_right_angle	= gs_reveal_right_angle,
		leftRevealPnts			= leftWallFrameRevealPnts,
		rightRevealPnts			= rightWallFrameRevealPnts,
		iRevealPointsIdx		= iRevealPointsIdx,
!!!		SkinOffsetSill			= SkinOffsetSill,
	! --- Turn Plaster
		thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
		thkPlasterAtSillRight	= thkPlasterAtSillRight,
	! --- Corner Functions
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		leftConnWallThk			= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
		rightConnWallThk		= rightConnWallThk,
	! --- Oversize
		gs_left_oversize		= gs_left_oversize,
		gs_right_oversize		= gs_right_oversize,
	! --- Sill Parameters
		bDrawSill					= bDrawSill,
		gs_sill_outside				= gs_sill_outside,
		gs_sill_outside_sl_left		= gs_sill_outside_sl_left,
		gs_sill_outside_sl_right	= gs_sill_outside_sl_right,
		iSillType				= iSillType,
		gs_sill_width			= gs_sill_width,
		gs_sill_thk				= gs_sill_thk,
		gs_sill_nosing			= gs_sill_nosing,
		gs_sill_angle			= gs_sill_angle,
		gs_sill_ovhg_left		= gs_sill_ovhg_left,
		gs_sill_ovhg_right		= gs_sill_ovhg_right,
		gs_sill_curved			= gs_sill_curved,
		bShowSillSplice			= 0,
	! --- Casing Parameters
		bDrawOutsideTrim		= bDrawOutsideTrim,
		gs_trim_thk_out			= gs_trim_thk_out,
		gs_trim_atframe_out		= gs_trim_atframe_out,
		gs_trim_width_out		= gs_trim_width_out,
	! --- 2D Representation
		lod2D_SillBoard			= lod2D_SillBoard,
		bShowAddHotspots		= bShowAddHotspots,
		gs_pen_2D				= gs_pen_2D,
		gs_bFills				= gs_sill_bFills,
		gs_sill_wallhole_fill		= gs_sill_wallhole_fill,
		gs_sill_wallhole_pen_fg		= gs_sill_wallhole_pen_fg,
		gs_sill_wallhole_pen_bg		= gs_sill_wallhole_pen_bg,
		gs_sill_wallhole_fill_sl	= gs_wallhole_fill_sl,
		gs_sill_wallhole_pen_sl_fg	= gs_wallhole_pen_sl_fg,
		gs_sill_wallhole_pen_sl_bg	= gs_wallhole_pen_sl_bg,
		gs_sillTreshold_lineType= gs_sillTreshold_lineType,
		gs_sill_pen_2D			= gs_sill_pen_2D,
	! --- Stacked Window
		gs_stack_left			= gs_stack_left,
		gs_stack_right			= gs_stack_right,
		gs_stack_bottom			= gs_stack_bottom,
		bSillNnosUsa			= bSillNnosUsa,
		frameWidthLeft			= gs_frame_width + gs_tolerance_left,
		frameWidthRight			= gs_frame_width + gs_tolerance_right,
		CasingOutsLeftOutPoint	= CasingOutsLeftOutPoint,
		CasingOutsRightOutPoint	= CasingOutsRightOutPoint,
		gs_trim_show_cover_out	= gs_trim_show_cover_out,
		stSillEdge				= stSillEdge
endif


! =============================================================================
! Draw Board
! =============================================================================

if not(bFeedBack) & bEnableBoard & bDrawBoard & not(gs_transom_display) then

	if gs_board_wallhole_pen_fg <= 0 then
		gs_board_bFills				= gs_bFills
		gs_board_wallhole_pen_fg	= gs_wallhole_pen_fg
		gs_board_wallhole_pen_bg	= gs_wallhole_pen_bg
	endif
	gs_board_wallhole_fill			= gs_wallhole_fill

	call "Board_WMCC" parameters gs_macro_version = 12,
		AC_WallType				= AC_WallType,
		AC_WindowInWallContour	= AC_WindowInWallContour,
		AC_WallContourPolygon	= AC_WallContourPolygon,
		AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
	! --- Wallhole Geometry
		iWindowShape			= iWindowShape,
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		radBoard				= radBoard,
		WOD						= WOD,
	! --- Sidelight
		gs_sidelight_left				= gs_sidelight_left,
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_right				= gs_sidelight_right,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Macro Control Parameters
		gs_IsCurved					= gs_IsCurved,
		bParalellInCurvedWalls		= bParalellInCurvedWalls,
		bDoorWithSidelightSupport	= bDoorWithSidelightSupport,
	! --- Reveal Parameters
		iRevealType						= iRevealType,
		gs_reveal_left_angle			= gs_reveal_left_angle,
		gs_reveal_right_angle			= gs_reveal_right_angle,
		gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
		gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
		leftRevealPnts					= leftWallFrameRevealPnts,
		rightRevealPnts					= rightWallFrameRevealPnts,
		iRevealPointsIdx				= iRevealPointsIdx,
!!!		SkinOffsetBoard					= SkinOffsetBoard,
	! --- Turn Plaster
		thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
		thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
	! --- Corner Functions
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		leftConnWallThk			= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
		rightConnWallThk		= rightConnWallThk,
	! --- Oversize
		gs_left_oversize		= gs_left_oversize,
		gs_right_oversize		= gs_right_oversize,
	! --- Sill Parameters
		iSillType				= iSillType,
		gs_sill_thk				= gs_sill_thk,
	! --- Board Parameters
		bDrawBoard					= bDrawBoard,
		gs_board_inside				= gs_board_inside,
		gs_board_inside_sl_left		= gs_board_inside_sl_left,
		gs_board_inside_sl_right	= gs_board_inside_sl_right,
		gs_board_nosing			= gs_board_nosing,
		gs_board_ovhg_left		= gs_board_ovhg_left,
		gs_board_ovhg_right		= gs_board_ovhg_right,
		gs_board_curved			= gs_board_curved,
		bBoardInPolyWall		= bBoardInPolyWall,
		bShowBoardSplice		= 0,
	! --- Casing Parameters
		bDrawInsideTrim			= bDrawInsideTrim,
		gs_trim_thk_in			= gs_trim_thk_in,
		gs_trim_atframe_in		= gs_trim_atframe_in,
		gs_trim_width_in		= gs_trim_width_in,
	! --- 2D Representation
		lod2D_SillBoard			= lod2D_SillBoard,
		bShowAddHotspots		= bShowAddHotspots,
		gs_pen_2D				= gs_pen_2D,
		gs_bFills				= gs_board_bFills,
		gs_board_wallhole_fill		= gs_board_wallhole_fill,
		gs_board_wallhole_pen_fg	= gs_board_wallhole_pen_fg,
		gs_board_wallhole_pen_bg	= gs_board_wallhole_pen_bg,
		gs_board_wallhole_fill_sl	= gs_wallhole_fill_sl,
		gs_board_wallhole_pen_sl_fg	= gs_wallhole_pen_sl_fg,
		gs_board_wallhole_pen_sl_bg	= gs_wallhole_pen_sl_bg,
		gs_board_pen_2D			= gs_board_pen_2D,
	! --- Stacked Window
		gs_stack_left			= gs_stack_left,
		gs_stack_right			= gs_stack_right,
		gs_stack_bottom			= gs_stack_bottom,
	! --- Wall Inset
		gs_parapet_wall_inset	= gs_parapet_wall_inset,
		gs_parapet_inset_thk	= gs_parapet_inset_thk,
		bBoardNnosUsa			= bBoardNnosUsa,
		frameWidthLeft			= gs_frame_width + gs_tolerance_left,
		frameWidthRight			= gs_frame_width + gs_tolerance_right,
		CasingInsLeftOutPoint	= CasingInsLeftOutPoint,
		CasingInsRightOutPoint	= CasingInsRightOutPoint,
		gs_trim_show_cover_in	= gs_trim_show_cover_in
endif


! =============================================================================
! Draw Threshold
! =============================================================================

if not(bFeedBack) & bEnableThreshold & bDrawThreshold then

	leftFrameOffset		= gs_sidelight_left  * gs_sidelight_width_left  + not(gs_sidelight_left)  * gs_frame_width_left  + gs_tolerance_left
	rightFrameOffset	= gs_sidelight_right * gs_sidelight_width_right + not(gs_sidelight_right) * gs_frame_width_right + gs_tolerance_right

	call "Threshold_WMCC" parameters gs_macro_version = 12,
		AC_WallType				= AC_WallType,
		AC_WindowInWallContour	= AC_WindowInWallContour,
		AC_WallContourPolygon	= AC_WallContourPolygon,
		AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		leftFrameOffset			= leftFrameOffset,
		rightFrameOffset		= rightFrameOffset,
		radSill					= radSill,
		radBoard				= radBoard,
		WOD						= WOD,
		bEnableThreshold		= bEnableThreshold,
	! --- Macro Control Parameters
		gs_IsCurved				= gs_IsCurved,
		bParalellInCurvedWalls  = bParalellInCurvedWalls,
		iWindowShape			= iWindowShape,
		gs_tolerance_left		= gs_tolerance_left,
		gs_tolerance_right		= gs_tolerance_right,
	! --- Reveal Parameters
		gs_reveal_left_sL				= gs_reveal_left_sL,
		gs_reveal_right_sR				= gs_reveal_right_sR,
		gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
		gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
		iRevealType						= iRevealType,
		gs_reveal_left_angle	= gs_reveal_left_angle,
		gs_reveal_right_angle	= gs_reveal_right_angle,
		leftRevealPnts			= leftWallFrameRevealPnts,
		rightRevealPnts			= rightWallFrameRevealPnts,
		iRevealPointsIdx		= iRevealPointsIdx,
!!!		thkSkinTurnInLeft		= thkSkinTurnInLeft,	! Uninitialized variables
!!!		thkSkinTurnInRight		= thkSkinTurnInRight,
!!!		thkSkinTurnOutLeft		= thkSkinTurnOutLeft,
!!!		thkSkinTurnOutRight		= thkSkinTurnOutRight,
!!!		penSkinContourIn		= penSkinContourIn,
!!!		penSkinContourOut		= penSkinContourOut,
!!!		ltSkinContourIn			= ltSkinContourIn,
!!!		ltSkinContourOut		= ltSkinContourOut,
	! --- Door Frame
		iFrameStyle			= iFrameStyle,
		gs_frame_wthk		= gs_frame_wthk,
		gs_fthk				= gs_fthk,
		gs_frame_thkin		= gs_frame_thkin,
		gs_frame_width_left	= gs_frame_width_left,
		gs_frame_width_right= gs_frame_width_right,
		gs_ds_thk			= gs_ds_thk,
		gs_ds_w				= gs_ds_w,
		gs_rebate_width		= gs_rebate_width,
		gs_frame_oversize_thk	= gs_frame_oversize_thk,
	! --- Door Leaf
		gs_leaf_thk			= gs_leaf_thk,
	! --- Sidelight
		gs_sidelight_left				= gs_sidelight_left,
		gs_sidelight_width_left			= gs_sidelight_width_left,
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_right				= gs_sidelight_right,
		gs_sidelight_width_right		= gs_sidelight_width_right,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Trim Parameters
		gs_trim_outside		= gs_trim_outside,
		gs_trim_inside		= gs_trim_inside,
		gs_trim_width_in	= gs_trim_width_in,
		gs_trim_width_out	= gs_trim_width_out,
	! --- Threshold
		bThreshold				= bThreshold,
		iThresholdType			= iThresholdType,
		gs_treshold_width		= gs_treshold_width,
		gs_treshold_nosing		= gs_treshold_nosing,
		gs_treshold_nosing_2	= gs_treshold_nosing_2,
		gs_treshold_ovhg		= gs_treshold_ovhg,
		gs_treshold_ovhg_2		= gs_treshold_ovhg_2,
	! --- Turn Plaster
		thkPlasterAtBoardSlLeft		= thkPlasterAtBoardSlLeft,
		thkPlasterAtBoardSlRight	= thkPlasterAtBoardSlRight,
		thkPlasterAtSillSlLeft		= thkPlasterAtSillSlLeft,
		thkPlasterAtSillSlRight		= thkPlasterAtSillSlRight,
	! --- Oversize
		gs_left_oversize	= gs_left_oversize,
		gs_right_oversize	= gs_right_oversize,
	! --- Stacked Window
		gs_stack_left		= gs_stack_left,
		gs_stack_right		= gs_stack_right,
	! --- 2D Representation
		lod2D_Treshold		= lod2D_Treshold,
		bShowAddHotspots	= bShowAddHotspots,
		gs_pen_2D			= gs_pen_2D,
		gs_wallhole_fill	= gs_wallhole_fill,
		gs_wallhole_pen_fg	= gs_wallhole_pen_fg,
		gs_wallhole_pen_bg	= gs_wallhole_pen_bg,
		gs_sillTreshold_lineType= gs_sillTreshold_lineType,
	! --- NOR Threshold
		gs_threshold_nor	= gs_threshold_nor
endif


! =============================================================================
! Draw Casing
! =============================================================================

drawindex 30	! Casing in the Middle

if not(bFeedBack) & bEnableCasing & (gs_trim_inside | gs_trim_outside) then

	call "Casing_WMCC" parameters gs_macro_version = 12,
		AC_WallType				= AC_WallType,
		AC_WindowInWallContour	= AC_WindowInWallContour,
		AC_WallContourPolygon	= AC_WallContourPolygon,
		AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
	! --- Wallhole Geometry
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		radSill					= radSill,
		radBoard				= radBoard,
		WOD						= WOD,
	! --- Macro Control Parameters
		isWindow				= isWindow,
		Suppress_isWindow		= Suppress_isWindow,
		gs_IsCurved				= gs_IsCurved,
		gs_CasingOutTypeEnable	= gs_CasingOutTypeEnable,
		gs_CasingInTypeEnable	= gs_CasingInTypeEnable,
		bParalellInCurvedWalls  = bParalellInCurvedWalls,
		bCasingTolerance		= bCasingTolerance,
		bDrawOutsideCasingFill	= not(bEnableSill & bDrawSill),
		bDrawInsideCasingFill	= not(bEnableBoard & bDrawBoard),
		bShowEdgeHotspots		= bShowEdgeHotspots,
		iWindowShape			= iWindowShape,
		bTelescopic				= bTelescopic,
		gs_frame_style_m		= iFrameStyle,
		iDoorType				= iDoorType,
	! --- Reveal Parameters
		iRevealType						= iRevealType,
		gs_reveal_left					= gs_reveal_left,
		gs_reveal_right					= gs_reveal_right,
		revealInnerLeft 				= revealInnerLeft,
		revealInnerRight				= revealInnerRight,
		gs_reveal_left_angle			= gs_reveal_left_angle,
		gs_reveal_right_angle			= gs_reveal_right_angle,
		gs_reveal_right_sR				= gs_reveal_right_sR,
		gs_reveal_left_sL				= gs_reveal_left_sL,
		gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
		gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
		leftRevealPnts					= leftWallFrameRevealPnts,
		rightRevealPnts					= rightWallFrameRevealPnts,
		iRevealPointsIdx				= iRevealPointsIdx,
	! --- Corner Functions
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		leftConnWallThk			= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
		rightConnWallThk		= rightConnWallThk,
	! --- Sidelight
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Tolerance
		gs_tolerance_left	= gs_tolerance_left,
		gs_tolerance_right	= gs_tolerance_right,
	! --- Oversize
		gs_left_oversize		= gs_left_oversize,
		gs_right_oversize		= gs_right_oversize,
	! --- Trim Parameters
		bDrawInsideTrim			= bDrawInsideTrim,
		bDrawOutsideTrim		= bDrawOutsideTrim,
		gs_trimtype_in_int		= gs_trimtype_in_int,
		gs_trimtype_out_int		= gs_trimtype_out_int,
		gs_trim_inside_uniform	= gs_trim_inside_uniform,
		gs_trim_outside_uniform	= gs_trim_outside_uniform,
		gs_trim_width_in		= gs_trim_width_in,
		gs_trim_width_out		= gs_trim_width_out,
		gs_trim_offs_in			= gs_trim_offs_in,
		gs_trim_offs_out		= gs_trim_offs_out,
		gs_trim_thk_in			= gs_trim_thk_in,
		gs_trim_thk_out			= gs_trim_thk_out,
		gs_tw_left_in			= gs_tw_left_in,
		gs_tw_right_in			= gs_tw_right_in,
		gs_tw_left_out			= gs_tw_left_out,
		gs_tw_right_out			= gs_tw_right_out,
		gs_trim_atframe_out		= gs_trim_atframe_out,
		gs_trim_atframe_in		= gs_trim_atframe_in,
		gs_trim_stack_left		= gs_trim_stack_left,
		gs_trim_stack_right		= gs_trim_stack_right,
		gs_trim_stack_bottom	= gs_trim_stack_bottom,
		gs_trim_stack_top		= gs_trim_stack_top,
		gs_trim_show_cover_in	= gs_trim_show_cover_in,
		gs_trim_show_cover_out	= gs_trim_show_cover_out,
		gs_trim_jambext_nosing_in	= gs_trim_jambext_nosing_in,
		gs_trim_jambext_nosing_out	= gs_trim_jambext_nosing_out,
	! --- 2D Representation
		lod2D_Casing			= lod2D_Casing,
		bShowAddHotspots		= bShowAddHotspots,
		gs_pen_2D				= gs_pen_2D,
		gs_trim_pen_cont		= gs_trim_pen_cont,
		gs_bFills				= gs_bFills,
		gs_wallhole_fill		= gs_wallhole_fill,
		gs_wallhole_pen_fg		= gs_wallhole_pen_fg,
		gs_wallhole_pen_bg		= gs_wallhole_pen_bg,
		gs_wallhole_fill_sl		= gs_wallhole_fill_sl,
		gs_wallhole_pen_sl_fg	= gs_wallhole_pen_sl_fg,
		gs_wallhole_pen_sl_bg	= gs_wallhole_pen_sl_bg,
		gs_trim_bFills_in			= gs_trim_bFills_in,
		gs_trim_wallhole_pen_fg_in	= gs_trim_wallhole_pen_fg_in,
		gs_trim_wallhole_pen_bg_in	= gs_trim_wallhole_pen_bg_in,
		gs_trim_bFills_out			= gs_trim_bFills_out,
		gs_trim_wallhole_pen_fg_out	= gs_trim_wallhole_pen_fg_out,
		gs_trim_wallhole_pen_bg_out	= gs_trim_wallhole_pen_bg_out,
		gs_trim_fill_in			= gs_trim_fill_in,
		gs_trim_pen_fg_in		= gs_trim_pen_fg_in,
		gs_trim_pen_bg_in		= gs_trim_pen_bg_in,
		gs_trim_fill_out		= gs_trim_fill_out,
		gs_trim_pen_fg_out		= gs_trim_pen_fg_out,
		gs_trim_pen_bg_out		= gs_trim_pen_bg_out,
	! --- Stacked Window
		gs_stack_left			= gs_stack_left,
		gs_stack_right			= gs_stack_right,
		gs_stack_bottom			= gs_stack_bottom,
		gs_board_inside			= gs_board_inside,
		gs_board_inside_sl_left	= gs_board_inside_sl_left,
		gs_board_inside_sl_right= gs_board_inside_sl_right,
		gs_sill_outside			= gs_sill_outside,
		gs_sill_outside_sl_left	= gs_sill_outside_sl_left,
		gs_sill_outside_sl_right= gs_sill_outside_sl_right,
		gs_frame_width			= gs_frame_width,
		gs_frame_wthk			= gs_frame_wthk,
	! --- USA Parameters
		trim_offs_out_modify	= trim_offs_out_modify,
		gs_sectgar				= gs_sectgar,
		gs_casing_nor			= gs_casing_nor,
		bLineCasingOffset		= bLineCasingOffset,		! Show Line at Casing Offset (USA)
	! --- SunShade Parameters
		casingSetBackOnSides_out= casingSetBack2D_out,
		casingSetBackOnSides_in = casingSetBack2D_in


endif


! =============================================================================
! Draw Shutter
! =============================================================================

if bEnableShutter & bDrawShutter then

	drawindex 30	! Sunshade in the Middle

	outfolding_innerPanelLeft = gs_outFoldingShutter_panelIn
	outfolding_innerPanelRight = gs_outFoldingShutter_panelIn

	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		leftWallAngle	= gs_reveal_outerLeft_angle  * not(gs_stack_left)
		rightWallAngle	= gs_reveal_outerRight_angle * not(gs_stack_right)
	else
		leftWallAngle	= 0
		rightWallAngle	= 0
	endif

	bUseInnerRevealPoints = 0
	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		if gs_sunShade_iType = SUNSHADE_FOLDING | gs_sunShade_iType = SUNSHADE_OUTFOLDING then bUseInnerRevealPoints = 1

		if gs_sunShade_iType = SUNSHADE_ROLLING & gs_shutRoll_iPlacement <> 1 then bUseInnerRevealPoints = 1
		if gs_sunShade_iType = SUNSHADE_EXTVENETIAN & gs_shutLam_iPlacement <> 1 then bUseInnerRevealPoints = 1
	endif

	if bUseInnerRevealPoints then
		leftCornerX		= leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][1]
		rightCornerX	=  rightWallFrameRevealPnts[idxSillStartPlasterRight+1][1]
		leftX1		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][1]
		rightX1		= rightWallFrameRevealPnts[idxSillStartPlasterRight][1]

		if WIDO_REVEAL_SIDE then
			leftCornerY		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][2] - WIDO_FRAME_THICKNESS
			rightCornerY	= rightWallFrameRevealPnts[idxSillStartPlasterRight][2] - WIDO_FRAME_THICKNESS

			leftY2	= leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][2] - WIDO_FRAME_THICKNESS
			rightY2	= rightWallFrameRevealPnts[idxSillStartPlasterRight+1][2] - WIDO_FRAME_THICKNESS
		else
			leftCornerY		= -leftWallFrameRevealPnts[idxSillStartPlasterLeft][2]
			rightCornerY	= -rightWallFrameRevealPnts[idxSillStartPlasterRight][2]

			leftY2	= -leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][2]
			rightY2	= -rightWallFrameRevealPnts[idxSillStartPlasterRight+1][2]
		endif

		if abs(leftWallAngle) < EPS then
			outfolding_innerPanelLeft = WIDO_SILL - gs_reveal_outer_jamb_depth
		else
			outfolding_innerPanelLeft = sqr((leftCornerX - leftX1)^2 + (leftY2 - leftCornerY)^2)
		endif
		if abs(rightWallAngle) < EPS then
			outfolding_innerPanelRight = WIDO_SILL - gs_reveal_outer_jamb_depth
		else
			outfolding_innerPanelRight = sqr((rightCornerX - rightX1)^2 + (rightY2 -rightCornerY)^2)
		endif
	else
		leftCornerX		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][1]
		rightCornerX	= rightWallFrameRevealPnts[idxSillStartPlasterRight][1]

		if WIDO_REVEAL_SIDE then
			leftCornerY		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][2] - WIDO_FRAME_THICKNESS
			rightCornerY	= rightWallFrameRevealPnts[idxSillStartPlasterRight][2] - WIDO_FRAME_THICKNESS
		else
			leftCornerY		= -leftWallFrameRevealPnts[idxSillStartPlasterLeft][2]
			rightCornerY	= -rightWallFrameRevealPnts[idxSillStartPlasterRight][2]
		endif
	endif

	sunShadeLength = rightCornerX - leftCornerX

	casingThkAtWindow	= 0
	casingThkOnFacade	= 0

	if gs_trim_outside then
		casingThkAtWindow = gs_trim_width_out
		if gs_shutRoll_iRailPos = 2 then		! ON WALL
			casingThkAtWindow = 0
		endif
		if gs_shutLam_iRailPos = 2 then			! ON WALL
			casingThkAtWindow = 0
		endif

		if gs_trim_show_cover_out then
			casingThkOnFacade = gs_trim_thk_out
		else
			casingThkOnFacade = gs_trim_jambext_nosing_out
		endif
	endif

	add2 leftCornerX + sunShadeLength / 2, 0

	call "SunShade_WMCC" parameters a				= sunShadeLength - casingThkAtWindow * 2,

				lod2D_sunShade					= lod2D_sunShade,
				gs_sunShade_iType				= gs_sunShade_iType,
				gs_shutter_nPanels				= gs_shutter_nPanels,
				gs_shutter_nPanels2				= gs_shutter_nPanels2,
				gs_shutter_iPanelPos			= gs_shutter_iPanelPos,

				gs_shutter_innerOffset			= gs_shutter_innerOffset,
				gs_shutter_closingDepth			= gs_shutter_closingDepth,

				gs_slidingShutter_panelDist		= gs_slidingShutter_panelDist,

				gs_foldingShutter_iStacking		= gs_foldingShutter_iStacking,
				gs_foldingShutter_ovhg			= gs_foldingShutter_ovhg,

				gs_outFoldingShutter_panelIn	= gs_outFoldingShutter_panelIn,
				outfolding_innerPanelLeft		= outfolding_innerPanelLeft,
				outfolding_innerPanelRight		= outfolding_innerPanelRight,

				gs_sunShade_bShowIn2D			= gs_sunShade_bShowIn2D,
				gs_sunShade_bShowOpline			= gs_sunShade_bShowOpline,

				gs_shutPanel_bAutomaticWidth	= gs_shutPanel_bAutomaticWidth,
				gs_shutPanel_panelWidth			= gs_shutPanel_panelWidth,
				gs_shutPanel_Thk				= gs_shutPanel_Thk,

				gs_shutRoll_iPlacement			= gs_shutRoll_iPlacement,
				gs_shutRoll_boxWidth			= gs_shutRoll_boxWidth,
				gs_shutRoll_railDepth			= gs_shutRoll_railDepth,
				gs_shutRoll_distFromWall		= gs_shutRoll_distFromWall,
				gs_shutRoll_distFromHead		= gs_shutRoll_distFromHead,
				gs_shutRoll_boxOffsetLeft		= gs_shutRoll_boxOffsetLeft,
				gs_shutRoll_boxOffsetRight		= gs_shutRoll_boxOffsetRight,

				gs_shutLam_iPlacement			= gs_shutLam_iPlacement,
				gs_shutLam_boxWidth				= gs_shutLam_boxWidth,
				gs_shutLam_bRail				= gs_shutLam_bRail,
				gs_shutLam_coverWidth			= gs_shutLam_coverWidth,
				gs_shutLam_distFromWall			= gs_shutLam_distFromWall,

				gs_sunShade_lineType			= gs_sunShade_lineType,
				gs_sunShade_cutLinesPen			= gs_sunShade_cutLinesPen,
				gs_sunShade_unCutLinesPen		= gs_sunShade_unCutLinesPen,
				gs_sunShade_cutFillType			= gs_sunShade_cutFillType,
				gs_sunShade_cutFillPen			= gs_sunShade_cutFillPen,
				gs_sunShade_cutFillBackPen		= gs_sunShade_cutFillBackPen,

				radSill							= radSill,
				radBoard						= radBoard,
				gs_casingThkOnFacade			= casingThkOnFacade,
				iWindowShape					= iWindowShape,
				bLeftCornerFunction				= bLeftCornerFunction,
				bRightCornerFunction			= bRightCornerFunction,
				leftCornerAngle					= leftCornerAngle,
				rightCornerAngle				= rightCornerAngle,

				leftWallAngle					= leftWallAngle,
				rightWallAngle					= rightWallAngle,
				iRevealType						= iRevealType
	del 1
endif


! =============================================================================
! Draw Corner Column
! =============================================================================

drawindex 50	! Draw Corner Column at the top

if gs_corner_column & not(bFeedBack) & (bEnableCustomCornerLeft | bEnableCustomCornerRight) then
	call "Corner Column_WMCC" parameters gs_macro_version = 12,
	! --- Reveal Parameters
		iRevealType				= iRevealType,
		leftRevealPnts			= leftWallFrameRevealPnts,
		rightRevealPnts			= rightWallFrameRevealPnts,
		SymbolMid_shiftDy		= SymbolMid_shiftDy,
		iRevealPointsIdx		= iRevealPointsIdx,
	! --- Corner Functions
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
	! --- Corner Column Geometry
		gs_corner_column 		= gs_corner_column,
		gs_cc_width				= gs_cc_width,
		gs_cc_thk				= gs_cc_thk,
		gs_cc_pr				= gs_cc_pr,
		gs_cc_endline			= gs_cc_endline,
	! --- 2D Representation
		lod2D_CornerColumn		= lod2D_CornerColumn,
		gs_frame_pen_cont		= gs_frame_pen_cont,
		gs_fillFr				= gs_fillFr,
		gs_penFr_fg				= gs_penFr_fg,
		gs_penFr_bg				= gs_penFr_bg
endif

]]></Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

! const values for parameter: iBoardInPolyWall
BOARD_PARALLEL_WINDOW      = 1
BOARD_PARALLEL_WALLPOLYGON = 2


! const values for parameter: iCornerConnTypeRight
CONNECTION_TYPE_FRAME  = 1
CONNECTION_TYPE_COLUMN = 2
CONNECTION_TYPE_GLASS  = 3


! const values for parameter: iCornerConnTypeLeft
CONNECTION_TYPE_FRAME  = 1
CONNECTION_TYPE_COLUMN = 2
CONNECTION_TYPE_GLASS  = 3


! const values for parameter: iBrickSilldetlevel
BRICKSILL_SIMPLE   = 1
BRICKSILL_DETAILED = 2


! Contact person: <NJ>

EPS = 0.0001

! iRevealType:
REVEAL_EDGE				= 0
REVEAL_NO				= 1
REVEAL_POSITIVE			= 2
REVEAL_NEGATIVE			= 3
REVEAL_SLANTED			= 4
REVEAL_SPLAYED			= 5
REVEAL_HISTORIC			= 6
REVEAL_DOUBLE			= 7
REVEAL_DOUBLE_SPLAYED	= 8
REVEAL_OUTSIDE_SPLAYED	= 9

! iClosureType:
CLOSURE_NO					= 0
CLOSURE_TRADITIONAL			= 1
CLOSURE_PREFABRICATED		= 2
CLOSURE_CUSTOM				= 3
CLOSURE_SOLID_WALL			= 4
CLOSURE_STUD_WALL			= 5
CLOSURE_STUD_WALL_SIDING	= 6
CLOSURE_BRICK_VENEER		= 7
CLOSURE_VARIABLE			= 8
CLOSURE_PLASTER_REVEAL	 			= 9
CLOSURE_INSULATED_REVEAL			= 10
CLOSURE_INSULATED_FOR_RENOVATION	= 11
CLOSURE_FINISH						= 12
CLOSURE_AIR_SPACE					= 13
CLOSURE_DUTCH_VARIABLE				= 14

! Partial Stucture Display defines:
STRUCTURE_ENTIRE_STRUCTURE	= 0
STRUCTURE_CORE_ONLY			= 1
STRUCTURE_WITHOUT_FINISHES	= 2

! iWindowShape:
SHAPE_RECTANGULAR			= 0
SHAPE_ARCHED				= 1
SHAPE_ROUND					= 2
SHAPE_EYEBROWS				= 3
SHAPE_HALFCIRCLE			= 4 	! straight side is horizontal
SHAPE_MULTISIDE				= 5
SHAPE_OCTAGONAL				= 6
SHAPE_HALFARCH				= 7
SHAPE_PENTAGON				= 8
SHAPE_QUARTERROUND			= 9
SHAPE_HALFROUND				= 10 	! straight side is vertical
SHAPE_TRAPEZOID				= 11
SHAPE_TRIANGLE				= 12
SHAPE_GOTHICARCH			= 13
SHAPE_ELLIPSEARCH			= 14
SHAPE_ROMBUS				= 15
SHAPE_HORSESHOE				= 16
SHAPE_OGEECENTERED			= 17
SHAPE_SARACENIC				= 18
SHAPE_T						= 19
SHAPE_HALF_T_LEFT			= 20
SHAPE_ARCHED_T				= 21
SHAPE_ARCHED_HALF_T_LEFT	= 22
SHAPE_PARALLELOGRAM			= 23
SHAPE_ELLIPSE				= 24
SHAPE_CORNER_TRIANGLE		= 25
SHAPE_QUARTERROUND_NOFRAME	= 26
SHAPE_HALF_T_RIGHT			= 27
SHAPE_ARCHED_HALF_T_RIGHT	= 28

! const values for parameter: iSillType
SILL_TIMBER			= 1
SILL_BRICK			= 2
SILL_STONE			= 3
SILL_CERAMIC		= 4
SILL_ETHERNIT		= 5
SILL_CONCRETE_TUB	= 6
SILL_ALUMINIUM		= 7
SILL_SOLID_11		= 8
SILL_SOLID_12		= 9
SILL_SOLID_22		= 10
SILL_METAL_1		= 11
SILL_PARALLEL		= 12
SILL_METAL_2		= 13
SILL_PARALLEL_2		= 14
SILL_SIMPLEBLOCK	= 15
SILL_BLOCK			= 16
SILL_DUTCH			= 17

! gs_sunshade_iType:
SUNSHADE_DECORATIVE		= 1
SUNSHADE_SHUTTER		= 2
SUNSHADE_FOLDING		= 3
SUNSHADE_OUTFOLDING		= 4
SUNSHADE_SLIDING		= 5
SUNSHADE_ROLLING		= 6
SUNSHADE_EXTVENETIAN	= 7
SUNSHADE_VENETIAN		= 8

SHUTROLL_ONFACADE = 1
SHUTROLL_TOWINDOW = 2
SHUTROLL_BEHIND = 3

SHUTLAM_ONFACADE = 1
SHUTLAM_TOWINDOW = 2
SHUTLAM_BEHIND = 3

! iThresholdType:
TRESHOLD_OFF			= 1
TRESHOLD_NORMAL			= 2
TRESHOLD_EXTENDED		= 3
TRESHOLD_BOTHEXTENDED	= 4
TRESHOLD_BENEATHPANEL	= 5
TRESHOLD_PROFILED		= 6
TRESHOLD_FLAT			= 7		! NOR Flat Terskel
TRESHOLD_ANSLAG			= 8		! NOR Anslagterskel
TRESHOLD_GUMMI			= 9		! NOR Gummiterskel m Slepelist
TRESHOLD_HEVE			= 10	! NOR Heveterskel
TRESHOLD_HC				= 11	! NOR H-C Terskel
TRESHOLD_BRANN			= 12	! NOR Brannterskel
TRESHOLD_BADEROMS		= 13	! NOR Baderomsterskel
TRESHOLD_AKKUSTIKK		= 14	! NOR Akkustikkterskel
TRESHOLD_SIMPLE			= 15	! NED Simple threshold
TRESHOLD_SLOPINGEXT		= 16	! Sloping Extended
TRESHOLD_METAL			= 17	! Metal
TRESHOLD_EXTENDED_SWE	= 18	! SWE Extended to Opening Side
TRESHOLD_NOTAVAILABLE	= -1	! Not Available

! =============================================================================

bTShapedOpening =  (iWindowShape = SHAPE_T |\
					iWindowShape = SHAPE_HALF_T_LEFT |\
					iWindowShape = SHAPE_HALF_T_RIGHT |\
					iWindowShape = SHAPE_ARCHED_T |\
					iWindowShape = SHAPE_ARCHED_HALF_T_LEFT |\
					iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT)

bInclinedWall	= (abs(WALL_INCL) > EPS)
curvedWall		= (abs(WIDO_ORIG_DIST) > EPS)
wallIsLeft		= (SYMB_ROTANGLE > EPS) exor WIDO_REVEAL_SIDE


! =============================================================================
! Array index definitions
! =============================================================================

if not(bEnableThreshold) then
	bThreshold = 0
endif


! =============================================================================
! Polygon Wall Related Calculations
! =============================================================================

if AC_WallType = 2 then
	id1 = AC_WindowInWallContour[1]
	id2 = AC_WindowInWallContour[2]
	id3 = AC_WindowInWallContour[3]
	id4 = AC_WindowInWallContour[4]

	if id1 > 0 & id2 > 0 & id3 > 0 & id4 > 0 & abs(id1 - id2) = 1 & abs(id3 - id4) = 1 then
		if	abs(AC_WallContourPolygon[id1][2] - AC_WallContourPolygon[id2][2]) < EPS & \
			abs(AC_WallContourPolygon[id2][3]) < EPS & \
			abs(AC_WallContourPolygon[id3][2] - AC_WallContourPolygon[id4][2]) < EPS & \
			abs(AC_WallContourPolygon[id4][3]) < EPS then
			AC_WallType = 1		! Switch back to a simple case
		endif
	endif
endif

! ==============================================================================
! Reveal Points Indexes
! ==============================================================================

idxSillStartPlasterLeft		= iRevealPointsIdx[7]
idxSillStartPlasterRight	= iRevealPointsIdx[17]


! =============================================================================
! Definitions
! =============================================================================

bDrawOutsideTrim	= (gs_trim_outside)
bDrawInsideTrim		= (gs_trim_inside)
if bTShapedOpening then
	bDrawSill		= (gs_sill_outside | gs_sill_outside_sl_left | gs_sill_outside_sl_right)
	bDrawBoard		= (gs_board_inside_sl_left | gs_board_inside_sl_right)
else
	bDrawSill		= (gs_sill_outside)
	bDrawBoard		= (gs_board_inside)
endif
bDrawThreshold		= (bThreshold)
bDrawShutter		= (bSunshade)

bMirrored = (bDisabeMirroring & SYMB_MIRRORED)

if lod2D_Casing > 0 then
	! USA hack
	CasingInsLeftOutPoint	= -(bCasingTolerance & gs_trim_atframe_in) * gs_frame_width
	CasingInsRightOutPoint	= -(bCasingTolerance & gs_trim_atframe_in) * gs_frame_width
	CasingOutsLeftOutPoint	= -(bCasingTolerance & (gs_trim_atframe_out | WIDO_SILL < EPS)) * gs_frame_width
	CasingOutsRightOutPoint	= -(bCasingTolerance & (gs_trim_atframe_out | WIDO_SILL < EPS)) * gs_frame_width

	CasingInsLeftOutPoint	= CasingInsLeftOutPoint		- gs_trim_width_in  + gs_trim_offs_in  + gs_tw_left_in   - (bCasingTolerance * gs_tolerance_left)
	CasingInsRightOutPoint	= CasingInsRightOutPoint	- gs_trim_width_in  + gs_trim_offs_in  + gs_tw_right_in  - (bCasingTolerance * gs_tolerance_right)
	CasingOutsLeftOutPoint	= CasingOutsLeftOutPoint	- gs_trim_width_out + gs_trim_offs_out + gs_tw_left_out  - (bCasingTolerance * gs_tolerance_left)
	CasingOutsRightOutPoint	= CasingOutsRightOutPoint	- gs_trim_width_out + gs_trim_offs_out + gs_tw_right_out - (bCasingTolerance * gs_tolerance_right)
else
	CasingInsLeftOutPoint	= 0
	CasingInsRightOutPoint	= 0
	CasingOutsLeftOutPoint	= 0
	CasingOutsRightOutPoint	= 0
endif


! ==============================================================================
! Partial Stucture Display related display options
! ==============================================================================

if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 then
	if GLOB_STRUCTURE_DISPLAY = STRUCTURE_CORE_ONLY & \
	  (GLOB_CONTEXT = 2 | GLOB_CONTEXT = 22 | \		! Floor plan
	   GLOB_CONTEXT = 3 | GLOB_CONTEXT = 23 | \		! 3D
	   GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | \		! Section
!!	   (GLOB_PREVIEW_MODE = 2)  | \	! IS but not surface
	   GLOB_CONTEXT = 6 | \	! IS
	   GLOB_CONTEXT = 8 | GLOB_CONTEXT = 28) then	! Layout

		bDrawOutsideTrim	= 0
		bDrawInsideTrim		= 0
		bDrawSill			= 0
		bDrawBoard			= 0
	endif
endif

! ==============================================================================
! Interactive Schedule and Listing related display options
! ==============================================================================

if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 then
!!	if GLOB_PREVIEW_MODE = 2 then	! IS but not surface
	if GLOB_CONTEXT = 6 then
		if not(bShowCasingOnLists)	then bDrawOutsideTrim	= 0
		if not(bShowCasingOnLists)	then bDrawInsideTrim	= 0
		if not(bShowSillOnLists)	then bDrawSill			= 0
		if not(bShowBoardOnLists)	then bDrawBoard			= 0
		bDrawThreshold		= 0
		bDrawShutter		= 0
	endif
endif


! ==============================================================================
! Calculations for Trapezoid Walls
! ==============================================================================

if bInclinedWall then
	bFactor = SYMB_MIRRORED exor WIDO_REVEAL_SIDE exor wallIsLeft
	incFactor = not(bFactor) - bFactor
	incX = incFactor * tan(WALL_INCL)
	incY = incFactor * (1 / cos(WALL_INCL))

	bInclDir = SYMB_MIRRORED exor (SYMB_ROTANGLE > EPS)	! (0 / 1)
	iInclDir = not(bInclDir) - bInclDir					! (1 / -1)

	incH = cos(WALL_INCL)
	incV = sin(WALL_INCL) * iInclDir

	incHor = tan(WALL_INCL)
endif


! ==============================================================================
! Sill, Board and Casing Parameters Restrictions
! ==============================================================================

if bEnableSill then
	if	gs_sill_outside & \
		gs_trim_outside & \
		iSillType <> SILL_SIMPLEBLOCK & \
		iSillType <> SILL_BLOCK & \
		iSillType <> SILL_DUTCH then
		minSillNosing		= gs_trim_thk_out
	else
		minSillNosing		= 0
	endif

	if gs_sill_nosing < minSillNosing then
		gs_sill_nosing = minSillNosing
		parameters gs_sill_nosing = minSillNosing
	endif
	if gs_sill_ovhg_left < 0 then
		gs_sill_ovhg_left = 0
		parameters gs_sill_ovhg_left = 0
	endif
	if gs_sill_ovhg_right < 0 then
		gs_sill_ovhg_right = 0
		parameters gs_sill_ovhg_right = 0
	endif
endif

if bEnableBoard then
	if gs_board_inside and gs_trim_inside then
		minBoardNosing		= gs_trim_thk_in
		if bInclinedWall then
			minBoardOvhgLeft	= 0		! gs_tw_left_in - (incX * gs_trim_thk_in + (gs_trim_width_in - gs_trim_offs_in) / incH)
			minBoardOvhgRight	= 0		! gs_tw_right_in + (incX * gs_trim_thk_in - (gs_trim_width_in - gs_trim_offs_in) / incH)
		else
			minBoardOvhgLeft	= 0		! gs_tw_left_in  - gs_trim_width_in + gs_trim_offs_in
			minBoardOvhgRight	= 0		! gs_tw_right_in - gs_trim_width_in + gs_trim_offs_in
		endif
	else
		minBoardNosing		= 0
		minBoardOvhgLeft	= 0
		minBoardOvhgRight	= 0
	endif

	if gs_board_nosing < minBoardNosing then
		gs_board_nosing = minBoardNosing
		parameters gs_board_nosing = minBoardNosing
	endif
	if gs_board_ovhg_left < minBoardOvhgLeft then
		gs_board_ovhg_left = minBoardOvhgLeft
		parameters gs_board_ovhg_left = minBoardOvhgLeft
	endif
	if gs_board_ovhg_right < minBoardOvhgRight then
		gs_board_ovhg_right = minBoardOvhgRight
		parameters gs_board_ovhg_right = minBoardOvhgRight
	endif
endif


! =============================================================================
! Wallhole Geometry
! =============================================================================

bCornerWindow	= (ac_cw_function & ac_corner_window)

if isWindow then
	openingHeight	= ac_wallhole_height + overSizeLower + overSizeUpper - includeBoxHeight
else
	openingHeight	= ac_wallhole_height - includeBoxHeight
endif

offsY			= overSizeLower

! =============================================================================
! SunShade - Casing Set Back
! =============================================================================

SHUTROLL_ONCASING = 1
SHUTROLL_ONWALL = 2

SHUTLAM_ONCASING = 1
SHUTLAM_ONWALL = 2

casingSetBack2D_in	= 0
casingSetBack2D_out = 0
casingSetBack3D_in	= 0
casingSetBack3D_out	= 0

if bEnableShutter & bDrawShutter then
	if gs_sunShade_iType = SUNSHADE_EXTVENETIAN then
		if not(gs_shutLam_bRail) then
			gs_shutLam_iRailPos = SHUTLAM_ONCASING
		endif
	endif

	! Casing Set Back
	isCutCasingOut = 0 : isCutCasingIn = 0
	if not(gs_shutRoll_showCasingBehind) then
		if gs_sunShade_iType = SUNSHADE_ROLLING & gs_shutRoll_iPlacement = SHUTROLL_BEHIND then
			posRail = gs_shutRoll_railDepth
			if posRail < WIDO_SILL then
				isCutCasingOut = 1
			else
				isCutCasingIn = 1
			endif
		endif

		if gs_sunShade_iType = SUNSHADE_EXTVENETIAN then
			if gs_shutLam_iPlacement = SHUTLAM_TOWINDOW then isCutCasingOut = 1
			if gs_shutLam_iPlacement = SHUTLAM_BEHIND then
				posRail = gs_shutLam_coverWidth + gs_shutLam_boxWidth/2 + gs_shutLam_bRail * 0.025/2
				if posRail < WIDO_SILL then
					isCutCasingOut = 1
				else
					isCutCasingIn = 1
				endif
			endif
		endif

		if gs_sunShade_iType = SUNSHADE_VENETIAN then
			if gs_shutLam2_distFromWindow > -gs_shutLam2_boxWidth/2 then
				isCutCasingOut = 1
			else
				isCutCasingIn = 1
			endif
		endif

		if isCutCasingOut then
			casingSetBack3D_out = WIDO_SILL - posRail
			if gs_sunShade_iType = SUNSHADE_EXTVENETIAN & gs_shutLam_iPlacement = SHUTLAM_TOWINDOW then
				casingSetBack3D_out = gs_shutLam_boxWidth/2 - gs_shutLam_bRail * 0.025/2
			endif
			if gs_sunShade_iType = SUNSHADE_VENETIAN then
				casingSetBack3D_out = gs_shutLam2_distFromWindow + gs_shutLam2_boxWidth/2
			endif
		endif

		if isCutCasingIn then
			casingSetBack3D_in = posRail - (WIDO_SILL + WIDO_FRAME_THICKNESS)
			if gs_sunShade_iType = SUNSHADE_VENETIAN then
				casingSetBack3D_in = -gs_shutLam2_distFromWindow - WIDO_FRAME_THICKNESS + gs_shutLam2_boxWidth/2
			endif
		endif

		! 2D Casing Set Back
		if (gs_sunShade_iType = SUNSHADE_ROLLING & gs_shutRoll_iRailPos = SHUTROLL_ONWALL) | \
			(gs_sunShade_iType = SUNSHADE_EXTVENETIAN & gs_shutLam_iRailPos = SHUTLAM_ONWALL) then
			casingSetBack2D_out = casingSetBack3D_out
			casingSetBack2D_in = casingSetBack3D_in
		endif

	endif
endif

]]></Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

]]></Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

bSlidingDoor = (iDoorType = 6 | iDoorType = 7 | iDoorType = 8 | iDoorType = 9)

! =============================================================================
! Tabpage Structure Definition
! =============================================================================

! call all available page fix IDs 

call "ui_tabIDlistHierarchy_m_WMCC" parameters bFixtureFittingTabIDsOnly = 1,
				returned_parameters iUiID_Root,
									iUiID_FixtureFitting,	iParID_FixtureFitting,
									iUiID_MountingFrame_DACH, iParID_MountingFrame_DACH,
									iUiID_CustomCorner,		iParID_CustomCorner,
									iUiID_Threshold,		iParID_Threshold,
									iUiID_ThresholdSill,	iParID_ThresholdSill,
									iUiID_Sill,				iParID_Sill,
									iUiID_Sill_USA,			iParID_Sill_USA,
									iUiID_Board,			iParID_Board,
									iUiID_CasingOut,		iParID_CasingOut,
									iUiID_CasingIn,			iParID_CasingIn,
									iUiID_Casing_USA,		iParID_Casing_USA,
									iUiID_Shutter,			iParID_Shutter,
							        iUiID_BayBowSillBoard,	iParID_BayBowSillBoard,
									iUiID_FixFittingModAttr, iParID_FixFittingModAttr


! =============================================================================
! Display actual tabpages
! =============================================================================
bCasingOutPage	= 0
bCasingInPage	= 0
bCasingPageUSA	= 0
bSillPage		= 0
bSillPageUSA	= 0
bThresholdSillPage = 0

for iTabs = 1 to vardim1(uiUsedPageIDs)
	if bEnableCasing then
		if uiUsedPageIDs[iTabs][1]= iUiID_CasingOut then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_CasingOut then
				bCasingOutPage = 1
				gosub "pageCallCasing"
			endif
		endif
		if uiUsedPageIDs[iTabs][1]= iUiID_CasingIn then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_CasingIn then
				bCasingInPage = 1
				gosub "pageCallCasing"
			endif
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_Casing_USA then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_Casing_USA then
			bCasingPageUSA = 1
			gosub "pageCallCasingUSA"
		endif
	endif
	if bEnableBoard then
		if uiUsedPageIDs[iTabs][1]= iUiID_Board then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_Board then
				gosub "pageCallBoard"
			endif
		endif
	endif
	if bEnableSill then
		if uiUsedPageIDs[iTabs][1]= iUiID_Sill then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_Sill then
				bSillPage = 1
				gosub "pageCallSill"
			endif
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_Sill_USA then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_Sill_USA then
			bSillPageUSA = 1
			gosub "pageCallSill"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_ThresholdSill then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_ThresholdSill then
			bThresholdSillPage = 1
			gosub "pageThreshold"
		endif
	endif
	if bEnableThreshold then
		if uiUsedPageIDs[iTabs][1]= iUiID_Threshold then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_Threshold then
				bThresholdPage = 1
				gosub "pageThreshold"
			endif
		endif
	endif
	if bEnableShutter then
		if uiUsedPageIDs[iTabs][1]= iUiID_Shutter then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_Shutter then
				gosub "pageShutter"
			endif
		endif
	endif
	if bEnableCustomCornerLeft | bEnableCustomCornerRight then
		if uiUsedPageIDs[iTabs][1]= iUiID_CustomCorner then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_CustomCorner then
				gosub "pageCustomCorner"
			endif
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_FixFittingModAttr then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_FixFittingModAttr then
			gosub "pageFixFittingModAttributes"
		endif
	endif
next iTabs

! =============================================================================
end
! =============================================================================


! --------------------------------------------------------------------------------
! Casing Settings/Window
! --------------------------------------------------------------------------------
"pageCallCasing":
	call "Casing_WMCC" parameters all	bCasingOutPage					= bCasingOutPage,
									bCasingInPage					= bCasingInPage,
									bEnableSwitchableBottomCasing	= bEnableSwitchableBottomCasing,
									isEmptyOpening					= isEmptyOpening,
									Suppress_isWindow				= Suppress_isWindow,
									iDoorType						= iDoorType,
									iRevealType						= iRevealType,
									stCasingUI						= stCasingUI,
									stCasingUITooltip				= stCasingUITooltip,
									stSubTabpageToolTip				= stSubTabpageToolTip,
									stNORCasingTypes				= stNORCasingTypes,
									stCasingType					= stCasingType,
									stCasingHeadType				= stCasingHeadType,
									stArchitraveCapitalType			= stArchitraveCapitalType
return


! --------------------------------------------------------------------------------
! Casing Settings USA Window/Door
! --------------------------------------------------------------------------------
"pageCallCasingUSA":
	if isWindow then
		call "Casing_WMCC" parameters all bCasingPageUSA 	= bCasingPageUSA,
									iRevealType			= iRevealType,
									stCasingUI			= stCasingUI,
									stSubTabpageToolTip	= stSubTabpageToolTip
	else
		call "Casing_WMCC" parameters all bCasingPageUSA			= bCasingPageUSA,
									iDoorType				= iDoorType,
									bshowCasbSill			= bshowCasbSill,
									stCasingUI				= stCasingUI,
									stSubTabpageToolTip		= stSubTabpageToolTip,
									bTelescopic				= bTelescopic,
									gs_frame_style_m		= iFrameStyle
	endif
return



! --------------------------------------------------------------------------------
! Sill Settings - Window & CHE Door
! --------------------------------------------------------------------------------
"pageCallSill":
	call "Sill_WMCC" parameters all bSillPage = bSillPage,
			bSillPageUSA			= bSillPageUSA,
			iWindowShape			= iWindowShape,
			bOpeningDirection		= bOpeningDirection,
			bDoorWithSidelightSupport	= bDoorWithSidelightSupport,
			stBsilldetlevel			= stBsilldetlevel,
			stSillUI				= stSillUI,
			stSillTypes				= stSillTypes,
			stSubTabpageToolTip		= stSubTabpageToolTip,
			iThresholdType			= iThresholdType,
			iSillType				= iSillType,
			iPanelType				= iPanelType,
			bDrawOutsideTrim		= bDrawOutsideTrim,
			bDrawSill				= bDrawSill,
			bShowSillUICHE			= bShowSillUICHE
return



! --------------------------------------------------------------------------------
! Board Settings - Window
! --------------------------------------------------------------------------------

"pageCallBoard":
	call "Board_WMCC" parameters all iWindowShape = iWindowShape,
			bOpeningDirection			= bOpeningDirection,
			bDoorWithSidelightSupport	= bDoorWithSidelightSupport,
			iPanelType					= iPanelType,
			stBoardUI					= stBoardUI,
			stSubTabpageToolTip			= stSubTabpageToolTip
return



! --------------------------------------------------------------------------------
! Threshold and Sill - Door
! --------------------------------------------------------------------------------
"pageThreshold":

	pageStartY = 5

	dy = 22

	if bThresholdNotAvailableByOpTpye then
		ui_pict 138, 7, 8 + pageStartY, 12, 12, 1	! ui_warningsign.png
		ui_style 0,0

		ui_outfield stThresholdUI[21], 28, 8 + pageStartY, 410, 17
		end
	endif

	if bThresholdSillPage then
		x1 = 0
		x2 = 219
	else
		x1 = 5
		x2 = 295
	endif
	x3 = 230
	x4 = 440
	y = pageStartY

	ui_style 0,1
	ui_infield{3} "bThreshold", x1, y+5, x2-x1-45, 18,
			7, "",
			2,
			1, 20, 20, 20, 20,
			0, stThresholdUI[1], 0,
			1, stThresholdUI[1], 1

	ui_style 0,0
	ui_infield{3} "iThresholdType", x2-40, y, 40, 26,
		2, 89,	! ui_threshold_type.png
		17, 1,
		30, 20, 30, 20,
		2,	stThresholdTypes[2],	TRESHOLD_NORMAL,		! Normal Threshold
		3,	stThresholdTypes[3],	TRESHOLD_EXTENDED,		! Extended Threshold
		3,	stThresholdTypes[18],	TRESHOLD_EXTENDED_SWE,	! Extended to Opening Side
		4,	stThresholdTypes[4],	TRESHOLD_BOTHEXTENDED,	! Extended Both Sides
		5,	stThresholdTypes[5],	TRESHOLD_BENEATHPANEL,	! Beneath Panel
		6,	stThresholdTypes[6],	TRESHOLD_PROFILED,		! Profiled
		7,	stThresholdTypes[7],	TRESHOLD_FLAT,			! Flat Terskel
		8,	stThresholdTypes[8],	TRESHOLD_ANSLAG,		! Anslagterskel
		9,	stThresholdTypes[9],	TRESHOLD_GUMMI,			! Gummiterskel m slepelist
		10,	stThresholdTypes[10],	TRESHOLD_HEVE,			! Heveterskel
		11,	stThresholdTypes[11],	TRESHOLD_HC,			! H-C Terskel
		12,	stThresholdTypes[12],	TRESHOLD_BRANN,			! Brannterskel
		13,	stThresholdTypes[13],	TRESHOLD_BADEROMS,		! Baderomsterskel
		14,	stThresholdTypes[14],	TRESHOLD_AKKUSTIKK,		! Akkustikkterskel
		15,	stThresholdTypes[15],	TRESHOLD_SIMPLE,		! Simple Threshold
		16,	stThresholdTypes[16],	TRESHOLD_SLOPINGEXT,	! Sloping Extended
		17,	stThresholdTypes[17],	TRESHOLD_METAL,			! Metal
		1,	stThresholdTypes[19],	TRESHOLD_NOTAVAILABLE	! Not Available

	if bThresholdSillPage then
		ui_style 0,1
		ui_infield{3} "gs_sill_outside", x3, y+5, x4-x3-45, 18,
				7, "",
				2,
				1, 20, 20, 20, 20,
				0, stSillUI[1], 0,
				1, stSillUI[1], 1

		ui_style 0,0
		ui_infield{3} "iSillType", x4-40, y, 40, 26,
			2, 118,	! ui_sill_type_door.png
			5, 1,
			30, 20, 30, 20,
			1,	stSillTypes[1], SILL_TIMBER,	! Off, Timber Sill
			2,	stSillTypes[2], SILL_BRICK,		! Brick Sill
			3,	stSillTypes[3], SILL_STONE,		! Stone Sill
			4,	stSillTypes[16], SILL_BLOCK,	! Block Sill
			5,	stSillTypes[17], SILL_DUTCH		! Dutch Profiled Sill
	endif

	bFlag1 = 1 * not(bThreshold & (iThresholdType = TRESHOLD_EXTENDED | iThresholdType = TRESHOLD_BOTHEXTENDED))
	iFlag1 = 4 * bFlag1
	bFlag2 = (not(gs_sill_outside) | iSillType = SILL_TIMBER | iSillType = SILL_BLOCK)
	iFlag2 = 4 * bFlag2

	y = y + dy + 10

	if not(gs_threshold_nor) then
		ui_outfield stThresholdUI[2],	x1, 	y, 	x2-x1-50-1, 	15, iFlag1		! Side Overhang Opening Side
		ui_infield "gs_treshold_ovhg_2",	x2-50, 	y, 	50, 	18

		if bThresholdSillPage then
			if iSillType = SILL_DUTCH then
				ui_outfield stSillUI[35],	x3, y+3, x4-x3-90-1, 15, iFlag2	! Upper Thickness
				ui_infield "gs_sill_topWidth",	x4-90, y, 90, 18
			else
				ui_outfield stSillUI[3],	x3, y+3, x4-x3-90-1, 15, iFlag2	! Overhang Left
				ui_infield "gs_sill_ovhg_left",	x4-90, y, 90, 18
			endif
		endif
	else
		if bThresholdSillPage then
			picWidth	= 60
			pic1Height1	= 18
			picHeight2	= 52

			picPosXLft	= 300
			picPosXRgt	= picPosXLft + picWidth + 10
			picPosY1	= 126
			picPosY2	= picPosY1 + pic1Height1

			if not(gs_sill_outside) then
				ui_pict 145, picPosXLft, picPosY2, picWidth, picHeight2, 1			! uiSillPlanLeftovhgDoorOutNoboard.png
				ui_pict 148, picPosXRgt, picPosY2, picWidth, picHeight2, 1			! uiSillPlanRightovhgDoorOutNoboard.png
			else
				ui_infield "gs_sill_ovhg_left",		picPosXLft-10,	picPosY1-21, picWidth+10, 19
				ui_infield "gs_sill_ovhg_Right",	picPosXRgt,		picPosY1-21, picWidth+10, 19

				if iSillType = SILL_BRICK & iBrickSilldetlevel = BRICKSILL_DETAILED then
					ui_pict 140, picPosXLft, picPosY1, picWidth, pic1Height1, 1		! ui_sill_leftovhg_2_br.png
					ui_pict 142, picPosXRgt, picPosY1, picWidth, pic1Height1, 1		! ui_sill_rightovhg_2_br.png
					ui_pict 144, picPosXLft, picPosY2, picWidth, picHeight2, 1		! uiSillPlanLeftovhgDoorOutBr.png
					ui_pict 147, picPosXRgt, picPosY2, picWidth, picHeight2, 1		! uiSillPlanRightovhgDoorOutBr.png
				else
					ui_pict 139, picPosXLft, picPosY1, picWidth, pic1Height1, 1		! ui_sill_leftovhg_2.png
					ui_pict 141, picPosXRgt, picPosY1, picWidth, pic1Height1, 1		! ui_sill_rightovhg_2.png
					ui_pict 143, picPosXLft, picPosY2, picWidth, picHeight2, 1		! uiSillPlanLeftovhgDoorOut.png
					ui_pict 146, picPosXRgt, picPosY2, picWidth, picHeight2, 1		! uiSillPlanRightovhgDoorOut.png
				endif
			endif
		endif
	endif

	y = y + dy

	bFlag1 = not(bThreshold & (iThresholdType = TRESHOLD_BOTHEXTENDED | iThresholdType = TRESHOLD_EXTENDED_SWE))
	iFlag1 = 4 * bFlag1

	if not(gs_threshold_nor) then
		ui_outfield stThresholdUI[3],	x1, y, x2-x1-50-1, 15, iFlag1		! Side Overhang Opposite Side
		ui_infield "gs_treshold_ovhg",	x2-50, y, 50, 20

		if bThresholdSillPage then
			if iSillType = SILL_DUTCH then
				ui_outfield stSillUI[36],	x3, y+3, x4-x3-90-1, 15	! Upper Width
				ui_infield "gs_sill_topHeight",	x4-90, y, 90, 18
			else
				ui_outfield stSillUI[4], x3, y+3, x4-x3-90-1, 15, iFlag2	! Overhang Right
				ui_infield "gs_sill_ovhg_right", x4-90, y, 90, 18
			endif
		endif
	endif

	y = y + dy
	if bEnableThreshold & bThreshold & iThresholdType = TRESHOLD_BOTHEXTENDED then
		if not(bThresholdSillPage) | iSillType = SILL_TIMBER then	! Off
		else
			ui_outfield stThresholdUI[5],	x1, y, x2-x1-50-1, 15, iFlag1			! Threshold Nosing Outside
			ui_infield "gs_treshold_nosing",  x2-50,	y, 50, 18
		endif
	endif

	bFlag3 = (not(gs_sill_outside) | iSillType = SILL_TIMBER | iSillType = SILL_BLOCK | iSillType = SILL_DUTCH)
	iFlag3 = 4 * bFlag3

	if bThresholdSillPage then
		y = y - (gs_threshold_nor) * 2 * dy

		ui_outfield stSillUI[5],	x3, y+3, x4-x3-90-1, 15, iFlag3	! Slip in Depth
		ui_infield "gs_sill_slip_in",	x4-90, y, 90, 20
	endif
	y = y + dy

	if bThresholdSillPage then
		if iSillType = SILL_BRICK then
			ui_outfield stSillUI[14],	x3, y+3, x2-100, 15, 4 * (not(gs_sill_outside) | iSillType <> SILL_BRICK)
			ui_infield{3} "iBrickSilldetlevel",  	x4-90,	y, 90, 19,
					8, "",
					2,
					1, 20, 20, 20, 20,
					1, stBsilldetlevel[1],	BRICKSILL_SIMPLE,
					2, stBsilldetlevel[2],	BRICKSILL_DETAILED

		endif
		y = y + dy
	endif

	ui_separator 0, y, 444, y
	if bThresholdSillPage then ui_separator 222, pageStartY, 222, y-2

	! --- Threshold section picture ----------------------------------------------------------------

	x = 100 - 10 - (gs_threshold_nor) * 80
	y = 35 + pageStartY - 30 * (gs_threshold_nor)

	thresThkPosX		= x + 205
	thresThkPosY		= y + 137
	thresThkInFldWdt	= 90 - 20 * (gs_threshold_nor)

	if not(bEnableThreshold) | not(bThreshold) | (bThreshold & (iThresholdType = TRESHOLD_HEVE | iThresholdType = TRESHOLD_HC)) then
		ui_pict 103, x+25+79,y+90, 82,61, 1		! ui_thres_sect_1.png
		ui_pict 104, x+25+72,y+90, 7,61, 1		! ui_thres_sect_1_1.png
	endif

	if bEnableThreshold & bThreshold then
		if iThresholdType = TRESHOLD_NORMAL then
			ui_pict 105, x+25+79,y+90, 82,61, 1		! ui_thres_sect_2.png
			ui_pict 104, x+25+72,y+90, 7,61, 1		! ui_thres_sect_1_1.png
			ui_pict 96, x+25+164,y+143, 13,9, 1		! ui_arrow_v_9.png

			ui_infield "gs_treshold_thk", thresThkPosX, thresThkPosY, thresThkInFldWdt,20				ui_tooltip stThresholdUI[4]		! Threshold Thickness
		endif

		if	iThresholdType = TRESHOLD_EXTENDED |\
			iThresholdType = TRESHOLD_EXTENDED_SWE then

			ui_pict 97, x+25+79,y+90, 53,61, 1		! ui_thres_sect_3.png
			ui_pict 99, x+25+132,y+90, 29,61, 1	! ui_thres_sect_3_T2.png

			ui_pict 104, x+25+72,y+90, 7,61, 1		! ui_thres_sect_1_1.png
			ui_pict 96, x+25+164,y+143, 13,9, 1		! ui_arrow_v_9.png

			if iThresholdType = TRESHOLD_EXTENDED_SWE then
				ui_infield "gs_treshold_nosing", x+188,y+110,90,20		ui_tooltip stThresholdUI[5]		! Threshold Nosing Opening Side
			else
				ui_infield "gs_treshold_nosing_2", x+188,y+110,90,20	ui_tooltip stThresholdUI[6]		! Threshold Nosing Opposite Side
			endif
			ui_infield "gs_treshold_thk",	 thresThkPosX, thresThkPosY, thresThkInFldWdt,20			ui_tooltip stThresholdUI[4]		! Threshold Thickness
		endif

		if iThresholdType = TRESHOLD_BOTHEXTENDED then
			ui_pict 100, x+25+79, y+90,  53,61, 1	! ui_thres_sect_4.png
			ui_pict 99, x+25+132,y+90, 29,61, 1	! ui_thres_sect_3_T2.png

			if not(bThresholdSillPage) | iSillType = SILL_TIMBER then	! Off
				ui_pict 101, x+25+63,y+90, 16,61, 1		! ui_thres_sect_4_1.png
			else
				ui_pict 102, x+25+72,y+90, 7,61, 1		! ui_thres_sect_4_2.png
			endif
			ui_pict 96, x+25+164,y+143, 13,9, 1			! ui_arrow_v_9.png

			if not(bThresholdSillPage) | iSillType = SILL_TIMBER then	! Off
				ui_infield "gs_treshold_nosing",  x,		y+110,60,20 ui_tooltip stThresholdUI[5]		! Threshold Nosing Opening Side
			endif
			ui_infield "gs_treshold_nosing_2",	x+188,	y+110,90,20 	ui_tooltip stThresholdUI[6]		! Threshold Nosing Opposite Side
			ui_infield "gs_treshold_thk",		thresThkPosX,	 thresThkPosY, thresThkInFldWdt,20 	ui_tooltip stThresholdUI[4]		! Threshold Thickness
		endif

		thresWdtPosX		= x - 30 + (gs_threshold_nor) * 20
		thresWdtPosY		= y + 110 - 23
		thresWdtInFldWdt	= 90 - (gs_threshold_nor) * 20

		if iThresholdType = TRESHOLD_FLAT then
			ui_pict 123, x+25+63,y+90, 98,62, 1		! ui_nor_thres_2.png
			ui_pict 96, x+25+164,y+143, 13,9, 1		! ui_arrow_v_9.png
			ui_infield "gs_treshold_thk",	thresThkPosX,	thresThkPosY,	thresThkInFldWdt,	20	ui_tooltip stThresholdUI[4]		! Threshold Thickness
			ui_infield "gs_treshold_width",	thresWdtPosX,	thresWdtPosY,	thresWdtInFldWdt,	20	ui_tooltip stThresholdUI[18]	! Threshold Width
		endif

		if iThresholdType = TRESHOLD_SIMPLE then
			ui_pict 129, x+25+63,y+90, 98,62, 1		! ui_simple_threshold.png
			ui_pict 96, x+25+164,y+143, 13,9, 1		! ui_arrow_v_9.png
			ui_infield "gs_treshold_thk", thresThkPosX, thresThkPosY, thresThkInFldWdt,20				ui_tooltip stThresholdUI[4]		! Threshold Thickness
		endif

		if	iThresholdType = TRESHOLD_ANSLAG |\
			iThresholdType = TRESHOLD_BRANN |\
			iThresholdType = TRESHOLD_BADEROMS |\
			iThresholdType = TRESHOLD_AKKUSTIKK then

			ui_pict 124, x+25+63,y+90, 98,62, 1		! ui_nor_thres_3.png
			ui_pict 96, x+25+164,y+143, 13,9, 1		! ui_arrow_v_9.png
			ui_infield "gs_treshold_thk",	thresThkPosX,	thresThkPosY,	thresThkInFldWdt,	20	ui_tooltip stThresholdUI[4]		! Threshold Thickness
			ui_infield "gs_treshold_width",	thresWdtPosX,	thresWdtPosY,	thresWdtInFldWdt,	20	ui_tooltip stThresholdUI[18]	! Threshold Width
		endif

		if iThresholdType = TRESHOLD_GUMMI then
			ui_pict 125, x+25+63,y+90, 98,62, 1		! ui_nor_thres_6.png
			ui_pict 96, x+25+164,y+143, 13,9, 1		! ui_arrow_v_9.png
			ui_infield "gs_treshold_thk",	thresThkPosX,	thresThkPosY,	thresThkInFldWdt,	20	ui_tooltip stThresholdUI[4]		! Threshold Thickness
			ui_infield "gs_treshold_width",	thresWdtPosX,	thresWdtPosY,	thresWdtInFldWdt,	20	ui_tooltip stThresholdUI[18]	! Threshold Width
		endif

		if iThresholdType = TRESHOLD_SLOPINGEXT then
			ui_pict 136, x+8+63,y+90, 120,75, 1		! ui_sloping_ext_threshold.png

			ui_infield "gs_treshold_thk", x+195,y+131,90,20		ui_tooltip stThresholdUI[4]			! Threshold Thickness
			ui_infield "gs_treshold_width", x+195,y+155,90,20	ui_tooltip stThresholdUI[18]		! Threshold Width
			ui_infield "gs_treshold_angle", x+6,y+105,90,20		ui_tooltip stThresholdUI[19]		! Threshold Angle
			ui_infield "gs_treshold_ext_hgt", x+6,y+131,90,20	ui_tooltip stThresholdUI[20]		! Threshold External Thickness
			ui_infield "gs_treshold_nosing", x+6,y+155,90,20	ui_tooltip stThresholdUI[5]			! Threshold Nosing Opposite Side
		endif

		if iThresholdType = TRESHOLD_METAL then
			ui_pict 137, x+8+63,y+90, 120,75, 1		! ui_metal_threshold.png

			ui_infield "gs_treshold_thk", x - 30+195,y+136,90,20	ui_tooltip stThresholdUI[4]			! Threshold Thickness
			ui_infield "gs_treshold_angle", x - 30+6,y+105,90,20	ui_tooltip stThresholdUI[19]		! Threshold Angle
			ui_infield "gs_treshold_ext_hgt", x - 30+6,y+131,90,20	ui_tooltip stThresholdUI[20]		! Threshold External Thickness
			ui_infield "gs_treshold_width", x - 30+6,y+155,90,20	ui_tooltip stThresholdUI[18]		! Threshold Width
		endif
	endif

	bFlag = (iBrickSilldetlevel = BRICKSILL_SIMPLE)
	if bThresholdSillPage & gs_sill_outside & iSillType = SILL_BRICK then
		if not(gs_threshold_nor) then
			ui_outfield stSillUI[17],			x1,		245,	x2-x1-90-1,	15,  4* bFlag		! Brick Thickness
			ui_infield "gs_brick_sill_br_thk",	x2-90,	245-4,	90,		19
		else
			ui_outfield stSillUI[17],			x3,		222,	x4-x3-90-1,	15,  4* bFlag		! Brick Thickness
			ui_infield "gs_brick_sill_br_thk",  x4-90,	222-4,	90,		19
		endif

		ui_outfield stSillUI[18],				x3,		245,	x4-x3-90-1,	15,  4* bFlag		! Mortar Thickness
		ui_infield "gs_brick_sill_mort_thk",  	x4-90,	245-4,	90,		19
	endif

	ui_pict 95, x+25+107,y+151, 54,1			! ui_sill_right.png
	if bThresholdSillPage & gs_sill_outside & iSillType <> SILL_TIMBER then
		sillInFldWdt = 90 - (gs_threshold_nor) * 20
		xPos1 = x - 30 + (gs_threshold_nor) * 20

		if iSillType = SILL_BRICK | iSillType = SILL_STONE then
			ui_infield "gs_sill_angle",		xPos1, y+110, sillInFldWdt, 19		ui_tooltip stSillUI[19]			! Sill Angle
			ui_infield "gs_sill_nosing",	xPos1, y+133, sillInFldWdt, 19		ui_tooltip stSillUI[21]			! Sill Nosing
			ui_infield "gs_sill_thk",		xPos1, y+156, sillInFldWdt, 19		ui_tooltip stSillUI[20]			! Sill Thickness
			ui_infield "gs_sill_width", 	xPos1, y+179, sillInFldWdt, 19		ui_tooltip stSillUI[22]			! Sill Width
		endif

		if iSillType = SILL_BRICK then
			ui_pict 90, x+25+36,y+112, 36,82, 1	! ui_sill_brick_1.png
			ui_pict 91, x+25+72,y+151, 35,43, 1	! ui_sill_brick_2.png
		endif

		if iSillType = SILL_STONE then
			ui_pict 92, x+25+36,y+112, 36,82, 1	! ui_sill_stone_1.png
			ui_pict 93, x+25+72,y+151, 35,43, 1	! ui_sill_stone_2.png

			ui_infield "gs_sill_topWidth",	x+25+36+72, y+169, sillInFldWdt, 19	ui_tooltip stSillUI[35]			! Sill Top Width
		endif

		if iSillType = SILL_BLOCK then
			xp = x + 64
			yp = y + 151
			ui_pict 130, xp, yp-17, 33, 39, 1	! ui_sill_block_1.png
			ui_pict 131, xp+33, yp, 35, 11, 1	! ui_sill_block_2.png

			ui_infield "gs_sill_nosing",	xPos1, y+133, sillInFldWdt, 20	ui_tooltip stSillUI[21]			! Sill Nosing
			ui_infield "gs_sill_thk",		xPos1, y+162, sillInFldWdt, 20	ui_tooltip stSillUI[20]			! Sill Thickness
		endif

		if iSillType = SILL_DUTCH then
			xp = x + 63
			yp = y + 151
			ui_pict 132, xp, yp-38, 33, 75, 1	! ui_sill_dutch_1.png
			ui_pict 133, xp+33, yp, 59, 37, 1	! ui_sill_dutch_2.png

			ui_infield "gs_sill_angle",		xPos1, y+110, sillInFldWdt, 20		ui_tooltip stSillUI[19]			! Sill Angle
			ui_infield "gs_sill_nosing",	xPos1, y+133, sillInFldWdt, 20		ui_tooltip stSillUI[21]			! Sill Nosing
			ui_infield "gs_sill_endthk",	xPos1, y+156, sillInFldWdt, 20		ui_tooltip stSillUI[37]			! Sill Front Side Thickness
			ui_infield "gs_sill_width", 	xPos1, y+179, sillInFldWdt, 20		ui_tooltip stSillUI[22]			! Sill Width
			ui_infield "gs_sill_thk",		x+158, y+179, sillInFldWdt, 20	ui_tooltip stSillUI[20]			! Sill Thickness
		endif
	else
		ui_pict 94, x+25+58,y+151, 49,1			! ui_sill_left.png
	endif
return


! --------------------------------------------------------------------------------
! Custom Corner
! --------------------------------------------------------------------------------
"pageCustomCorner":

	pageStartY = 32

	bCornerUIDisable = 0
	if bInclinedWall or curvedWall then
		bCornerUIDisable = 1
	endif

	if isEmptyOpening then				!-----Custom Corner in openings-------

		x1 = 10
		y1 = pageStartY
		x2 = 232
		y2 = 63 + pageStartY + 20*ac_cw_function

		ui_style 0,1
		if ac_cw_function then
			ui_infield{3} "ac_corner_window", 5, y1, 430, 19,
						7, "",
						1, 1,
						0, 0, 0, 0,
						"", stCustomCornerUI[14], 0	,		! Corner Window Function
						"", stCustomCornerUI[14], 1 ui_tooltip stCustomCornerUI[15]
			y1 = y1 + 20
		endif

		ui_separator x2-10,	y1+35, x2-10, 225 + pageStartY -bCornerUIDisable*22

		! Left Side============================================
		if iWindowShape = SHAPE_RECTANGULAR then

			ui_style 0,1
				ui_infield{3} "bLeftCornerFunction", x1+5, y1+35, 194, 16,
						7, "",
						2,
						1, 20, 20, 20, 20,
						0, stCustomCornerUI[2], 0,
						1, stCustomCornerUI[2], 1

			ui_style 0,0

			if bLeftCornerFunction then
				ui_pict 120,	x1+75, y2,    118, 63, 1				!ui_corner_opening_rect_left
				ui_pict 88,	x1+75, y2+66, 49,  16, 1

				ui_infield "leftCornerAngle", x1+135, y2+65, 60, 20 ui_tooltip stCustomCornerUI[8]
				ui_infield "leftConnWallThk", x1+70,  y2+90, 60, 20 ui_tooltip stCustomCornerUI[10]

				ui_infield{3} "bLeftDiffConnWall", x1+5, y2+118-bCornerUIDisable*20, 200, 40,
							7, "",
							2,
							1, 20, 20, 20, 20,
							0, stCustomCornerUI[4], 0,
							1, stCustomCornerUI[4], 1
			else
				ui_pict 119,	x1+75, y2,    118, 49, 1				!ui_corner_opening_left
			endif

		else
			ui_pict 119,	x1+75, y2,    118, 49, 1				!ui_corner_opening_left
		endif

! Right Side============================================

		ui_style 0,1
		ui_infield{3} "bRightCornerFunction", x2+5, y1+35, 193, 16,
				7, "",
				2,
				1, 20, 20, 20, 20,
				0, stCustomCornerUI[3], 0,
				1, stCustomCornerUI[3], 1
		ui_style 0,0

		if bRightCornerFunction then

			ui_pict 121,	x2+10, y2,    118, 63, 1			!ui_corner_opening_right.png
			ui_pict 88,	x2+80, y2+66, 49,  16, 1

			ui_infield "rightCornerAngle", x2+10, y2+65, 60, 20 ui_tooltip stCustomCornerUI[9]
			ui_infield "rightConnWallThk", x2+80, y2+90, 60, 20 ui_tooltip stCustomCornerUI[11]

			ui_infield{3} "bRightDiffConnWall", x2+5, y2+118-bCornerUIDisable*20, 200, 40,
					7, "",
					2,
					1, 20, 20, 20, 20,
					0, stCustomCornerUI[4], 0,
					1, stCustomCornerUI[4], 1
		else
			ui_pict 122,	x2+10, y2,    118, 49, 1				!ui_corner_opening_rect_right.png
		endif
	else

		x1 = 10
		y1 = pageStartY - 4*ac_cw_function
		x2 = 232
		y2 = 86 + pageStartY + 20*ac_cw_function

		ui_style 0,1
		if ac_cw_function then
			ui_infield{3} "ac_corner_window", 5, y1, 430, 19,
						7, "",
						1, 1,
						0, 0, 0, 0,
						"", stCustomCornerUI[14], 0	,		! Corner Window Function
						"", stCustomCornerUI[14], 1 ui_tooltip stCustomCornerUI[15]
			y1 = y1 + 20
		endif

		ui_style 0,1
		if bShowCornerMitreLineUI then
			ui_outfield	stCustomCornerUI[1], 5,  y1+3, 184, 16, 4*(bCornerUIDisable or not(bRightCornerFunction or bLeftCornerFunction))

			ui_style 0,0

			ui_infield{3}	"iCornerConnTypeLeft",	190, y1-1, 112, 20,
				8, "", 3, 1, 0, 0, 0, 0,
				1, stCornerConnType[1], CONNECTION_TYPE_FRAME,
				2, stCornerConnType[2], CONNECTION_TYPE_COLUMN,
				3, stCornerConnType[3], CONNECTION_TYPE_GLASS

			ui_infield{3} "gs_line_corn", 190+128, y1+7, 125, 16,
				7, "",
				2,
				1, 20, 20, 20, 20,
				0, stCustomCornerUI[12], 0,
				1, stCustomCornerUI[12], 1
		else
			ui_outfield	stCustomCornerUI[1], 5,  y1+3, 187, 16, 4*(bCornerUIDisable or not(bRightCornerFunction or bLeftCornerFunction))

			ui_style 0,0

			ui_infield{3}	"iCornerConnTypeLeft",	x2-10, y1-1, 166, 20,
					8, "", 3, 1, 0, 0, 0, 0,
					1, stCornerConnType[1], CONNECTION_TYPE_FRAME,
					2, stCornerConnType[2], CONNECTION_TYPE_COLUMN,
					3, stCornerConnType[3], CONNECTION_TYPE_GLASS

		endif

		y1 = y1 + 4

		ui_separator 1,	y1+20, 443, y1+20


! Left Side============================================
		if iWindowShape = SHAPE_RECTANGULAR or iWindowShape = SHAPE_TRAPEZOID then
			ui_style 0,1
			ui_infield{3} "bLeftCornerFunction", 5, y1+30, 194, 16,
				7, "",
				2,
				1, 20, 20, 20, 20,
				0, stCustomCornerUI[2], 0,
				1, stCustomCornerUI[2], 1

			ui_style 0,0
			ui_infield{3} "bLeftDiffConnWall", x1+5, y2+115-bCornerUIDisable*20, 200, 30,
				7, "",
				2,
				1, 20, 20, 20, 20,
				0, stCustomCornerUI[4], 0,
				1, stCustomCornerUI[4], 1
		endif

		if bLeftCornerFunction then

! Frame-------------------------------
			if iCornerConnTypeLeft = CONNECTION_TYPE_FRAME then			!Frame
				ui_pict 82,	x1+75, y2,    118, 63, 1				!ui_cornerw_frame_left
				ui_pict 88,	x1+75, y2+66, 49,  16, 1

				ui_infield "leftCornerAngle", x1+135, y2+65, 60, 20 ui_tooltip stCustomCornerUI[8]
				ui_infield "leftConnWallThk", x1+70,  y2+90, 60, 20 ui_tooltip stCustomCornerUI[10]
			endif

! Corner Coloumn---------------------
			if iCornerConnTypeLeft = CONNECTION_TYPE_COLUMN then			!Corner Coloumn
				ui_pict 84,	x1+68, y2-5,  125, 70, 1				!ui_cornerw_column_left
				ui_pict 88,	x1+75, y2+68, 49,  16, 1

				ui_infield "gs_cc_thk",       x1,     y2+14, 60, 20 ui_tooltip stCustomCornerUI[6]
				ui_infield "gs_cc_width",     x1+48,  y2-30, 60, 20 ui_tooltip stCustomCornerUI[5]
				ui_infield "gs_cc_pr",        x1+115, y2-30, 60, 20 ui_tooltip stCustomCornerUI[7]
				ui_infield "leftCornerAngle", x1+135, y2+65, 60, 20 ui_tooltip stCustomCornerUI[8]
				ui_infield "leftConnWallThk", x1+70,  y2+90, 60, 20 ui_tooltip stCustomCornerUI[10]
			endif

! Glass-------------------------------
			if iCornerConnTypeLeft = CONNECTION_TYPE_GLASS then			!Glass
				ui_pict 86,	x1+75, y2,    118, 63, 1				!ui_cornerw_glass_left
				ui_pict 88,	x1+75, y2+66, 49,  16, 1

				ui_infield "leftCornerAngle", x1+135, y2+65, 60, 20 ui_tooltip stCustomCornerUI[8]
				ui_infield "leftConnWallThk", x1+70,  y2+90, 60, 20 ui_tooltip stCustomCornerUI[10]
			endif

		else
			ui_pict 80,	x1+75, y2, 118, 49, 1						!ui_cornerw_nocorner_left
		endif

		ui_separator x2-10,	y1+24, x2-10, 235 + pageStartY - bCornerUIDisable*22

! Right Side============================================

		ui_style 0,1
		ui_infield{3} "bRightCornerFunction", x2-5, y1+30, 193, 16,
				7, "",
				2,
				1, 20, 20, 20, 20,
				0, stCustomCornerUI[3], 0,
				1, stCustomCornerUI[3], 1
		ui_style 0,0

		ui_infield{3} "bRightDiffConnWall", x2+5, y2+115-bCornerUIDisable*20, 200, 30,
				7, "",
				2,
				1, 20, 20, 20, 20,
				0, stCustomCornerUI[4], 0,
				1, stCustomCornerUI[4], 1

		if bRightCornerFunction then

! Frame-------------------------------
			if iCornerConnTypeLeft = CONNECTION_TYPE_FRAME then		!Frame
				ui_pict 83,	x2+10, y2,    118, 63, 1			!ui_cornerw_frame_righ
				ui_pict 88,	x2+80, y2+66, 49,  16, 1

				ui_infield "rightCornerAngle", x2+10, y2+65, 60, 20 ui_tooltip stCustomCornerUI[9]
				ui_infield "rightConnWallThk", x2+80, y2+90, 60, 20 ui_tooltip stCustomCornerUI[11]
			endif

! Corner Coloumn---------------------
			if iCornerConnTypeLeft = CONNECTION_TYPE_COLUMN then		!Corner Coloumn
				ui_pict 85,	x2+10, y2-5,  125, 70, 1			!ui_cornerw_column_right
				ui_pict 88,	x2+80, y2+68, 49,  16, 1

				if bleftCornerFunction then
					n = request("Working_length_unit", "", format_string)
					outStringThk   = str(format_string, gs_cc_thk)
					outStringWidth = str(format_string, gs_cc_width)
					outStringPr    = str(format_string, gs_cc_pr)
					ui_outfield outStringThk,   x2+140, y2+17, 60, 16    ui_tooltip stCustomCornerUI[6]
					ui_outfield outStringWidth, x2+77,  y2-27, 60, 16, 2 ui_tooltip stCustomCornerUI[5]
					ui_outfield outStringPr,    x2+10,  y2-27, 60, 16, 1 ui_tooltip stCustomCornerUI[7]
				else
					ui_infield "gs_cc_thk",   x2+145, y2+14, 60, 20 ui_tooltip stCustomCornerUI[6]
					ui_infield "gs_cc_width", x2+95,  y2-30, 60, 20 ui_tooltip stCustomCornerUI[5]
					ui_infield "gs_cc_pr",    x2+25,  y2-30, 60, 20 ui_tooltip stCustomCornerUI[7]
				endif

				ui_infield "rightCornerAngle", x2+10, y2+65, 60, 20 ui_tooltip stCustomCornerUI[9]
				ui_infield "rightConnWallThk", x2+80, y2+90, 60, 20 ui_tooltip stCustomCornerUI[11]
			endif

! Glass-------------------------------
			if iCornerConnTypeLeft = CONNECTION_TYPE_GLASS then		!Glass
				ui_pict 87,	x2+10, y2,    118, 63, 1			!ui_cornerw_glass_right
				ui_pict 88,	x2+80, y2+66, 49,  16, 1

				ui_infield "rightCornerAngle", x2+10, y2+65, 60, 20 ui_tooltip stCustomCornerUI[9]
				ui_infield "rightConnWallThk", x2+80, y2+90, 60, 20 ui_tooltip stCustomCornerUI[11]
			endif
		else
			ui_pict 81,	x2+10, y2, 118, 49, 1					!ui_cornerw_nocorner_right
		endif
	endif

	if bCornerUIDisable then
		ui_pict 138, x1, 210 + pageStartY, 12, 12, 1
		ui_outfield stCustomCornerUI[13], x1+15, 210 + pageStartY, 440-x1-15, 20
	endif
return


! --------------------------------------------------------------------------------
! Shutter
! --------------------------------------------------------------------------------
"pageShutter":

	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		leftCornerX		= leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][1]
		rightCornerX	= rightWallFrameRevealPnts[idxSillStartPlasterRight+1][1]
	else
		leftCornerX		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][1]
		rightCornerX	= rightWallFrameRevealPnts[idxSillStartPlasterRight][1]
	endif

	sunShadeLength = rightCornerX - leftCornerX

	casingThkAtWindow	= 0
	casingThkOnFacade	= 0

	if gs_trim_outside then
		casingThkAtWindow = gs_trim_width_out
	endif

	call "SunShade_WMCC" parameters a				= sunShadeLength - casingThkAtWindow * 2,
				bSunshade						= bSunshade,
				gs_sunShade_iType				= gs_sunShade_iType,
				gs_shutter_nPanels				= gs_shutter_nPanels,
				gs_shutter_nPanels2				= gs_shutter_nPanels2,
				gs_sunShade_bAutomaticHeight	= gs_sunShade_bAutomaticHeight,
				gs_shutter_bExtraFrame			= gs_shutter_bExtraFrame,
				gs_slidingShutter_iCover		= gs_slidingShutter_iCover,
				gs_foldingShutter_iStacking		= gs_foldingShutter_iStacking,
				gs_foldingShutter_ovhg			= gs_foldingShutter_ovhg,
				gs_sunShade_bShowIn2D			= gs_sunShade_bShowIn2D,
				gs_shutPanel_iType				= gs_shutPanel_iType,
				gs_shutPanel_thk				= gs_shutPanel_thk,
				gs_shutPanel_bAutomaticWidth	= gs_shutPanel_bAutomaticWidth,
				gs_shutPanel_panelWidth			= gs_shutPanel_panelWidth,
				gs_shutRoll_iPlacement			= gs_shutRoll_iPlacement,
				gs_shutRoll_iBoxType			= gs_shutRoll_iBoxType,
				gs_shutRoll_cutWallBehind		= gs_shutRoll_cutWallBehind,
				gs_shutLam_iPlacement			= gs_shutLam_iPlacement,
				gs_shutLam_cutWallBehind		= gs_shutLam_cutWallBehind,
				gs_shutLam_bRail				= gs_shutLam_bRail,

				stSunShadeTypes					= stSunShadeTypes,
				stShutterPanelPos				= stShutterPanelPos,
				stFoldingShutterStacking		= stFoldingShutterStacking,
				stSlidingShutterCover			= stSlidingShutterCover,
				stShutterPanelTypes				= stShutterPanelTypes,
				stShutRollPlacement				= stShutRollPlacement,
				stShutRollBoxType				= stShutRollBoxType,
				stShutRollBoxDefaultSize		= stShutRollBoxDefaultSize,
				stShutRollRailPos				= stShutRollRailPos,
				stShutLamPlacement				= stShutLamPlacement,
				stShutLamRailPos				= stShutLamRailPos,
				stSunShadeUI					= stSunShadeUI,
				stSunshadeTooltip				= stSunshadeTooltip,

				gs_ui_sub_tabpage				= gs_ui_sub_tabpage,
				iWindowShape					= iWindowShape,
				iRevealType						= iRevealType,
				bEnableCasing					= bEnableCasing
return


! --------------------------------------------------------------------------------
! Fixtures and Fittings Model Attributes
! --------------------------------------------------------------------------------
"pageFixFittingModAttributes":
	__bHasListItem = 0
	if bSillUSA then
		_bBrickSillDetailed	= (not(isWindow) & iSillType = SILL_BRICK & iBrickSilldetlevel = BRICKSILL_DETAILED)
	else
		_bBrickSillDetailed	= (iSillType = SILL_BRICK & iBrickSilldetlevel = BRICKSILL_DETAILED)
	endif
	
	listFieldConnStrAttrID = iUiID_FixFittingModAttr
	itemID = 1
	
	if bEnableThreshold & bThreshold then
		__bHasListItem = 1
		ui_listitem itemID, listFieldConnStrAttrID, "gs_treshold_mat",	0,	"ui_list_surface_flat_WMCC", stThresholdUI[1]	: itemID = itemID + 1		! Threshold
	endif

	if bEnableSill then
		itemID = 5
		if bSillUSA then
			if	(isWindow & iClosureType <> CLOSURE_BRICK_VENEER & not(gs_fsill)) |\
				not(isWindow) then
				ui_listitem itemID, listFieldConnStrAttrID, "",		0,	"", `Sill Surfaces`	: itemID = itemID + 1
				if gs_sill_outside then
					__bHasListItem = 1
					ui_listitem itemID, listFieldConnStrAttrID, "gs_sill_pen_3D", 			1,	"ui_list_contourPen_flat_WMCC",	stSillUI[29]	: itemID = itemID + 1
					ui_listitem itemID, listFieldConnStrAttrID, "gs_sill_mat",				1,	"ui_list_surface_flat_WMCC", 		stSillUI[1]	: itemID = itemID + 1	! Sill
					if _bBrickSillDetailed then
						ui_listitem itemID, listFieldConnStrAttrID, "gs_brick_sill_mort_mat",	1,	"ui_list_surface_flat_WMCC", 		stSillUI[13]	: itemID = itemID + 1	! Brick Sill Mortar
					endif
				endif
			endif
		else
			if bDoorWithSidelightSupport then
				_bHasAnySillOn = (gs_sill_outside | \
								(gs_sidelight_left  & gs_sidelight_parapet_hgt_left > EPS  & gs_sill_outside_sl_left) | \
								(gs_sidelight_right & gs_sidelight_parapet_hgt_right > EPS & gs_sill_outside_sl_right))
			else
				_bHasAnySillOn = (gs_sill_outside)
			endif

			if _bHasAnySillOn then
				__bHasListItem = 1
				if _bBrickSillDetailed then
					ui_listitem itemID, listFieldConnStrAttrID, "",							0,	"", 					`Sill Surfaces`	: itemID = itemID + 1
					ui_listitem itemID, listFieldConnStrAttrID, "gs_sill_mat",				1,	"ui_list_surface_flat_WMCC", 	stSillUI[1]	: itemID = itemID + 1	! Sill
					ui_listitem itemID, listFieldConnStrAttrID, "gs_brick_sill_mort_mat",	1,	"ui_list_surface_flat_WMCC", 	stSillUI[13]	: itemID = itemID + 1	! Brick Sill Mortar
				else
					ui_listitem itemID, listFieldConnStrAttrID, "gs_sill_mat",	0,	"ui_list_surface_flat_WMCC", 		stSillUI[8]		: itemID = itemID + 1	! Sill
				endif
			endif
		endif
	endif

	if bEnableBoard & bDrawBoard then
		itemID = 10
		__bHasListItem = 1
		ui_listitem itemID, listFieldConnStrAttrID,	 	"gs_board_mat",		0,	"ui_list_surface_flat_WMCC", stBoardUI[1]			: itemID = itemID + 1	! Board
		if bSillUSA & bEnableCasing & gs_apron then
			ui_listitem itemID, listFieldConnStrAttrID, "gs_apron_mat",		0,	"ui_list_surface_flat_WMCC", stCasingTextUSA[7]	: itemID = itemID + 1	! Apron
		endif
	endif

	if bEnableCasing then
		itemID = 20
		__bHasListItem = 1
		ui_listitem itemID, listFieldConnStrAttrID, "",		0,	"", `Casing Surfaces`	: itemID = itemID + 1
		if gs_trim_outside | gs_trim_inside then
			ui_listitem itemID, listFieldConnStrAttrID, "bLinkCasingSurfaces",		1,	"ui_list_surface_flat_WMCC"	: itemID = itemID + 1

			ui_listitem itemID, listFieldConnStrAttrID, "gs_trim_out_mat",		1,	"ui_list_surface_flat_WMCC", `Casing Outside`	: itemID = itemID + 1
			ui_listitem itemID, listFieldConnStrAttrID, "gs_trim_in_mat",		1,	"ui_list_surface_flat_WMCC", `Casing Inside`	: itemID = itemID + 1
		else
			itemID = itemID + 3
		endif
	endif

	if bEnableRail then
		__bHasListItem = 1
		itemID = 30
		if bUSARail then
			ui_listitem itemID, listFieldConnStrAttrID, "",					0,	"", 				`Leading Track`		: itemID = itemID + 1
		else
			ui_listitem itemID, listFieldConnStrAttrID, "",					0,	"", 				`Rail`				: itemID = itemID + 1
		endif
		if gs_door_rail then
			ui_listitem itemID, listFieldConnStrAttrID, "gs_rail_mat", 		1,	"ui_list_surface_flat_WMCC",	`Surface`		: itemID = itemID + 1
		endif
	endif

	if bEnableShutter then
		itemID = 40
		ui_listitem itemID, listFieldConnStrAttrID, "",		0,	"", `Sunshade Surfaces`	: itemID = itemID + 1
		if bSunshade then
			__bHasListItem = 1
			ui_listitem itemID, listFieldConnStrAttrID, "gs_sunShade_unCutLinesPen", 		1,	"ui_list_contourPen_flat_WMCC",	stSunShadeUI[34]	: itemID = itemID + 1
	
			if gs_sunShade_iType = SUNSHADE_ROLLING then
				ui_listitem itemID, listFieldConnStrAttrID, "gs_shutRoll_matBox",		1,	"ui_list_surface_flat_WMCC", stSunShadeUI[44]	: itemID = itemID + 1	! Box
				ui_listitem itemID, listFieldConnStrAttrID, "gs_shutRoll_matSegm",		1,	"ui_list_surface_flat_WMCC", stSunShadeUI[45]	: itemID = itemID + 1	! Blades
				ui_listitem itemID, listFieldConnStrAttrID, "gs_shutRoll_matRail",		1,	"ui_list_surface_flat_WMCC", stSunShadeUI[31]	: itemID = itemID + 1	! Rail
			else
				if gs_sunShade_iType = SUNSHADE_VENETIAN | gs_sunShade_iType = SUNSHADE_EXTVENETIAN then
					ui_listitem itemID, listFieldConnStrAttrID, "gs_shutLam_matBox",	1,	"ui_list_surface_flat_WMCC", stSunShadeUI[44]	: itemID = itemID + 1	! Box
					ui_listitem itemID, listFieldConnStrAttrID, "gs_shutLam_matLam",	1,	"ui_list_surface_flat_WMCC", stSunShadeUI[45]	: itemID = itemID + 1	! Blades
				else
					ui_listitem itemID, listFieldConnStrAttrID, "gs_shutPanel_materialAcc",		1,	"ui_list_surface_flat_WMCC", stSunShadeUI[29]	: itemID = itemID + 1	! Frame
					ui_listitem itemID, listFieldConnStrAttrID, "gs_shutPanel_materialMain",	1,	"ui_list_surface_flat_WMCC", stSunShadeUI[30]	: itemID = itemID + 1	! Filling
				endif
			endif
			if gs_sunShade_iType = SUNSHADE_SLIDING then
				ui_listitem itemID, listFieldConnStrAttrID, "gs_shutSliding_matRail",	1,	"ui_list_surface_flat_WMCC", stSunShadeUI[31]	: itemID = itemID + 1	! Rail
			endif
		endif
	endif

	if bEnableCustomCornerLeft | bEnableCustomCornerRight then
		itemID = 50
		if (bLeftCornerFunction | bRightCornerFunction) & iCornerConnTypeLeft = CONNECTION_TYPE_COLUMN then
			__bHasListItem = 1
			ui_listitem itemID, listFieldConnStrAttrID, "matCornerColumn", 				0,	"ui_list_surface_flat_WMCC",	`Corner Column Surface`	: itemID = itemID + 1
		endif
	endif
	
	! --------------------------------------------------------------------------------
	! Show listfield only if there are items enabled in it (at least 1 item is displayed)
	! --------------------------------------------------------------------------------

 	if __bHasListItem then
		ui_listfield listFieldConnStrAttrID, 0, 34, 444, 265 - 34
	else
		ui_outfield `No fixtures or fittings are selected.`, 2, 10 + 34, 440, 15
	endif
return


]]></Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

! Contact person: <NJ>

! =============================================================================
! Set the Custom corner parameters
! =============================================================================

if bEnableCustomCornerLeft & bEnableCustomCornerRight then

	if bLeftDiffConnWall = 0 then
		parameters leftConnWallThk = WALL_THICKNESS
		leftConnWallThk = WALL_THICKNESS
		lock "leftConnWallThk"
	endif

	if bRightDiffConnWall = 0 then
		parameters rightConnWallThk = WALL_THICKNESS
		rightConnWallThk = WALL_THICKNESS
		lock "rightConnWallThk"
	endif

	iCornerConnTypeRight = iCornerConnTypeLeft
	parameters iCornerConnTypeRight = iCornerConnTypeRight

	if iCornerConnTypeLeft = CONNECTION_TYPE_COLUMN then
		gs_corner_column = 1
		parameters gs_corner_column = 1
	else
		gs_corner_column = 0
		parameters gs_corner_column = 0
	endif
endif

if bEnableCustomCornerLeft & not(bEnableCustomCornerRight) then

	if bLeftDiffConnWall = 0 then
		parameters leftConnWallThk = WALL_THICKNESS
		leftConnWallThk = WALL_THICKNESS
		lock "leftConnWallThk"
	endif

	if iCornerConnTypeLeft = CONNECTION_TYPE_COLUMN then
		gs_corner_column = 1
		parameters gs_corner_column = 1
	else
		gs_corner_column = 0
		parameters gs_corner_column = 0
	endif
endif

if bEnableCustomCornerRight & not(bEnableCustomCornerLeft) then

	if bRightDiffConnWall = 0 then
		parameters rightConnWallThk = WALL_THICKNESS
		rightConnWallThk = WALL_THICKNESS
		lock "rightConnWallThk"
	endif

	if iCornerConnTypeRight = CONNECTION_TYPE_COLUMN then
		gs_corner_column = 1
		parameters gs_corner_column = 1
	else
		gs_corner_column = 0
		parameters gs_corner_column = 0
	endif
endif

if ac_cw_function & ac_corner_window then
	lock	"bRightCornerFunction",
			"bRightDiffConnWall",
			"rightCornerAngle",
			"rightConnWallThk"
endif


! =============================================================================
! Do Casing and Sill Parameter Logic
! =============================================================================

if bEnableSill then
	if abs(gs_sill_topWidth)  < EPS then parameters gs_sill_topWidth  = 0.01
	if abs(gs_sill_topHeight) < EPS then parameters gs_sill_topHeight = 0.01
endif

if bEnableBoard then
	if gs_stack_bottom then
		lock "gs_board_inside", "gs_sill_outside"
	endif
endif


! =============================================================================
! Common Sill / Door - Window Mounting Oversize Parameter Locking
! =============================================================================

_bLockSillOvByMounting	= 0
_bLockSillOvBySill		= 0

if bEnableWindowMounting then
	_bLockSillOvByMounting	= not(bWinMounting)
endif

if bEnableSill then
	if bDoorWithSidelightSupport then
		bHasAnySillOn = (gs_sill_outside | \
						(gs_sidelight_left  & gs_sidelight_parapet_hgt_left > EPS  & gs_sill_outside_sl_left) | \
						(gs_sidelight_right & gs_sidelight_parapet_hgt_right > EPS & gs_sill_outside_sl_right))
	else
		bHasAnySillOn = (gs_sill_outside)
	endif

	if not(bHasAnySillOn) | gs_stack_bottom then		! Off
		if	bittest( gs_SillTypeEnable, 0) | \			! Timber Sill in Value list
			bittest( gs_SillTypeEnable, 7) | \			! Solid Sill 1.1 / Massiv-Fensterbank 1.1 in Value list
			bittest( gs_SillTypeEnable, 8) | \			! Solid Sill 1.2 / Massiv-Fensterbank 1.2 in Value list
			bittest( gs_SillTypeEnable, 9) | \			! Solid Sill 2.2 / Massiv-Fensterbank 2.2 in Value list
			bittest( gs_SillTypeEnable, 10) | \			! Metal Sheet / Metallfensterbank 1.1 in Value list
			bittest( gs_SillTypeEnable, 11) | \			! Solid parallel / massiv parallel in Value list
			bittest( gs_SillTypeEnable, 12) | \			! Metal Sheet 2 in Value list
			bittest( gs_SillTypeEnable, 13) then		! Solid parallel 2 / massiv parallel in Value list
	
			_bLockSillOvBySill	= 1
		endif
	else
		if bHasAnySillOn then			! Outside, Both Sides
			if	bittest( gs_SillTypeEnable, 0) | \			! Timber Sill in Value list
				bittest( gs_SillTypeEnable, 7) | \			! Solid Sill 1.1 / Massiv-Fensterbank 1.1 in Value list
				bittest( gs_SillTypeEnable, 8) | \			! Solid Sill 1.2 / Massiv-Fensterbank 1.2 in Value list
				bittest( gs_SillTypeEnable, 9) | \			! Solid Sill 2.2 / Massiv-Fensterbank 2.2 in Value list
				bittest( gs_SillTypeEnable, 10) | \			! Metal Sheet / Metallfensterbank 1.1 in Value list
				bittest( gs_SillTypeEnable, 11) | \			! Solid parallel / massiv parallel in Value list
				bittest( gs_SillTypeEnable, 12) | \			! Metal Sheet 2 in Value list
				bittest( gs_SillTypeEnable, 13) then		! Solid parallel 2 / massiv parallel in Value list
	
				if	iSillType = SILL_BRICK | \
					iSillType = SILL_STONE | \
					iSillType = SILL_CERAMIC | \
					iSillType = SILL_ETHERNIT | \
					iSillType = SILL_CONCRETE_TUB | \
					iSillType = SILL_ALUMINIUM | \
					iSillType = SILL_SIMPLEBLOCK | \
					iSillType = SILL_BLOCK | \
					iSillType = SILL_DUTCH then
		
					_bLockSillOvBySill	= 1
				endif
			endif
		endif
	endif
endif

if _bLockSillOvByMounting & _bLockSillOvBySill then
	hideparameter	"gs_sill_oversize"
	lock			"gs_sill_oversize"
endif


! =============================================================================
! Do Sill Parameter Logic
! =============================================================================

if bEnableSill then
	call "Sill_WMCC" parameters gs_macro_version = 12,
		isWindow					= isWindow,
		gs_IsCurved					= gs_IsCurved,
		iWindowShape				= iWindowShape,
		bEnableBoard				= bEnableBoard,
		bEnableCasing				= bEnableCasing,
		bDoorWithSidelightSupport	= bDoorWithSidelightSupport,
	! --- Corner Functions
		bLeftCornerFunction			= bLeftCornerFunction,
		leftCornerAngle				= leftCornerAngle,
		leftConnWallThk				= leftConnWallThk,
		bRightCornerFunction		= bRightCornerFunction,
		rightCornerAngle			= rightCornerAngle,
		rightConnWallThk			= rightConnWallThk,
	! --- Window Sizes
		ac_reveal_height			= ac_reveal_height,
	! --- Sidelight
		gs_sidelight_left				= gs_sidelight_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_right				= gs_sidelight_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Casing ---
		gs_trim_thk_out				= gs_trim_thk_out,
		gs_trim_outside				= gs_trim_outside,
	! --- Sill ---
		gs_sill_outside				= gs_sill_outside,
		gs_sill_outside_sl_left		= gs_sill_outside_sl_left,
		gs_sill_outside_sl_right	= gs_sill_outside_sl_right,
		gs_SillTypeEnable			= gs_SillTypeEnable,
		iSillType 					= iSillType,
		gs_sill_thk					= gs_sill_thk,
		gs_sill_nosing				= gs_sill_nosing,
		gs_sill_angle				= gs_sill_angle,
		gs_sill_ovhg_left			= gs_sill_ovhg_left,
		gs_sill_ovhg_right			= gs_sill_ovhg_right,
		gs_sill_slip_in				= gs_sill_slip_in,
		gs_sill_width				= gs_sill_width,
		gs_sill_topWidth			= gs_sill_topWidth,
		gs_sill_topHeight			= gs_sill_topHeight,
		gs_sill_edge				= gs_sill_edge,
		gs_sill_element_thk			= gs_sill_element_thk,
		gs_sill_curved				= gs_sill_curved,
		gs_board_thk				= gs_board_thk,
		gs_board_slip_in			= gs_board_slip_in,
		gs_sill_endthk				= gs_sill_endthk,
		gs_sill_elev				= gs_sill_elev,
		gs_sill_dripnos 			= gs_sill_dripnos,
		gs_sill_dripwidth			= gs_sill_dripwidth,
		gs_sill_ins_below			= gs_sill_ins_below,
		gs_sill_ins_use_wall_skin 	= gs_sill_ins_use_wall_skin,
		gs_reveal_bottom			= gs_reveal_bottom,
		gs_reveal_outerBottom_angle	= gs_reveal_outerBottom_angle,
		gs_mountingFrame			= gs_mountingFrame,
		gs_mountingFrame_depth		= gs_mountingFrame_depth,
		minSillNosing				= minSillNosing,
	! --- Oversize ---
		ac_right_oversize			= ac_right_oversize,
	! --- Stacked Window
		gs_stack_left				= gs_stack_left,
		gs_stack_right				= gs_stack_right,
		gs_stack_bottom				= gs_stack_bottom,
	! --- String Resource ---
		stSillTypes					= stSillTypes,
		stBsilldetlevel 			= stBsilldetlevel,
		iBrickSilldetlevel 			= iBrickSilldetlevel,
		stSillEdge					= stSillEdge,
	! --- Sill UI
		bShowSillUICHE				= bShowSillUICHE,
	! --- USA Parameters
		bSillUSA					= bSillUSA,
		gs_brick_sill				= gs_brick_sill,
		gs_wt_m						= gs_wt_m,
		gs_fsill					= gs_fsill,
		gs_win_type					= gs_win_type
endif


! =============================================================================
! Do Board Parameter Logic
! =============================================================================

if bEnableBoard then
	call "Board_WMCC" parameters gs_macro_version = 12,
		gs_IsCurved					= gs_IsCurved,
		iWindowShape				= iWindowShape,
		bDoorWithSidelightSupport	= bDoorWithSidelightSupport,
	! --- Corner Functions
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		leftConnWallThk			= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
		rightConnWallThk		= rightConnWallThk,
	! --- Sidelight
		gs_sidelight_left				= gs_sidelight_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_right				= gs_sidelight_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Sill ---
		gs_sill_oversize		= gs_sill_oversize,
		gs_sill_thk				= gs_sill_thk,
		gs_board_inside			= gs_board_inside,
		gs_board_inside_sl_left	= gs_board_inside_sl_left,
		gs_board_inside_sl_right= gs_board_inside_sl_right,
		gs_board_thk			= gs_board_thk,
		gs_board_nosing			= gs_board_nosing,
		gs_board_angle			= gs_board_angle,
		gs_board_ovhg_left		= gs_board_ovhg_left,
		gs_board_slip_in		= gs_board_slip_in,
		gs_board_width			= gs_board_width,
		gs_board_curved			= gs_board_curved,
		bBoardInPolyWall		= bBoardInPolyWall,
		minBoardNosing			= minBoardNosing,
		minBoardOvhgLeft		= minBoardOvhgLeft,
		minBoardOvhgRight		= minBoardOvhgRight,
	! --- Splayed Reveal ---
		gs_reveal_bottom_angle  = gs_reveal_bottom_angle,
	! --- Oversize ---
		ac_right_oversize		= ac_right_oversize,
	! --- Stacked Window
		gs_stack_left			= gs_stack_left,
		gs_stack_right			= gs_stack_right,
		gs_stack_bottom			= gs_stack_bottom,
	! --- Wall Inset
		gs_parapet_wall_inset	= gs_parapet_wall_inset,
		stBoardInPolyWall		= stBoardInPolyWall
endif


! =============================================================================
! Do Threshold Parameter Logic
! =============================================================================

if bEnableThreshold then
	call "Threshold_WMCC" parameters gs_macro_version = 12,
		gs_IsCurved				= 0,
		iWindowShape			= iWindowShape,
		bEnableThreshold		= bEnableThreshold,
		gs_wido_sill			= gs_wido_sill,
		gs_fthk					= gs_fthk,
		gs_frame_wthk			= gs_frame_wthk,
		gs_frame_thkin			= gs_frame_thkin,
		gs_frame_width_left		= gs_frame_width_left,
		gs_frame_width_right	= gs_frame_width_right,
		gs_rebate_depth			= gs_rebate_depth,
		gs_rebate_width			= gs_rebate_width,
		gs_leaf_thk				= gs_leaf_thk,
	! --- Trim ---
		gs_trim_outside			= gs_trim_outside,
		gs_trim_width_out		= gs_trim_width_out,
		gs_trim_inside			= gs_trim_inside,
		gs_trim_width_in		= gs_trim_width_in,
	! --- Threshold
		bThreshold				= bThreshold,
		iThresholdType			= iThresholdType,
		gs_TresholdTypeEnable	= gs_TresholdTypeEnable,
		gs_treshold_thk			= gs_treshold_thk,
		gs_treshold_width		= gs_treshold_width,
		gs_treshold_angle		= gs_treshold_angle,
		gs_treshold_ext_hgt		= gs_treshold_ext_hgt,
		gs_treshold_nosing		= gs_treshold_nosing,
		gs_treshold_nosing_2	= gs_treshold_nosing_2,
	! --- Stacked Window
		gs_stack_left			= gs_stack_left,
		gs_stack_right			= gs_stack_right,
	! --- String Resource ---
		stThresholdTypes		= stThresholdTypes,
	! --- NOR Parameters
		gs_threshold_nor		= gs_threshold_nor
else
	if not(isWindow) & not(isEmptyOpening) & gs_TresholdTypeEnable > 0 then
		values{2} "iThresholdType" TRESHOLD_NOTAVAILABLE, " "

		lock	"bThreshold",
				"iThresholdType"
	endif
endif


! =============================================================================
! Do Casing Parameter Logic
! =============================================================================

if bEnableCasing then
	call "Casing_WMCC" parameters gs_macro_version = 12,
		isWindow				= isWindow,
		Suppress_isWindow		= Suppress_isWindow,
		gs_IsCurved				= gs_IsCurved,
		gs_CasingOutTypeEnable	= gs_CasingOutTypeEnable,
		gs_CasingInTypeEnable	= gs_CasingInTypeEnable,
		iWindowShape			= iWindowShape,
		gs_frame_style_m		= iFrameStyle,
		iDoorType				= iDoorType,
		bEnableSwitchableBottomCasing	= bEnableSwitchableBottomCasing,
	! --- Corner Functions
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		leftConnWallThk			= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
		rightConnWallThk		= rightConnWallThk,
	! --- Reveal Parameters
		iRevealType				= iRevealType,
	! --- Sidelight
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Trim ---
		gs_trimtype_in			= gs_trimtype_in,
		gs_trimtype_in_int		= gs_trimtype_in_int,
		gs_trimtype_out			= gs_trimtype_out,
		gs_trimtype_out_int		= gs_trimtype_out_int,
		gs_trim_inside			= gs_trim_inside,
		gs_trim_outside			= gs_trim_outside,
		gs_trim_inside_uniform	= gs_trim_inside_uniform,
		gs_trim_outside_uniform	= gs_trim_outside_uniform,
		gs_trim_width_in		= gs_trim_width_in,
		gs_trim_width_out		= gs_trim_width_out,
		gs_trim_offs_in			= gs_trim_offs_in,
		gs_trim_offs_out		= gs_trim_offs_out,
		gs_trim_thk_in			= gs_trim_thk_in,
		gs_trim_thk_out			= gs_trim_thk_out,
		gs_tw_left_in			= gs_tw_left_in,
		gs_tw_right_in			= gs_tw_right_in,
		gs_tw_left_out			= gs_tw_left_out,
		gs_tw_right_out			= gs_tw_right_out,
		gs_trimov_top_left_out	= gs_trimov_top_left_out,
		gs_trimov_top_right_out	= gs_trimov_top_right_out,
		gs_trimov_bot_left_out	= gs_trimov_bot_left_out,
		gs_trimov_bot_right_out	= gs_trimov_bot_right_out,
		gs_trimov_top_left_in	= gs_trimov_top_left_in,
		gs_trimov_top_right_in	= gs_trimov_top_right_in,
		gs_trimov_bot_left_in	= gs_trimov_bot_left_in,
		gs_trimov_bot_right_in	= gs_trimov_bot_right_in,
		gs_trim_atframe_out		= gs_trim_atframe_out,
		gs_trim_atframe_in		= gs_trim_atframe_in,
		gs_trim_stack_left		= gs_trim_stack_left,
		gs_trim_stack_right		= gs_trim_stack_right,
		gs_trim_stack_bottom	= gs_trim_stack_bottom,
		gs_trim_stack_top		= gs_trim_stack_top,
		gs_trim_show_cover_in	= gs_trim_show_cover_in,
		gs_trim_show_cover_out	= gs_trim_show_cover_out,
		gs_trim_jambext_nosing_in	= gs_trim_jambext_nosing_in,
		gs_trim_jambext_nosing_out	= gs_trim_jambext_nosing_out,
		bCasingTolerance		= bCasingTolerance,
		bLinkCasingSurfaces		= bLinkCasingSurfaces,
		stored_material			= stored_material,
		gs_trim_in_mat			= gs_trim_in_mat,
		gs_trim_out_mat			= gs_trim_out_mat,
	! --- Complex Casing ---
		bArchitraveCapital		= bArchitraveCapital,
	! --- Sill ---
		bEnableSill				= bEnableSill,
		gs_sill_outside			= gs_sill_outside,
	! --- Apron ---
		bEnableApron			= bEnableApron,
		gs_apron				= gs_apron,
		gs_apron_thk			= gs_apron_thk,
		gs_apron_width			= gs_apron_width,
		gs_apron_mat			= gs_apron_mat,
	! --- Stacked Window
		bEnableCasingAtGanging	= bEnableCasingAtGanging,
		gs_stack_left			= gs_stack_left,
		gs_stack_right			= gs_stack_right,
		gs_stack_top			= gs_stack_top,
		gs_stack_bottom			= gs_stack_bottom,
	! --- String Resource ---
		stCasingType			= stCasingType,
		stCasingHeadType		= stCasingHeadType,
		stArchitraveCapitalType	= stArchitraveCapitalType,
		gs_frame_wthk			= gs_frame_wthk,
	! --- USA Parameters ---
		gs_wt_m					= gs_wt_m,
		gs_frame_width			= gs_frame_width,
		gs_sectgar				= gs_sectgar,
		bCasingUSA				= bCasingUSA,
	! --- NOR Parameters ---
		gs_casing_nor			= gs_casing_nor,
	! --- CHE Parameters ---
		gs_casing_che			= gs_casing_che
endif


! =============================================================================
! Do Sunshading Parameter Logic
! =============================================================================

if bEnableShutter then
	outfolding_innerPanelLeft = gs_outFoldingShutter_panelIn
	outfolding_innerPanelRight = gs_outFoldingShutter_panelIn

	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		leftWallAngle	= gs_reveal_outerLeft_angle		* not(gs_stack_left)
		rightWallAngle	= gs_reveal_outerRight_angle	* not(gs_stack_right)
		topWallAngle	= gs_reveal_outerTop_angle		* not(gs_stack_top)
		bottomWallAngle	= gs_reveal_outerBottom_angle	* not(gs_stack_bottom)
	else
		leftWallAngle	= 0
		rightWallAngle	= 0
		topWallAngle	= 0
		bottomWallAngle	= 0
	endif

	bUseInnerRevealPoints = 0
	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		if gs_sunShade_iType = SUNSHADE_FOLDING | gs_sunShade_iType = SUNSHADE_OUTFOLDING then bUseInnerRevealPoints = 1

		if gs_sunShade_iType = SUNSHADE_ROLLING & gs_shutRoll_iPlacement <> 1 then bUseInnerRevealPoints = 1
		if gs_sunShade_iType = SUNSHADE_EXTVENETIAN & gs_shutLam_iPlacement <> 1 then bUseInnerRevealPoints = 1
	endif

	if bUseInnerRevealPoints then
		leftCornerX		= leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][1]
		rightCornerX	=  rightWallFrameRevealPnts[idxSillStartPlasterRight+1][1]
		leftX1		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][1]
		rightX1		= rightWallFrameRevealPnts[idxSillStartPlasterRight][1]

		if WIDO_REVEAL_SIDE then
			leftCornerY		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][2] - WIDO_FRAME_THICKNESS
			rightCornerY	= rightWallFrameRevealPnts[idxSillStartPlasterRight][2] - WIDO_FRAME_THICKNESS

			leftY2	= leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][2] - WIDO_FRAME_THICKNESS
			rightY2	= rightWallFrameRevealPnts[idxSillStartPlasterRight+1][2] - WIDO_FRAME_THICKNESS
		else
			leftCornerY		= -leftWallFrameRevealPnts[idxSillStartPlasterLeft][2]
			rightCornerY	= -rightWallFrameRevealPnts[idxSillStartPlasterRight][2]

			leftY2	= -leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][2]
			rightY2	= -rightWallFrameRevealPnts[idxSillStartPlasterRight+1][2]
		endif

		if abs(leftWallAngle) < EPS then
			outfolding_innerPanelLeft = WIDO_SILL - gs_reveal_outer_jamb_depth
		else
			outfolding_innerPanelLeft = sqr((leftCornerX - leftX1)^2 + (leftY2 - leftCornerY)^2)
		endif
		if abs(rightWallAngle) < EPS then
			outfolding_innerPanelRight = WIDO_SILL - gs_reveal_outer_jamb_depth
		else
			outfolding_innerPanelRight = sqr((rightCornerX - rightX1)^2 + (rightY2 -rightCornerY)^2)
		endif
	else
		leftCornerX		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][1]
		rightCornerX	= rightWallFrameRevealPnts[idxSillStartPlasterRight][1]

		if WIDO_REVEAL_SIDE then
			leftCornerY		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][2] - WIDO_FRAME_THICKNESS
			rightCornerY	= rightWallFrameRevealPnts[idxSillStartPlasterRight][2] - WIDO_FRAME_THICKNESS
		else
			leftCornerY		= -leftWallFrameRevealPnts[idxSillStartPlasterLeft][2]
			rightCornerY	= -rightWallFrameRevealPnts[idxSillStartPlasterRight][2]
		endif
	endif

	sunShadeLength = rightCornerX - leftCornerX
	sunShadeLength3D = sunShadeLength
	if not(gs_turn_plaster_show_3D) then
		sunShadeLength3D = sunShadeLength + thkPlasterAtSillLeft * not(gs_stack_left) + thkPlasterAtSillRight * not(gs_stack_right)
	endif

	casingThkAtWindow	= 0
	casingThkOnFacade	= 0

	if gs_trim_outside then
		casingThkAtWindow = gs_trim_width_out
		if gs_shutRoll_iRailPos = 2 then		! ON WALL
			casingThkAtWindow = 0
		endif
		if gs_shutLam_iRailPos = 2 then		! ON WALL
			casingThkAtWindow = 0
		endif

		if gs_trim_show_cover_out then
			casingThkOnFacade = gs_trim_thk_out
		else
			casingThkOnFacade = gs_trim_jambext_nosing_out
		endif
	endif

	bottomCorrection		= 0
	topCorrection			= 0
	bottomCorrection3D		= 0
	topCorrection3D			= 0

	if gs_sunShade_bModifyRevealSize then	! DACH types
		topCorrection = thkPlasterAtSillTop * not(gs_stack_top)
		topCorrection3D = topCorrection * gs_turn_plaster_show_3D

		if gs_sill_outside then
			if gs_sill_oversize then
				bottomCorrection = 0
				bottomCorrection3D = bottomCorrection
			else
				if iSillType = SILL_BRICK | iSillType = SILL_STONE then
					bottomCorrection = 0
				else
					bottomCorrection = gs_sill_thk
				endif
				bottomCorrection3D = bottomCorrection
			endif
		else
			if gs_trim_outside then
				bottomCorrection = 0
			else
				bottomCorrection = thkPlasterAtSillBottom * not(gs_stack_bottom)
			endif
			bottomCorrection3D = bottomCorrection * gs_turn_plaster_show_3D
		endif

		if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
			elevateSunShadeBottom = not(gs_stack_bottom) * gs_sill_outside * gs_sill_element_thk / cos(gs_reveal_outerBottom_angle)

			if gs_mountingFrame then
				topCorrection	= elevateSunShadeBottom - gs_mountingFrame_width_top - gs_mountingFrame_width_bottom
				topCorrection3D	= elevateSunShadeBottom - gs_mountingFrame_width_top - gs_mountingFrame_width_bottom
			else
				topCorrection	= 0
				topCorrection3D	= 0
			endif
			if gs_sunShade_iType = SUNSHADE_SHUTTER then
				slantedDepthTop		= max(0, WIDO_SILL - gs_shutter_closingDepth - gs_shutter_bExtraFrame * gs_shutter_extraFrameThk - gs_reveal_outer_jamb_depth)
				slantedDepthBottom	= WIDO_SILL - gs_shutter_closingDepth - gs_shutter_bExtraFrame * gs_shutter_extraFrameThk - gs_mountingFrame * gs_mountingFrame_depth
			else
				slantedDepthTop		= WIDO_SILL - gs_reveal_outer_jamb_depth
				slantedDepthBottom	= WIDO_SILL - gs_mountingFrame * gs_mountingFrame_depth
			endif
			slantedCorrectionTop	= not(gs_stack_top) * slantedDepthTop * tan(gs_reveal_outerTop_angle)
			slantedCorrectionBottom	= not(gs_stack_bottom) * slantedDepthBottom * tan(gs_reveal_outerBottom_angle)

			if not(bUseInnerRevealPoints) then
				elevateSunShadeBottom = elevateSunShadeBottom - slantedCorrectionBottom
				elevateSunShadeBottom = elevateSunShadeBottom + gs_stack_bottom * gs_sill_outside * gs_sill_oversize * gs_sill_element_thk / cos(gs_reveal_outerBottom_angle)
			endif
			if bUseInnerRevealPoints then
				topCorrection = 0
			else
				topCorrection	= topCorrection - slantedCorrectionBottom - slantedCorrectionTop
				topCorrection	= topCorrection - gs_stack_top * not(gs_mountingFrame) * gs_reveal_top
			endif
			topCorrection3D	= topCorrection

			if bUseInnerRevealPoints then
				bottomCorrection = 0
			else
				bottomCorrection	= not(gs_stack_bottom) * not(gs_mountingFrame) * gs_sill_outside * not(gs_sill_oversize) * gs_sill_element_thk / cos(gs_reveal_outerBottom_angle)
			endif
			bottomCorrection3D	= bottomCorrection
		endif

	else	! INT types
		if gs_trim_outside then
			topCorrection = gs_trim_width_out
			topCorrection3D = topCorrection
		else
			topCorrection = thkPlasterAtSillTop * not(gs_stack_top)
			topCorrection3D = topCorrection * gs_turn_plaster_show_3D
		endif

		if gs_sill_outside then

			bSunshadeReachesFrame = (gs_sunShade_iType = SUNSHADE_FOLDING | gs_sunShade_iType = SUNSHADE_OUTFOLDING)
			bottomCorrection = 0

			if	iSillType = SILL_BRICK | \
				iSillType = SILL_STONE | \
				iSillType = SILL_CERAMIC | \
				iSillType = SILL_ETHERNIT | \
				iSillType = SILL_CONCRETE_TUB | \
				iSillType = SILL_ALUMINIUM | \
				iSillType = SILL_SIMPLEBLOCK | \
				iSillType = SILL_BLOCK | \
				iSillType = SILL_DUTCH then

				if iSillType = SILL_BRICK		 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in) * tan(gs_sill_angle)
				if iSillType = SILL_STONE		 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in - gs_sill_topWidth) * tan(gs_sill_angle) - gs_sill_topHeight
				if iSillType = SILL_CERAMIC		 then bottomCorrection = -((gs_sill_thk - gs_sill_endthk) * cos(gs_sill_angle) + tan(gs_sill_angle) * (not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in))
				if iSillType = SILL_ETHERNIT	 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in - gs_sill_topWidth) * tan(gs_sill_angle) - gs_sill_topHeight
				if iSillType = SILL_CONCRETE_TUB then bottomCorrection = not(bSunshadeReachesFrame) * (0.17 * gs_sill_thk / 0.185 - gs_sill_thk)
				if iSillType = SILL_ALUMINIUM	 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in - 0.002) * tan(gs_sill_angle) - 0.01
				if iSillType = SILL_SIMPLEBLOCK	 then bottomCorrection = 0
				if iSillType = SILL_BLOCK		 then bottomCorrection = -gs_sill_thk
				if iSillType = SILL_DUTCH		 then bottomCorrection = -gs_sill_thk
			else
				if iSillType = SILL_TIMBER	 then bottomCorrection = -not(bSunshadeReachesFrame) * max(0, WIDO_SILL) * tan(gs_sill_angle)
				if iSillType = SILL_SOLID_22 then bottomCorrection = - 0.01 - not(bSunshadeReachesFrame) * max(0, gs_sill_thk - gs_sill_endthk - gs_sill_elev - 0.01) + \
					 max(0, gs_sill_thk - gs_sill_endthk - 0.01) / (max(0, WIDO_SILL) + gs_sill_nosing - 0.01) * gs_sill_nosing
				if iSillType = SILL_METAL_1	 then bottomCorrection = - 0.01 - not(bSunshadeReachesFrame) * max(0, gs_sill_thk - gs_sill_endthk - 0.01)

				if not(gs_sill_oversize) then
					bottomCorrection = bottomCorrection + gs_sill_thk + (iSillType = SILL_SOLID_22) * gs_sill_elev
				endif
			endif
			bottomCorrection3D = bottomCorrection
		else
			if gs_trim_outside then
				bottomCorrection = gs_trim_width_out * isWindow
				bottomCorrection3D = bottomCorrection
			else
				bottomCorrection = thkPlasterAtSillBottom * not(gs_stack_bottom) * isWindow
				bottomCorrection3D = bottomCorrection * gs_turn_plaster_show_3D
			endif
		endif
	endif

	call "SunShade_WMCC" parameters a		= sunShadeLength - casingThkAtWindow * 2,
		b								= ac_reveal_height - bottomCorrection - topCorrection,
		sunShadeLength3D				= sunShadeLength3D - casingThkAtWindow * 2,
		sunShadeHeight3D				= ac_reveal_height - bottomCorrection3D - topCorrection3D,

		bSunshade						= bSunshade,
		gs_sunShade_iType				= gs_sunShade_iType,
		gs_sunShade_typeEnable			= gs_sunShade_typeEnable,
		gs_sunShade_iCashedEnableTypes	= gs_sunShade_iCashedEnableTypes,
		gs_sunShade_bChangeEnabledTypes	= gs_sunShade_bChangeEnabledTypes,

		gs_shutter_nPanels				= gs_shutter_nPanels,
		gs_shutter_nPanels2				= gs_shutter_nPanels2,
		gs_shutter_panelPos				= gs_shutter_panelPos,
		gs_shutter_iPanelPos			= gs_shutter_iPanelPos,

		gs_sunShade_bAutomaticHeight	= gs_sunShade_bAutomaticHeight,
		gs_sunShade_height				= gs_sunShade_height,
		gs_shutter_innerOffset			= gs_shutter_innerOffset,
		gs_shutter_closingDepth			= gs_shutter_closingDepth,

		gs_slidingShutter_cover			= gs_slidingShutter_cover,
		gs_slidingShutter_iCover		= gs_slidingShutter_iCover,

		gs_foldingShutter_stacking		= gs_foldingShutter_stacking,
		gs_foldingShutter_iStacking		= gs_foldingShutter_iStacking,
		gs_foldingShutter_ovhg			= gs_foldingShutter_ovhg,
		gs_outFoldingShutter_panelIn	= gs_outFoldingShutter_panelIn,

		gs_shutter_opLength				= gs_shutter_opLength,
		gs_shutter_closedLength			= gs_shutter_closedLength,
		gs_shutter_opLength_1			= gs_shutter_opLength_1,
		gs_shutter_opLength_2			= gs_shutter_opLength_2,
		gs_shutter_opHeight				= gs_shutter_opHeight,
		gs_shutter_closedHeight			= gs_shutter_closedHeight,

		gs_shutPanel_archHeight			= openingArchHeight,
		gs_shutPanel_type				= gs_shutPanel_type,
		gs_shutPanel_iType				= gs_shutPanel_iType,
		gs_cust_shutterPanel			= gs_cust_shutterPanel,
		gs_shutPanel_Thk				= gs_shutPanel_Thk,
		gs_shutPanel_frameWidth			= gs_shutPanel_frameWidth,
		gs_shutPanel_BDiffBottomFrame	= gs_shutPanel_BDiffBottomFrame,
		gs_shutPanel_frameWidthBottom	= gs_shutPanel_frameWidthBottom,
		gs_shutPanel_bAutomaticWidth	= gs_shutPanel_bAutomaticWidth,
		gs_shutPanel_panelWidth			= gs_shutPanel_panelWidth,
		gs_shutPanel_fieldThk			= gs_shutPanel_fieldThk,
		gs_shutPanel_louverThk			= gs_shutPanel_louverThk,
		gs_shutPanel_louverWidth		= gs_shutPanel_louverWidth,
		gs_shutPanel_louverAngle		= gs_shutPanel_louverAngle,
		gs_shutPanel_midFrameHorW		= gs_shutPanel_midFrameHorW,
		gs_shutPanel_midFrameVertW		= gs_shutPanel_midFrameVertW,
		gs_shutPanel_nHoleHor			= gs_shutPanel_nHoleHor,
		gs_shutPanel_nHoleVert			= gs_shutPanel_nHoleVert,
		gs_shutPanel_holeRadius			= gs_shutPanel_holeRadius,
		gs_shutPanel_ZBoardW			= gs_shutPanel_ZBoardW,
		gs_shutPanel_ZWidth				= gs_shutPanel_ZWidth,
		gs_shutPanel_ZThk				= gs_shutPanel_ZThk,
		gs_shutPanel_boardThkVert		= gs_shutPanel_boardThkVert,
		gs_shutPanel_boardThkHor		= gs_shutPanel_boardThkHor,
		gs_shutPanel_vertBoardW			= gs_shutPanel_vertBoardW,
		gs_shutPanel_horBoardW			= gs_shutPanel_horBoardW,

		gs_shutRoll_placement			= gs_shutRoll_placement,
		gs_shutRoll_iPlacement			= gs_shutRoll_iPlacement,
		gs_shutRoll_placementEnable		= gs_shutRoll_placementEnable,
		gs_shutRoll_boxType				= gs_shutRoll_boxType,
		gs_shutRoll_iBoxType			= gs_shutRoll_iBoxType,
		gs_shutRoll_railPos				= gs_shutRoll_railPos,
		gs_shutRoll_iRailPos			= gs_shutRoll_iRailPos,
		gs_shutRoll_boxWidth			= gs_shutRoll_boxWidth,
		gs_shutRoll_boxHeight			= gs_shutRoll_boxHeight,
		gs_shutRoll_boxDefaultSize		= gs_shutRoll_boxDefaultSize,
		gs_shutRoll_iBoxDefaultSize		= gs_shutRoll_iBoxDefaultSize,
		gs_shutRoll_distFromHead		= gs_shutRoll_distFromHead,
		gs_shutRoll_cutWallBehind		= gs_shutRoll_cutWallBehind,

		gs_shutLam_placement			= gs_shutLam_placement,
		gs_shutLam_iPlacement			= gs_shutLam_iPlacement,
		gs_shutLam_railPos				= gs_shutLam_railPos,
		gs_shutLam_iRailPos				= gs_shutLam_iRailPos,
		gs_shutLam_placementEnable		= gs_shutLam_placementEnable,
		gs_shutLam_boxHeight			= gs_shutLam_boxHeight,
		gs_shutLam_distFromHead			= gs_shutLam_distFromHead,
		gs_shutLam_bRail				= gs_shutLam_bRail,
		gs_shutLam_cutWallBehind		= gs_shutLam_cutWallBehind,

		gs_shutLam2_boxHeight			= gs_shutLam2_boxHeight,
		gs_shutLam2_distFromHead		= gs_shutLam2_distFromHead,
		gs_shutLam2_axisFromHead		= gs_shutLam2_axisFromHead,

		stSunShadeTypes					= stSunShadeTypes,
		stShutterPanelPos				= stShutterPanelPos,
		stFoldingShutterStacking		= stFoldingShutterStacking,
		stSlidingShutterCover			= stSlidingShutterCover,
		stShutterPanelTypes				= stShutterPanelTypes,
		stShutRollPlacement				= stShutRollPlacement,
		stShutRollBoxType				= stShutRollBoxType,
		stShutRollBoxDefaultSize		= stShutRollBoxDefaultSize,
		stShutRollRailPos				= stShutRollRailPos,
		stShutLamPlacement				= stShutLamPlacement,
		stShutLamRailPos				= stShutLamRailPos,

		radSill							= radSill,
		radBoard						= radBoard,
		iWindowShape					= iWindowShape,
		bLeftCornerFunction				= bLeftCornerFunction,
		bRightCornerFunction			= bRightCornerFunction,
		gs_stack_left					= gs_stack_left,
		gs_stack_right					= gs_stack_right,
		iRevealType						= iRevealType,
		gs_reveal_top					= gs_reveal_top,
		leftWallAngle					= leftWallAngle,
		rightWallAngle					= rightWallAngle,
		topWallAngle					= topWallAngle,
		bottomWallAngle					= bottomWallAngle

		if (not(gs_trim_outside) & not(gs_trim_inside)) | not(bEnableCasing) then
			lock 	"gs_shutRoll_railPos",
					"gs_shutRoll_iRailPos",
					"gs_shutRoll_showCasingBehind"

			lock 	"gs_shutLam_railPos",
					"gs_shutLam_iRailPos",
					"gs_shutLam_showCasingBehind"

			hideparameter 	"gs_shutRoll_railPos",
							"gs_shutRoll_iRailPos",
							"gs_shutRoll_showCasingBehind"

			hideparameter 	"gs_shutLam_railPos",
							"gs_shutLam_iRailPos",
							"gs_shutLam_showCasingBehind"
		endif

endif


! =============================================================================
! Do Corner Column Parameter Logic
! =============================================================================

if bEnableCustomCornerLeft | bEnableCustomCornerRight then
	call "Corner Column_WMCC" parameters gs_macro_version = 12,
	! --- Corner Column Geometry
		bLeftCornerFunction		= bLeftCornerFunction,
		bRightCornerFunction	= bRightCornerFunction,
		gs_corner_column 		= gs_corner_column,
		gs_cc_width				= gs_cc_width,
		gs_cc_thk				= gs_cc_thk,
		gs_cc_pr				= gs_cc_pr
endif


]]></Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["Sill_WMCC"]]></MName>
		<MainGUID>A3E7E7B4-15C5-4F20-8CD0-8B24703F2356</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Board_WMCC"]]></MName>
		<MainGUID>54645068-4414-4170-8128-8968482F76C0</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Threshold_WMCC"]]></MName>
		<MainGUID>EC2290D7-BEE0-403E-BED2-96868AE876AA</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Casing_WMCC"]]></MName>
		<MainGUID>18B05FDA-175A-4F3D-8FDC-89F38791B3F4</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["SunShade_WMCC"]]></MName>
		<MainGUID>E2A94AD4-C3AD-4DDB-B931-3FB3F1396C61</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Corner Column_WMCC"]]></MName>
		<MainGUID>A73E2CF7-E1EF-47A8-86C3-582377A123DB</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Sill_WMCC"]]></MName>
		<MainGUID>A3E7E7B4-15C5-4F20-8CD0-8B24703F2356</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Board_WMCC"]]></MName>
		<MainGUID>54645068-4414-4170-8128-8968482F76C0</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Threshold_WMCC"]]></MName>
		<MainGUID>EC2290D7-BEE0-403E-BED2-96868AE876AA</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["SunShade_WMCC"]]></MName>
		<MainGUID>E2A94AD4-C3AD-4DDB-B931-3FB3F1396C61</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["CasingTrapezoid_WMCC"]]></MName>
		<MainGUID>EF57CEBB-DF44-4D23-AFE5-01C2C61D0F7C</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Casing_WMCC"]]></MName>
		<MainGUID>18B05FDA-175A-4F3D-8FDC-89F38791B3F4</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Corner Column_WMCC"]]></MName>
		<MainGUID>A73E2CF7-E1EF-47A8-86C3-582377A123DB</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabIDlistHierarchy_m_WMCC"]]></MName>
		<MainGUID>83D8979A-C621-4A90-9F64-41CC8948B5F0</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Casing_WMCC"]]></MName>
		<MainGUID>18B05FDA-175A-4F3D-8FDC-89F38791B3F4</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Sill_WMCC"]]></MName>
		<MainGUID>A3E7E7B4-15C5-4F20-8CD0-8B24703F2356</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Board_WMCC"]]></MName>
		<MainGUID>54645068-4414-4170-8128-8968482F76C0</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["SunShade_WMCC"]]></MName>
		<MainGUID>E2A94AD4-C3AD-4DDB-B931-3FB3F1396C61</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Sill_WMCC"]]></MName>
		<MainGUID>A3E7E7B4-15C5-4F20-8CD0-8B24703F2356</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Board_WMCC"]]></MName>
		<MainGUID>54645068-4414-4170-8128-8968482F76C0</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Threshold_WMCC"]]></MName>
		<MainGUID>EC2290D7-BEE0-403E-BED2-96868AE876AA</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Casing_WMCC"]]></MName>
		<MainGUID>18B05FDA-175A-4F3D-8FDC-89F38791B3F4</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["SunShade_WMCC"]]></MName>
		<MainGUID>E2A94AD4-C3AD-4DDB-B931-3FB3F1396C61</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Corner Column_WMCC"]]></MName>
		<MainGUID>A73E2CF7-E1EF-47A8-86C3-582377A123DB</MainGUID>
	</Macro>
</CalledMacros>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" path="uipicts/WallholeFraming/ui_trim2_left_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" path="uipicts/WallholeFraming/ui_trim2_left_outside_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="3" path="uipicts/WallholeFraming/ui_trim2_left_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="4" path="uipicts/WallholeFraming/ui_trim2_left_inside_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="5" path="uipicts/WallholeFraming/ui_trim_left_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="6" path="uipicts/WallholeFraming/ui_trim_left_outside_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="7" path="uipicts/WallholeFraming/ui_trim_left_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="8" path="uipicts/WallholeFraming/ui_trim_left_inside_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="9" path="uipicts/WallholeFraming/ui_trim1_middle_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="10" path="uipicts/WallholeFraming/ui_trim1_middle_0.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="11" path="uipicts/WallholeFraming/ui_trim2_right_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="12" path="uipicts/WallholeFraming/ui_trim_right_outside_c.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="13" path="uipicts/WallholeFraming/ui_trim2_right_outside_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="14" path="uipicts/WallholeFraming/ui_trim_right_outside_c_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="15" path="uipicts/WallholeFraming/ui_trim2_right_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="16" path="uipicts/WallholeFraming/ui_trim_right_inside_c.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="17" path="uipicts/WallholeFraming/ui_trim2_right_inside_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="18" path="uipicts/WallholeFraming/ui_trim_right_inside_c_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="19" path="uipicts/WallholeFraming/ui_trim_right_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="20" path="uipicts/WallholeFraming/ui_trim_right_outside_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="21" path="uipicts/WallholeFraming/ui_trim_right_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="22" path="uipicts/WallholeFraming/ui_trim_right_inside_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="23" path="uipicts/WallholeFraming/ui_trim_sect2_up_in.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="24" path="uipicts/WallholeFraming/ui_trim_sect_up_in.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="25" path="uipicts/WallholeFraming/ui_trim_sect2_up_in_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="26" path="uipicts/WallholeFraming/ui_trim_sect_up_in_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="27" path="uipicts/WallholeFraming/ui_trim_sect2_up_out.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="28" path="uipicts/WallholeFraming/ui_trim_sect_up_out.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="29" path="uipicts/WallholeFraming/ui_sill_geom2_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="30" path="uipicts/WallholeFraming/ui_trim_sect_up_out_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="31" path="uipicts/WallholeFraming/ui_sill_geom2_timber.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="32" path="uipicts/WallholeFraming/ui_sill_geom2_brick.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="33" path="uipicts/WallholeFraming/ui_sill_geom2_stone.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="34" path="uipicts/WallholeFraming/ui_sill_geom_timber.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="35" path="uipicts/WallholeFraming/ui_sill_geom_brick.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="36" path="uipicts/WallholeFraming/ui_sill_geom_stone.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="37" path="uipicts/WallholeFraming/ui_trim_sect2_dn_out.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="38" path="uipicts/WallholeFraming/ui_trim_sect_dn_out.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="39" path="uipicts/WallholeFraming/ui_sill_geom2_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="40" path="uipicts/WallholeFraming/ui_sill_geom_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="41" path="uipicts/WallholeFraming/ui_board_geom2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="42" path="uipicts/WallholeFraming/ui_board_geom.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="43" path="uipicts/WallholeFraming/ui_trim_sect2_dn_in.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="44" path="uipicts/WallholeFraming/ui_trim_sect_dn_in.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="45" path="uipicts/WallholeFraming/ui_board_geom2_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="46" path="uipicts/WallholeFraming/ui_board_geom_no.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="47" path="uipicts/WallholeFraming/ui_sill_type_win.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="48" path="uipicts/WallholeFraming/ui_trim_cota_left_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="49" path="uipicts/WallholeFraming/ui_trim_cota_right_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="50" path="uipicts/WallholeFraming/ui_trim_cota_left_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="51" path="uipicts/WallholeFraming/ui_trim_cota_right_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="52" path="uipicts/WallholeFraming/ui_trim0_middle.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="53" path="uipicts/WallholeFraming/ui_trim2_middle_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="54" path="uipicts/WallholeFraming/ui_trim2_middle_0.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="55" path="uipicts/WallholeFraming/ui_trim3_middle.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="56" path="uipicts/WallholeFraming/ui_sect0_middle_up.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="57" path="uipicts/WallholeFraming/ui_sect0_middle_dn.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="58" path="uipicts/WallholeFraming/ui_sect1_middle_up_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="59" path="uipicts/WallholeFraming/ui_sect1_middle_dn_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="60" path="uipicts/WallholeFraming/ui_sect1_middle_up_0.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="61" path="uipicts/WallholeFraming/ui_sect1_middle_dn_0.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="62" path="uipicts/WallholeFraming/ui_sect2_middle_up_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="63" path="uipicts/WallholeFraming/ui_sect2_middle_dn_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="64" path="uipicts/WallholeFraming/ui_sect2_middle_up_0.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="65" path="uipicts/WallholeFraming/ui_sect2_middle_dn_0.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="66" path="uipicts/WallholeFraming/ui_sect3_middle_up.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="67" path="uipicts/WallholeFraming/ui_sect3_middle_dn.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="70" path="_ui_picts_/opening/ui_frame_pen.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="71" path="_ui_picts_/opening/ui_frame_pen_lock.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="72" path="_ui_picts_/attributes/ui_mat.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="73" path="_ui_picts_/attributes/ui_mat_lock.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="74" path="_ui_picts_/attributes/ui_fill_type.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="75" path="_ui_picts_/attributes/ui_fill_type_lock.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="76" path="_ui_picts_/attributes/ui_fill_pen.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="77" path="_ui_picts_/attributes/ui_fill_pen_lock.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="78" path="_ui_picts_/attributes/ui_back_pen.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="79" path="_ui_picts_/attributes/ui_back_pen_lock.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="80" path="uipicts/WallholeFraming/ui_cornerw_nocorner_left.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="81" path="uipicts/WallholeFraming/ui_cornerw_nocorner_right.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="82" path="uipicts/WallholeFraming/ui_cornerw_frame_left.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="83" path="uipicts/WallholeFraming/ui_cornerw_frame_right.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="84" path="uipicts/WallholeFraming/ui_cornerw_column_left.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="85" path="uipicts/WallholeFraming/ui_cornerw_column_right.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="86" path="uipicts/WallholeFraming/ui_cornerw_glass_left.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="87" path="uipicts/WallholeFraming/ui_cornerw_glass_right.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="88" path="uipicts/WallholeFraming/ui_arrow_thk.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="89" path="uipicts/WallholeFraming/ui_threshold_type.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="90" path="uipicts/WallholeFraming/ui_sill_brick_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="91" path="uipicts/WallholeFraming/ui_sill_brick_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="92" path="uipicts/WallholeFraming/ui_sill_stone_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="93" path="uipicts/WallholeFraming/ui_sill_stone_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="94" length_in_bytes="92" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000310000
	000101030000004D28D4F200000003504C5445000000A77A3DDA0000000A4944
	4154081D63800200000800018C37B72F0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="95" length_in_bytes="92" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000360000
	00010103000000AFF4CF8B00000003504C5445000000A77A3DDA0000000A4944
	4154081D63800200000800018C37B72F0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="96" path="uipicts/WallholeFraming/ui_arrow_v_9.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="97" path="uipicts/WallholeFraming/ui_thres_sect_3.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="99" path="uipicts/WallholeFraming/ui_thres_sect_3_T2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="100" path="uipicts/WallholeFraming/ui_thres_sect_4.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="101" path="uipicts/WallholeFraming/ui_thres_sect_4_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="102" path="uipicts/WallholeFraming/ui_thres_sect_4_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="103" path="uipicts/WallholeFraming/ui_thres_sect_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="104" path="uipicts/WallholeFraming/ui_thres_sect_1_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="105" path="uipicts/WallholeFraming/ui_thres_sect_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="106" path="uipicts/WallholeFraming/ui_trim_sect_up_out_d.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="107" path="uipicts/WallholeFraming/ui_trim_sect_up_out_no_d.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="108" path="uipicts/WallholeFraming/ui_trim_sect_up_in_d.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="109" path="uipicts/WallholeFraming/ui_trim_sect_up_in_no_d.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="110" path="uipicts/WallholeFraming/ui_sill_geom_metall.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="111" path="uipicts/WallholeFraming/ui_sill_geom2_metall.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="112" path="uipicts/WallholeFraming/ui_sill_geom_massiv11.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="113" path="uipicts/WallholeFraming/ui_sill_geom2_massiv11.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="114" path="uipicts/WallholeFraming/ui_sill_geom_massiv12.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="115" path="uipicts/WallholeFraming/ui_sill_geom2_massiv11.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="116" path="uipicts/WallholeFraming/ui_sill_geom_massiv22.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="117" path="uipicts/WallholeFraming/ui_sill_geom2_massiv22.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="118" path="uipicts/WallholeFraming/ui_sill_type_door.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="119" path="uipicts/WallholeFraming/ui_corner_opening_left.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="120" path="uipicts/WallholeFraming/ui_corner_opening_rect_left.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="121" path="uipicts/WallholeFraming/ui_corner_opening_right.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="122" path="uipicts/WallholeFraming/ui_corner_opening_rect_right.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="123" path="uipicts/WallholeFraming/ui_nor_thres_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="124" path="uipicts/WallholeFraming/ui_nor_thres_3.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="125" path="uipicts/WallholeFraming/ui_nor_thres_6.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="126" path="uipicts/WallholeFraming/arrow_h.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="127" path="uipicts/WallholeFraming/ui_contour_pen.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="128" path="uipicts/WallholeFraming/ui_contour_pen_lock.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="129" path="uipicts/WallholeFraming/ui_simple_threshold.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="130" path="uipicts/WallholeFraming/ui_sill_block_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="131" path="uipicts/WallholeFraming/ui_sill_block_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="132" path="uipicts/WallholeFraming/ui_sill_dutch_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="133" path="uipicts/WallholeFraming/ui_sill_dutch_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="134" path="uipicts/WallholeFraming/ui_line_type.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="135" path="uipicts/WallholeFraming/ui_line_type_lock.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="136" path="uipicts/WallholeFraming/ui_sloping_ext_threshold.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="137" path="uipicts/WallholeFraming/ui_metal_threshold.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="138" path="uipicts/ui_warningsign.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="139" path="uipicts/Sill/ui_sill_leftovhg_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="140" path="uipicts/Sill/ui_sill_leftovhg_2_br.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="141" path="uipicts/Sill/ui_sill_rightovhg_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="142" path="uipicts/Sill/ui_sill_rightovhg_2_br.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="143" path="uipicts/Sill/uiSillPlanLeftovhgDoorOut.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="144" path="uipicts/Sill/uiSillPlanLeftovhgDoorOutBr.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="145" path="uipicts/Sill/uiSillPlanLeftovhgDoorOutNoboard.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="146" path="uipicts/Sill/uiSillPlanRightovhgDoorOut.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="147" path="uipicts/Sill/uiSillPlanRightovhgDoorOutBr.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="148" path="uipicts/Sill/uiSillPlanRightovhgDoorOutNoboard.png">
</GDLPict>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

]]></Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

]]></Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0"><Author>BIMobject</Author><License><Type>CC BY-ND</Type><Version>3.0</Version></License></Copyright><ParamSection SectVersion="25" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>25</Version>
		<AutoHotspots>no</AutoHotspots>
		<HoleBits>
			<WDBit_3DFrame/>
		</HoleBits>
		<StatBits>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Integer Name="AC_WallContours">
			<Description><![CDATA["Wall Contours (0-None,1-Full,2-Side,3-Length)"]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_Hole_Hotspot_Control">
			<Description><![CDATA["Hotspots 0-None,1-2D,2-3D,3-All"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="AC_Hole_Display_Option">
			<Description><![CDATA["Floor Plan Display Option"]]></Description>
			<Value>3</Value>
		</Integer>
		<Angle Name="AC_Hole_Position_Angle">
			<Description><![CDATA["Hole Position Angle"]]></Description>
			<Value>0</Value>
		</Angle>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Hole has Wall's Side Surface"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="AC_HoleMaterialCurved">
			<Description><![CDATA["Hole Surface's Split is Curved in Curved Walls"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="AC_WallType">
			<Description><![CDATA["Wall Type"]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_WindowInWallContour">
			<Description><![CDATA["Window in Wall Contour"]]></Description>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<Length Name="AC_WallContourPolygon">
			<Description><![CDATA["Wall Contour Polygon"]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="AC_Wall_Direction_Type">
			<Description><![CDATA["Wall Direction Type"]]></Description>
			<Value>0</Value>
		</Integer>
		<FillPattern Name="gs_new_symb_fill">
			<Description><![CDATA["New Wall Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</FillPattern>
		<PenColor Name="gs_new_symb_pen_Fg">
			<Description><![CDATA["New Wall Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_new_symb_pen_bg">
			<Description><![CDATA["New Wall Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<Length Name="gs_new_symb_width_r">
			<Description><![CDATA["New Wall Fill Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="gs_new_symb_width_l">
			<Description><![CDATA["New Wall Fill Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>

		<!-- gs_wallhole_geometry: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_wallhole_geometry">
			<Description><![CDATA["Wallhole Geometry"]]></Description>
		</Title>
		<Length Name="refWidth">
			<Description><![CDATA["Curved Wall - Reference Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="leftWidth">
			<Description><![CDATA["Left Offset from the Origo"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="rightWidth">
			<Description><![CDATA["Right Offset from the Origo"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="SymbolMid_shiftDy">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="iRevealType">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="iSillRevealType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="leftWallFrameRevealPnts">
			<Description><![CDATA["Left Reveal Points"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="rightWallFrameRevealPnts">
			<Description><![CDATA["Right Reveal Points"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="iRevealPointsIdx">
			<Description><![CDATA["Reveal Points Index"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="20" SecondDimension="0">
				<AVal Row="1">1</AVal>
				<AVal Row="2">1</AVal>
				<AVal Row="3">1</AVal>
				<AVal Row="4">1</AVal>
				<AVal Row="5">1</AVal>
				<AVal Row="6">1</AVal>
				<AVal Row="7">1</AVal>
				<AVal Row="8">1</AVal>
				<AVal Row="9">1</AVal>
				<AVal Row="10">1</AVal>
				<AVal Row="11">1</AVal>
				<AVal Row="12">1</AVal>
				<AVal Row="13">1</AVal>
				<AVal Row="14">1</AVal>
				<AVal Row="15">1</AVal>
				<AVal Row="16">1</AVal>
				<AVal Row="17">1</AVal>
				<AVal Row="18">1</AVal>
				<AVal Row="19">1</AVal>
				<AVal Row="20">1</AVal>
			</ArrayValues>
		</Integer>
		<Length Name="radSill">
			<Description><![CDATA["Curved Wall - Sill Radius"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="radBoard">
			<Description><![CDATA["Curved Wall - Board Radius"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="WOD">
			<Description><![CDATA["Curved Wall - Wall Center Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="elevationOffset">
			<Description><![CDATA["Elevation Offset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="includeBoxHeight">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="overSizeLeft">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="overSizeRight">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="overSizeUpper">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="overSizeLower">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_oversize_thk">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>

		<!-- gs_function_control_parameters: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_function_control_parameters">
			<Description><![CDATA["Function Control Parameters"]]></Description>
		</Title>
		<Boolean Name="bEnableSill">
			<Description><![CDATA["Enable/Disable Sill Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableBoard">
			<Description><![CDATA["Enable/Disable Board Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableThreshold">
			<Description><![CDATA["Enable/Disable Threshold Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bThresholdNotAvailableByOpTpye">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableCasing">
			<Description><![CDATA["Enable/Disable Casing Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableShutter">
			<Description><![CDATA["Enable/Disable Shutter Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableRail">
			<Description><![CDATA["Enable/Disable Rail in Doors"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableCustomCornerLeft">
			<Description><![CDATA["Enable/Disable Left Corner Column Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableCustomCornerRight">
			<Description><![CDATA["Enable/Disable Right Corner Column Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowCornerMitreLineUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowCasingOnLists">
			<Description><![CDATA["Show Casing on List View"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowSillOnLists">
			<Description><![CDATA["Show Sill on List View"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowBoardOnLists">
			<Description><![CDATA["Show Board on List View"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_SillTypeEnable">
			<Description><![CDATA["Sill Type Enable Mask"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>31</Value>
		</Integer>
		<Integer Name="gs_TresholdTypeEnable">
			<Description><![CDATA["Threshold Type Enable Mask"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>127</Value>
		</Integer>
		<Integer Name="gs_CasingOutTypeEnable">
			<Description><![CDATA["Casing Outside Type Enable"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_CasingInTypeEnable">
			<Description><![CDATA["Casing Inside Type Enable"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bDoorWithSidelightSupport">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_door_rail">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableApron">
			<Description><![CDATA["Enable/Disable Apron Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableCasingAtGanging">
			<Description><![CDATA["Enable/Disable Casing at Ganging Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_macro_control_parameters: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_macro_control_parameters">
			<Description><![CDATA["Macro Control Parameters"]]></Description>
		</Title>
		<Integer Name="gs_macro_version">
			<Description><![CDATA["Macro Version"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Integer Name="iWindowShape">
			<Description><![CDATA["Window Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="openingArchHeight">
			<Description><![CDATA["Arch Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="nArchResolution">
			<Description><![CDATA["Arch Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>32</Value>
		</Integer>
		<Length Name="smallRadiusEllips">
			<Description><![CDATA["Smaller radius of ellips arch"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="isWindow">
			<Description><![CDATA["Window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="Suppress_isWindow">
			<Description><![CDATA["Force to Door Type Object"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isEmptyOpening">
			<Description><![CDATA["Opening"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_IsCurved">
			<Description><![CDATA["Curved Window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bParalellInCurvedWalls">
			<Description><![CDATA["Parallel Opening in Curved Walls"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bCasingTolerance">
			<Description><![CDATA["Offset Casing with Tolerance Sizes"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bSillPlaneCut">
			<Description><![CDATA["Use Plane Cut for Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bBoardPlaneCut">
			<Description><![CDATA["Use Plane Cut for Board"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="lod2D_SillBoard">
			<Description><![CDATA["2D Detail Level - Sill and Board"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="lod2D_Treshold">
			<Description><![CDATA["2D Detail Level - Threshold"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="lod2D_Casing">
			<Description><![CDATA["2D Detail Level - Casing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="lod2D_sunShade">
			<Description><![CDATA["2D Detail Level - SunShade"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="lod2D_CornerColumn">
			<Description><![CDATA["2D Detail Level - Corner Column"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="lod3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="iLoD3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="lod3D_Sill">
			<Description><![CDATA["3D Detail Level - Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="lod3D_Board">
			<Description><![CDATA["3D Detail Level - Board"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="lod3D_Casing">
			<Description><![CDATA["3D Detail Level - Casing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="lod3D_sunShade">
			<Description><![CDATA["3D Detail Level - Sunshade"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bOpeningDirection">
			<Description><![CDATA["Opening Direction"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDisabeMirroring">
			<Description><![CDATA["Disable WindowMirroring"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iPanelType">
			<Description><![CDATA["Window Panel Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bShowEdgeHotspots">
			<Description><![CDATA["Show Hotspots at Jamb Extensions Edge"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bshowCasbSill">
			<Description><![CDATA["Show Casing below Sill on UI"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="ac_cw_debug">
			<Description><![CDATA["Corner Window Debug Function"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="ac_cw_function">
			<Description><![CDATA["Placement Type (1=CW,0=W)"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- ac_corner_window: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="ac_corner_window">
			<Description><![CDATA["Corner Window Function"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bLeftCornerFunction">
			<Description><![CDATA["Left Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="leftCornerAngle">
			<Description><![CDATA["Left Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>180</Value>
		</Angle>
		<Boolean Name="bLeftDiffConnWall">
			<Description><![CDATA["Left Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="leftConnWallThk">
			<Description><![CDATA["Left Connected Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bRightCornerFunction">
			<Description><![CDATA["Right Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iCornerConnTypeRight">
			<Description><![CDATA["Right Corner Connection Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCornerConnTypeLeft">
			<Description><![CDATA["Corner Connection Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_cc_width">
			<Description><![CDATA["Corner Column Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_cc_thk">
			<Description><![CDATA["Corner Column Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_cc_pr">
			<Description><![CDATA["Corner Column Projection"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_cc_endline">
			<Description><![CDATA["Corner Column Endline"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="rightCornerAngle">
			<Description><![CDATA["Right Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>180</Value>
		</Angle>
		<Boolean Name="bRightDiffConnWall">
			<Description><![CDATA["Right Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="rightConnWallThk">
			<Description><![CDATA["Right Connected Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="ac_corner_angle">
			<Description><![CDATA["Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Boolean Name="ac_diff_con_wall_thk">
			<Description><![CDATA["Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_con_wall_thk">
			<Description><![CDATA["Connecting Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_corner_column">
			<Description><![CDATA["Corner Column"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_options: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_options">
			<Description><![CDATA["Options"]]></Description>
		</Title>

		<!-- gs_window_sizes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sizes">
			<Description><![CDATA["Window Sizes"]]></Description>
		</Title>
		<Length Name="minUnitWidth">
			<Description><![CDATA["Minimal Unit Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="minUnitHeight">
			<Description><![CDATA["Minimal Unit Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_left">
			<Description><![CDATA["Tolerance Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_right">
			<Description><![CDATA["Tolerance Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_upper">
			<Description><![CDATA["Tolerance Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_lower">
			<Description><![CDATA["Tolerance Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_wallhole_width">
			<Description><![CDATA["Wallhole Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_wallhole_height">
			<Description><![CDATA["Wallhole Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_reveal_width">
			<Description><![CDATA["Reveal Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_reveal_height">
			<Description><![CDATA["Reveal Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_unit_width">
			<Description><![CDATA["Unit Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_unit_height">
			<Description><![CDATA["Unit Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Boolean Name="gs_wallhole_nominal">
			<Description><![CDATA["Set Wallhole Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_reveal_nominal">
			<Description><![CDATA["Set Reveal Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_unit_nominal">
			<Description><![CDATA["Set Unit Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_retain_nominal_sizes">
			<Description><![CDATA["Transfer Current Nominal Size to Selection"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="thresholdExtraHole3D">
			<Description><![CDATA["Threshold Extra Hole"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_window_frame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_frame">
			<Description><![CDATA["Window Frame"]]></Description>
		</Title>
		<Integer Name="gs_frame_style_m">
			<Description><![CDATA["Frame Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_frame_thk">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width">
			<Description><![CDATA["Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.07</Value>
		</Length>
		<Length Name="gs_frame_width_lower">
			<Description><![CDATA["Bottom Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.07</Value>
		</Length>
		<Boolean Name="gs_fsill">
			<Description><![CDATA["Bottom Frame at Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_window_sash: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sash">
			<Description><![CDATA["Sash Frame"]]></Description>
		</Title>
		<Length Name="gs_sash_thk">
			<Description><![CDATA["Sash Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_sash_width">
			<Description><![CDATA["Sash Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_glass_thk">
			<Description><![CDATA["Glass Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>

		<!-- gs_trim_outside: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_trim_outside">
			<Description><![CDATA["Casing Outside"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="gs_trimtype_out">
			<Description><![CDATA["Casing Type Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Rectangular"]]></Value>
		</String>
		<Integer Name="gs_trimtype_out_int">
			<Description><![CDATA["Casing Type Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCasingHeadTypeOut">
			<Description><![CDATA["Outside Casing Head Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bArchitraveCapital">
			<Description><![CDATA["Architrave Capital"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iArchitraveCapitalType">
			<Description><![CDATA["Architrave Capital Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="architraveCapitalWidth">
			<Description><![CDATA["Architrave Capital Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Boolean Name="bCasingBottomOutside">
			<Description><![CDATA["Outside Bottom Casing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_trim_outside_uniform">
			<Description><![CDATA["Uniform Casing Widths"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_tw_right_out">
			<Description><![CDATA["Width Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_tw_left_out">
			<Description><![CDATA["Width Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_tw_top_out">
			<Description><![CDATA["Width Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_tw_bottom_out">
			<Description><![CDATA["Width Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_trim_thk_out">
			<Description><![CDATA["Thickness on Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.019</Value>
		</Length>
		<Length Name="gs_trim_width_out">
			<Description><![CDATA["Thickness in Wallhole"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_trim_offs_out">
			<Description><![CDATA["Offset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trimov_top_left_out">
			<Description><![CDATA["Top Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trimov_top_right_out">
			<Description><![CDATA["Top Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trimov_bot_left_out">
			<Description><![CDATA["Bottom Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trimov_bot_right_out">
			<Description><![CDATA["Bottom Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="casingOverhangBottomSideOut">
			<Description><![CDATA["Bottom Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Boolean Name="gs_trimb_atframe_out">
			<Description><![CDATA["Casing at Frame B. Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_show_cover_out">
			<Description><![CDATA["Cover Outer Wall Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_trim_jambext_nosing_out">
			<Description><![CDATA["Nosing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>

		<!-- gs_trim_inside: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_trim_inside">
			<Description><![CDATA["Casing Inside"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="gs_trimtype_in">
			<Description><![CDATA["Casing Type Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Rectangular"]]></Value>
		</String>
		<Integer Name="gs_trimtype_in_int">
			<Description><![CDATA["Casing Type Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_trim_below_board">
			<Description><![CDATA["Casing below Board"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_inside_uniform">
			<Description><![CDATA["Uniform Casing Widths"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_tw_right_in">
			<Description><![CDATA["Width Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_tw_left_in">
			<Description><![CDATA["Width Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_tw_top_in">
			<Description><![CDATA["Width Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_tw_bottom_in">
			<Description><![CDATA["Width Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_trim_thk_in">
			<Description><![CDATA["Thickness on Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.019</Value>
		</Length>
		<Length Name="gs_trim_width_in">
			<Description><![CDATA["Thickness in Wallhole"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_trim_offs_in">
			<Description><![CDATA["Offset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trimov_top_left_in">
			<Description><![CDATA["Top Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trimov_top_right_in">
			<Description><![CDATA["Top Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trimov_bot_left_in">
			<Description><![CDATA["Casing Overhang Bottom Left Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trimov_bot_right_in">
			<Description><![CDATA["Bottom Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_trim_atframe_out">
			<Description><![CDATA["Casing at Frame Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_atframe_in">
			<Description><![CDATA["Casing at Frame Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_stack_left">
			<Description><![CDATA["Casing at Ganging Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_stack_right">
			<Description><![CDATA["Casing at Ganging Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_stack_bottom">
			<Description><![CDATA["Casing at Ganging Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_stack_top">
			<Description><![CDATA["Casing at Ganging Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_show_cover_in">
			<Description><![CDATA["Cover Inner Wall Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_trim_jambext_nosing_in">
			<Description><![CDATA["Nosing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Boolean Name="gs_apron">
			<Description><![CDATA["Apron"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_apron_thk">
			<Description><![CDATA["Apron Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_apron_width">
			<Description><![CDATA["Apron Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.0508</Value>
		</Length>

		<!-- gs_sill_outside: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_sill_outside">
			<Description><![CDATA["Sill"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_sill_outside_sl_left">
			<Description><![CDATA["Sill - Sidelight Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_sill_outside_sl_right">
			<Description><![CDATA["Sill - Sidelight Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_sill_oversize">
			<Description><![CDATA["Sill / Mounting Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iSillType">
			<Description><![CDATA["Type of the Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_sill_thk">
			<Description><![CDATA["Sill Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_sill_endthk">
			<Description><![CDATA["Sill Front Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.015</Value>
		</Length>
		<Length Name="gs_sill_elev">
			<Description><![CDATA["Sill Elevation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.005</Value>
		</Length>
		<Boolean Name="gs_sill_drip">
			<Description><![CDATA["Sill Drip"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_sill_dripnos">
			<Description><![CDATA["Sill Drip Overlap"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="gs_sill_dripwidth">
			<Description><![CDATA["Sill Drip Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="gs_sill_nosing">
			<Description><![CDATA["Sill Nosing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Angle Name="gs_sill_angle">
			<Description><![CDATA["Sill Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Angle>
		<String Name="gs_sill_edge">
			<Description><![CDATA["Sill Edge Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="gs_sill_element_thk">
			<Description><![CDATA["Sill Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sill_ovhg_left">
			<Description><![CDATA["Sill Overhang Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.075</Value>
		</Length>
		<Length Name="gs_sill_ovhg_right">
			<Description><![CDATA["Sill Overhang Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.075</Value>
		</Length>
		<Length Name="gs_sill_slip_in">
			<Description><![CDATA["Sill Slip-in Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sill_slip_wall">
			<Description><![CDATA["Sill Slip from Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sill_holeDepthBehind">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sill_width">
			<Description><![CDATA["Width of Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="gs_sill_topWidth">
			<Description><![CDATA["Sill Top Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_sill_topHeight">
			<Description><![CDATA["Sill Top Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Boolean Name="gs_sill_curved">
			<Description><![CDATA["Sill is Curved in Curved Walls"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sill_ins_below">
			<Description><![CDATA["Insulation below Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_sill_ins_use_wall_skin">
			<Description><![CDATA["Use Wall Insulation Skin"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iBrickSilldetlevel">
			<Description><![CDATA["Brick Sill 3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_brick_sill_br_thk">
			<Description><![CDATA["Brick Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.065</Value>
		</Length>
		<Length Name="gs_brick_sill_mort_thk">
			<Description><![CDATA["Mortar Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.015</Value>
		</Length>

		<!-- gs_board_inside: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_board_inside">
			<Description><![CDATA["Board"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_board_inside_sl_left">
			<Description><![CDATA["Board - Sidelight Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_board_inside_sl_right">
			<Description><![CDATA["Board - Sidelight Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_board_thk">
			<Description><![CDATA["Board Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_board_nosing">
			<Description><![CDATA["Board Nosing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Angle Name="gs_board_angle">
			<Description><![CDATA["Board Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="gs_board_ovhg_left">
			<Description><![CDATA["Board Overhang Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.075</Value>
		</Length>
		<Length Name="gs_board_ovhg_right">
			<Description><![CDATA["Board Overhang Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.075</Value>
		</Length>
		<Length Name="gs_board_slip_in">
			<Description><![CDATA["Board Slip-in Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_board_width">
			<Description><![CDATA["Board Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.33</Value>
		</Length>
		<Boolean Name="gs_board_curved">
			<Description><![CDATA["Board is Curved in Curved Walls"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bBoardInPolyWall">
			<Description><![CDATA["Board in Polygonal Walls"]]></Description>
			<Value>0</Value>
		</Boolean>

		<!-- bThreshold: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bThreshold">
			<Description><![CDATA["Threshold"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iThresholdType">
			<Description><![CDATA["Threshold Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_treshold_inFloor">
			<Description><![CDATA["Threshold in Floor"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_treshold_thk">
			<Description><![CDATA["Threshold Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_treshold_width">
			<Description><![CDATA["Threshold Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Angle Name="gs_treshold_angle">
			<Description><![CDATA["Threshold Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="gs_treshold_ext_hgt">
			<Description><![CDATA["Threshold External Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_treshold_nosing">
			<Description><![CDATA["Threshold Nosing Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_treshold_nosing_2">
			<Description><![CDATA["Threshold Nosing Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_treshold_ovhg">
			<Description><![CDATA["Side Overhang Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_treshold_ovhg_2">
			<Description><![CDATA["Side Overhang Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- bSunshade: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bSunshade">
			<Description><![CDATA["Sunshade"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_sunShade_iType">
			<Description><![CDATA["Sunshade Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_sunShade_bModifyRevealSize">
			<Description><![CDATA["Modify Reveal Size With Casing And Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_sunShade_winMountingCorr">
			<Description><![CDATA["Window Mounting Correction"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sunShade_winMountingCorrTop">
			<Description><![CDATA["Window Mounting Correction Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_sunShade_typeEnable">
			<Description><![CDATA["Enabled Sunshade Tpyes"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>511</Value>
		</Integer>
		<Integer Name="gs_sunShade_iCashedEnableTypes">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<Boolean Name="gs_sunShade_bChangeEnabledTypes">
			<Description><![CDATA["Change Enabled Types"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_shutter_nPanels">
			<Description><![CDATA["Number of Panels"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_shutter_nPanels2">
			<Description><![CDATA["Number of Panels 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_shutter_panelPos">
			<Description><![CDATA["Panel Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Symmetric"]]></Value>
		</String>
		<Integer Name="gs_shutter_iPanelPos">
			<Description><![CDATA["Panel Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_sunShade_bAutomaticHeight">
			<Description><![CDATA["Automatic Shutter Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_sunShade_height">
			<Description><![CDATA["Panel Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="gs_shutter_innerOffset">
			<Description><![CDATA["Inner Offset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutter_closingDepth">
			<Description><![CDATA["Closing Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_shutter_bExtraFrame">
			<Description><![CDATA["Extra Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutter_extraFrameWidth">
			<Description><![CDATA["Extra Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_shutter_extraFrameThk">
			<Description><![CDATA["Extra Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<String Name="gs_slidingShutter_cover">
			<Description><![CDATA["Cover Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["None"]]></Value>
		</String>
		<Integer Name="gs_slidingShutter_iCover">
			<Description><![CDATA["Cover Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_slidingShutter_railWidth">
			<Description><![CDATA["Rail Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.003</Value>
		</Length>
		<Length Name="gs_slidingShutter_stickLength">
			<Description><![CDATA["Hanging Stick Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_slidingShutter_stickRad">
			<Description><![CDATA["Hanging Stick Radius"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_slidingShutter_panelDist">
			<Description><![CDATA["Panel Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="gs_foldingShutter_stacking">
			<Description><![CDATA["Stacking Direction"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Inside"]]></Value>
		</String>
		<Integer Name="gs_foldingShutter_iStacking">
			<Description><![CDATA["Stacking Direction"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_foldingShutter_ovhg">
			<Description><![CDATA["Outside Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_outFoldingShutter_panelIn">
			<Description><![CDATA["Inner Panel Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-0.05</Value>
		</Length>
		<Boolean Name="gs_shutter_opened">
			<Description><![CDATA["Open in 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="gs_shutter_opAngle">
			<Description><![CDATA["3D Opening Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>180</Value>
		</Angle>
		<Length Name="gs_shutter_opLength">
			<Description><![CDATA["3D Opening Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutter_closedLength">
			<Description><![CDATA["3D Closed Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutter_opLength_1">
			<Description><![CDATA["3D Opening Length 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutter_opLength_2">
			<Description><![CDATA["3D Opening Length 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutter_opHeight">
			<Description><![CDATA["3D Opening Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="gs_shutter_closedHeight">
			<Description><![CDATA["3D Closed Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_sunShade_bShowIn2D">
			<Description><![CDATA["Show 2D Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sunShade_bShowOpline">
			<Description><![CDATA["Show Opening Lines on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_shutterPanelTitle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutterPanelTitle">
			<Description><![CDATA["Panel Parameters"]]></Description>
		</Title>
		<String Name="gs_shutPanel_type">
			<Description><![CDATA["Panel Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="gs_shutPanel_iType">
			<Description><![CDATA["Panel Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cust_shutterPanel">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="gs_shutPanel_Thk">
			<Description><![CDATA["Panel Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_shutPanel_frameWidth">
			<Description><![CDATA["Panel Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Boolean Name="gs_shutPanel_BDiffBottomFrame">
			<Description><![CDATA["Different Bottom Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutPanel_frameWidthBottom">
			<Description><![CDATA["Frame Width Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Boolean Name="gs_shutPanel_bAutomaticWidth">
			<Description><![CDATA["Automatic Shutter Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_shutPanel_panelWidth">
			<Description><![CDATA["Panel Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutPanel_fieldThk">
			<Description><![CDATA["Panel Fill Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutPanel_louverThk">
			<Description><![CDATA["Louver Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutPanel_louverWidth">
			<Description><![CDATA["Louver Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Angle Name="gs_shutPanel_louverAngle">
			<Description><![CDATA["Louver Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>30</Value>
		</Angle>
		<Length Name="gs_shutPanel_midFrameHorW">
			<Description><![CDATA["Horizontal Frame Divider Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_shutPanel_midFrameVertW">
			<Description><![CDATA["Vertical Frame Divider Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Integer Name="gs_shutPanel_nHoleHor">
			<Description><![CDATA["Holes Number Horizontal"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>5</Value>
		</Integer>
		<Integer Name="gs_shutPanel_nHoleVert">
			<Description><![CDATA["Holes Number Vertical"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8</Value>
		</Integer>
		<Length Name="gs_shutPanel_holeRadius">
			<Description><![CDATA["Hole Radius"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutPanel_ZBoardW">
			<Description><![CDATA["Vertical Board Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_shutPanel_ZWidth">
			<Description><![CDATA["Z Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_shutPanel_ZThk">
			<Description><![CDATA["Z Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_shutPanel_boardThkVert">
			<Description><![CDATA["Vertical Boards Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_shutPanel_boardThkHor">
			<Description><![CDATA["Horizontal Boards Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_shutPanel_vertBoardW">
			<Description><![CDATA["Vertical Boards Approximate Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Length Name="gs_shutPanel_horBoardW">
			<Description><![CDATA["Horizontal Boards Approximate Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.115</Value>
		</Length>

		<!-- gs_shutRollingTitle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutRollingTitle">
			<Description><![CDATA["Rolling Shutter Parameters"]]></Description>
		</Title>
		<String Name="gs_shutRoll_placement">
			<Description><![CDATA["Rolling Shutter Placement"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["On Facade"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iPlacement">
			<Description><![CDATA["Rolling Shutter Placement"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_shutRoll_placementEnable">
			<Description><![CDATA["Enabled Placement Types"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>7</Value>
		</Integer>
		<String Name="gs_shutRoll_boxType">
			<Description><![CDATA["Box Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Rectangular"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iBoxType">
			<Description><![CDATA["Box Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_shutRoll_railPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["On Casing"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iRailPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_shutRoll_showCasingBehind">
			<Description><![CDATA["Show Casing behind Sunshade"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_shutRoll_cutWallBehind">
			<Description><![CDATA["Insulation behind Box"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_shutRoll_bIncludeBoxHeight">
			<Description><![CDATA["Include Height in Wallhole Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutRoll_boxHeight">
			<Description><![CDATA["Box Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="gs_shutRoll_boxWidth">
			<Description><![CDATA["Box Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Angle Name="gs_shutRoll_boxAngle">
			<Description><![CDATA["Box Top Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</Angle>
		<String Name="gs_shutRoll_boxDefaultSize">
			<Description><![CDATA["Box Default Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Reveal Width"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iBoxDefaultSize">
			<Description><![CDATA["Box Default Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_shutRoll_boxOffsetLeft">
			<Description><![CDATA["Box Left Offset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_boxOffsetRight">
			<Description><![CDATA["Box Right Offset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_railDepth">
			<Description><![CDATA["Depth of Rails"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.0725</Value>
		</Length>
		<Length Name="gs_shutRoll_distFromWall">
			<Description><![CDATA["Distance from Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_distFromHead">
			<Description><![CDATA["Distance from Header"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_segmentWidth">
			<Description><![CDATA["Slat Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>

		<!-- gs_shutLamTitle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutLamTitle">
			<Description><![CDATA["Venetian Blinds Parameters"]]></Description>
		</Title>
		<String Name="gs_shutLam_placement">
			<Description><![CDATA["Venetian Blinds Placement"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Fixed on Facade"]]></Value>
		</String>
		<Integer Name="gs_shutLam_iPlacement">
			<Description><![CDATA["Venetian Blinds Placement"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_shutLam_placementEnable">
			<Description><![CDATA["Enabled Placement Types"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>7</Value>
		</Integer>
		<Boolean Name="gs_shutLam_cutWallBehind">
			<Description><![CDATA["Insulation behind box"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutLam_boxHeight">
			<Description><![CDATA["Box Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="gs_shutLam_boxWidth">
			<Description><![CDATA["Box Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="gs_shutLam_bOpenBox">
			<Description><![CDATA["Opened Box"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_shutLam_bRail">
			<Description><![CDATA["Rail"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="gs_shutLam_railPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["On Casing"]]></Value>
		</String>
		<Integer Name="gs_shutLam_iRailPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_shutLam_showCasingBehind">
			<Description><![CDATA["Show Casing behind Sunshade"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutLam_coverWidth">
			<Description><![CDATA["Cover Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam_distFromWall">
			<Description><![CDATA["Distance from Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam_distFromHead">
			<Description><![CDATA["Distance from Header"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam_segmentWidth">
			<Description><![CDATA["Segment Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Angle Name="gs_shutLam_rotation">
			<Description><![CDATA["Rotation Angle of Slats"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Angle>

		<!-- gs_shutLamTitle2: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutLamTitle2">
			<Description><![CDATA["Rolling Shutter Parameters"]]></Description>
		</Title>
		<Length Name="gs_shutLam2_boxHeight">
			<Description><![CDATA["Box Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_boxWidth">
			<Description><![CDATA["Box Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_distFromWindow">
			<Description><![CDATA["Distance from Window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_distFromHead">
			<Description><![CDATA["Distance from Header"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_axisFromHead">
			<Description><![CDATA["Box Axis Height from Header"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam2_segmentWidth">
			<Description><![CDATA["Segment Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Angle Name="gs_shutLam2_rotation">
			<Description><![CDATA["Rotation Angle of Slats"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Angle>

		<!-- bMasonryArch: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bMasonryArch">
			<Description><![CDATA["Masonry Arch"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_wido_sill">
			<Description><![CDATA["Reveal Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-9999</Value>
		</Length>
		<Length Name="AC_wido_sill">
			<Description><![CDATA["Reveal Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<String Name="gs_reveal_type">
			<Description><![CDATA["Outer Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Negative Reveal"]]></Value>
		</String>
		<String Name="gs_reveal_double_innerType">
			<Description><![CDATA["Inner Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Negative Reveal"]]></Value>
		</String>
		<Length Name="gs_reveal_left">
			<Description><![CDATA["Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_right">
			<Description><![CDATA["Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="revealInnerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="revealInnerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_reveal_top">
			<Description><![CDATA["Head Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_bottom">
			<Description><![CDATA["Sill Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_bottom_sL">
			<Description><![CDATA["Sill Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_bottom_sR">
			<Description><![CDATA["Sill Depth Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="original_gs_reveal_bottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerTop">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerBottom">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_reveal_double_innerTop">
			<Description><![CDATA["Inner Head Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_double_innerBottom">
			<Description><![CDATA["Inner Sill Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_double_innerBottom_sL">
			<Description><![CDATA["Inner Sill Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_double_innerBottom_sR">
			<Description><![CDATA["Inner Sill Depth Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_outer_jamb_depth">
			<Description><![CDATA["Outer Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Angle Name="gs_reveal_left_angle">
			<Description><![CDATA["Angle Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_right_angle">
			<Description><![CDATA["Angle Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_top_angle">
			<Description><![CDATA["Upper Side Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_bottom_angle">
			<Description><![CDATA["Bottom Side Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_outerLeft_angle">
			<Description><![CDATA["Outer Angle Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_outerRight_angle">
			<Description><![CDATA["Outer Angle Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_outerTop_angle">
			<Description><![CDATA["Outer Angle Upper Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_outerBottom_angle">
			<Description><![CDATA["Outer Angle Bottom Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Length Name="gs_reveal_left_sL">
			<Description><![CDATA["Lower Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_right_sR">
			<Description><![CDATA["Lower Jamb Depth Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_double_innerLeft_sL">
			<Description><![CDATA["Inner Lower Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_double_innerRight_sR">
			<Description><![CDATA["Inner Lower Jamb Depth Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_mountingFrame">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_mountingFrame_depth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_top">
			<Description><![CDATA["Mounting Frame Width Upper"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_bottom">
			<Description><![CDATA["Mounting Frame Width Bottom"]]></Description>
			<Value>0</Value>
		</Length>

		<!-- gs_turn_plaster: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_turn_plaster">
			<Description><![CDATA["Turn Plaster"]]></Description>
		</Title>
		<Boolean Name="gs_turn_plaster_show_3D">
			<Description><![CDATA["Show in 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="nSkinTurnOut">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nSkinTurnIn">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="thkPlasterAtSillLeft">
			<Description><![CDATA["Plaster Thickness at Sill - Left Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtSillRight">
			<Description><![CDATA["Plaster Thickness at Sill - Right Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtSillTop">
			<Description><![CDATA["Plaster Thickness at Sill - Top Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtSillBottom">
			<Description><![CDATA["Plaster Thickness at Sill - Bottom Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardLeft">
			<Description><![CDATA["Plaster Thickness at Board - Left Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardRight">
			<Description><![CDATA["Plaster Thickness at Board - Right Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardTop">
			<Description><![CDATA["Plaster Thickness at Board - Top Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardBottom">
			<Description><![CDATA["Plaster Thickness at Board - Bottom Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtSillSlLeft">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtSillSlLeftBottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtSillSlRight">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtSillSlRightBottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardSlLeft">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardSlLeftBottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardSlRight">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardSlRightBottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_window_oversize: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_oversize">
			<Description><![CDATA["Oversize"]]></Description>
		</Title>
		<Length Name="gs_left_oversize">
			<Description><![CDATA["Left Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_right_oversize">
			<Description><![CDATA["Right Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_upper_oversize">
			<Description><![CDATA["Upper Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_lower_oversize">
			<Description><![CDATA["Lower Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_window_stack: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_stack">
			<Description><![CDATA["Ganging"]]></Description>
		</Title>
		<Boolean Name="gs_stack_left">
			<Description><![CDATA["Connection on the Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_right">
			<Description><![CDATA["Connection on the Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_top">
			<Description><![CDATA["Connection on the Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_bottom">
			<Description><![CDATA["Connection on the Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_parapet_wall_inset: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_parapet_wall_inset">
			<Description><![CDATA["Wall Inset"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_parapet_inset_thk">
			<Description><![CDATA["Depth of Inset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D and Section Representation"]]></Description>
		</Title>
		<Boolean Name="bShowAddHotspots">
			<Description><![CDATA["Show Additional Hotspots"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_pen_2D">
			<Description><![CDATA["Symbol Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_frame_pen_cont">
			<Description><![CDATA["Corner Column Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_trim_pen_cont">
			<Description><![CDATA["Casing Cut Line Pen on Both Sides"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<String Name="gs_wcont_line">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Off"]]></Value>
		</String>
		<Integer Name="iWallContourLine">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_bFills">
			<Description><![CDATA["Use Fills"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_bFills_Wallhole">
			<Description><![CDATA["Fill on Wallhole (-1: not set)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<FillPattern Name="gs_wallhole_fill">
			<Description><![CDATA["Plan Symbol Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_wallhole_pen_fg">
			<Description><![CDATA["Plan Symbol Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_wallhole_pen_bg">
			<Description><![CDATA["Plan Symbol Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_wallhole_fill_sl">
			<Description><![CDATA["Plan Symbol Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_wallhole_pen_sl_fg">
			<Description><![CDATA["Plan Symbol Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_wallhole_pen_sl_bg">
			<Description><![CDATA["Plan Symbol Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<Boolean Name="gs_sill_bFills">
			<Description><![CDATA["Sill Background Fill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<PenColor Name="gs_sill_wallhole_pen_fg">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>
		<PenColor Name="gs_sill_wallhole_pen_bg">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<Boolean Name="gs_board_bFills">
			<Description><![CDATA["Board Background Fill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<PenColor Name="gs_board_wallhole_pen_fg">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>
		<PenColor Name="gs_board_wallhole_pen_bg">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<Boolean Name="gs_trim_bFills_in">
			<Description><![CDATA["Casing Inside Background Fill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<PenColor Name="gs_trim_wallhole_pen_fg_in">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>
		<PenColor Name="gs_trim_wallhole_pen_bg_in">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<Boolean Name="gs_trim_bFills_out">
			<Description><![CDATA["Casing Outside Background Fill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<PenColor Name="gs_trim_wallhole_pen_fg_out">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>
		<PenColor Name="gs_trim_wallhole_pen_bg_out">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_fillFr">
			<Description><![CDATA["Corner Column Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penFr_fg">
			<Description><![CDATA["Corner Column Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_penFr_bg">
			<Description><![CDATA["Corner Column Fill Bkg. Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_sill_pen_sectcont">
			<Description><![CDATA["Sill Section Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<PenColor Name="gs_sill_pen_2D">
			<Description><![CDATA["Sill 2D Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_sill_fill">
			<Description><![CDATA["Sill Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_sill_pen_fg">
			<Description><![CDATA["Sill Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_sill_pen_bg">
			<Description><![CDATA["Sill Section Fill Bkg. Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_sill_pen_ins_sectcont">
			<Description><![CDATA["Sill Section Insulation Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<FillPattern Name="gs_sill_fill_ins_fg">
			<Description><![CDATA["Sill Section Insulation Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</FillPattern>
		<PenColor Name="gs_sill_pen_ins_fg">
			<Description><![CDATA["Sill Section Insulation Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<PenColor Name="gs_sill_pen_ins_bg">
			<Description><![CDATA["Sill Section Insulation Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_board_pen_2D">
			<Description><![CDATA["Board 2D Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_board_fill">
			<Description><![CDATA["Board Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_board_pen_fg">
			<Description><![CDATA["Board Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_board_pen_bg">
			<Description><![CDATA["Board Section Fill Bkg. Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_board_pen_sectcont">
			<Description><![CDATA["Board Section Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<LineType Name="gs_sillTreshold_lineType">
			<Description><![CDATA["Threshold Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="gs_treshold_pen_sectcont">
			<Description><![CDATA["Threshold Section Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<FillPattern Name="gs_treshold_fill">
			<Description><![CDATA["Threshold Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_treshold_pen_fg">
			<Description><![CDATA["Threshold Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_treshold_pen_bg">
			<Description><![CDATA["Threshold Section Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_trim_fill_in">
			<Description><![CDATA["Casing Fill Type Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_trim_pen_fg_in">
			<Description><![CDATA["Casing Fill Pen Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_trim_pen_bg_in">
			<Description><![CDATA["Casing Fill Background Pen Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_trim_fill_out">
			<Description><![CDATA["Casing Fill Type Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_trim_pen_fg_out">
			<Description><![CDATA["Casing Fill Pen Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_trim_pen_bg_out">
			<Description><![CDATA["Casing Fill Background Pen Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<LineType Name="gs_sunShade_lineType">
			<Description><![CDATA["Sunshade Symbol Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="gs_sunShade_cutLinesPen">
			<Description><![CDATA["Sunshade Cut Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_unCutLinesPen">
			<Description><![CDATA["3D/Section Uncut Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<FillPattern Name="gs_sunShade_cutFillType">
			<Description><![CDATA["Sunshade Cut Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_sunShade_cutFillPen">
			<Description><![CDATA["Sunshade Cut Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_cutFillBackPen">
			<Description><![CDATA["Sunshade Cut Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>
		<FillPattern Name="gs_sunShade_insFillType">
			<Description><![CDATA["Sunshade Insulation Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</FillPattern>
		<PenColor Name="gs_sunShade_insFillPen">
			<Description><![CDATA["Sunshade Insulation Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_insFillBackPen">
			<Description><![CDATA["Sunshade Insulation Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<PenColor Name="gs_frame_pen">
			<Description><![CDATA["Frame Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<Integer Name="res">
			<Description><![CDATA["Curve Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<PenColor Name="gs_sill_pen_3D">
			<Description><![CDATA["Sill 3D Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<PenColor Name="gs_board_pen_3D">
			<Description><![CDATA["Board 3D Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>

		<!-- gs_window_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_material">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Material Name="gs_frame_mat">
			<Description><![CDATA["Corner Column Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Boolean Name="bLinkCasingSurfaces">
			<Description><![CDATA["Uniform Casing Surfaces"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="stored_material">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="1">
				<AVal Column="1" Row="1">-9999</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="1" Row="3">-9999</AVal>
				<AVal Column="1" Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<Material Name="gs_trim_in_mat">
			<Description><![CDATA["Interior Casing Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_trim_out_mat">
			<Description><![CDATA["Exterior Casing Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_sill_mat">
			<Description><![CDATA["Sill Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_brick_sill_mort_mat">
			<Description><![CDATA["Brick Sill Mortar Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Material>
		<Material Name="gs_board_mat">
			<Description><![CDATA["Board Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_apron_mat">
			<Description><![CDATA["Apron Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>59</Value>
		</Material>
		<Material Name="gs_treshold_mat">
			<Description><![CDATA["Threshold Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_treshold_metal_mat">
			<Description><![CDATA["Threshold Metal Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_shutPanel_materialMain">
			<Description><![CDATA["Shutter Panel Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_shutPanel_materialAcc">
			<Description><![CDATA["Shutter Panel Frame Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>52</Value>
		</Material>
		<Material Name="gs_shutRoll_matBox">
			<Description><![CDATA["Rolling Shutter Box Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="gs_shutRoll_matSegm">
			<Description><![CDATA["Rolling Shutter Blades Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>60</Value>
		</Material>
		<Material Name="gs_shutRoll_matRail">
			<Description><![CDATA["Rolling Shutter Rail Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>60</Value>
		</Material>
		<Material Name="gs_shutLam_matBox">
			<Description><![CDATA["Venetian Blinds Box Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="gs_shutLam_matLam">
			<Description><![CDATA["Venetian Blinds Segments Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>60</Value>
		</Material>
		<Material Name="gs_shutSliding_matRail">
			<Description><![CDATA["Sliding Shutter Rail Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="gs_rail_mat">
			<Description><![CDATA["Rail Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>120</Value>
		</Material>
		<Material Name="matCornerColumn">
			<Description><![CDATA["Corner Column Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>

		<!-- ac_details: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="ac_details">
			<Description><![CDATA["Computed Oversize Values"]]></Description>
		</Title>
		<Length Name="ac_left_oversize">
			<Description><![CDATA["AC Left Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_right_oversize">
			<Description><![CDATA["AC Right Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_upper_oversize">
			<Description><![CDATA["AC Upper Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_lower_oversize">
			<Description><![CDATA["AC Lower Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="gs_stDoorFrame">
			<Description><![CDATA["String Resource"]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["Style 1"]]></AVal>
				<AVal Row="2"><![CDATA["Style 2"]]></AVal>
				<AVal Row="3"><![CDATA["Style 3"]]></AVal>
			</ArrayValues>
		</String>
		<Integer Name="gs_ui_sub_tabpage">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="uiUsedPageIDs">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<String Name="uiUsedPageNames">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1"><![CDATA[""]]></AVal>
				<AVal Column="2" Row="1"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>

		<!-- gs_sidelight_left: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_sidelight_left">
			<Description><![CDATA["Left Sidelight"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_sidelight_width_left">
			<Description><![CDATA["Sidelight Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sidelight_WHole_width_left">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sidelight_parapet_hgt_left">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_sidelight_right: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_sidelight_right">
			<Description><![CDATA["Right Sidelight"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_sidelight_width_right">
			<Description><![CDATA["Sidelight Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sidelight_WHole_width_right">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sidelight_parapet_hgt_right">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_door_frame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_frame">
			<Description><![CDATA["Door Frame"]]></Description>
		</Title>
		<String Name="gs_frame_style">
			<Description><![CDATA["Frame Style"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Boolean Name="gs_frame_wthk">
			<Description><![CDATA["Frame Thickness = Wall Thickness"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_fthk">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_frame_thkin">
			<Description><![CDATA["Frame Thickness Inside"]]></Description>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_frame_width_left">
			<Description><![CDATA["Frame Width Left"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_width_right">
			<Description><![CDATA["Frame Width Right"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_ds_thk">
			<Description><![CDATA["Door Stop Thickness"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_ds_w">
			<Description><![CDATA["Door Stop Width"]]></Description>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_rebate_depth">
			<Description><![CDATA["Rebate Depth"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_rebate_width">
			<Description><![CDATA["Rebate Width"]]></Description>
			<Value>0.012</Value>
		</Length>

		<!-- gs_door_panel: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_panel">
			<Description><![CDATA["Door Panel"]]></Description>
		</Title>
		<Length Name="gs_leaf_thk">
			<Description><![CDATA["Leaf Thickness"]]></Description>
			<Value>0</Value>
		</Length>

		<!-- gs_string_resources: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_string_resources">
			<Description><![CDATA["String Resources"]]></Description>
		</Title>
		<String Name="stSillTypes">
			<Description><![CDATA["gs_sill_type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="17" SecondDimension="0">
				<AVal Row="1"><![CDATA["Timber Sill"]]></AVal>
				<AVal Row="2"><![CDATA["Brick Sill"]]></AVal>
				<AVal Row="3"><![CDATA["Stone Sill"]]></AVal>
				<AVal Row="4"><![CDATA["Ceramic Sill"]]></AVal>
				<AVal Row="5"><![CDATA["Eternit Sill"]]></AVal>
				<AVal Row="6"><![CDATA["Concrete Tub"]]></AVal>
				<AVal Row="7"><![CDATA["Aluminum Sill"]]></AVal>
				<AVal Row="8"><![CDATA[""]]></AVal>
				<AVal Row="9"><![CDATA[""]]></AVal>
				<AVal Row="10"><![CDATA[""]]></AVal>
				<AVal Row="11"><![CDATA[""]]></AVal>
				<AVal Row="12"><![CDATA[""]]></AVal>
				<AVal Row="13"><![CDATA[""]]></AVal>
				<AVal Row="14"><![CDATA[""]]></AVal>
				<AVal Row="15"><![CDATA["Simple Block"]]></AVal>
				<AVal Row="16"><![CDATA["Block Sill"]]></AVal>
				<AVal Row="17"><![CDATA["Dutch Profiled Sill"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stCasingType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["Simple"]]></AVal>
				<AVal Row="2"><![CDATA["Traditional"]]></AVal>
				<AVal Row="3"><![CDATA["Complex"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stCasingHeadType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1"><![CDATA["Type 1"]]></AVal>
				<AVal Row="2"><![CDATA["Type 2"]]></AVal>
				<AVal Row="3"><![CDATA["Type 3"]]></AVal>
				<AVal Row="4"><![CDATA["Type 4"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stArchitraveCapitalType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["Type 1"]]></AVal>
				<AVal Row="2"><![CDATA["Type 2"]]></AVal>
				<AVal Row="3"><![CDATA["Type 3"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stThresholdTypes">
			<Description><![CDATA["gs_door_treshold"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="19" SecondDimension="0">
				<AVal Row="1"><![CDATA["Off"]]></AVal>
				<AVal Row="2"><![CDATA["Normal"]]></AVal>
				<AVal Row="3"><![CDATA["Extended"]]></AVal>
				<AVal Row="4"><![CDATA["Extended Both Sides"]]></AVal>
				<AVal Row="5"><![CDATA["Beneath Panel"]]></AVal>
				<AVal Row="6"><![CDATA["Profiled"]]></AVal>
				<AVal Row="7"><![CDATA[""]]></AVal>
				<AVal Row="8"><![CDATA[""]]></AVal>
				<AVal Row="9"><![CDATA[""]]></AVal>
				<AVal Row="10"><![CDATA[""]]></AVal>
				<AVal Row="11"><![CDATA[""]]></AVal>
				<AVal Row="12"><![CDATA[""]]></AVal>
				<AVal Row="13"><![CDATA[""]]></AVal>
				<AVal Row="14"><![CDATA[""]]></AVal>
				<AVal Row="15"><![CDATA["Simple"]]></AVal>
				<AVal Row="16"><![CDATA["Sloping Extended"]]></AVal>
				<AVal Row="17"><![CDATA["Metal"]]></AVal>
				<AVal Row="18"><![CDATA["Extended to Opening Side"]]></AVal>
				<AVal Row="19"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSillUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="42" SecondDimension="0">
				<AVal Row="1"><![CDATA["Sill"]]></AVal>
				<AVal Row="2"><![CDATA["Sill Type"]]></AVal>
				<AVal Row="3"><![CDATA["Overhang Left"]]></AVal>
				<AVal Row="4"><![CDATA["Overhang Right"]]></AVal>
				<AVal Row="5"><![CDATA["Slip in Depth"]]></AVal>
				<AVal Row="6"><![CDATA["Is Curved in Curved Walls"]]></AVal>
				<AVal Row="7"><![CDATA["Sill Oversize"]]></AVal>
				<AVal Row="8"><![CDATA["Sill"]]></AVal>
				<AVal Row="9"><![CDATA["Fill Type"]]></AVal>
				<AVal Row="10"><![CDATA["Fill Pen"]]></AVal>
				<AVal Row="11"><![CDATA["Background Pen"]]></AVal>
				<AVal Row="12"><![CDATA["Brick"]]></AVal>
				<AVal Row="13"><![CDATA["Mortar"]]></AVal>
				<AVal Row="14"><![CDATA["3D Detail Level"]]></AVal>
				<AVal Row="15"><![CDATA["Sill Detail Level"]]></AVal>
				<AVal Row="16"><![CDATA["Check this option if the parapet height should be measured from the top of the sill."]]></AVal>
				<AVal Row="17"><![CDATA["Brick Thickness"]]></AVal>
				<AVal Row="18"><![CDATA["Mortar Thickness"]]></AVal>
				<AVal Row="19"><![CDATA["Sill Angle"]]></AVal>
				<AVal Row="20"><![CDATA["Sill Thickness"]]></AVal>
				<AVal Row="21"><![CDATA["Sill Nosing"]]></AVal>
				<AVal Row="22"><![CDATA["Sill Width"]]></AVal>
				<AVal Row="23"><![CDATA["Sill Elevation"]]></AVal>
				<AVal Row="24"><![CDATA["Sill End Thickness"]]></AVal>
				<AVal Row="25"><![CDATA["Sill Drip Length"]]></AVal>
				<AVal Row="26"><![CDATA["Sill Drip Width"]]></AVal>
				<AVal Row="27"><![CDATA["Section Attributes"]]></AVal>
				<AVal Row="28"><![CDATA["Insulation Section Attributes"]]></AVal>
				<AVal Row="29"><![CDATA["Contour Pen"]]></AVal>
				<AVal Row="30"><![CDATA["Sill Height"]]></AVal>
				<AVal Row="31"><![CDATA["Outer Edge"]]></AVal>
				<AVal Row="32"><![CDATA["Insulation below Sill"]]></AVal>
				<AVal Row="33"><![CDATA["Use Wall Insulation Skin"]]></AVal>
				<AVal Row="34"><![CDATA["Rear Hole Depth"]]></AVal>
				<AVal Row="35"><![CDATA["Upper Thickness"]]></AVal>
				<AVal Row="36"><![CDATA["Upper Width"]]></AVal>
				<AVal Row="37"><![CDATA["Sill Front Side Thickness"]]></AVal>
				<AVal Row="38"><![CDATA["Sill - Sidelight 1"]]></AVal>
				<AVal Row="39"><![CDATA["Sill - Sidelight 2"]]></AVal>
				<AVal Row="40"><![CDATA["Sill - Door"]]></AVal>
				<AVal Row="41"><![CDATA[""]]></AVal>
				<AVal Row="42"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stThresholdUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="13" SecondDimension="0">
				<AVal Row="1"><![CDATA["Threshold Type"]]></AVal>
				<AVal Row="2"><![CDATA["Side Overhang Outside"]]></AVal>
				<AVal Row="3"><![CDATA["Side Overhang Inside"]]></AVal>
				<AVal Row="4"><![CDATA["Threshold Thickness"]]></AVal>
				<AVal Row="5"><![CDATA["Threshold Nosing Outside"]]></AVal>
				<AVal Row="6"><![CDATA["Threshold Nosing Inside"]]></AVal>
				<AVal Row="7"><![CDATA["Threshold and Sill 2D"]]></AVal>
				<AVal Row="8"><![CDATA["Threshold"]]></AVal>
				<AVal Row="9"><![CDATA["Threshold"]]></AVal>
				<AVal Row="10"><![CDATA["Fill Type"]]></AVal>
				<AVal Row="11"><![CDATA["Fill Pen"]]></AVal>
				<AVal Row="12"><![CDATA["Background Pen"]]></AVal>
				<AVal Row="13"><![CDATA["Line Type"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stBoardUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="18" SecondDimension="0">
				<AVal Row="1"><![CDATA["Board"]]></AVal>
				<AVal Row="2"><![CDATA["Overhang Left"]]></AVal>
				<AVal Row="3"><![CDATA["Overhang Right"]]></AVal>
				<AVal Row="4"><![CDATA["Slip in Depth"]]></AVal>
				<AVal Row="5"><![CDATA["Is Curved in Curved Walls"]]></AVal>
				<AVal Row="6"><![CDATA["Board"]]></AVal>
				<AVal Row="7"><![CDATA["Fill Type"]]></AVal>
				<AVal Row="8"><![CDATA["Fill Pen"]]></AVal>
				<AVal Row="9"><![CDATA["Background Pen"]]></AVal>
				<AVal Row="10"><![CDATA["Board Angle"]]></AVal>
				<AVal Row="11"><![CDATA["Board Thickness"]]></AVal>
				<AVal Row="12"><![CDATA["Board Nosing"]]></AVal>
				<AVal Row="13"><![CDATA["In Polygonal Walls"]]></AVal>
				<AVal Row="14"><![CDATA["Board Width"]]></AVal>
				<AVal Row="15"><![CDATA["Section Attributes"]]></AVal>
				<AVal Row="16"><![CDATA["Contour Pen"]]></AVal>
				<AVal Row="17"><![CDATA["Board - Sidelight 1"]]></AVal>
				<AVal Row="18"><![CDATA["Board - Sidelight 2"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stCasingUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="49" SecondDimension="0">
				<AVal Row="1"><![CDATA["Inside"]]></AVal>
				<AVal Row="2"><![CDATA["Outside"]]></AVal>
				<AVal Row="3"><![CDATA["Increase Wallhole by Casing"]]></AVal>
				<AVal Row="4"><![CDATA["Contour Pen"]]></AVal>
				<AVal Row="5"><![CDATA["Inside"]]></AVal>
				<AVal Row="6"><![CDATA["Outside"]]></AVal>
				<AVal Row="7"><![CDATA["Fill Type"]]></AVal>
				<AVal Row="8"><![CDATA["Fill Pen"]]></AVal>
				<AVal Row="9"><![CDATA["Background Pen"]]></AVal>
				<AVal Row="10"><![CDATA["Cover Outer Wall"]]></AVal>
				<AVal Row="11"><![CDATA["Cover Inner Wall"]]></AVal>
				<AVal Row="12"><![CDATA["Casing Width Left Outside"]]></AVal>
				<AVal Row="13"><![CDATA["Casing Width Right Outside"]]></AVal>
				<AVal Row="14"><![CDATA["Casing Width Outside"]]></AVal>
				<AVal Row="15"><![CDATA["Casing Offset Outside"]]></AVal>
				<AVal Row="16"><![CDATA["Casing Thickness Outside"]]></AVal>
				<AVal Row="17"><![CDATA["Outer Nosing"]]></AVal>
				<AVal Row="18"><![CDATA["Casing Width Left Inside"]]></AVal>
				<AVal Row="19"><![CDATA["Casing Width Right Inside"]]></AVal>
				<AVal Row="20"><![CDATA["Head Type"]]></AVal>
				<AVal Row="21"><![CDATA["Architrave Capital"]]></AVal>
				<AVal Row="22"><![CDATA["Casing Thickness Inside"]]></AVal>
				<AVal Row="23"><![CDATA["Inner Nosing"]]></AVal>
				<AVal Row="24"><![CDATA["Casing Width Bottom Outside"]]></AVal>
				<AVal Row="25"><![CDATA["Casing Width Top Outside"]]></AVal>
				<AVal Row="26"><![CDATA["Casing Width Bottom Inside"]]></AVal>
				<AVal Row="27"><![CDATA["Casing Width Top Inside"]]></AVal>
				<AVal Row="28"><![CDATA["Casing Type Inside"]]></AVal>
				<AVal Row="29"><![CDATA["Overhang Top Outside"]]></AVal>
				<AVal Row="30"><![CDATA["Overhang Bottom Outs."]]></AVal>
				<AVal Row="31"><![CDATA["Casing Type Outside"]]></AVal>
				<AVal Row="32"><![CDATA["Overhang Top Inside"]]></AVal>
				<AVal Row="33"><![CDATA["Overhang Bottom Ins."]]></AVal>
				<AVal Row="34"><![CDATA["Trim Width Left Outside"]]></AVal>
				<AVal Row="35"><![CDATA["Trim Width Right Outside"]]></AVal>
				<AVal Row="36"><![CDATA["Trim Offset Outside"]]></AVal>
				<AVal Row="37"><![CDATA["Trim Thickness Outside"]]></AVal>
				<AVal Row="38"><![CDATA["Trim Width Outside"]]></AVal>
				<AVal Row="39"><![CDATA["Trim Thickness Top Inside"]]></AVal>
				<AVal Row="40"><![CDATA["Trim Thickness Left Inside"]]></AVal>
				<AVal Row="41"><![CDATA["Trim Thickness Right Inside"]]></AVal>
				<AVal Row="42"><![CDATA["Trim Offset Inside"]]></AVal>
				<AVal Row="43"><![CDATA["Trim Thickness Inside"]]></AVal>
				<AVal Row="44"><![CDATA["Trim Width Inside"]]></AVal>
				<AVal Row="45"><![CDATA["Trim Width Top Outside"]]></AVal>
				<AVal Row="46"><![CDATA["Trim Width Top Inside"]]></AVal>
				<AVal Row="47"><![CDATA["Casing below Sill"]]></AVal>
				<AVal Row="48"><![CDATA["Casing is not available with the actual reveal type."]]></AVal>
				<AVal Row="49"><![CDATA["Casing is not available with trapezoid and curved walls."]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stCasingUITooltip">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="24" SecondDimension="0">
				<AVal Row="1"><![CDATA["Outside Casing Width Side 1"]]></AVal>
				<AVal Row="2"><![CDATA["Outside Casing Width Side 2"]]></AVal>
				<AVal Row="3"><![CDATA["Outside Casing Width Top"]]></AVal>
				<AVal Row="4"><![CDATA["Outside Casing Width Bottom"]]></AVal>
				<AVal Row="5"><![CDATA["Outside Casing Thickness on Wall"]]></AVal>
				<AVal Row="6"><![CDATA["Outside Casing Thickness in Wallhole"]]></AVal>
				<AVal Row="7"><![CDATA["Outside Casing Offset"]]></AVal>
				<AVal Row="8"><![CDATA["Outside Casing Width"]]></AVal>
				<AVal Row="9"><![CDATA["Outside Top Casing Overhang"]]></AVal>
				<AVal Row="10"><![CDATA["Outside Side Casing Overhang"]]></AVal>
				<AVal Row="11"><![CDATA["Outer Nosing"]]></AVal>
				<AVal Row="12"><![CDATA["Inner Nosing"]]></AVal>
				<AVal Row="13"><![CDATA["Inside Casing Width Side 1"]]></AVal>
				<AVal Row="14"><![CDATA["Inside Casing Width Side 2"]]></AVal>
				<AVal Row="15"><![CDATA["Inside Casing Width Top"]]></AVal>
				<AVal Row="16"><![CDATA["Inside Casing Width Bottom"]]></AVal>
				<AVal Row="17"><![CDATA["Inside Casing Thickness on Wall"]]></AVal>
				<AVal Row="18"><![CDATA["Inside Casing Thickness in Wallhole"]]></AVal>
				<AVal Row="19"><![CDATA["Inside Casing Offset"]]></AVal>
				<AVal Row="20"><![CDATA["Inside Casing Width"]]></AVal>
				<AVal Row="21"><![CDATA["Inside Top Casing Overhang"]]></AVal>
				<AVal Row="22"><![CDATA["Inside Side Casing Overhang"]]></AVal>
				<AVal Row="23"><![CDATA["Architrave Capital Width"]]></AVal>
				<AVal Row="24"><![CDATA["Outside Bottom Casing Overhang"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stNORCasingTypes">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="18" SecondDimension="0">
				<AVal Row="1"><![CDATA["None"]]></AVal>
				<AVal Row="2"><![CDATA["Sill only"]]></AVal>
				<AVal Row="3"><![CDATA["Left only"]]></AVal>
				<AVal Row="4"><![CDATA["Left, Sill"]]></AVal>
				<AVal Row="5"><![CDATA["Right only"]]></AVal>
				<AVal Row="6"><![CDATA["Right, Sill"]]></AVal>
				<AVal Row="7"><![CDATA["Left, Right"]]></AVal>
				<AVal Row="8"><![CDATA["Left, Right, Sill"]]></AVal>
				<AVal Row="9"><![CDATA["Entablature only"]]></AVal>
				<AVal Row="10"><![CDATA["Entablature, Sill"]]></AVal>
				<AVal Row="11"><![CDATA["Entablature, Left"]]></AVal>
				<AVal Row="12"><![CDATA["Entablature, Left, Sill"]]></AVal>
				<AVal Row="13"><![CDATA["Entablature, Right"]]></AVal>
				<AVal Row="14"><![CDATA["Entablature, Right, Sill"]]></AVal>
				<AVal Row="15"><![CDATA["Entablature, Left, Right"]]></AVal>
				<AVal Row="16"><![CDATA["Entablature, Left, Right, Sill"]]></AVal>
				<AVal Row="17"><![CDATA["All"]]></AVal>
				<AVal Row="18"><![CDATA["Simple Casing"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stCasingTextNOR">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
				<AVal Row="2"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stBsilldetlevel">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Simple"]]></AVal>
				<AVal Row="2"><![CDATA["Detailed"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stCustomCornerUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="13" SecondDimension="0">
				<AVal Row="1"><![CDATA["Corner Connection Type"]]></AVal>
				<AVal Row="2"><![CDATA["Custom Corner Left"]]></AVal>
				<AVal Row="3"><![CDATA["Custom Corner Right"]]></AVal>
				<AVal Row="4"><![CDATA["Different Connecting Wall Thickness"]]></AVal>
				<AVal Row="5"><![CDATA["Corner Column Width"]]></AVal>
				<AVal Row="6"><![CDATA["Corner Column Thickness"]]></AVal>
				<AVal Row="7"><![CDATA["Corner Column Projection"]]></AVal>
				<AVal Row="8"><![CDATA["Left Corner Angle"]]></AVal>
				<AVal Row="9"><![CDATA["Right Corner Angle"]]></AVal>
				<AVal Row="10"><![CDATA["Left Connected Wall Thickness"]]></AVal>
				<AVal Row="11"><![CDATA["Right Connected Wall Thickness"]]></AVal>
				<AVal Row="12"><![CDATA[""]]></AVal>
				<AVal Row="13"><![CDATA["This feature doesn't work in curved or trapezoid walls"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stBoardInPolyWall">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSillEdge">
			<Description><![CDATA["gs_sill_edge"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Perpendicular"]]></AVal>
				<AVal Row="2"><![CDATA["Vertical"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSubTabpageToolTip">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Sub Tab Page Selection: General Settings, Attributes"]]></Value>
		</String>
		<String Name="stCutLinePenNote">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["3D/Uncut Line Pen for casing is the same as for the window frame."]]></Value>
		</String>
		<String Name="stSunShadeTypes">
			<Description><![CDATA["Sunshade Types"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="9" SecondDimension="0">
				<AVal Row="1"><![CDATA["None"]]></AVal>
				<AVal Row="2"><![CDATA["Decorative"]]></AVal>
				<AVal Row="3"><![CDATA["Regular"]]></AVal>
				<AVal Row="4"><![CDATA["Folding to Reveal"]]></AVal>
				<AVal Row="5"><![CDATA["Folding to Wall Face"]]></AVal>
				<AVal Row="6"><![CDATA["Sliding"]]></AVal>
				<AVal Row="7"><![CDATA["Rolling"]]></AVal>
				<AVal Row="8"><![CDATA["External Venetian Blinds"]]></AVal>
				<AVal Row="9"><![CDATA["Venetian Blinds in Lintel"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutterPanelPos">
			<Description><![CDATA["Panel Positions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="11" SecondDimension="0">
				<AVal Row="1"><![CDATA["Symmetric"]]></AVal>
				<AVal Row="2"><![CDATA["Left"]]></AVal>
				<AVal Row="3"><![CDATA["Right"]]></AVal>
				<AVal Row="4"><![CDATA["Mostly Left"]]></AVal>
				<AVal Row="5"><![CDATA["Mostly Right"]]></AVal>
				<AVal Row="6"><![CDATA["Left Top"]]></AVal>
				<AVal Row="7"><![CDATA["Left Bottom"]]></AVal>
				<AVal Row="8"><![CDATA["Right Top"]]></AVal>
				<AVal Row="9"><![CDATA["Right Bottom"]]></AVal>
				<AVal Row="10"><![CDATA["Double Top"]]></AVal>
				<AVal Row="11"><![CDATA["Double Bottom"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stFoldingShutterStacking">
			<Description><![CDATA["Folding Shutter Stacking Types"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Inside"]]></AVal>
				<AVal Row="2"><![CDATA["Outside"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSlidingShutterCover">
			<Description><![CDATA["Sliding Shutter Cover Types"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["None"]]></AVal>
				<AVal Row="2"><![CDATA["Z-Profile"]]></AVal>
				<AVal Row="3"><![CDATA["Box"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutterPanelTypes">
			<Description><![CDATA["Shutter Panel Types"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="11" SecondDimension="0">
				<AVal Row="1"><![CDATA["Style 1"]]></AVal>
				<AVal Row="2"><![CDATA["Style 2"]]></AVal>
				<AVal Row="3"><![CDATA["Style 3"]]></AVal>
				<AVal Row="4"><![CDATA["Style 4"]]></AVal>
				<AVal Row="5"><![CDATA["Style 5"]]></AVal>
				<AVal Row="6"><![CDATA["Style 6"]]></AVal>
				<AVal Row="7"><![CDATA["Style 7"]]></AVal>
				<AVal Row="8"><![CDATA["Style 8"]]></AVal>
				<AVal Row="9"><![CDATA["Style 9"]]></AVal>
				<AVal Row="10"><![CDATA["Style 10"]]></AVal>
				<AVal Row="11"><![CDATA["Custom"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutRollPlacement">
			<Description><![CDATA["Rolling Shutter Placement Types"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["On Facade"]]></AVal>
				<AVal Row="2"><![CDATA["To Window"]]></AVal>
				<AVal Row="3"><![CDATA["Behind Facade"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutRollBoxType">
			<Description><![CDATA["Rolling Shutter Box Types"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Rectangular"]]></AVal>
				<AVal Row="2"><![CDATA["Arched"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutRollBoxDefaultSize">
			<Description><![CDATA["Rolling Shutter Box Default Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["To Reveal Width"]]></AVal>
				<AVal Row="2"><![CDATA["To Wallhole Width"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutRollRailPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["On Casing"]]></AVal>
				<AVal Row="2"><![CDATA["On Wall"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutLamPlacement">
			<Description><![CDATA["Venetian Blinds Placement Types"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["On Facade"]]></AVal>
				<AVal Row="2"><![CDATA["To Window"]]></AVal>
				<AVal Row="3"><![CDATA["Behind Facade"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutLamRailPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["On Casing"]]></AVal>
				<AVal Row="2"><![CDATA["On Wall"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSunShadeUI">
			<Description><![CDATA["UI strings"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="52" SecondDimension="0">
				<AVal Row="1"><![CDATA["Type"]]></AVal>
				<AVal Row="2"><![CDATA["Number of Panels"]]></AVal>
				<AVal Row="3"><![CDATA["Left"]]></AVal>
				<AVal Row="4"><![CDATA["Right"]]></AVal>
				<AVal Row="5"><![CDATA["Panel Style"]]></AVal>
				<AVal Row="6"><![CDATA["Position"]]></AVal>
				<AVal Row="7"><![CDATA["3D Opening"]]></AVal>
				<AVal Row="8"><![CDATA["3D Opening Angle"]]></AVal>
				<AVal Row="9"><![CDATA["Open in 3D"]]></AVal>
				<AVal Row="10"><![CDATA["2D Symbol"]]></AVal>
				<AVal Row="11"><![CDATA["Divider Width"]]></AVal>
				<AVal Row="12"><![CDATA["Horizontal"]]></AVal>
				<AVal Row="13"><![CDATA["Vertical"]]></AVal>
				<AVal Row="14"><![CDATA["Automatic Shutter Height"]]></AVal>
				<AVal Row="15"><![CDATA["Shutter Height"]]></AVal>
				<AVal Row="16"><![CDATA["Approximate Board Width"]]></AVal>
				<AVal Row="17"><![CDATA["Board Width"]]></AVal>
				<AVal Row="18"><![CDATA["Extra Frame"]]></AVal>
				<AVal Row="19"><![CDATA["Hole Radius"]]></AVal>
				<AVal Row="20"><![CDATA["Holes Horizontal"]]></AVal>
				<AVal Row="21"><![CDATA["Holes Vertical"]]></AVal>
				<AVal Row="22"><![CDATA["Stacking Direction"]]></AVal>
				<AVal Row="23"><![CDATA["Tin Covering"]]></AVal>
				<AVal Row="24"><![CDATA["Custom Panel Name"]]></AVal>
				<AVal Row="25"><![CDATA["2D Symbol"]]></AVal>
				<AVal Row="26"><![CDATA["Line Type"]]></AVal>
				<AVal Row="27"><![CDATA["Show Opening Line"]]></AVal>
				<AVal Row="28"><![CDATA["Surfaces"]]></AVal>
				<AVal Row="29"><![CDATA["Frame"]]></AVal>
				<AVal Row="30"><![CDATA["Filling"]]></AVal>
				<AVal Row="31"><![CDATA["Rail"]]></AVal>
				<AVal Row="32"><![CDATA["Attributes"]]></AVal>
				<AVal Row="33"><![CDATA["Cut Lines Pen"]]></AVal>
				<AVal Row="34"><![CDATA["Uncut Lines Pen"]]></AVal>
				<AVal Row="35"><![CDATA["Cut Fill Type"]]></AVal>
				<AVal Row="36"><![CDATA["Cut Fill Pen"]]></AVal>
				<AVal Row="37"><![CDATA["Cut Fill Background Pen"]]></AVal>
				<AVal Row="38"><![CDATA["Placement"]]></AVal>
				<AVal Row="39"><![CDATA["Box Shape"]]></AVal>
				<AVal Row="40"><![CDATA["Box Bottom from Header"]]></AVal>
				<AVal Row="41"><![CDATA["Insulation behind Box"]]></AVal>
				<AVal Row="42"><![CDATA["Angle of Slats"]]></AVal>
				<AVal Row="43"><![CDATA["The Reveal Depth is not large enough to accommodate these settings. Sunshade cannot be generated."]]></AVal>
				<AVal Row="44"><![CDATA["Box"]]></AVal>
				<AVal Row="45"><![CDATA["Blades"]]></AVal>
				<AVal Row="46"><![CDATA["3D Opening Height"]]></AVal>
				<AVal Row="47"><![CDATA["Box Offset Left"]]></AVal>
				<AVal Row="48"><![CDATA["Box Offset Right"]]></AVal>
				<AVal Row="49"><![CDATA["Box Default Width"]]></AVal>
				<AVal Row="50"><![CDATA["Rail Position"]]></AVal>
				<AVal Row="51"><![CDATA["Show Casing behind Sunshade"]]></AVal>
				<AVal Row="52"><![CDATA["This structure is not available with the actual wallhole shape"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSunshadeTooltip">
			<Description><![CDATA["UI Tooltip strings"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="27" SecondDimension="0">
				<AVal Row="1"><![CDATA["Frame Thickness"]]></AVal>
				<AVal Row="2"><![CDATA["Frame Width"]]></AVal>
				<AVal Row="3"><![CDATA["Louver Angle"]]></AVal>
				<AVal Row="4"><![CDATA["Vertical Boards Thickness"]]></AVal>
				<AVal Row="5"><![CDATA["Filling Thickness"]]></AVal>
				<AVal Row="6"><![CDATA["Panel Thickness"]]></AVal>
				<AVal Row="7"><![CDATA["Horizontal Boards Thickness"]]></AVal>
				<AVal Row="8"><![CDATA["Inside Offset"]]></AVal>
				<AVal Row="9"><![CDATA["Closing Depth"]]></AVal>
				<AVal Row="10"><![CDATA["Extra Frame Thickness"]]></AVal>
				<AVal Row="11"><![CDATA["Extra Frame Width"]]></AVal>
				<AVal Row="12"><![CDATA["Outside Overhang"]]></AVal>
				<AVal Row="13"><![CDATA["Inner Panel Width"]]></AVal>
				<AVal Row="14"><![CDATA["Rail Width"]]></AVal>
				<AVal Row="15"><![CDATA["Box Top Angle"]]></AVal>
				<AVal Row="16"><![CDATA["Distance from Wall"]]></AVal>
				<AVal Row="17"><![CDATA["Rail Depth"]]></AVal>
				<AVal Row="18"><![CDATA["Box Depth"]]></AVal>
				<AVal Row="19"><![CDATA["Box Height"]]></AVal>
				<AVal Row="20"><![CDATA["Blades Width"]]></AVal>
				<AVal Row="21"><![CDATA["Distance from Header"]]></AVal>
				<AVal Row="22"><![CDATA["Cover Width"]]></AVal>
				<AVal Row="23"><![CDATA["Distance from Window"]]></AVal>
				<AVal Row="24"><![CDATA["Axis from Header"]]></AVal>
				<AVal Row="25"><![CDATA["Z Frame Width"]]></AVal>
				<AVal Row="26"><![CDATA["Z Frame Thickness"]]></AVal>
				<AVal Row="27"><![CDATA["Slat Width"]]></AVal>
			</ArrayValues>
		</String>

		<!-- gs_usa_parameters: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_usa_parameters">
			<Description><![CDATA["USA Parameters"]]></Description>
		</Title>
		<Boolean Name="bSillUSA">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_brick_sill">
			<Description><![CDATA["Brick Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="bBoardElevUsa">
			<Description><![CDATA["Board Elevation (USA)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="bBoardNnosUsa">
			<Description><![CDATA["Board Negative Nosing at Rebate Width Lower (USA)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="bSillNnosUsa">
			<Description><![CDATA["Sill Negative Nosing at Rebate Width Lower (USA)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_wt_m">
			<Description><![CDATA["Wall Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iDoorType">
			<Description><![CDATA["Type of the Door"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_rebw_lower">
			<Description><![CDATA["Rebate Width Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="stCasingTextUSA">
			<Description><![CDATA["Casing UI Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="7" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
				<AVal Row="2"><![CDATA[""]]></AVal>
				<AVal Row="3"><![CDATA[""]]></AVal>
				<AVal Row="4"><![CDATA[""]]></AVal>
				<AVal Row="5"><![CDATA[""]]></AVal>
				<AVal Row="6"><![CDATA[""]]></AVal>
				<AVal Row="7"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSillTextUSA">
			<Description><![CDATA["Sill UI Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="18" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
				<AVal Row="2"><![CDATA[""]]></AVal>
				<AVal Row="3"><![CDATA[""]]></AVal>
				<AVal Row="4"><![CDATA[""]]></AVal>
				<AVal Row="5"><![CDATA[""]]></AVal>
				<AVal Row="6"><![CDATA[""]]></AVal>
				<AVal Row="7"><![CDATA[""]]></AVal>
				<AVal Row="8"><![CDATA[""]]></AVal>
				<AVal Row="9"><![CDATA[""]]></AVal>
				<AVal Row="10"><![CDATA[""]]></AVal>
				<AVal Row="11"><![CDATA[""]]></AVal>
				<AVal Row="12"><![CDATA[""]]></AVal>
				<AVal Row="13"><![CDATA[""]]></AVal>
				<AVal Row="14"><![CDATA[""]]></AVal>
				<AVal Row="15"><![CDATA[""]]></AVal>
				<AVal Row="16"><![CDATA[""]]></AVal>
				<AVal Row="17"><![CDATA[""]]></AVal>
				<AVal Row="18"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Integer Name="iFrameStyle">
			<Description><![CDATA["Frame Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_threshold_usa">
			<Description><![CDATA["Door Threshold"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_threshold_nor">
			<Description><![CDATA["NOR Threshold"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_metal">
			<Description><![CDATA["Metal Window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_trim_offs_out_top">
			<Description><![CDATA["Trim Offset Out Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_trim_offs_out_bottom">
			<Description><![CDATA["Trim Offset Out Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="trim_offs_out_modify">
			<Description><![CDATA["Trim Offset Left-Right Modify Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_sectgar">
			<Description><![CDATA["Sectional Garage Door"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_sill_nosing2">
			<Description><![CDATA["Sill Angle at Brick Veneer Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="gs_sill_angle2">
			<Description><![CDATA["Sill Angle at Brick Veneer Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Integer Name="gs_win_type">
			<Description><![CDATA["Window Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="stCornerConnType">
			<Description><![CDATA["gs_connType"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["Frame"]]></AVal>
				<AVal Row="2"><![CDATA["Corner Column"]]></AVal>
				<AVal Row="3"><![CDATA["Glass"]]></AVal>
			</ArrayValues>
		</String>
		<Boolean Name="bUSARail">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iClosureType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_transom_display">
			<Description><![CDATA["Display as Transom"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iBoardInPolyWall">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bEnableCasingNORUI">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iNORCasingType">
			<Description><![CDATA["Casing Configuration"]]></Description>
			<Value>18</Value>
		</Integer>
		<Boolean Name="bEnableOutsideCasingSWEUI">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableInsideCasingSWEUI">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_casing_nor">
			<Description><![CDATA["NOR Casing"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_casing_che">
			<Description><![CDATA["CHE Casing"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bCasingUSA">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowSillUICHE">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowSillOversize">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_pocket_door_frame">
			<Description><![CDATA["Pocket Door Frame"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bLineCasingOffset">
			<Description><![CDATA["Show Line at Casing Offset"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="ifc_CasingDepth">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_CasingThickness">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Boolean Name="bTelescopic">
			<Description><![CDATA["Telescopic Door"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableSwitchableBottomCasing">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableWindowMounting">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bWinMounting">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
	</Parameters>
</ParamSection>
</Symbol>

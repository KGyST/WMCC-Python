<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="no" IsPlaceable="no" MainGUID="46D1E0D5-55D5-4F6C-8605-5F3690F5EFA3" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="34">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="no">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>B2970E4C-8680-4061-8670-2F4B638F3953</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["RollingShutter_WMCC"]]></MName>
		<MainGUID>50E33BA7-8732-448C-A414-469892028F32</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["VenetianBlinds_WMCC"]]></MName>
		<MainGUID>A562C2A2-0ED9-4944-849D-B0124CABEA72</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ShutterPanels_WMCC"]]></MName>
		<MainGUID>4E7F0DAC-EED1-41EE-ACA8-E3BBCD06FE08</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["RollingShutter_WMCC"]]></MName>
		<MainGUID>50E33BA7-8732-448C-A414-469892028F32</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["VenetianBlinds_WMCC"]]></MName>
		<MainGUID>A562C2A2-0ED9-4944-849D-B0124CABEA72</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ShutterPanels_WMCC"]]></MName>
		<MainGUID>4E7F0DAC-EED1-41EE-ACA8-E3BBCD06FE08</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["RollingShutter_WMCC"]]></MName>
		<MainGUID>50E33BA7-8732-448C-A414-469892028F32</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["VenetianBlinds_WMCC"]]></MName>
		<MainGUID>A562C2A2-0ED9-4944-849D-B0124CABEA72</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

LOD3D_SIMPLEPLANE	= 1
LOD3D_DETAILEDPLANE	= 2
LOD3D_SIMPLEPANEL	= 3
LOD3D_DETAILEDPANEL	= 4

dim sunshadepoly[]
sunshadepoly[1]	= 0
posSunShade		= 0
lengthSunShade	= 0

if lod3D_sunShade	= 0 then end

if bSunShadeNotAvailableByWindowShape then end

a = sunShadeLength3D
b = sunShadeHeight3D

pen gs_sunShade_unCutLinesPen
sect_fill gs_sunShade_cutFillType, gs_sunShade_cutFillBackPen, gs_sunShade_cutFillPen, gs_sunShade_cutLinesPen

bNoThickness = 0
if lod3D_sunShade = LOD3D_SIMPLEPLANE | lod3D_sunShade = LOD3D_DETAILEDPLANE then bNoThickness = 1

bSimplePanel = 0
if lod3D_sunShade = LOD3D_SIMPLEPLANE | lod3D_sunShade = LOD3D_SIMPLEPANEL then bSimplePanel = 1

if bNoThickness then
	panelThk = 0
else
	panelThk = gs_shutPanel_Thk
endif

unID = 10200
bDividerPlaneNeeded = 0
bFoldingDividerPlaneNeeded = 0

if WIDO_REVEAL_SIDE then
	addz WIDO_SILL + WIDO_FRAME_THICKNESS + gs_casingThkOnFacade
	mulz -1
else
	addz -WIDO_SILL - gs_casingThkOnFacade
endif

! ------------------------------------------------------------------------------
! Defining panel shape
! ------------------------------------------------------------------------------

	gs_shutPanel_iShape = PANELSHAPE_RECT

	if gs_sunShade_iType = SUNSHADE_DECORATIVE | gs_sunShade_iType = SUNSHADE_SHUTTER then
		if iWindowShape = SHAPE_ARCHED | iWindowShape = SHAPE_EYEBROWS then
			if gs_shutter_nPanels = 1 then
				gs_shutPanel_iShape = PANELSHAPE_FULLARCH
			else
				if gs_shutter_nPanels = 2 then
					gs_shutPanel_iShape = PANELSHAPE_HALFARCH
				endif
			endif
		endif
		if iWindowShape = SHAPE_HALFARCH & gs_shutter_nPanels = 1 then
			gs_shutPanel_iShape = PANELSHAPE_HALFARCH
		endif
!		if iWindowShape = SHAPE_PENTAGON then
!			if gs_shutter_nPanels = 1 then
!				gs_shutPanel_iShape = PANELSHAPE_PENTAGON
!			else
!				if gs_shutter_nPanels = 2 then
!					gs_shutPanel_iShape = PANELSHAPE_TRAPEZOID
!				endif
!			endif
!		endif
!		if iWindowShape = SHAPE_TRAPEZOID & gs_shutter_nPanels = 1 then
!			gs_shutPanel_iShape = PANELSHAPE_TRAPEZOID
!		endif
		if iWindowShape = SHAPE_ELLIPSEARCH then
			if gs_shutter_nPanels = 1 then
				gs_shutPanel_iShape = PANELSHAPE_ELLIPS
			endif
			if gs_shutter_nPanels = 2 then
				gs_shutPanel_iShape = PANELSHAPE_HALFELLIPS
			endif
		endif
	else
		gs_shutPanel_archHeight = 0			! set to zero in case of rectangular
	endif


! ------------------------------------------------------------------------------
! Going to type-specific subroutines
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_DECORATIVE								then gosub "Decorative_shutter"
if gs_sunShade_iType = SUNSHADE_SHUTTER									then gosub "Opening_shutter"
if gs_sunShade_iType = SUNSHADE_FOLDING	& not (bFoldingWarning)			then gosub "Folding_shutter"
if gs_sunShade_iType = SUNSHADE_OUTFOLDING & not (bOutfoldingWarning)	then gosub "Outfolding_shutter"
if gs_sunShade_iType = SUNSHADE_SLIDING									then gosub "Sliding_shutter"
if gs_sunShade_iType = SUNSHADE_ROLLING									then gosub "Rolling_shutter"
if gs_sunShade_iType = SUNSHADE_EXTVENETIAN								then gosub "Venetian_Blinds"
if gs_sunShade_iType = SUNSHADE_VENETIAN								then gosub "Venetian_Blinds"

del 1 + WIDO_REVEAL_SIDE


! ------------------------------------------------------------------------------
end posSunShade,
	lengthSunShade,
	sunshadepoly

! ------------------------------------------------------------------------------


! ==============================================================================
"Decorative_shutter":
! ==============================================================================

	if gs_sunShade_bAutomaticHeight then
		panelHeight = b
	else
		panelHeight = gs_sunShade_height
	endif
	panelWidth	= gs_shutPanel_panelWidth
	gs_shutter_innerOffset = 0

	if bCurvedWall & radSill < radBoard then
		if WIDO_REVEAL_SIDE then
			addz -WIDO_ORIG_DIST + WIDO_SILL + WIDO_FRAME_THICKNESS + radSill
		else
			addz WIDO_ORIG_DIST + WIDO_SILL + radSill
		endif

		if gs_shutter_nPanels = 2 | (gs_shutter_nPanels = 1 & gs_shutter_iPanelPos = PANELPOS_LEFT) then
			addz -radSill
			roty -asn((a/2) / radSill)
			addz radSill - distShutterWall

			roty 180-asn((panelWidth / 2) / radSill)
			gosub "callShutterPanel"
			del 4
		endif

		if gs_shutter_nPanels = 2 | (gs_shutter_nPanels = 1 & gs_shutter_iPanelPos = PANELPOS_RIGHT) then
			mulx -1
			addz -radSill
			roty -asn((a/2) / radSill)
			addz radSill - distShutterWall

			roty 180-asn((panelWidth / 2) / radSill)
			gosub "callShutterPanel"
			del 5
		endif

		del 1
	else
		mulz -1
		if gs_shutter_nPanels = 1 then
			if gs_shutter_iPanelPos = PANELPOS_LEFT then
				add -a/2, 0, distShutterWall
				mulx -1
			else	!right
				add a/2, 0, distShutterWall
			endif

			gosub "callShutterPanel"

			del 1 + (gs_shutter_iPanelPos = PANELPOS_LEFT)
		else
			add -a/2, 0, distShutterWall
			mulx -1
			gosub "callShutterPanel"
			del 2

			add a/2, 0, distShutterWall
			gosub "callShutterPanel"
			del 1
		endif
		del 1
	endif

return


! ==============================================================================
"Opening_shutter":
! ==============================================================================

	leftSlantedRevealMod = 0
	rightSlantedRevealMod = 0
	topSlantedRevealMod = 0
	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		leftSlantedRevealMod = min(slantedRevealDepth, gs_shutter_closingDepth + gs_shutter_bExtraFrame * gs_shutter_extraFrameThk) * tan(leftWallAngle)
		rightSlantedRevealMod = min(slantedRevealDepth, gs_shutter_closingDepth + gs_shutter_bExtraFrame * gs_shutter_extraFrameThk) * tan(rightWallAngle)
		topSlantedRevealMod = min(slantedRevealDepth, gs_shutter_closingDepth + gs_shutter_bExtraFrame * gs_shutter_extraFrameThk) * tan(topWallAngle)
		a = a - leftSlantedRevealMod - rightSlantedRevealMod

		addx (leftSlantedRevealMod - rightSlantedRevealMod) / 2
	endif

	if gs_sunShade_bAutomaticHeight then
		panelHeight = b - gs_shutter_innerOffset * 2
	else
		panelHeight = gs_sunShade_height
	endif

	panelWidth	= (a - 2 * gs_shutter_innerOffset) / gs_shutter_nPanels

	axisY = (gs_shutter_closingDepth - distShutterWall - panelThk) / 2
	distY = axisY + distShutterWall

	angleCorrection = 0
	if bCurvedWall & radSill < radBoard then angleCorrection = asn((a/2) / radSill) + asn((panelWidth / 2) / radSill)

	if gs_shutter_opAngle > 180 - angleCorrection then gs_shutter_opAngle = 180 - angleCorrection

	if nPanelLeft > 0 then
		axisX = -a/2 + gs_shutter_innerOffset/2 - leftSlantedRevealMod/2
		distX = gs_shutter_innerOffset/2 + leftSlantedRevealMod/2

		nPanel = nPanelLeft

		sideSign = 1

		gosub "Panel_Opening_Geometry"
	endif

	if nPanelRight > 0 then
		axisX = a/2 - gs_shutter_innerOffset/2 + rightSlantedRevealMod/2
		distX = gs_shutter_innerOffset/2 + rightSlantedRevealMod/2

		nPanel = nPanelRight

		sideSign = -1

		gosub "Panel_Opening_Geometry"
	endif


! --- Extra Frame --------------------------------------------------------------

	if gs_shutter_bExtraFrame & not(bNoThickness) then
		numcuts = 0

		material gs_shutPanel_materialAcc

		if iWindowShape = SHAPE_RECTANGULAR & (iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED) then
			addy -(gs_shutter_closingDepth + gs_shutter_extraFrameThk) * tan(bottomWallAngle)
			rotx 90-bottomWallAngle
			cutplane
			numCuts = numCuts + 1
			del 2

			if gs_shutter_closingDepth + EPS < slantedRevealDepth then
				if gs_shutter_closingDepth + gs_shutter_extraFrameThk + EPS < slantedRevealDepth then
					add a/2, 0, gs_shutter_closingDepth + gs_shutter_extraFrameThk
					roty 90 - rightWallAngle
					cutplane
					numCuts = numCuts + 1
					del 2

					add -a/2, 0, gs_shutter_closingDepth + gs_shutter_extraFrameThk
					roty -90 + leftWallAngle
					cutplane
					numCuts = numCuts + 1
					del 2

					add 0, b, gs_shutter_closingDepth + gs_shutter_extraFrameThk
					rotx -90 + topWallAngle
					cutplane
					numCuts = numCuts + 1
					del 2
				else
					rotx -90
					cutpolya 5, 1+2, 0,
						a/2, -gs_shutter_closingDepth - gs_shutter_extraFrameThk - 0.01, 15,
						a/2, -slantedRevealDepth, 15,
						a/2 + (slantedRevealDepth - gs_shutter_closingDepth + 0.01) * tan(rightWallAngle), -gs_shutter_closingDepth + 0.01, 15,
						a/2 + rightSlantedRevealMod, -gs_shutter_closingDepth + 0.01, 15,
						a/2 + rightSlantedRevealMod, -gs_shutter_closingDepth - gs_shutter_extraFrameThk - 0.01, 15
					numCuts = numCuts + 1

					cutpolya 5, 1+2, 0,
						-a/2, -gs_shutter_closingDepth - gs_shutter_extraFrameThk - 0.01, 15,
						-a/2, -slantedRevealDepth, 15,
						-a/2 - (slantedRevealDepth - gs_shutter_closingDepth + 0.01) * tan(leftWallAngle), -gs_shutter_closingDepth + 0.01, 15,
						-a/2 - leftSlantedRevealMod, -gs_shutter_closingDepth + 0.01, 15,
						-a/2 - leftSlantedRevealMod, -gs_shutter_closingDepth - gs_shutter_extraFrameThk - 0.01, 15
					numCuts = numCuts + 1

					del 1

					addy b
					roty 90
					rotz -90
					cutpolya 5, 1+2, 0,
						0, -gs_shutter_closingDepth - gs_shutter_extraFrameThk - 0.01, 15,
						0, -slantedRevealDepth, 15,
						-(slantedRevealDepth - gs_shutter_closingDepth + 0.01) * tan(topWallAngle), -gs_shutter_closingDepth + 0.01, 15,
						-topSlantedRevealMod, -gs_shutter_closingDepth + 0.01, 15,
						-topSlantedRevealMod, -gs_shutter_closingDepth - gs_shutter_extraFrameThk - 0.01, 15
					numCuts = numCuts + 1

					del 3
				endif
			else
				leftWallAngle	= 0
				rightWallAngle	= 0
				topWallAngle	= 0
			endif
		endif


		resol nArchResolution

		if iWindowShape = SHAPE_RECTANGULAR then
			addz gs_shutter_closingDepth

			prism_ 5, gs_shutter_extraFrameThk,
				-a/2 - gs_shutter_extraFrameThk * tan(leftWallAngle),  -gs_shutter_extraFrameThk * tan(bottomWallAngle), 15,
				-a/2 + gs_shutter_extraFrameWidth, -gs_shutter_extraFrameThk * tan(bottomWallAngle), 15,
				-a/2 + gs_shutter_extraFrameWidth, b - gs_shutter_extraFrameWidth, 15,
				-a/2 - gs_shutter_extraFrameThk * tan(leftWallAngle), b + gs_shutter_extraFrameThk * tan(topWallAngle), 15,
				-a/2 - gs_shutter_extraFrameThk * tan(leftWallAngle), -gs_shutter_extraFrameThk * tan(bottomWallAngle), -1

			prism_ 5, gs_shutter_extraFrameThk,
				 a/2 + gs_shutter_extraFrameThk * tan(rightWallAngle), -gs_shutter_extraFrameThk * tan(bottomWallAngle), 15,
				 a/2 - gs_shutter_extraFrameWidth, -gs_shutter_extraFrameThk * tan(bottomWallAngle), 15,
				 a/2 - gs_shutter_extraFrameWidth, b - gs_shutter_extraFrameWidth, 15,
				 a/2 + gs_shutter_extraFrameThk * tan(rightWallAngle), b + gs_shutter_extraFrameThk * tan(topWallAngle), 15,
				 a/2 + gs_shutter_extraFrameThk * tan(rightWallAngle), -gs_shutter_extraFrameThk * tan(bottomWallAngle), -1

			rotx 90
			gosub "TextureDirection"
			del 1

			prism_ 5, gs_shutter_extraFrameThk,
				-a/2 - gs_shutter_extraFrameThk * tan(leftWallAngle), b + gs_shutter_extraFrameThk * tan(topWallAngle), 15,
				 a/2 + gs_shutter_extraFrameThk * tan(rightWallAngle), b + gs_shutter_extraFrameThk * tan(topWallAngle), 15,
				 a/2 - gs_shutter_extraFrameWidth, b - gs_shutter_extraFrameWidth, 15,
				-a/2 + gs_shutter_extraFrameWidth, b - gs_shutter_extraFrameWidth, 15,
				-a/2 - gs_shutter_extraFrameThk * tan(leftWallAngle), b + gs_shutter_extraFrameThk * tan(topWallAngle), -1

			roty 90
			gosub "TextureDirection"

			del 2
		endif

		if iWindowShape = SHAPE_ARCHED then
			radOuter = max(a/2, ((a/2)^2 + gs_shutPanel_archHeight^2) / (2 * gs_shutPanel_archHeight))
			radInner = radOuter - gs_shutter_extraFrameWidth
			origY = b - radOuter

			prism_ 11, gs_shutter_extraFrameThk,
				-a/2,								0,																		15,
				-a/2,								origY + sqr(radOuter^2 - (a/2)^2),										79,
				 0,									origY,																	915,
				 a/2,								origY + sqr(radOuter^2 - (a/2)^2),										3015,
				 a/2,								0,																		15,
				 a/2 - gs_shutter_extraFrameWidth,	0,																		15,
				 a/2 - gs_shutter_extraFrameWidth,	origY + sqr(radInner^2 - (a/2 - gs_shutter_extraFrameWidth)^2) - EPS,	15,
				 a/2 - gs_shutter_extraFrameWidth,	origY + sqr(radInner^2 - (a/2 - gs_shutter_extraFrameWidth)^2),			79,
				-a/2 + gs_shutter_extraFrameWidth,	origY + sqr(radInner^2 - (a/2 - gs_shutter_extraFrameWidth)^2),			3015,
				-a/2 + gs_shutter_extraFrameWidth,	0,																		15,
				-a/2,								0,																		-1
		endif

		if iWindowShape = SHAPE_ELLIPSEARCH then
			put -a/2, 0, 15,
				-a/2, b - gs_shutPanel_archHeight, 15

			R1 = smallRadiusEllips
			archHeight = gs_shutPanel_archHeight
			halfAxis = a/2

			R2 = (halfAxis^2 + archHeight^2 - 2 * R1 * halfAxis) / (2 * archHeight - 2 * R1)
			alphaMiddle = abs(atn((halfAxis - R1) / (R2 - archHeight)))
			alphaSide = 90 - alphaMiddle

			put R1, -alphaSide, 2015,
				R2, -alphaMiddle * 2, 2015,
				R1, -alphaSide, 2015

			put	a/2, b - gs_shutPanel_archHeight, 15,
				a/2, 0, 15,
				a/2 - gs_shutter_extraFrameWidth, 0, 15,
				a/2 - gs_shutter_extraFrameWidth, b - gs_shutPanel_archHeight, 15

			archHeight = gs_shutPanel_archHeight - gs_shutter_extraFrameWidth
			halfAxis = a/2 - gs_shutter_extraFrameWidth
			R1 = smallRadiusEllips - gs_shutter_extraFrameWidth
			R2 = (halfAxis^2 + archHeight^2 - 2 * R1 * halfAxis) / (2 * archHeight - 2 * R1)
			alphaMiddle = abs(atn((halfAxis - R1) / (R2 - archHeight)))
			alphaSide = 90 - alphaMiddle

			put R1, alphaSide, 2015,
				R2, alphaMiddle * 2, 2015,
				R1, alphaSide, 2015

			put	-a/2 + gs_shutter_extraFrameWidth, b - gs_shutPanel_archHeight, 15,
				-a/2 + gs_shutter_extraFrameWidth, 0, 15

			prism_ NSP/3, gs_shutter_extraFrameThk,
				get(NSP)

		endif

		for i = 1 to numCuts
			cutend
		next i
	endif



	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then del 1
return


! ------------------------------------------------------------------------------
"Panel_Opening_Geometry":
! ------------------------------------------------------------------------------

	add axisX, gs_shutter_innerOffset, axisY
	mulx sideSign

	rotationRad = sqr((distY + panelThk / 2)^2 + (distX + panelWidth)^2)
	startAngle = -atn((distY + panelThk / 2) / (distX + panelWidth))

	hotspot panelWidth + distX, b/2,  distY + panelThk / 2, unID, gs_shutter_opAngle, 4 + 128 : unID = unID + 1

	roty startAngle + gs_shutter_opAngle
	hotspot rotationRad, b/2, 0, unID, gs_shutter_opAngle, 5 : unID = unID + 1
	del 1
	hotspot 0,			b/2, 0, unID, gs_shutter_opAngle, 6 : unID = unID + 1
	hotspot 0,			b/2+sideSign, 0, unID, gs_shutter_opAngle, 7 : unID = unID + 1

	roty gs_shutter_opAngle
	add distX, 0, distY

	nTransform = 4

	bFullOpenedNoThk = bNoThickness & (abs(gs_shutter_opAngle - 180) < EPS)

	bDividerPlaneNeeded = 1
	if bNoThickness | abs(gs_shutter_opAngle) > EPS | \
		gs_shutter_nPanels = 1 | gs_shutPanel_iType = PANEL_CUSTOM then

		bDividerPlaneNeeded = 0
	endif

	if not(bFullOpenedNoThk & (nPanel <> 1)) then
		gosub "callShutterPanel"
	endif

	for i = 2 to nPanel
		if (nPanelLeft = 0 | nPanelRight = 0) & i = nPanel then bDividerPlaneNeeded = 0

		if i mod 2 = 0 then
			add panelWidth, 0, panelThk
			roty -gs_shutter_opAngle
			addz -panelThk

			nTransform = nTransform + 3
		else
			addx panelWidth
			roty gs_shutter_opAngle

			nTransform = nTransform + 2
		endif


		if not(bFullOpenedNoThk & (i < nPanel)) then
			gosub "callShutterPanel"
		endif

	next i

	del nTransform
return


! ==============================================================================
"Folding_shutter":
! ==============================================================================

	panelHeight = b - 2 * distShutterWall
	panelWidth = a / (gs_shutter_nPanels + gs_shutter_nPanels2)

	maxOpWidth = a - gs_shutPanel_thk * (gs_shutter_nPanels + gs_shutter_nPanels2)

	if gs_foldingShutter_iStacking = STACKING_OUTSIDE then
		addz panelWidth + panelThk
		mulz -1
	endif

	add -a/2 + gs_shutter_nPanels * gs_shutPanel_thk + maxOpWidth * gs_shutter_nPanels / (gs_shutter_nPanels + gs_shutter_nPanels2), \
			panelHeight/2, \
			panelThk + gs_foldingShutter_ovhg * (gs_foldingShutter_iStacking = STACKING_OUTSIDE)
	hotspot  0,						0, 0, unID, gs_shutter_opLength_1, 1,	gs_shutter_opLength : unID = unID + 1
	hotspot -gs_shutter_opLength_1,	0, 0, unID, gs_shutter_opLength_1, 2,	gs_shutter_opLength : unID = unID + 1
	hotspot  1,						0, 0, unID, gs_shutter_opLength_1, 3,	gs_shutter_opLength : unID = unID + 1

	hotspot  0,						0, 0, unID, gs_shutter_opLength_2, 1,	gs_shutter_opLength : unID = unID + 1
	hotspot  gs_shutter_opLength_2,	0, 0, unID, gs_shutter_opLength_2, 2,	gs_shutter_opLength : unID = unID + 1
	hotspot -1,						0, 0, unID, gs_shutter_opLength_2, 3,	gs_shutter_opLength : unID = unID + 1

	del 1

	add 0, distShutterWall, gs_foldingShutter_ovhg * (gs_foldingShutter_iStacking = STACKING_OUTSIDE)

	bFullOpened = 0
	if abs (gs_shutter_closedLength) < EPS then bFullOpened = 1

	for i = 1 to 2
		add -a/2, 0, panelThk

		if i = 1 then
			openLength = gs_shutter_opLength_1
			nPanels = gs_shutter_nPanels
		else
			openLength = gs_shutter_opLength_2
			nPanels = gs_shutter_nPanels2
		endif

		nTransform = 0

		if bFullOpened and bNoThickness then
			roty -90
			addz -nPanels * gs_shutPanel_thk

			gosub "callShutterPanel"

			plane_ 5,
				0,	0,				0,							15,
				0,	panelHeight,	0,							15,
				0,	panelHeight,	nPanels * gs_shutPanel_thk,	15,
				0,	0,				nPanels * gs_shutPanel_thk,	15,
				0,	0,				0,							-1

			plane_ 5,
				panelWidth,	0,				0,							15,
				panelWidth,	panelHeight,	0,							15,
				panelWidth,	panelHeight,	nPanels * gs_shutPanel_thk,	15,
				panelWidth,	0,				nPanels * gs_shutPanel_thk,	15,
				panelWidth,	0,				0,							-1

			roty 90
			gosub "TextureDirection"

			del 3
		else
			if bFullOpened & gs_shutPanel_iType <> PANEL_CUSTOM & gs_shutPanel_iType <> PANEL_Z then bFoldingDividerPlaneNeeded = 1
			if abs(gs_shutter_opLength) < EPS then bDividerPlaneNeeded = 1
			for j = 1 to nPanels
				if j = nPanels then bFoldingDividerPlaneNeeded = 0

				panelWidthInLine = (a - gs_shutter_opLength) / (gs_shutter_nPanels + gs_shutter_nPanels2)

				if abs(panelWidthInLine - panelWidth) < EPS then
					addz -panelThk
					if gs_foldingShutter_iStacking = STACKING_OUTSIDE then
						addz panelthk
						mulz -1
					endif
					gosub "callShutterPanel"
					if gs_foldingShutter_iStacking = STACKING_OUTSIDE then del 2
					del 1
					addx panelWidth
					nTransform = nTransform + 1
				else

					alpha = acs(panelWidthInLine / sqr(panelWidth^2 + panelThk^2)) + atn (panelThk / panelWidth)

					if j mod 2 = 1 then
						roty -alpha
						addz - panelThk
						if gs_foldingShutter_iStacking = STACKING_OUTSIDE then
							addz panelthk
							mulz -1
						endif
						gosub "callShutterPanel"
						if gs_foldingShutter_iStacking = STACKING_OUTSIDE then del 2
						addx panelWidth
						nTransform = nTransform + 3
					else
						roty 2 * alpha
						if gs_foldingShutter_iStacking = STACKING_OUTSIDE then
							addz panelthk
							mulz -1
						endif
						gosub "callShutterPanel"
						if gs_foldingShutter_iStacking = STACKING_OUTSIDE then del 2
						add panelWidth, 0, panelThk
						roty -alpha
						nTransform = nTransform + 3
					endif
				endif

			next j
		endif

		del nTransform + 1
		mulx -1
	next i
	del 3

	if gs_foldingShutter_iStacking = STACKING_OUTSIDE then del 2

return


! ==============================================================================
"Outfolding_shutter":
! ==============================================================================

	panelHeight = b - 2 * distShutterWall

	if not(gs_shutter_opened) then bDividerPlaneNeeded = 1

	for i = 1 to 2
		panelInMax = a/2 - distShutterWall

		if iRevealType = 8 | iRevealType = 9 then
			if i = 1 then
				panelWidthIn = min(panelInMax, outfolding_innerPanelLeft + distShutterWall * (tan(180 - leftWallAngle/2) + tan((90 - leftWallAngle) / 2)))
				actSideAngle = leftWallAngle
			else
				panelWidthIn = min(panelInMax, outfolding_innerPanelRight + distShutterWall * (tan(180 - rightWallAngle/2) + tan((90 - rightWallAngle) / 2)))
				actSideAngle = rightWallAngle
			endif
			panelWidthOut = a / 2 - panelWidthIn - distShutterWall
			panelStartX = distShutterWall
			axisDepth = -distShutterWall + outfolding_innerPanelLeft * cos(leftWallAngle)
		else
			panelWidthIn = min(panelInMax, gs_outFoldingShutter_panelIn)
			panelWidthOut = a / 2 - panelWidthIn - distShutterWall
			panelStartX = distShutterWall
			actSideAngle = 0
			axisDepth = gs_outFoldingShutter_panelIn - distShutterWall
		endif

		add -a/2 + panelStartX, distShutterWall, axisDepth
		if gs_shutter_opened then roty 90 + actSideAngle
		panelWidth = panelWidthIn

		gosub "callShutterPanel"

		addx panelWidth

		if gs_shutter_opened then roty 90 - actSideAngle

		if panelWidthOut > EPS then
			panelWidth = panelWidthOut

			gosub "callShutterPanel"
		endif

		del 2 + 2 * gs_shutter_opened

		mulx -1
	next i

	del 2

return


! ==============================================================================
"Sliding_shutter":
! ==============================================================================

	if gs_sunShade_bAutomaticHeight then
		panelHeight = b
	else
		panelHeight = gs_sunShade_height
	endif
	panelWidth = a / gs_shutter_nPanels


! --- Rail ---------------------------------------------------------------------

	railLeftEnd		= -a/2 - panelWidth * (nPanelLeft > 0)		! these variables needed
	railRightEnd	= a/2 + panelWidth * (nPanelRight > 0)		! for positioning panels
	railLength		= railRightEnd - railLeftEnd

	if not(bNoThickness) then
		bSecondRail = (nPanelLeft = 2 | nPanelRight = 2)

		railLeftOvhg = 0
		if bLeftCornerFunction then
			railLeftOvhg = - (gs_slidingShutter_panelDist * 2 + panelThk * 3/2 + gs_slidingShutter_railWidth / 2) / tan(leftCornerAngle / 2)
		endif

		railRightOvhg = 0
		if bRightCornerFunction then
			railRightOvhg = (gs_slidingShutter_panelDist * 2 + panelThk * 3/2 + gs_slidingShutter_railWidth / 2) / tan(rightCornerAngle / 2)  + 2
		endif


		add railLeftEnd + railLeftOvhg, panelHeight + gs_slidingShutter_stickLength, -(gs_slidingShutter_panelDist + panelThk/2 - gs_slidingShutter_railWidth/2)
		roty 90

		if bLeftCornerFunction then
			add -(gs_slidingShutter_panelDist + panelThk/2 - gs_slidingShutter_railWidth/2), 0, -railLeftOvhg - (gs_casingThkOnFacade / tan(leftCornerAngle/2)) - gs_casingThkAtWindow
			roty 90 - leftCornerAngle/2
			cutplane 1, 1, 0, 1
			del 2
		endif

		if bRightCornerFunction then
			add -(gs_slidingShutter_panelDist + panelThk/2 - gs_slidingShutter_railWidth/2), 0, railLength + gs_casingThkOnFacade / tan(rightCornerAngle/2) + gs_casingThkAtWindow
			roty rightCornerAngle/2 - 90
			cutplane
			del 2
		endif

		material gs_shutSliding_matRail

		for i = 1 to 1 + bSecondRail
			prism_ 13, railLength - railLeftOvhg + railRightOvhg,
				0, 0, 15,
				gs_slidingShutter_railWidth/3, 0, 15,
				gs_slidingShutter_railWidth/3, gs_slidingShutter_railWidth/6, 15,
				gs_slidingShutter_railWidth/6, gs_slidingShutter_railWidth/6, 15,
				gs_slidingShutter_railWidth/6, gs_slidingShutter_railWidth*5/6, 15,
				gs_slidingShutter_railWidth*5/6, gs_slidingShutter_railWidth*5/6, 15,
				gs_slidingShutter_railWidth*5/6, gs_slidingShutter_railWidth/6, 15,
				gs_slidingShutter_railWidth*2/3, gs_slidingShutter_railWidth/6, 15,
				gs_slidingShutter_railWidth*2/3, 0, 15,
				gs_slidingShutter_railWidth, 0, 15,
				gs_slidingShutter_railWidth, gs_slidingShutter_railWidth, 15,
				0, gs_slidingShutter_railWidth, 15,
				0, 0, -1

			addx gs_slidingShutter_panelDist + panelThk
		next i

		del 3 + bSecondRail

! --- Cover --------------------------------------------------------------------

		coverEndOffset = 0.03

		if gs_slidingShutter_iCover <> COVER_NONE then
			coverThk = 0.005
			coverDepth = gs_slidingShutter_panelDist * 2 + panelThk*3/2 + gs_slidingShutter_railWidth/2 + 0.02

			if bLeftCornerFunction then
				if leftCornerAngle < 180 then
					coverLeftEnd = railLeftEnd - (coverDepth + coverThk) / tan(leftCornerAngle / 2) - (gs_casingThkOnFacade / tan(leftCornerAngle/2)) - gs_casingThkAtWindow
				else
					coverLeftEnd = railLeftEnd - 1
				endif
			else
				coverLeftEnd = railLeftEnd - coverEndOffset
			endif

			if bRightCornerFunction then
				if rightCornerAngle < 180 then
					coverRightEnd = railRightEnd + (coverDepth + coverThk) / tan(rightCornerAngle / 2) + gs_casingThkOnFacade / tan(rightCornerAngle/2) + gs_casingThkAtWindow
				else
					coverRightEnd = railRightEnd + 1
				endif
			else
				coverRightEnd = railRightEnd + coverEndOffset
			endif

			coverLength = coverRightEnd - coverLeftEnd

			add coverLeftEnd,  panelHeight + gs_slidingShutter_stickLength - 0.02, 0
			roty 90

			material gs_shutSliding_matRail

			if gs_slidingShutter_iCover = COVER_Z then
				prism_ 9, coverLength,
					 coverDepth,						0,		15,
					 coverDepth,						0.076,	15,
					-gs_casingThkOnFacade,				0.116,	15,
					-gs_casingThkOnFacade,				0.17,	15,
					-gs_casingThkOnFacade + coverThk,	0.17,	15,
					-gs_casingThkOnFacade + coverThk,	0.12,	15,
					 coverDepth + coverThk,				0.08,	15,
					 coverDepth + coverThk,				0,		15,
					 coverDepth,						0,		-1

				rotz 90
				gosub "TextureDirection"
				del 1
			endif

			if gs_slidingShutter_iCover = COVER_BOX then
				prism_ 7, coverLength,
					 coverDepth,			0,					15,
					 coverDepth,			0.08 - coverThk,	15,
					-gs_casingThkOnFacade,	0.08 - coverThk,	15,
					-gs_casingThkOnFacade,	0.08,				15,
					 coverDepth + coverThk,	0.08,				15,
					 coverDepth + coverThk,	0,					15,
					 coverDepth,			0,					-1

				gosub "TextureDirection"
			endif

			del 2

		endif
	endif

	if bRightCornerFunction then cutend
	if bLeftCornerFunction then cutend

! --- Panels -------------------------------------------------------------------

	maxOpLength = a
	maxWidthLeft = nPanelLeft / gs_shutter_nPanels * maxOpLength
	maxWidthRight = nPanelRight / gs_shutter_nPanels * maxOpLength

	if gs_shutter_opLength_1 + gs_shutter_opLength_2 > maxOplength then
		gs_shutter_opLength_1 = gs_shutter_opLength_1 / (gs_shutter_opLength_1 + gs_shutter_opLength_2) * maxOplength
		gs_shutter_opLength_2 = maxOplength - gs_shutter_opLength_1
	endif

	add -a/2 + maxWidthLeft, panelHeight/2, -panelThk

	if nPanelLeft > 0 then
		hotspot  0,						0, 0, unID, gs_shutter_opLength_1, 1,	gs_shutter_opLength : unID = unID + 1
		hotspot -gs_shutter_opLength_1,	0, 0, unID, gs_shutter_opLength_1, 2,	gs_shutter_opLength : unID = unID + 1
		hotspot  1,						0, 0, unID, gs_shutter_opLength_1, 3,	gs_shutter_opLength : unID = unID + 1
	endif
	if nPanelRight > 0 then
		hotspot  0,						0, 0, unID, gs_shutter_opLength_2, 1,	gs_shutter_opLength : unID = unID + 1
		hotspot  gs_shutter_opLength_2,	0, 0, unID, gs_shutter_opLength_2, 2,	gs_shutter_opLength : unID = unID + 1
		hotspot -1,						0, 0, unID, gs_shutter_opLength_2, 3,	gs_shutter_opLength : unID = unID + 1
	endif

	del 1

	dim leftDiff[2]
	dim rightDiff[2]
	if nPanelLeft = 1 then
		leftDiff[1] = maxWidthLeft - gs_shutter_opLength_1
		leftDiff[2] = 0
	endif
	if nPanelLeft = 2 then
		if gs_shutter_iPanelPos = PANELPOS_LEFTBOTTOM | gs_shutter_iPanelPos = PANELPOS_DOUBLEBOTTOM then
			leftDiff[1] = maxWidthLeft - gs_shutter_opLength_1
			leftDiff[2] = max (0, maxWidthLeft - gs_shutter_opLength_1 - panelWidth)
		else
			leftDiff[1] = max (0, maxWidthLeft - gs_shutter_opLength_1 - panelWidth)
			leftDiff[2] = maxWidthLeft - gs_shutter_opLength_1
		endif
	endif
	if nPanelRight = 1 then
		rightDiff[1] = maxWidthRight - gs_shutter_opLength_2
		rightDiff[2] = 0
	endif
	if nPanelRight = 2 then
		if gs_shutter_iPanelPos = PANELPOS_RIGHTBOTTOM | gs_shutter_iPanelPos = PANELPOS_DOUBLEBOTTOM then
			rightDiff[1] = maxWidthRight - gs_shutter_opLength_2
			rightDiff[2] = max (0, maxWidthRight - gs_shutter_opLength_2 - panelWidth)
		else
			rightDiff[1] = max (0, maxWidthRight - gs_shutter_opLength_2 - panelWidth)
			rightDiff[2] = maxWidthRight - gs_shutter_opLength_2
		endif
	endif

	addz  -gs_slidingShutter_panelDist - panelThk

	for i = 1 to nPanelLeft
		addx railLeftEnd + leftDiff[i]
		if gs_shutPanel_iType = PANEL_Z | gs_shutPanel_iType = PANEL_ROTATEDBOARDS then
			addz panelThk
			mulz -1
		endif
		if gs_shutPanel_iType = PANEL_Z | gs_shutPanel_iType = PANEL_CUSTOM then
			addx panelWidth
			mulx -1
		endif
		gosub "callShutterPanel"
		if gs_shutPanel_iType = PANEL_Z | gs_shutPanel_iType = PANEL_ROTATEDBOARDS then del 2
		if gs_shutPanel_iType = PANEL_Z | gs_shutPanel_iType = PANEL_CUSTOM then del 2
		del 1

		addz -panelThk - gs_slidingShutter_panelDist
	next i

	del nPanelLeft

	for i = 1 to nPanelRight
		addx railRightEnd - panelWidth - rightDiff[i]
		if gs_shutPanel_iType = PANEL_Z | gs_shutPanel_iType = PANEL_ROTATEDBOARDS then
			addz panelThk
			mulz -1
		endif
		gosub "callShutterPanel"
		if gs_shutPanel_iType = PANEL_Z | gs_shutPanel_iType = PANEL_ROTATEDBOARDS then del 2
		del 1

		addz -panelThk - gs_slidingShutter_panelDist
	next i

	del 1 + nPanelRight
return


! ==============================================================================
"callShutterPanel":
! ==============================================================================

	call "ShutterPanels_WMCC" parameters a				= panelWidth,
					b								= panelHeight,
					lod3D_sunShade					= lod3D_sunShade,
					gs_shutter_innerOffset			= gs_shutter_innerOffset,
					gs_shutPanel_iShape 			= gs_shutPanel_iShape,
					gs_shutPanel_archHeight			= gs_shutPanel_archHeight,
					gs_shutPanel_iType				= gs_shutPanel_iType,
					gs_cust_shutterPanel			= gs_cust_shutterPanel,
					gs_shutPanel_Thk				= gs_shutPanel_Thk,
					gs_shutPanel_frameWidth			= gs_shutPanel_frameWidth,
					gs_shutPanel_BDiffBottomFrame	= gs_shutPanel_BDiffBottomFrame,
					gs_shutPanel_frameWidthBottom	= gs_shutPanel_frameWidthBottom,
					gs_shutPanel_fieldThk			= gs_shutPanel_fieldThk,
					gs_shutPanel_louverThk			= gs_shutPanel_louverThk,
					gs_shutPanel_louverWidth		= gs_shutPanel_louverWidth,
					gs_shutPanel_louverAngle		= gs_shutPanel_louverAngle,
					gs_shutPanel_midFrameHorW		= gs_shutPanel_midFrameHorW,
					gs_shutPanel_midFrameVertW		= gs_shutPanel_midFrameVertW,
					gs_shutPanel_nHoleHor			= gs_shutPanel_nHoleHor,
					gs_shutPanel_nHoleVert			= gs_shutPanel_nHoleVert,
					gs_shutPanel_holeRadius			= gs_shutPanel_holeRadius,
					gs_shutPanel_ZBoardW			= gs_shutPanel_ZBoardW,
					gs_shutPanel_ZWidth				= gs_shutPanel_ZWidth,
					gs_shutPanel_ZThk				= gs_shutPanel_ZThk,
					gs_shutPanel_boardThkVert		= gs_shutPanel_boardThkVert,
					gs_shutPanel_boardThkHor		= gs_shutPanel_boardThkHor,
					gs_shutPanel_vertBoardW			= gs_shutPanel_vertBoardW,
					gs_shutPanel_horBoardW			= gs_shutPanel_horBoardW,

					gs_sunShade_cutLinesPen			= gs_sunShade_cutLinesPen,
					gs_sunShade_unCutLinesPen		= gs_sunShade_unCutLinesPen,
					gs_sunShade_cutFillType			= gs_sunShade_cutFillType,
					gs_sunShade_cutFillPen			= gs_sunShade_cutFillPen,
					gs_sunShade_cutFillBackPen		= gs_sunShade_cutFillBackPen,

					gs_shutPanel_materialMain		= gs_shutPanel_materialMain,
					gs_shutPanel_materialAcc		= gs_shutPanel_materialAcc,

					nArchResolution					= nArchResolution,
					smallRadiusEllips				= smallRadiusEllips

! --- Contour visibility corrections for s/e -----------------------------------

	if bDividerPlaneNeeded then
		addx panelWidth

		model wire
		planeThk = gs_shutPanel_Thk
		if gs_shutPanel_iType = PANEL_Z then planeThk = gs_shutPanel_boardThkVert

		if bNoThickness then
			lin_ 0, 0, 0, 0, panelHeight, 0
		else
			plane_ 5,
				0, 0,			0,			15,
				0, panelHeight,	0,			15,
				0, panelHeight,	planeThk,	15,
				0, 0,			planeThk,	15,
				0, 0,			0,			-1
		endif

		model solid
		del 1
	endif

	if bFoldingDividerPlaneNeeded then		! Divider for full opened folding
		model wire
		plane_ 5,
			0,			0,				gs_shutPanel_Thk * (j mod 2 = 0),	15,
			panelWidth,	0,				gs_shutPanel_Thk * (j mod 2 = 0),	15,
			panelWidth,	panelHeight,	gs_shutPanel_Thk * (j mod 2 = 0),	15,
			0,			panelHeight,	gs_shutPanel_Thk * (j mod 2 = 0),	15,
			0,			0,				gs_shutPanel_Thk * (j mod 2 = 0),	-1
		model solid
	endif

! --- Hanging sticks for sliding panels ----------------------------------------

	if gs_sunShade_iType = SUNSHADE_SLIDING & not(bNoThickness) then
		material gs_shutSliding_matRail
		add panelWidth/4, panelHeight, panelThk/2

		rotx -90

		cylind gs_slidingShutter_stickLength, gs_slidingShutter_stickRad

		addx panelWidth/2

		cylind gs_slidingShutter_stickLength, gs_slidingShutter_stickRad

		del 3
	endif
return


! ==============================================================================
"TextureDirection":
! ==============================================================================

	base
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	coor 2, -1, -2, -3, -4
	body -1

return


! ==============================================================================
"Rolling_shutter":
! ==============================================================================

	call "RollingShutter_WMCC" parameters A		= A,
				B							= B,
				AC_HoleSideMaterial			= AC_HoleSideMaterial,
				lod3D_sunShade				= lod3D_sunShade,
				gs_shutter_closedHeight		= gs_shutter_closedHeight,
				gs_shutRoll_iPlacement		= gs_shutRoll_iPlacement,
				gs_shutRoll_iBoxType		= gs_shutRoll_iBoxType,
				gs_shutRoll_cutWallBehind	= gs_shutRoll_cutWallBehind,
				gs_shutRoll_boxHeight		= gs_shutRoll_boxHeight,
				gs_shutRoll_boxWidth		= gs_shutRoll_boxWidth,
				gs_shutRoll_boxAngle		= gs_shutRoll_boxAngle,
				gs_shutRoll_iBoxDefaultSize	= gs_shutRoll_iBoxDefaultSize,
				gs_shutRoll_boxOffsetLeft	= gs_shutRoll_boxOffsetLeft,
				gs_shutRoll_boxOffsetRight	= gs_shutRoll_boxOffsetRight,
				gs_shutRoll_railDepth		= gs_shutRoll_railDepth,
				gs_shutRoll_distFromWall	= gs_shutRoll_distFromWall,
				gs_shutRoll_distFromHead	= gs_shutRoll_distFromHead,
				gs_shutRoll_segmentWidth	= gs_shutRoll_segmentWidth,

				gs_sunShade_cutLinesPen		= gs_sunShade_cutLinesPen,
				gs_sunShade_unCutLinesPen	= gs_sunShade_unCutLinesPen,
				gs_sunShade_cutFillType		= gs_sunShade_cutFillType,
				gs_sunShade_cutFillPen		= gs_sunShade_cutFillPen,
				gs_sunShade_cutFillBackPen	= gs_sunShade_cutFillBackPen,
				gs_sunShade_insFillType		= gs_sunShade_insFillType,
				gs_sunShade_insFillPen		= gs_sunShade_insFillPen,
				gs_sunShade_insFillBackPen	= gs_sunShade_insFillBackPen,

				gs_shutRoll_matBox			= gs_shutRoll_matBox,
				gs_shutRoll_matSegm			= gs_shutRoll_matSegm,
				gs_shutRoll_matRail			= gs_shutRoll_matRail,

				gs_casingThkOnFacade		= gs_casingThkOnFacade,
				bLeftCornerFunction			= bLeftCornerFunction,
				bRightCornerFunction		= bRightCornerFunction,
				leftCornerAngle				= leftCornerAngle,
				rightCornerAngle			= rightCornerAngle,
				returned_parameters posSunShade,
									lengthSunShade,
									sunshadepoly

return


! ==============================================================================
"Venetian_Blinds":
! ==============================================================================

	call "VenetianBlinds_WMCC" parameters A 		= A,
				B							= B,
				lod3D_sunShade				= lod3D_sunShade,
				gs_sunShade_iType			= gs_sunShade_iType,
				gs_shutter_closedHeight		= gs_shutter_closedHeight,
				gs_shutLam_iPlacement		= gs_shutLam_iPlacement,
				gs_shutLam_cutWallBehind	= gs_shutLam_cutWallBehind,
				gs_shutLam_boxHeight		= gs_shutLam_boxHeight,
				gs_shutLam_boxWidth			= gs_shutLam_boxWidth,
				gs_shutLam_bOpenBox			= gs_shutLam_bOpenBox,
				gs_shutLam_bRail			= gs_shutLam_bRail,
				gs_shutLam_coverWidth		= gs_shutLam_coverWidth,
				gs_shutLam_distFromWall		= gs_shutLam_distFromWall,
				gs_shutLam_distFromHead		= gs_shutLam_distFromHead,
				gs_shutLam_segmentWidth		= gs_shutLam_segmentWidth,
				gs_shutLam_rotation			= gs_shutLam_rotation,

				gs_shutLam2_boxHeight		= gs_shutLam2_boxHeight,
				gs_shutLam2_boxWidth		= gs_shutLam2_boxWidth,
				gs_shutLam2_distFromWindow	= gs_shutLam2_distFromWindow,
				gs_shutLam2_distFromHead	= gs_shutLam2_distFromHead,
				gs_shutLam2_segmentWidth	= gs_shutLam2_segmentWidth,
				gs_shutLam2_rotation		= gs_shutLam2_rotation,

				gs_sunShade_cutLinesPen		= gs_sunShade_cutLinesPen,
				gs_sunShade_unCutLinesPen	= gs_sunShade_unCutLinesPen,
				gs_sunShade_cutFillType		= gs_sunShade_cutFillType,
				gs_sunShade_cutFillPen		= gs_sunShade_cutFillPen,
				gs_sunShade_cutFillBackPen	= gs_sunShade_cutFillBackPen,
				gs_sunShade_insFillType		= gs_sunShade_insFillType,
				gs_sunShade_insFillPen		= gs_sunShade_insFillPen,
				gs_sunShade_insFillBackPen	= gs_sunShade_insFillBackPen,

				gs_shutLam_matBox			= gs_shutLam_matBox,
				gs_shutLam_matLam			= gs_shutLam_matLam,

				gs_casingThkOnFacade		= gs_casingThkOnFacade,
				gs_casingThkAtWindow		= gs_casingThkAtWindow,
				bLeftCornerFunction			= bLeftCornerFunction,
				bRightCornerFunction		= bRightCornerFunction,
				leftCornerAngle				= leftCornerAngle,
				rightCornerAngle			= rightCornerAngle,
				returned_parameters posSunShade,
									lengthSunShade,
									sunshadepoly
return



]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

LOD2D_SUNSHADE_SIMPLE = 1
LOD2D_SUNSHADE_DETAILED = 2

if lod2D_sunShade = 0 | not (gs_sunShade_bShowIn2D) then end

if bSunShadeNotAvailableByWindowShape then end

pen gs_sunShade_cutLinesPen
fill gs_sunShade_cutFillType
line_type gs_sunShade_lineType

if WIDO_REVEAL_SIDE then
	add2 0,-WIDO_FRAME_THICKNESS
else
	mul2 1,-1
endif

if  gs_sunShade_iType = SUNSHADE_ROLLING | gs_sunShade_iType = SUNSHADE_EXTVENETIAN then
	add2 0, -WIDO_SILL
else
	add2 0, -WIDO_SILL - gs_casingThkOnFacade
endif

simpleFoldingModify = 0

if gs_sunShade_iType = SUNSHADE_DECORATIVE								then gosub "Decorative_shutter"
if gs_sunShade_iType = SUNSHADE_SHUTTER									then gosub "Opening_Sliding_shutter"
if gs_sunShade_iType = SUNSHADE_FOLDING	& not (bFoldingWarning)			then gosub "Folding_shutter"
if gs_sunShade_iType = SUNSHADE_OUTFOLDING & not (bOutfoldingWarning)	then gosub "Outfolding_shutter"
if gs_sunShade_iType = SUNSHADE_SLIDING									then gosub "Opening_Sliding_shutter"
if gs_sunShade_iType = SUNSHADE_ROLLING									then gosub "Rolling_shutter"
if gs_sunShade_iType = SUNSHADE_EXTVENETIAN								then gosub "Venetian_shutter"


del 2

! ------------------------------------------------------------------------------
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! ------------------------------------------------------------------------------


! ==============================================================================
"Decorative_shutter":
! ==============================================================================

	panelWidth	= gs_shutPanel_panelWidth

	if bCurvedWall & radSill < radBoard then
		if WIDO_REVEAL_SIDE then
			add2 0, WIDO_ORIG_DIST + WIDO_SILL + WIDO_FRAME_THICKNESS + radSill
		else
			add2 0, -WIDO_ORIG_DIST + WIDO_SILL + radSill
		endif

		if gs_shutter_nPanels = 2 | (gs_shutter_nPanels = 1 & gs_shutter_iPanelPos = PANELPOS_RIGHT) then
			add2 0, -radSill
			rot2 -asn((a/2) / radSill)
			add2 0, radSill - distShutterWall

			rot2 -asn((panelWidth / 2) / radSill)
			gosub "Draw_Panel"
			del 4
		endif

		if gs_shutter_nPanels = 2 | (gs_shutter_nPanels = 1 & gs_shutter_iPanelPos = PANELPOS_LEFT) then
			mul2 -1, 1
			add2 0, -radSill
			rot2 -asn((a/2) / radSill)
			add2 0, radSill - distShutterWall

			rot2 -asn((panelWidth / 2) / radSill)
			gosub "Draw_Panel"
			del 5
		endif

		del 1
	else
		if gs_shutter_nPanels = 1 then
			if gs_shutter_iPanelPos = PANELPOS_LEFT then
				add2 -a/2 - panelWidth, -distShutterWall

				gosub "Draw_Panel"
			else
				add2 a/2, -distShutterWall

				gosub "Draw_Panel"
			endif
		else
			for i = 1 to 2
				add2 a/2, -distShutterWall

				gosub "Draw_Panel"

				del 1
				mul2 -1, 1
			next i
			del 2
		endif
	endif

return


! ==============================================================================
"Opening_Sliding_shutter":
! ==============================================================================

	panelWidth	= a / gs_shutter_nPanels

	if gs_sunShade_iType = SUNSHADE_SHUTTER & bCurvedWall & radSill < radBoard then
		if WIDO_REVEAL_SIDE then
			add2 0, WIDO_ORIG_DIST + WIDO_SILL + WIDO_FRAME_THICKNESS + radSill
		else
			add2 0, -WIDO_ORIG_DIST + WIDO_SILL + radSill
		endif

		if nPanelLeft > 0 then
			mul2 -1, 1
			add2 0, -radSill
			rot2 -asn((a/2) / radSill)
			add2 0, radSill - distShutterWall

			rot2 -asn((panelWidth / 2) / radSill)
			for i = 1 to nPanelLeft
				gosub "Draw_Panel"
				add2 0, -gs_shutPanel_thk
			next i
			del 5 + nPanelLeft
		endif

		if nPanelRight > 0 then
			add2 0, -radSill
			rot2 -asn((a/2) / radSill)
			add2 0, radSill - distShutterWall

			rot2 -asn((panelWidth / 2) / radSill)
			for i = 1 to nPanelRight
				gosub "Draw_Panel"
				add2 0, -gs_shutPanel_thk
			next i
			del 4 + nPanelRight
		endif

		del 1
	else
		if nPanelLeft > 0 then
			add2 -a/2 - panelWidth, -distShutterWall

			for i = 1 to nPanelLeft
				gosub "Draw_Panel"
				add2 0, -gs_shutPanel_thk
			next i
			del 1 + nPanelLeft
		endif
		if nPanelRight > 0 then
			add2 a/2, -distShutterWall

			for i = 1 to nPanelRight
				gosub "Draw_Panel"
				add2 0, -gs_shutPanel_thk
			next i
			del 1 + nPanelRight
		endif
	endif

	if gs_sunShade_bShowOpline & gs_sunShade_iType = SUNSHADE_SHUTTER then
		pen gs_sunShade_unCutLinesPen

		if nPanelLeft > 0 then
			leftRadius = panelWidth * (nPanelLeft + 1) / 2

			arc2 -a/2 - panelWidth + leftRadius, -distShutterWall, leftRadius, 180, 360
		endif

		if nPanelRight > 0 then
			rightRadius = panelWidth * (nPanelRight + 1) / 2

			arc2 a/2 + panelWidth - rightRadius, -distShutterWall, rightRadius, 180, 360
		endif
	endif
return


! ==============================================================================
"Folding_shutter":
! ==============================================================================

	panelWidth	= a / (gs_shutter_nPanels + gs_shutter_nPanels2)

	if gs_foldingShutter_iStacking = STACKING_OUTSIDE then
		add2 0, panelWidth - gs_foldingShutter_ovhg
	else
		mul2 1, -1
	endif

	simpleFoldingModify = gs_shutPanel_thk

	for i = 1 to 2
		if i = 1 then
			nPanel = gs_shutter_nPanels2
		else
			nPanel = gs_shutter_nPanels
		endif

		add2 a/2, 0
		rot2 -93

		for j = 1 to nPanel
			gosub "Draw_Panel"
			add2 panelWidth, -gs_shutPanel_thk
			rot2 6
			mul2 -1, 1
		next j
		del nPanel * 3

		del 2
		mul2 -1, 1
	next i
	del 2

	del 1
return


! ==============================================================================
"Outfolding_shutter":
! ==============================================================================

	for i = 1 to 2
		panelInMax = a/2 - distShutterWall
		if iRevealType = 8 | iRevealType = 9 then
			if i = 2 then
				panelWidthIn = outfolding_innerPanelLeft + distShutterWall * (tan(180 - leftWallAngle/2) + tan((90 - leftWallAngle) / 2))
				actSideAngle = leftWallAngle
			else
				panelWidthIn = outfolding_innerPanelRight + distShutterWall * (tan(180 - rightWallAngle/2) + tan((90 - rightWallAngle) / 2))
				actSideAngle = rightWallAngle
			endif
			panelWidthOut = a / 2 - panelWidthIn - distShutterWall
			panelJoinX = -distShutterWall + panelWidthIn * sin(actSideAngle)
		else
			panelWidthIn = gs_outFoldingShutter_panelIn
			panelWidthOut = a / 2 - panelWidthIn - distShutterWall
			panelJoinX = -distShutterWall
			actSideAngle = 0
		endif

		add2 a/2 + panelJoinX, -distShutterWall

		if panelWidthOut > EPS then
			panelWidth = panelWidthOut
			gosub "Draw_Panel"
		endif

		rot2 90 + actSideAngle
		add2 panelWidthIn, 0
		panelWidth = min(panelInMax, panelWidthIn)
		mul2 -1, -1
		gosub "Draw_Panel"

		del 4

		mul2 -1, 1
	next i
	del 2

	if gs_sunShade_bShowOpline then
		pen gs_sunShade_unCutLinesPen

		oplineRad = (a + 2 * panelWidthOut - distShutterWall*2) / 4

		for i = 1 to 2
			arc2 a/2 + panelWidthOut - oplineRad- distShutterWall, -distShutterWall, oplineRad, 180, 360

			mul2 -1, 1
		next i
		del 2

	endif
return


! ==============================================================================
"Draw_Panel":
! ==============================================================================
	if lod2D_sunShade = LOD2D_SUNSHADE_SIMPLE then
		line2 0, 0, panelWidth, 0 - simpleFoldingModify
	else
		poly2_b 5, 1+2+4+64, gs_sunShade_cutFillPen, gs_sunShade_cutFillBackPen,
			0, 0, 1,
			panelWidth, 0, 1,
			panelWidth, -gs_shutPanel_thk, 1,
			0, -gs_shutPanel_thk, 1,
			0, 0, -1
	endif
return


! ==============================================================================
"Rolling_shutter":
! ==============================================================================

	call "RollingShutter_WMCC" parameters a 	= a,
			gs_shutRoll_iPlacement		= gs_shutRoll_iPlacement,
			gs_shutRoll_boxWidth		= gs_shutRoll_boxWidth,
			gs_shutRoll_railDepth		= gs_shutRoll_railDepth,
			gs_shutRoll_distFromWall	= gs_shutRoll_distFromWall,
			gs_shutRoll_boxOffsetLeft	= gs_shutRoll_boxOffsetLeft,
			gs_shutRoll_boxOffsetRight	= gs_shutRoll_boxOffsetRight,

			gs_sunShade_lineType		= gs_sunShade_lineType,
			gs_sunShade_unCutLinesPen	= gs_sunShade_unCutLinesPen,

			gs_casingThkOnFacade		= gs_casingThkOnFacade,
			bLeftCornerFunction			= bLeftCornerFunction,
			bRightCornerFunction		= bRightCornerFunction,
			leftCornerAngle				= leftCornerAngle,
			rightCornerAngle			= rightCornerAngle,
			lod2D_sunShade				= lod2D_sunShade
return


! ==============================================================================
"Venetian_shutter":
! ==============================================================================

	call "VenetianBlinds_WMCC" parameters a		= a,
			gs_sunShade_iType				= gs_sunShade_iType,
			gs_shutLam_iPlacement			= gs_shutLam_iPlacement,
			gs_shutLam_boxWidth				= gs_shutLam_boxWidth,
			gs_shutLam_bRail				= gs_shutLam_bRail,
			gs_shutLam_coverWidth			= gs_shutLam_coverWidth,
			gs_shutLam_distFromWall			= gs_shutLam_distFromWall,

			gs_sunShade_lineType			= gs_sunShade_lineType,
			gs_sunShade_unCutLinesPen		= gs_sunShade_unCutLinesPen,

			gs_casingThkOnFacade			= gs_casingThkOnFacade,
			bLeftCornerFunction				= bLeftCornerFunction,
			bRightCornerFunction			= bRightCornerFunction,
			leftCornerAngle					= leftCornerAngle,
			rightCornerAngle				= rightCornerAngle

return

]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

EPS = 0.0001

! iRevealType:
REVEAL_EDGE				= 0
REVEAL_NO				= 1
REVEAL_POSITIVE			= 2
REVEAL_NEGATIVE			= 3
REVEAL_SLANTED			= 4
REVEAL_SPLAYED			= 5
REVEAL_HISTORIC			= 6
REVEAL_DOUBLE			= 7
REVEAL_DOUBLE_SPLAYED	= 8
REVEAL_OUTSIDE_SPLAYED	= 9

! iWindowShape:
SHAPE_RECTANGULAR			= 0
SHAPE_ARCHED				= 1
SHAPE_ROUND					= 2
SHAPE_EYEBROWS				= 3
SHAPE_HALFCIRCLE			= 4 	! straight side is horizontal
SHAPE_MULTISIDE				= 5
SHAPE_OCTAGONAL				= 6
SHAPE_HALFARCH				= 7
SHAPE_PENTAGON				= 8
SHAPE_QUARTERROUND			= 9
SHAPE_HALFROUND				= 10 	! straight side is vertical
SHAPE_TRAPEZOID				= 11
SHAPE_TRIANGLE				= 12
SHAPE_GOTHICARCH			= 13
SHAPE_ELLIPSEARCH			= 14
SHAPE_ROMBUS				= 15
SHAPE_HORSESHOE				= 16
SHAPE_OGEECENTERED			= 17
SHAPE_SARACENIC				= 18
SHAPE_T						= 19
SHAPE_HALF_T_LEFT			= 20
SHAPE_ARCHED_T				= 21
SHAPE_ARCHED_HALF_T_LEFT	= 22
SHAPE_PARALLELOGRAM			= 23
SHAPE_ELLIPSE				= 24
SHAPE_CORNER_TRIANGLE		= 25
SHAPE_QUARTERROUND_NOFRAME	= 26
SHAPE_HALF_T_RIGHT			= 27
SHAPE_ARCHED_HALF_T_RIGHT	= 28

SUNSHADE_DECORATIVE		= 1
SUNSHADE_SHUTTER		= 2
SUNSHADE_FOLDING		= 3
SUNSHADE_OUTFOLDING		= 4
SUNSHADE_SLIDING		= 5
SUNSHADE_ROLLING		= 6
SUNSHADE_EXTVENETIAN	= 7
SUNSHADE_VENETIAN		= 8

gs_sunShade_iType = max (1, min (vardim1(stSunShadeTypes)-1, gs_sunShade_iType))

PANELPOS_SYMMETRIC		= 1
PANELPOS_LEFT			= 2
PANELPOS_RIGHT			= 3
PANELPOS_MOSTLYLEFT		= 4
PANELPOS_MOSTLYRIGHT	= 5
PANELPOS_LEFTTOP		= 6
PANELPOS_LEFTBOTTOM		= 7
PANELPOS_RIGHTTOP		= 8
PANELPOS_RIGHTBOTTOM	= 9
PANELPOS_DOUBLETOP		= 10
PANELPOS_DOUBLEBOTTOM	= 11

gs_shutter_iPanelPos = max (1, min(vardim1(stShutterPanelPos), gs_shutter_iPanelPos))

STACKING_INSIDE = 1
STACKING_OUTSIDE = 2

gs_foldingShutter_iStacking = max (1, min(vardim1(stFoldingShutterStacking), gs_foldingShutter_iStacking))

COVER_NONE	= 0
COVER_Z		= 1
COVER_BOX	= 2

gs_slidingShutter_iCover = max (0, min(vardim1(stSlidingShutterCover)-1, gs_slidingShutter_iCover))

PANEL_LOUVER			= 1			! INT: Style 1
PANEL_LOUVERHORDIVIDED	= 2			! INT: Style 2
PANEL_LOUVERDIVIDED		= 3			! INT: Style 3
PANEL_Z					= 4			! INT: Style 4
PANEL_FRAME				= 5			! INT: Style 5
PANEL_FRAMEHORDIVIDED	= 6			! INT: Style 6
PANEL_FULL				= 7			! INT: Style 7
PANEL_VERTBOARDS		= 8			! INT: Style 8
PANEL_ROTATEDBOARDS		= 9			! INT: Style 9
PANEL_PERFORATED		= 10		! INT: Style 10
PANEL_CUSTOM			= 11		! INT: Custom

SHUTROLL_ONFACADE	= 1
SHUTROLL_TOWINDOW	= 2
SHUTROLL_BEHIND		= 3

SHUTROLL_BOX_RECT	= 1
SHUTROLL_BOX_ARCHED = 2

SHUTLAM_ONFACADE	= 1
SHUTLAM_TOWINDOW	= 2
SHUTLAM_BEHIND		= 3

SHUTROLL_ONCASING = 1
SHUTROLL_ONWALL = 2

SHUTLAM_ONCASING = 1
SHUTLAM_ONWALL = 2

! ==============================================================================

SHAPE_RECTANGULAR	= 0
SHAPE_ARCHED		= 1
SHAPE_EYEBROWS		= 3
SHAPE_HALFARCH		= 7
SHAPE_ELLIPSEARCH	= 14

!	SHAPE_PENTAGON		= 8
!	SHAPE_TRAPEZOID		= 11

! shapes not implemented in shutterpanel
!	SHAPE_ROUND			= 2
!	SHAPE_HALFCIRCLE	= 4
!	SHAPE_MULTISIDE		= 5
!	SHAPE_OCTAGONAL		= 6
!	SHAPE_QUARTERROUND	= 9
!	SHAPE_HALFROUND		= 10
!	SHAPE_TRIANGLE		= 12
!	SHAPE_GOTHICARCH	= 13
!	SHAPE_ROMBUS		= 15
!	SHAPE_HORSESHOE		= 16
!	SHAPE_OGEECENTERED	= 17
!	SHAPE_SARACENIC		= 18

PANELSHAPE_RECT			= 0
PANELSHAPE_HALFARCH		= 1
PANELSHAPE_FULLARCH		= 2
!	PANELSHAPE_TRAPEZOID	= 3
!	PANELSHAPE_PENTAGON		= 4
PANELSHAPE_ELLIPS		= 5
PANELSHAPE_HALFELLIPS	= 6

! ==============================================================================

distShutterWall = 0.006
bCurvedWall = abs(WIDO_ORIG_DIST) > EPS

if gs_sunShade_iType = SUNSHADE_VENETIAN | \
	(gs_sunShade_iType = SUNSHADE_EXTVENETIAN & gs_shutLam_iPlacement <> SHUTLAM_ONFACADE) | \
	(gs_sunShade_iType = SUNSHADE_ROLLING & gs_shutRoll_iPlacement <> SHUTROLL_ONFACADE) then

	gs_casingThkOnFacade = 0		! Casing must not have effect on sunshading in this types!

endif

bSunShadeNotAvailableByWindowShape = 0
if (iWindowShape = SHAPE_T |\
	iWindowShape = SHAPE_HALF_T_LEFT |\
	iWindowShape = SHAPE_HALF_T_RIGHT |\
	iWindowShape = SHAPE_ARCHED_T |\
	iWindowShape = SHAPE_ARCHED_HALF_T_LEFT |\
	iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT) then

	bSunShadeNotAvailableByWindowShape = 1
endif

! ==============================================================================
! Set Warnings, panel minimal sizes
! ==============================================================================

bOutfoldingWarning = 0
bFoldingWarning = 0

panelMinimalWidth = gs_shutPanel_Thk
panelMinimalHeight = gs_shutPanel_Thk

if gs_sunShade_iType = SUNSHADE_OUTFOLDING then
	if WIDO_SILL + EPS < panelMinimalWidth + gs_shutPanel_thk then bOutfoldingWarning = 1
	if a / 4 + EPS < panelMinimalWidth then bOutfoldingWarning = 1
endif
if gs_sunShade_iType = SUNSHADE_FOLDING then
	maxPanelWidth = WIDO_SILL - gs_shutPanel_thk
	if gs_foldingShutter_iStacking = STACKING_OUTSIDE then
		maxPanelWidth = maxPanelWidth + gs_foldingShutter_ovhg
	endif

	if maxPanelWidth - panelMinimalWidth < -EPS then bFoldingWarning = 1
	if (gs_shutter_nPanels + gs_shutter_nPanels2) * maxPanelWidth < a - EPS then bFoldingWarning = 1

endif

! ==============================================================================
! Sliding shutter panel numbers
! ==============================================================================

if gs_sunShade_iType = SUNSHADE_SLIDING then
	nPanelLeft = 0
	nPanelRight = 0

	if gs_shutter_nPanels = 1 then
		if gs_shutter_iPanelPos = PANELPOS_LEFT then
			nPanelLeft = 1
		else
			nPanelRight = 1
		endif
	endif
	if gs_shutter_nPanels = 2 then
		if gs_shutter_iPanelPos = PANELPOS_SYMMETRIC then
			nPanelLeft = 1
			nPanelRight = 1
		else
			if gs_shutter_iPanelPos = PANELPOS_LEFTTOP | gs_shutter_iPanelPos = PANELPOS_LEFTBOTTOM then
				nPanelLeft = 2
			else
				nPanelRight = 2
			endif
		endif
	endif
	if gs_shutter_nPanels = 3 then
		nPanelLeft = 1
		nPanelRight = 1
		if gs_shutter_iPanelPos = PANELPOS_LEFTTOP | gs_shutter_iPanelPos = PANELPOS_LEFTBOTTOM then
			nPanelLeft = 2
		else
			nPanelRight = 2
		endif
	endif
	if gs_shutter_nPanels = 4 then
		nPanelLeft = 2
		nPanelRight = 2
	endif
endif


! ==============================================================================
! Opening shutter panel numbers
! ==============================================================================

if gs_sunShade_iType = SUNSHADE_SHUTTER then
	nPanelLeft = 0
	nPanelRight = 0

	if gs_shutter_nPanels = 1 then
		if gs_shutter_iPanelPos = PANELPOS_LEFT then
			nPanelLeft = 1
		else
			nPanelRight = 1
		endif
	endif

	if gs_shutter_nPanels = 2 then
		if gs_shutter_iPanelPos = PANELPOS_LEFT then
			nPanelLeft = 2
		else
			if gs_shutter_iPanelPos = PANELPOS_RIGHT then
				nPanelRight = 2
			else
				nPanelLeft = 1
				nPanelRight = 1
			endif
		endif
	endif

	if gs_shutter_nPanels = 3 then
		if gs_shutter_iPanelPos = PANELPOS_LEFT then
			nPanelLeft = 3
		else
			if gs_shutter_iPanelPos = PANELPOS_RIGHT then
				nPanelRight = 3
			else
				if gs_shutter_iPanelPos = PANELPOS_MOSTLYLEFT then
					nPanelLeft = 2
					nPanelRight = 1
				else
					nPanelLeft = 1
					nPanelRight = 2
				endif
			endif
		endif
	endif

	if gs_shutter_nPanels = 4 then
		if gs_shutter_iPanelPos = PANELPOS_LEFT then
			nPanelLeft = 4
		else
			if gs_shutter_iPanelPos = PANELPOS_RIGHT then
				nPanelRight = 4
			else
				if gs_shutter_iPanelPos = PANELPOS_MOSTLYLEFT then
					nPanelLeft = 3
					nPanelRight = 1
				else
					if gs_shutter_iPanelPos = PANELPOS_MOSTLYRIGHT then
						nPanelLeft = 1
						nPanelRight = 3
					else
						nPanelLeft = 2
						nPanelRight = 2
					endif
				endif
			endif
		endif
	endif
endif


]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

pageStartY = 5 + 30

if bSunShadeNotAvailableByWindowShape then
	ui_pict 47, 7, 1 + pageStartY, 12, 12, 1	! ui_warningsign.png
	ui_style 0,0
	ui_outfield stSunShadeUI[54], 28, 1 + pageStartY, 410, 17
	end
endif

bGreyTextByNone = not(bSunshade)

bShutterWithPanels = 0
if gs_sunShade_iType = SUNSHADE_DECORATIVE | \
	gs_sunShade_iType = SUNSHADE_SHUTTER | \
	gs_sunShade_iType = SUNSHADE_FOLDING | \
	gs_sunShade_iType = SUNSHADE_OUTFOLDING | \
	gs_sunShade_iType = SUNSHADE_SLIDING then

	bShutterWithPanels = 1

endif

gosub "Left_Part"
if (gs_sunShade_iType <> SUNSHADE_OUTFOLDING & gs_sunShade_iType <> SUNSHADE_FOLDING) | \
	(gs_sunShade_iType = SUNSHADE_OUTFOLDING & not(bOutfoldingWarning)) | \
	(gs_sunShade_iType = SUNSHADE_FOLDING & not(bFoldingWarning)) then
	gosub "Right_Part"
else
	ui_pict 47, 232, pageStartY, 12, 12, 1
	ui_outfield stSunShadeUI[43], 252, pageStartY - 2, 190, 200			! warning text
endif



! ------------------------------------------------------------------------------
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! ------------------------------------------------------------------------------


! ==============================================================================
"Left_Part":
! ==============================================================================

	x1 = 3
	x2 = 85
	x3 = 118
	x4 = 218
	dy  = 21
	y0 = 1 + pageStartY
	y2 = 235 - 2 * dy + 2 + pageStartY	! bottom strings
	y1 = y2 - 4 * dy		! middle strings in right coloumn


	y = y0
	ui_style 0, 1
	ui_infield{3} "bSunshade", x1, y-4, x3-x1-1, 19,
		7, "",
		1,
		1, 0, 0, 0, 0,
		"", stSunShadeUI[1], 0,	! Sunshade
		"", stSunShadeUI[1], 1	! Sunshade
		
	ui_style 0, 0

!	y = y + dy
	ui_infield{3} "gs_sunShade_iType", x3, y-4, x4-x3, 19,
						8, "",
						0, 0, 0, 0, 0, 0,
						"", stSunShadeTypes[2], SUNSHADE_DECORATIVE,
						"", stSunShadeTypes[3], SUNSHADE_SHUTTER,
						"", stSunShadeTypes[4], SUNSHADE_FOLDING,
						"", stSunShadeTypes[5], SUNSHADE_OUTFOLDING,
						"", stSunShadeTypes[6], SUNSHADE_SLIDING,
						"", stSunShadeTypes[7], SUNSHADE_ROLLING,
						"", stSunShadeTypes[8], SUNSHADE_EXTVENETIAN,
						"", stSunShadeTypes[9], SUNSHADE_VENETIAN

	y = y + dy

	if bShutterWithPanels then
		if gs_sunShade_iType = SUNSHADE_FOLDING then
			ui_outfield stSunShadeUI[22], x1, y, x3-x1-1, 15		 ! Stacking Direction
			ui_infield{3} "gs_foldingShutter_iStacking", x3, y-4, x4-x3, 19,
							8, "",
							0, 0, 0, 0, 0, 0,
							"", stFoldingShutterStacking[1], STACKING_INSIDE,
							"", stFoldingShutterStacking[2], STACKING_OUTSIDE

			y = y + dy

			ui_outfield stSunShadeUI[3], x1, y, x3-x1-1, 15		! Left
			ui_infield "gs_shutter_nPanels", x3, y-4, x4-x3, 19
			y = y + dy

			ui_outfield stSunShadeUI[4], x1, y, x3-x1-1, 15		! Right
			ui_infield "gs_shutter_nPanels2", x3, y-4, x4-x3, 19
			y = y + dy
		else
			ui_outfield stSunShadeUI[2], x1, y, x3-x1-1, 15, 4 * bGreyTextByNone		! Number of panels
			ui_infield "gs_shutter_nPanels", x3, y-4, x4-x3, 19
			y = y + dy

			ui_outfield stSunShadeUI[6], x1, y, x3-x1-1, 15, 4 * bGreyTextByNone		! Position
			ui_infield{3} "gs_shutter_iPanelPos", x3, y-4, x4-x3, 35,
							2, 3,			! panelPositions.png
							11, 11, 0, 0,
							85, 23,
							1, stShutterPanelPos[1], PANELPOS_SYMMETRIC,
							2, stShutterPanelPos[2], PANELPOS_LEFT,
							3, stShutterPanelPos[3], PANELPOS_RIGHT,
							4, stShutterPanelPos[4], PANELPOS_MOSTLYLEFT,
							5, stShutterPanelPos[5], PANELPOS_MOSTLYRIGHT,
							6, stShutterPanelPos[6], PANELPOS_LEFTTOP,
							7, stShutterPanelPos[7], PANELPOS_LEFTBOTTOM,
							8, stShutterPanelPos[8], PANELPOS_RIGHTTOP,
							9, stShutterPanelPos[9], PANELPOS_RIGHTBOTTOM,
							10, stShutterPanelPos[10], PANELPOS_DOUBLETOP,
							11, stShutterPanelPos[11], PANELPOS_DOUBLEBOTTOM

			y = y + 35 + 2
		endif

		ui_outfield stSunShadeUI[5], x1, y, x3-x1-1, 15, 4 * bGreyTextByNone		! Panel Style

		ui_infield{3} "gs_shutPanel_iType", x3, y-4, x4-x3, 88,
						2, 2,			! shutterTypes.png
						12, 3, 40, 78,
						40, 78,
						2, stShutterPanelTypes[1], PANEL_LOUVER,
						3, stShutterPanelTypes[2], PANEL_LOUVERHORDIVIDED,
						4, stShutterPanelTypes[3], PANEL_LOUVERDIVIDED,
						5, stShutterPanelTypes[4], PANEL_Z,
						6, stShutterPanelTypes[5], PANEL_FRAME,
						7, stShutterPanelTypes[6], PANEL_FRAMEHORDIVIDED,
						8, stShutterPanelTypes[7], PANEL_FULL,
						9, stShutterPanelTypes[8], PANEL_VERTBOARDS,
						10, stShutterPanelTypes[9], PANEL_ROTATEDBOARDS,
						11, stShutterPanelTypes[10], PANEL_PERFORATED,
						1, stShutterPanelTypes[11], PANEL_CUSTOM
		y = y + 88 + 2
	else
		if gs_sunShade_iType = SUNSHADE_ROLLING then
			ui_outfield stSunShadeUI[38], x1, y, x2-x1-1, 15		! Structure
			ui_infield{3} "gs_shutRoll_iPlacement", x2, y-4, x4-x2, 19,
						8, "",
						0, 0, 0, 0, 0, 0,
						"", stShutRollPlacement[1], SHUTROLL_ONFACADE,
						"", stShutRollPlacement[2], SHUTROLL_TOWINDOW,
						"", stShutRollPlacement[3], SHUTROLL_BEHIND

			y = y + dy

			ui_outfield stSunShadeUI[39], x1, y, x2-x1, 15		! Box Shape

			ui_infield{3} "gs_shutRoll_iBoxType", x4-60, y-4, 60, 75,
						2, 39,			! rollingBoxTypes.png
						2, 1, 49, 50,
						49, 50,
						1, stShutRollBoxType[1], SHUTROLL_BOX_RECT,
						2, stShutRollBoxType[2], SHUTROLL_BOX_ARCHED
			y = y + 75 + 2

			if gs_shutRoll_iPlacement <> SHUTROLL_ONFACADE & bEnableCasing then
				ui_outfield stSunShadeUI[50], x1, y, x3-x1-1, 15		! Rail Position
				ui_infield{3} "gs_shutRoll_iRailPos", x3, y-4, x4-x3, 19,
							8, "",
							0, 0, 0, 0, 0, 0,
							"", stShutRollRailPos[1], SHUTROLL_ONCASING,
							"", stShutRollRailPos[2], SHUTROLL_ONWALL

				y = y + dy
				ui_infield{3} "gs_shutRoll_showCasingBehind", x1, y-4, x4, 24,
							7, "",
							1,
							1, 0, 0, 0, 0,
							"", stSunShadeUI[51], 0,
							"", stSunShadeUI[51], 1

				y = y + 24 + 2
			endif
		endif

		if gs_sunShade_iType = SUNSHADE_EXTVENETIAN then
			ui_outfield stSunShadeUI[38], x1, y, x3-x1-1, 15		! Structure
			ui_infield{3} "gs_shutLam_iPlacement", x2, y-4, x4-x2, 19,
						8, "",
						0, 0, 0, 0, 0, 0,
						"", stShutLamPlacement[1], SHUTLAM_ONFACADE,
						"", stShutLamPlacement[2], SHUTLAM_TOWINDOW,
						"", stShutLamPlacement[3], SHUTLAM_BEHIND
			y = y + dy

			ui_infield{3} "gs_shutLam_bRail", x1, y-4, x4-x1, 19,
						7, "",
						1,
						1, 0, 0, 0, 0,
						"", stSunShadeUI[31], 0,				! Rail
						"", stSunShadeUI[31], 1
			y = y + dy

			if gs_shutLam_iPlacement <> SHUTLAM_ONFACADE & bEnableCasing then
				ui_outfield stSunShadeUI[50], x1, y, x3-x1-1, 15, 4 * not(gs_shutLam_bRail)		! Rail Position
				ui_infield{3} "gs_shutLam_iRailPos", x3, y-4, x4-x3, 19,
							8, "",
							0, 0, 0, 0, 0, 0,
							"", stShutLamRailPos[1], SHUTLAM_ONCASING,
							"", stShutLamRailPos[2], SHUTLAM_ONWALL
				y = y + dy

				ui_infield{3} "gs_shutLam_showCasingBehind", x1, y-4, x4, 18*1.5,
							7, "",
							1,
							1, 0, 0, 0, 0,
							"", stSunShadeUI[51], 0,
							"", stSunShadeUI[51], 1
				y = y + 18*1.5 + 2
			endif
		endif
		if gs_sunShade_iType = SUNSHADE_VENETIAN then
			ui_infield{3} "gs_shutLam_showCasingBehind", x1, y-4, x4, 18*1.5,
						7, "",
						1,
						1, 0, 0, 0, 0,
						"", stSunShadeUI[51], 0,
						"", stSunShadeUI[51], 1
			y = y + 18*1.5 + 2
		endif
	endif


	! ------------------------------------------------------------------------------
	! Opening parameters
	! ------------------------------------------------------------------------------

	if gs_sunShade_iType = SUNSHADE_FOLDING | gs_sunShade_iType = SUNSHADE_SLIDING then
		ui_outfield stSunShadeUI[7], x1, y, x3-x1-1, 15		! 3D Opening
		ui_infield "gs_shutter_opLength", x3, y-4, x4-x3, 19
		y = y + dy
	endif

	if gs_sunShade_iType = SUNSHADE_SHUTTER then
		ui_outfield stSunShadeUI[8], x1, y, x3-x1-1, 15		! 3D Opening Angle
		ui_infield "gs_shutter_opAngle", x3, y-4, x4-x3, 19
		y = y + dy
	endif

	if gs_sunShade_iType = SUNSHADE_OUTFOLDING then
		ui_infield{3} "gs_shutter_opened", x1, y-4, x4-x3, 19,
				7, "",
				1,
				1, 0, 0, 0, 0,
				"", stSunShadeUI[9], 0,				! Open in 3D
				"", stSunShadeUI[9], 1
		y = y + dy
	endif

	if gs_sunShade_iType = SUNSHADE_ROLLING | gs_sunShade_iType = SUNSHADE_EXTVENETIAN | gs_sunShade_iType = SUNSHADE_VENETIAN then
		ui_outfield stSunShadeUI[46], x1, y, x3-x1-1, 15		! 3D Opening Height
		ui_infield "gs_shutter_opHeight", x3, y-4, x4-x3, 18
		y = y + dy
	endif


	! ------------------------------------------------------------------------------
	! 2D Symbol
	! ------------------------------------------------------------------------------

	if gs_sunShade_iType = SUNSHADE_ROLLING | gs_sunShade_iType = SUNSHADE_EXTVENETIAN | gs_sunShade_iType = SUNSHADE_VENETIAN then
		ui_infield{3} "gs_sunShade_bShowIn2D", x1, y-4, x4-x1, 19,
			7, "",
			1,
			1, 0, 0, 0, 0,
			"", stSunShadeUI[10], 0,				! 2D Symbol
			"", stSunShadeUI[10], 1
	else
		ui_infield{3} "gs_sunShade_bShowIn2D", x1, y-4, x4-x1, 19,
			7, "",
			1,
			1, 0, 0, 0, 0,
			"", stSunShadeUI[10], 0,				! 2D Symbol
			"", stSunShadeUI[10], 1
	endif
	y = y + dy

	if gs_sunShade_iType = SUNSHADE_SHUTTER then
		ui_infield{3} "gs_shutter_bExtraFrame", x1, y-4, x4-x1, 19,
				7, "",
				1,
				1, 0, 0, 0, 0,
				"", stSunShadeUI[18], 0,				! Extra Frame
				"", stSunShadeUI[18], 1

		y = y + dy
	endif

	if gs_sunShade_iType = SUNSHADE_SLIDING then
		ui_outfield stSunShadeUI[23], x1, y, x3-x1-1, 15
		ui_infield{3} "gs_slidingShutter_iCover", x3, y-4, x4-x3, 19,
						8, "",
						0, 0, 0, 0, 0, 0,
						"", stSlidingShutterCover[1], COVER_NONE,
						"", stSlidingShutterCover[2], COVER_Z,
						"", stSlidingShutterCover[3], COVER_BOX
		y = y + dy
	endif

! ------------------------------------------------------------------------------
	! Include Height in Wallhole Height
	! ------------------------------------------------------------------------------

	if gs_sunShade_iType = SUNSHADE_ROLLING then
		ui_infield{3} "gs_shutRoll_bIncludeBoxHeight", x1, y-6, x4-x1, 26,
			7, "",
			1,
			1, 0, 0, 0, 0,
			"", stSunShadeUI[59], 0,				! Include Height in Wallhole Height
			"", stSunShadeUI[59], 1

		y = y + 26 + 4
	endif

! ------------------------------------------------------------------------------
! Panel Width
! ------------------------------------------------------------------------------

	if gs_sunShade_iType = SUNSHADE_DECORATIVE then
		ui_infield{3} "gs_shutPanel_bAutomaticWidth", x1, y-4, x4-x1, 19,
					7, "",
					1,
					1, 0, 0, 0, 0,
					"", stSunShadeUI[52], 0,				! Automatic Shutter Width
					"", stSunShadeUI[52], 1

		y = y + dy

		bGreyShutterWidth = (bGreyTextByNone | gs_shutPanel_bAutomaticWidth)

		ui_outfield stSunShadeUI[53], x1, y, x3-x1-1, 15, 4 * bGreyShutterWidth		 ! Shutter Width
		ui_infield	"gs_shutPanel_panelWidth", x3, y-4, x4-x3, 19
		y = y + dy
	endif

	ui_separator 222, y0, 222, 265
return


! ==============================================================================
"Right_Part":
! ==============================================================================

	y = y0
	x1 = 225 + x1
	x2 = 225 + x2
	x3 = 225 + x3
	x4 = 444-x1+225

! ------------------------------------------------------------------------------
! Decorative picture & parameters
! ------------------------------------------------------------------------------

	if gs_sunShade_iType = SUNSHADE_DECORATIVE then

		xpic = 315
		ypic = y + dy

		if	gs_shutPanel_iType = PANEL_LOUVER | \
			gs_shutPanel_iType = PANEL_LOUVERHORDIVIDED | \
			gs_shutPanel_iType = PANEL_LOUVERDIVIDED then

			ui_pict 13, xpic, ypic, 117, 78, 1			! panel_decorative_louvers.png

			ui_infield "gs_shutPanel_Thk", xpic, ypic-dy, 60, 18				ui_tooltip stSunshadeTooltip[1]		! Frame Thickness
			ui_infield "gs_shutPanel_frameWidth", xpic-64, ypic+15, 60, 18		ui_tooltip stSunshadeTooltip[2]		! Frame Width
			ui_infield "gs_shutPanel_louverAngle", xpic-64, ypic+55, 60, 18		ui_tooltip stSunshadeTooltip[3]		! Louver Angle
			yPars = ypic + 78 + dy + 5
		endif

		if gs_shutPanel_iType = PANEL_Z then
			ui_pict 14, xpic, ypic, 117, 78, 1			! panel_decorative_z.png

			ui_infield "gs_shutPanel_boardThkVert", xpic+26, ypic-dy, 60, 18	ui_tooltip stSunshadeTooltip[4]		! Vertical Boards Thickness
			ui_infield "gs_shutPanel_ZThk", xpic-38, ypic-dy, 60, 18			ui_tooltip stSunshadeTooltip[26]	! Z Frame Thickness
			ui_infield "gs_shutPanel_ZWidth", xpic-63, ypic+40, 60, 18			ui_tooltip stSunshadeTooltip[25]	! Z Frame Width
			yPars = ypic + 78 + dy + 5
		endif

		if	gs_shutPanel_iType = PANEL_FRAME | \
			gs_shutPanel_iType = PANEL_FRAMEHORDIVIDED | \
			gs_shutPanel_iType = PANEL_PERFORATED then

			ui_pict 11, xpic, ypic, 117, 94, 1			! panel_decorative_frame.png

			ui_infield "gs_shutPanel_Thk", xpic, ypic-dy, 60, 18			ui_tooltip stSunshadeTooltip[1]		! Frame Thickness
			ui_infield "gs_shutPanel_frameWidth", xpic-64, ypic+15, 60, 18	ui_tooltip stSunshadeTooltip[2]		! Frame Width
			ui_infield "gs_shutPanel_fieldThk", xpic, ypic+96, 60, 18		ui_tooltip stSunshadeTooltip[5]		! Filling Thickness
			yPars = ypic + 94 + dy + 5
		endif

		if	gs_shutPanel_iType = PANEL_FULL | \
			gs_shutPanel_iType = PANEL_CUSTOM then

			ui_pict 12, xpic, ypic, 117, 78, 1			! panel_decorative_full.png

			ui_infield "gs_shutPanel_Thk", xpic, ypic-dy, 60, 18	ui_tooltip stSunshadeTooltip[6]		! Panel Thickness
			yPars = ypic + 78 + dy + 5
		endif

		if	gs_shutPanel_iType = PANEL_VERTBOARDS then
			ui_pict 12, xpic, ypic, 117, 78, 1			! panel_decorative_full.png

			ui_infield "gs_shutPanel_boardThkVert", xpic, ypic-dy, 60, 18	ui_tooltip stSunshadeTooltip[6]		! Panel Thickness
			yPars = ypic + 78 + dy + 5
		endif

		if gs_shutPanel_iType = PANEL_ROTATEDBOARDS then
			ui_pict 10, xpic, ypic, 117, 78, 1			! panel_decorative_double.png

			ui_infield "gs_shutPanel_boardThkVert", xpic+26, ypic-dy, 60, 18	ui_tooltip stSunshadeTooltip[4]		! Vertical Boards Thickness
			ui_infield "gs_shutPanel_boardThkHor", xpic-38, ypic-dy, 60, 18		ui_tooltip stSunshadeTooltip[7]		! Horizontal Boards Thickness
			yPars = ypic + 78 + dy + 5
		endif
	endif

! ------------------------------------------------------------------------------
! Opening picture & parameters
! ------------------------------------------------------------------------------

	if gs_sunShade_iType = SUNSHADE_SHUTTER then
		xpic = 300
		ypic = y + dy

		if	gs_shutPanel_iType = PANEL_LOUVER | \
			gs_shutPanel_iType = PANEL_LOUVERHORDIVIDED | \
			gs_shutPanel_iType = PANEL_LOUVERDIVIDED then

			if gs_shutter_bExtraFrame then
				ui_pict 22, xpic, ypic, 111, 92, 1			! panel_shutter_louvers_2.png
			else
				ui_pict 21, xpic, ypic, 100, 92, 1			! panel_shutter_louvers.png
			endif

			ui_infield "gs_shutPanel_frameWidth", xpic-63, ypic+32, 60, 18		ui_tooltip stSunshadeTooltip[2]		! Frame Width
			ui_infield "gs_shutPanel_louverAngle", xpic-63, ypic+65, 60, 18		ui_tooltip stSunshadeTooltip[3]		! Louver Angle
			ui_infield "gs_shutPanel_Thk", xpic, ypic+93, 60, 18				ui_tooltip stSunshadeTooltip[1]		! Frame Thickness
		endif

		if gs_shutPanel_iType = PANEL_Z then
			if gs_shutter_bExtraFrame then
				ui_pict 24, xpic, ypic, 108, 92, 1			! panel_shutter_z_2.png
			else
				ui_pict 23, xpic, ypic, 98, 92, 1			! panel_shutter_z.png
			endif

			ui_infield "gs_shutPanel_boardThkVert", xpic+30-gs_shutter_bExtraFrame*15, ypic+93, 60, 18	ui_tooltip stSunshadeTooltip[4]		! Vertical Boards Thickness
			ui_infield "gs_shutPanel_ZThk", xpic-34-gs_shutter_bExtraFrame*15, ypic+93, 60, 18			ui_tooltip stSunshadeTooltip[26]	! Z Frame Thickness
			ui_infield "gs_shutPanel_ZWidth", xpic-63, ypic+52, 60, 18									ui_tooltip stSunshadeTooltip[25]	! Z Frame Width
		endif

		if	gs_shutPanel_iType = PANEL_FRAME | \
			gs_shutPanel_iType = PANEL_FRAMEHORDIVIDED | \
			gs_shutPanel_iType = PANEL_PERFORATED then

			if gs_shutter_bExtraFrame then
				ui_pict 18, xpic, ypic, 108, 92, 1			! panel_shutter_frame_2.png
			else
				ui_pict 17, xpic, ypic, 98, 92, 1			! panel_shutter_frame.png
			endif

			ui_infield "gs_shutPanel_Thk", xpic-63, ypic+57, 60, 18			ui_tooltip stSunshadeTooltip[1]			! Frame Thickness
			ui_infield "gs_shutPanel_frameWidth", xpic-63, ypic+32, 60, 18		ui_tooltip stSunshadeTooltip[2]		! Frame Width
			ui_infield "gs_shutPanel_fieldThk", xpic, ypic+93, 60, 18		ui_tooltip stSunshadeTooltip[5]			! Filling Thickness
		endif

		if	gs_shutPanel_iType = PANEL_FULL | \
			gs_shutPanel_iType = PANEL_CUSTOM | \
			gs_shutPanel_iType = PANEL_VERTBOARDS then

			if gs_shutter_bExtraFrame then
				ui_pict 20, xpic, ypic, 108, 92, 1			! panel_shutter_full_2.png
			else
				ui_pict 19, xpic, ypic, 98, 92, 1			! panel_shutter_full.png
			endif

			if gs_shutPanel_iType = PANEL_VERTBOARDS then
				ui_infield "gs_shutPanel_boardThkVert", xpic, ypic+93, 60, 18		ui_tooltip stSunshadeTooltip[6]		! Panel Thickness
			else
				ui_infield "gs_shutPanel_Thk", xpic, ypic+93, 60, 18		ui_tooltip stSunshadeTooltip[6]		! Panel Thickness
			endif
		endif

		if gs_shutPanel_iType = PANEL_ROTATEDBOARDS then
			if gs_shutter_bExtraFrame then
				ui_pict 16, xpic, ypic, 108, 92, 1			! panel_shutter_double_2.png
			else
				ui_pict 15, xpic, ypic, 98, 92, 1			! panel_shutter_double.png
			endif

			ui_infield "gs_shutPanel_boardThkVert", xpic+30-gs_shutter_bExtraFrame*15, ypic+93, 60, 18		ui_tooltip stSunshadeTooltip[4]		! Vertical Boards Thickness
			ui_infield "gs_shutPanel_boardThkHor", xpic-34-gs_shutter_bExtraFrame*15, ypic+93, 60, 18		ui_tooltip stSunshadeTooltip[7]		! Horizontal Boards Thickness
		endif

		ui_infield "gs_shutter_innerOffset", xpic-63, ypic+10, 60, 18		ui_tooltip stSunshadeTooltip[8]		! Inside Offset

		ui_infield "gs_shutter_closingDepth", xpic-gs_shutter_bExtraFrame*25, ypic-dy, 60, 18		ui_tooltip stSunshadeTooltip[9]		! Closing Depth

		if gs_shutter_bExtraFrame then
			ui_infield "gs_shutter_extraFrameThk", xpic+40, ypic-dy, 60, 18		ui_tooltip stSunshadeTooltip[10]		! Extra Frame Thickness
			ui_infield "gs_shutter_extraFrameWidth", xpic+80, ypic+93, 60, 18		ui_tooltip stSunshadeTooltip[11]		! Extra Frame Width
		endif

		yPars = ypic + 92 + dy + 5
	endif


! ------------------------------------------------------------------------------
! Folding to Reveal, Folding to Wall Face picture & parameters
! ------------------------------------------------------------------------------

	if gs_sunShade_iType = SUNSHADE_FOLDING | gs_sunShade_iType = SUNSHADE_OUTFOLDING then
		xpicRight = 330
		ypic = y + dy

		xpic2 = xpicRight + 35

		ui_separator xpicRight + 25, ypic-dy, xpicRight + 25, ypic+70+dy

		if gs_sunShade_iType = SUNSHADE_FOLDING then
			if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
				ui_pict 49, xpic2, ypic, 76, 65, 1				! folding_horizontal_section_2.png
			else
				if gs_foldingShutter_iStacking = STACKING_OUTSIDE then
					ui_infield "gs_foldingShutter_ovhg", xpic2+10, ypic-dy, 60, 18		ui_tooltip stSunshadeTooltip[12]		! Folding Shutter Overhang
					ui_pict 9, xpic2, ypic, 76, 65, 1				! folding_horizontal_section.png
				else
					ui_pict 50, xpic2, ypic, 76, 65, 1				! folding_horizontal_section_3.png
				endif
			endif
			yPars = ypic + 65 + dy + 5
		else
			if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
				ui_pict 48, xpic2, ypic, 76, 68, 1				! outfolding_horizontal_section_2.png
			else
				ui_infield "gs_outFoldingShutter_panelIn", xpic2+10, ypic-dy, 60, 18		ui_tooltip stSunshadeTooltip[13]	! Inner Panel Width
				ui_pict 46, xpic2, ypic, 76, 68, 1				! outfolding_horizontal_section.png
			endif
			yPars = ypic + 68 + dy + 5
		endif

		if	gs_shutPanel_iType = PANEL_LOUVER | \
			gs_shutPanel_iType = PANEL_LOUVERHORDIVIDED | \
			gs_shutPanel_iType = PANEL_LOUVERDIVIDED then

			ui_pict 7, xpicRight - 35, ypic, 35, 79, 1			! panel_folding_louvers.png

			ui_infield "gs_shutPanel_frameWidth", xpicRight-35-63, ypic+12, 60, 18		ui_tooltip stSunshadeTooltip[2]		! Frame Width
			ui_infield "gs_shutPanel_louverAngle", xpicRight-35-63, ypic+42, 60, 18		ui_tooltip stSunshadeTooltip[3]		! Louver Angle
			ui_infield "gs_shutPanel_Thk", xpicRight-40, ypic-dy, 60, 18				ui_tooltip stSunshadeTooltip[1]		! Frame Thickness
			yPars = ypic + 79 + dy + 5
		endif

		if gs_shutPanel_iType = PANEL_Z then
			ui_pict 8, xpicRight - 35, ypic, 35, 94, 1			! panel_folding_z.png

			ui_infield "gs_shutPanel_boardThkVert", xpicRight-40, ypic-dy, 60, 18	ui_tooltip stSunshadeTooltip[4]			! Vertical Boards Thickness
			ui_infield "gs_shutPanel_ZThk", xpicRight-35-63, ypic+2, 60, 18			ui_tooltip stSunshadeTooltip[26]		! Z Frame Thickness
			ui_infield "gs_shutPanel_ZWidth", xpicRight-35-63, ypic+45, 60, 18		ui_tooltip stSunshadeTooltip[25]		! Z Frame Width
			yPars = ypic + 94 + dy + 5
		endif

		if	gs_shutPanel_iType = PANEL_FRAME | \
			gs_shutPanel_iType = PANEL_FRAMEHORDIVIDED | \
			gs_shutPanel_iType = PANEL_PERFORATED then

			ui_pict 5, xpicRight - 28, ypic, 28, 86, 1		! panel_folding_frame.png

			ui_infield "gs_shutPanel_Thk", xpicRight-28-15, ypic-dy, 60, 18			ui_tooltip stSunshadeTooltip[1]			! Frame Thickness
			ui_infield "gs_shutPanel_frameWidth", xpicRight-28-63, ypic+20, 60, 18		ui_tooltip stSunshadeTooltip[2]		! Frame Width
			ui_infield "gs_shutPanel_fieldThk", xpicRight-28-15, ypic+87, 60, 18		ui_tooltip stSunshadeTooltip[5]		! Filing Thickness
			yPars = ypic + 86 + dy + 5
		endif

		if	gs_shutPanel_iType = PANEL_FULL | \
			gs_shutPanel_iType = PANEL_CUSTOM | \
			gs_shutPanel_iType = PANEL_VERTBOARDS then

			ui_pict 6, xpicRight - 13, ypic, 13, 92, 1			! panel_folding_full

			if gs_shutPanel_iType = PANEL_VERTBOARDS then
				ui_infield "gs_shutPanel_boardThkVert", xpicRight-28-15, ypic-dy, 60, 18		ui_tooltip stSunshadeTooltip[6]		! Panel Thickness
			else
				ui_infield "gs_shutPanel_Thk", xpicRight-28-15, ypic-dy, 60, 18			ui_tooltip stSunshadeTooltip[6]		! Panel Thickness
			endif
			yPars = ypic + 92 + dy + 5
		endif

		if gs_shutPanel_iType = PANEL_ROTATEDBOARDS then
			ui_pict 4, xpicRight-35, ypic, 35, 94, 1		! panel_folding_double.png

			ui_infield "gs_shutPanel_boardThkVert", xpicRight-35-63, ypic+2, 60, 18			ui_tooltip stSunshadeTooltip[4]		! Vertical Boards Thickness
			ui_infield "gs_shutPanel_boardThkHor", xpicRight-35-10, ypic-dy, 60, 18			ui_tooltip stSunshadeTooltip[7]		! Horizontal Boards Thickness
			yPars = ypic + 94 + dy + 5
		endif
	endif


! ------------------------------------------------------------------------------
! Sliding picture & parameters
! ------------------------------------------------------------------------------

	if gs_sunShade_iType = SUNSHADE_SLIDING then
		xpic = 315
		ypic = y + 5

		ui_pict 25, xpic+40, ypic, 81, 104, 1		! slidingWall.png

		if gs_slidingShutter_iCover = COVER_NONE then
			ui_pict 26, xpic, ypic, 40, 30, 1			! slidingTop.png
		else
			if gs_slidingShutter_iCover = COVER_Z then
				ui_pict 28, xpic, ypic, 40, 30, 1			! slidingTopZ.png
			else
				ui_pict 27, xpic, ypic, 40, 30, 1			! slidingTopBox.png
			endif
		endif

		ui_infield "gs_slidingShutter_railWidth", xpic-63, ypic-2, 60, 18		ui_tooltip stSunshadeTooltip[14]		! Rail Width

		if	gs_shutPanel_iType = PANEL_LOUVER | \
			gs_shutPanel_iType = PANEL_LOUVERHORDIVIDED | \
			gs_shutPanel_iType = PANEL_LOUVERDIVIDED then

			ui_pict 32, xpic+2, ypic+30, 34, 73, 1			! panel_sliding_louvers.png

			ui_infield "gs_shutPanel_frameWidth", xpic-63, ypic+32, 60, 18		ui_tooltip stSunshadeTooltip[2]			! Frame Width
			ui_infield "gs_shutPanel_louverAngle", xpic-63, ypic+62, 60, 18		ui_tooltip stSunshadeTooltip[3]			! Louver Angle
			ui_infield "gs_shutPanel_Thk", xpic, ypic+104, 60, 18				ui_tooltip stSunshadeTooltip[1]			! Frame Thickness
		endif

		if gs_shutPanel_iType = PANEL_Z then
			ui_pict 33, xpic+2, ypic+30, 34, 73, 1			! panel_sliding_z.png

			ui_infield "gs_shutPanel_boardThkVert", xpic+27, ypic+104, 60, 18		ui_tooltip stSunshadeTooltip[4]		! Vertical Boards Thickness
			ui_infield "gs_shutPanel_ZThk", xpic-36, ypic+104, 60, 18				ui_tooltip stSunshadeTooltip[26]	! Z Frame Thickness
			ui_infield "gs_shutPanel_ZWidth", xpic-63, ypic+55, 60, 18				ui_tooltip stSunshadeTooltip[25]	! Z Frame Width
		endif

		if	gs_shutPanel_iType = PANEL_FRAME | \
			gs_shutPanel_iType = PANEL_FRAMEHORDIVIDED | \
			gs_shutPanel_iType = PANEL_PERFORATED then

			ui_pict 30, xpic+3, ypic+30, 34, 73, 1			! panel_sliding_frame.png

			ui_infield "gs_shutPanel_Thk", xpic, ypic+104, 60, 18				ui_tooltip stSunshadeTooltip[1]			! Frame Thickness
			ui_infield "gs_shutPanel_frameWidth", xpic-63, ypic+32, 60, 18		ui_tooltip stSunshadeTooltip[2]			! Frame Width
			ui_infield "gs_shutPanel_fieldThk", xpic-63, ypic+62, 60, 18		ui_tooltip stSunshadeTooltip[5]			! Filling Thickness
		endif

		if	gs_shutPanel_iType = PANEL_FULL | \
			gs_shutPanel_iType = PANEL_CUSTOM | \
			gs_shutPanel_iType = PANEL_VERTBOARDS then

			ui_pict 31, xpic+2, ypic+30, 34, 73, 1			! panel_sliding_full.png

			if gs_shutPanel_iType = PANEL_VERTBOARDS then
				ui_infield "gs_shutPanel_boardThkVert", xpic, ypic+104, 60, 18		ui_tooltip stSunshadeTooltip[6]		! Panel Thickness
			else
				ui_infield "gs_shutPanel_Thk", xpic, ypic+104, 60, 18				ui_tooltip stSunshadeTooltip[6]		! Panel Thickness
			endif
		endif

		if gs_shutPanel_iType = PANEL_ROTATEDBOARDS then
			ui_pict 29, xpic+6, ypic+30, 34, 73, 1			! panel_sliding_double.png

			ui_infield "gs_shutPanel_boardThkVert", xpic-33, ypic+104, 60, 18		ui_tooltip stSunshadeTooltip[4]		! Vertical Boards Thickness
			ui_infield "gs_shutPanel_boardThkHor", xpic+30, ypic+104, 60, 18		ui_tooltip stSunshadeTooltip[7]		! Horizontal Boards Thickness
		endif
		yPars = ypic + 104 + dy + 5
	endif

! ------------------------------------------------------------------------------
! Parameters depending on panel types
! ------------------------------------------------------------------------------

	if bShutterWithPanels then
		y = yPars

		if gs_shutPanel_iType = PANEL_LOUVERHORDIVIDED | \
			gs_shutPanel_iType = PANEL_LOUVERDIVIDED then


			ui_style 0, 1
			ui_outfield stSunShadeUI[11], x1, y, x4-x1, 15		 ! Divider Width
			ui_style 0, 0

			y = y + dy

			ui_outfield stSunShadeUI[12], x1, y, x2-x1, 15		 ! Horiztontal
			ui_infield	"gs_shutPanel_midFrameHorW", x3, y-4, x4-x3, 19

			y = y + dy

			if gs_shutPanel_iType = PANEL_LOUVERDIVIDED then
				ui_outfield stSunShadeUI[13], x1, y, x2-x1, 15		 ! Vertical
				ui_infield	"gs_shutPanel_midFrameVertW", x3, y-4, x4-x3, 19
				y = y + dy
			endif
		endif
		if gs_shutPanel_iType = PANEL_Z then
			ui_style 0, 1
			ui_outfield stSunShadeUI[17], x1, y, x4-x1, 15		 ! Board Width
			ui_style 0, 0

			y = y + dy

			ui_outfield stSunShadeUI[13], x1, y, x2-x1, 15		 ! Vertical
			ui_infield	"gs_shutPanel_ZBoardW", x3, y-4, x4-x3, 19
			y = y + dy
		endif
		if gs_shutPanel_iType = PANEL_FRAMEHORDIVIDED then
			ui_style 0, 1
			ui_outfield stSunShadeUI[11], x1, y, x4-x1, 15		 ! Divider Width
			ui_style 0, 0

			y = y + dy

			ui_outfield stSunShadeUI[12], x1, y, x2-x1, 15		 ! Horiztontal
			ui_infield	"gs_shutPanel_midFrameHorW", x3, y-4, x4-x3, 19
			y = y + dy
		endif
		if gs_shutPanel_iType = PANEL_VERTBOARDS then
			ui_style 0, 1
			ui_outfield stSunShadeUI[16], x1, y, x4-x1, 15		 ! Approximate Board Width
			ui_style 0, 0

			y = y + dy

			ui_outfield stSunShadeUI[13], x1, y, x2-x1, 15		 ! Vertical
			ui_infield	"gs_shutPanel_vertBoardW", x3, y-4, x4-x3, 19
			y = y + dy
		endif
		if gs_shutPanel_iType = PANEL_ROTATEDBOARDS then
			ui_style 0, 1
			ui_outfield stSunShadeUI[16], x1, y, x4-x1, 15		 ! Approximate Board Width
			ui_style 0, 0
			y = y + dy

			ui_outfield stSunShadeUI[13], x1, y, x2-x1, 15		 ! Vertical
			ui_infield	"gs_shutPanel_vertBoardW", x3, y-4, x4-x3, 19
			y = y + dy

			ui_outfield stSunShadeUI[12], x1, y, x2-x1, 15		 ! Horizontal
			ui_infield	"gs_shutPanel_horBoardW", x3, y-4, x4-x3, 19
			y = y + dy
		endif
		if gs_shutPanel_iType = PANEL_PERFORATED then
			ui_outfield stSunShadeUI[19], x1, y, x2-x1, 15		 ! Holes Radius
			ui_infield	"gs_shutPanel_holeRadius", x3, y-4, x4-x3, 19
			y = y + dy
			ui_outfield stSunShadeUI[20], x1, y, x2-x1, 15		 ! Holes Horizontal
			ui_infield	"gs_shutPanel_nHoleHor", x3, y-4, x4-x3, 19
			y = y + dy
			ui_outfield stSunShadeUI[21], x1, y, x2-x1, 15		 ! Holes Vertical
			ui_infield	"gs_shutPanel_nHoleVert", x3, y-4, x4-x3, 19
			y = y + dy
		endif
		if gs_shutPanel_iType = PANEL_CUSTOM then
			ui_outfield stSunShadeUI[24], x1, y, x2-x1, 15		 ! Holes Radius
			ui_infield	"gs_cust_shutterPanel", x3, y-4, x4-x3, 19
			y = y + dy
		endif
	endif


! ------------------------------------------------------------------------------
! Stacking & automatic height
! ------------------------------------------------------------------------------

	if gs_sunShade_iType = SUNSHADE_DECORATIVE | gs_sunShade_iType = SUNSHADE_SHUTTER | \
		gs_sunShade_iType = SUNSHADE_SLIDING then

		y = 266 - 2*dy - 2
		ui_infield{3} "gs_sunShade_bAutomaticHeight", x1, y, x4-x1, 18,
					7, "",
					2,
					1, 20, 20, 20, 20,
					0, stSunShadeUI[14], 0,				! Automatic Shutter Height
					1, stSunShadeUI[14], 1

		y = y + dy

		bGreyShutterHeight = (bGreyTextByNone | gs_sunShade_bAutomaticHeight)

		ui_outfield stSunShadeUI[15], x1, y, x3-x1, 18, 4 * bGreyShutterHeight		 ! Shutter Height
		ui_infield	"gs_sunShade_height", x3, y, x4-x3, 18
	endif


! ------------------------------------------------------------------------------
! Rolling picture & parameters
! ------------------------------------------------------------------------------

	if gs_sunShade_iType = SUNSHADE_ROLLING then
		xpic = 312
		ypic = 38 + pageStartY
		picDiff = 0
		if gs_shutRoll_iPlacement = SHUTROLL_ONFACADE then
			if gs_shutRoll_iBoxType = SHUTROLL_BOX_ARCHED then
				ui_pict 42, xpic, ypic, 105, 112, 1				! rolling_facade_arched.png
			else
				ui_pict 43, xpic, ypic, 105, 112, 1				! rolling_facade_rect.png

				ui_infield "gs_shutRoll_boxAngle", xpic-62, ypic+5, 60, 18		ui_tooltip stSunshadeTooltip[15]		! Box Angle
			endif
			picDiff = 7
			ui_infield "gs_shutRoll_distFromWall", xpic+52, ypic-20, 60, 18		ui_tooltip stSunshadeTooltip[16]		! Distance from Wall
		endif

		if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW then
			if gs_shutRoll_iBoxType = SHUTROLL_BOX_ARCHED then
				ui_pict 44, xpic, ypic, 98, 112, 1				! rolling_onWindow_arched.png
			else
				ui_pict 45, xpic, ypic, 98, 112, 1				! rolling_onWindow_rect.png
			endif
		endif

		if gs_shutRoll_iPlacement = SHUTROLL_BEHIND then
			if gs_shutRoll_cutWallBehind then
				ui_pict 40, xpic, ypic, 98, 112, 1			! rolling_behind.png
			else
				ui_pict 41, xpic, ypic, 98, 112, 1			! rolling_behind_noIns.png
			endif

			ui_infield "gs_shutRoll_railDepth", xpic-62, ypic-5, 60, 18			ui_tooltip stSunshadeTooltip[17]		! Rail Depth
		endif

		boxWidthXPos = -10
		if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW then boxWidthXPos = 10
		if gs_shutRoll_iPlacement = SHUTROLL_BEHIND then boxWidthXPos = 20

		ui_infield "gs_shutRoll_boxWidth", xpic+boxWidthXPos, ypic-20, 60, 18		ui_tooltip stSunshadeTooltip[18]	! Box Width
		ui_infield "gs_shutRoll_boxHeight", xpic-62, ypic+50, 60, 18				ui_tooltip stSunshadeTooltip[19]	! Box Height
		ui_infield "gs_shutRoll_segmentWidth", xpic-62, ypic+95, 60, 18				ui_tooltip stSunshadeTooltip[27]	! Slat Width

		if gs_shutRoll_iPlacement = SHUTROLL_BEHIND then ui_infield "gs_shutRoll_distFromHead", xpic-62, ypic+73, 60, 18				ui_tooltip stSunshadeTooltip[21]		! Distance from Header

		y = y2 - 2

		if gs_shutRoll_iPlacement = SHUTROLL_BEHIND then
			y = y - dy

			ui_outfield stSunShadeUI[49], x1, y, x4-x1-115, 15		! Box Default Width
			ui_infield{3} "gs_shutRoll_iBoxDefaultSize", x4-110, y-4, 110, 18,
					8, "",
					1,
					1, 0, 0, 0, 0,
					"", stShutRollBoxDefaultSize[1], 1,				! Insulation behind Box
					"", stShutRollBoxDefaultSize[2], 2

			y = y + dy
			ui_outfield stSunShadeUI[47], x1, y, x4-x1-65, 15		! Box Offset Left
			ui_infield "gs_shutRoll_boxOffsetLeft", x4-60, y-4, 60, 19				ui_tooltip stSunShadeUI[47]		! Box Offset Left

			y = y + dy
			ui_outfield stSunShadeUI[48], x1, y, x4-x1-65, 15		! Box Offset Right
			ui_infield "gs_shutRoll_boxOffsetRight", x4-60, y-4, 60, 19				ui_tooltip stSunShadeUI[48]		! Box Offset Right

			y = y0
			ui_infield{3} "gs_shutRoll_cutWallBehind", x1, y-4, x4-x1, 19,
					7, "",
					1,
					1, 0, 0, 0, 0,
					"", stSunShadeUI[41], 0,				! Insulation behind Box
					"", stSunShadeUI[41], 1

		else
			ui_outfield stSunShadeUI[40], x1, y, x4-x1-65, 15		! Box Bottom from Header
			ui_infield "gs_shutRoll_distFromHead", x4-60, y-4, 60, 19					ui_tooltip stSunshadeTooltip[21]		! Distance from Header
		endif
	endif


! ------------------------------------------------------------------------------
! External Venetian picture & parameters
! ------------------------------------------------------------------------------

	if gs_sunShade_iType = SUNSHADE_EXTVENETIAN then
		xpic = 320
		ypic = 18 + pageStartY

		if gs_shutLam_iPlacement = SHUTLAM_ONFACADE then
			ui_pict 37, xpic, ypic, 95, 117, 1			! venetian_onFacade.png

			ui_infield "gs_shutLam_distFromWall", xpic+43, ypic-20, 60, 18		ui_tooltip stSunshadeTooltip[16]		! Distance from Wall
			ui_infield "gs_shutLam_boxWidth", xpic-22, ypic-20, 60, 18			ui_tooltip stSunshadeTooltip[18]		! Box Width
		endif

		if gs_shutLam_iPlacement = SHUTLAM_TOWINDOW then
			ui_pict 38, xpic, ypic, 95, 117, 1			! venetian_toWindow.png
			ui_infield "gs_shutLam_boxWidth", xpic, ypic-20, 60, 18				ui_tooltip stSunshadeTooltip[18]		! Box Width
		endif

		if gs_shutLam_iPlacement = SHUTLAM_BEHIND then
			if gs_shutLam_cutWallBehind then
				ui_pict 35, xpic, ypic, 95, 117, 1			! venetian_behind.png
			else
				ui_pict 36, xpic, ypic, 95, 117, 1			! venetian_behind_noIns.png
			endif
			ui_infield "gs_shutLam_boxWidth", xpic+25, ypic-20, 60, 18			ui_tooltip stSunshadeTooltip[18]		! Box Width
			ui_infield "gs_shutLam_coverWidth", xpic-40, ypic-20, 60, 18		ui_tooltip stSunshadeTooltip[22]		! Cover Width
		endif

		yDiff = 0
		if gs_shutLam_iPlacement = SHUTLAM_BEHIND then yDiff = 15
		ui_infield "gs_shutLam_boxHeight", xpic-62, ypic+50, 60, 18				ui_tooltip stSunshadeTooltip[19]		! Box Height
		ui_infield "gs_shutLam_segmentWidth", xpic-62, ypic+85+yDiff, 60, 18	ui_tooltip stSunshadeTooltip[20]		! Blades Width

		y = y2 - 2 * dy

!		ui_infield{3} "gs_shutLam_bRail", x1, y, x4-x1, 18,
!					7, "",
!					2,
!					1, 20, 20, 20, 20,
!					0, stSunShadeUI[31], 0,				! Rail
!					1, stSunShadeUI[31], 1

		y = y + dy

		ui_outfield stSunShadeUI[42], x1, y, x4-x1-65, 15		! Angle of Slats
		ui_infield "gs_shutLam_rotation", x4-60, y-4, 60, 19

		y = y + dy

		ui_outfield stSunShadeUI[40], x1, y, x4-x1-65, 15		! Box Bottom from Header
		ui_infield "gs_shutLam_distFromHead", x4-60, y-4, 60, 19

		y = y + dy

		if gs_shutLam_iPlacement = SHUTLAM_BEHIND then
			ui_infield{3} "gs_shutLam_cutWallBehind", x1, y-4, x4-x1, 19,
					7, "",
					1,
					1, 0, 0, 0, 0,
					"", stSunShadeUI[41], 0,				! Insulation behind Box
					"", stSunShadeUI[41], 1
		endif
	endif

! ------------------------------------------------------------------------------
! Venetian in Lintel picture & parameters
! ------------------------------------------------------------------------------

	if gs_sunShade_iType = SUNSHADE_VENETIAN then
		xpic = 310
		ypic = 43 + pageStartY

		ui_pict 34, xpic, ypic, 100, 103, 1			! venetian_inLintel.png

		ui_infield "gs_shutLam2_boxWidth", xpic-15, ypic-20, 60, 18			ui_tooltip stSunshadeTooltip[18]		! Box Width
		ui_infield "gs_shutLam2_boxHeight", xpic+50, ypic-20, 60, 18		ui_tooltip stSunshadeTooltip[19]		! Box Height
		ui_infield "gs_shutLam2_distFromWindow", xpic+25, ypic+104, 60, 18	ui_tooltip stSunshadeTooltip[23]		! Distance from Window
		ui_infield "gs_shutLam2_axisFromHead", xpic-62, ypic+40, 60, 18		ui_tooltip stSunshadeTooltip[24]		! Axis from Header

		ui_outfield stSunShadeUI[42], x1, y2, x4-x1-65, 15		! Angle of Slats
		ui_infield "gs_shutLam2_rotation", x4-60, y-4, 60, 19

		y = y2 + dy

		ui_outfield stSunShadeUI[40], x1, y, x4-x1-65, 15		! Box Bottom from Header
		ui_infield "gs_shutLam2_distFromHead", x4-60, y-4, 60, 19

	endif
return



]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

! ------------------------------------------------------------------------------
! Sunshade types
! ------------------------------------------------------------------------------

if gs_sunShade_typeEnable > 0 then
	if gs_sunShade_bChangeEnabledTypes then
		dim gs_sunShade_iCashedEnableTypes[]

		nEnabledTypes = 0

		! available bits - use in gs_sunShade_typeEnable
		! ------------------------------------------------------------------------------
		! 1 - None (integer value: 0)
		! 2 - Decorative shutter (integer value: 1)
		! 4 - Opening shutter (int: 2)
		! 8 - Folding to Reveal shutter	(int: 3)
		! 16 - Folding to Wall Face shutter	(int: 4)
		! 32 - Sliding shutter	(int: 5)
		! 64 - Rolling shutter (int: 6)
		! 128 - External venetian (int: 7)
		! 256 - Venetian in lintel  (int: 8)

		for i = 1 to vardim1(stSunShadeTypes)
			if bittest (gs_sunShade_typeEnable, i-1) then
				nEnabledTypes = nEnabledTypes + 1
				gs_sunShade_iCashedEnableTypes[nEnabledTypes] = i-1
			endif
		next i

		parameters gs_sunShade_typeEnable		= gs_sunShade_typeEnable,
				gs_sunShade_iCashedEnableTypes	= gs_sunShade_iCashedEnableTypes

	endif

	dim sunShadeEnableTypes[]
	for i = vardim1(gs_sunShade_iCashedEnableTypes) to 1 step -1
		sunShadeEnableTypes[i] = stSunShadeTypes[gs_sunShade_iCashedEnableTypes[i]+1]
	next i

	isInvalidSunShadeType = 1
	for i = 1 to vardim1(gs_sunShade_iCashedEnableTypes)
		if gs_sunShade_iType = gs_sunShade_iCashedEnableTypes[i] then
			isInvalidSunShadeType = 0
		endif
	next i

	if isInvalidSunShadeType then
		bSunshade = 0
		parameters bSunshade = bSunshade
	endif

	values{2} "gs_sunShade_iType" gs_sunShade_iCashedEnableTypes, sunShadeEnableTypes
endif


! ------------------------------------------------------------------------------
! Hiding general parameters in case of no shutter
! ------------------------------------------------------------------------------

if not(bSunshade) then
	values "gs_shutter_iPanelPos" 1
	values "gs_shutPanel_iType" 1

	lock	"gs_sunShade_iType",
			"gs_shutter_nPanels",
			"gs_shutter_nPanels2",
			"gs_shutter_panelPos",
			"gs_shutter_iPanelPos",
			"gs_sunShade_bAutomaticHeight",
			"gs_sunShade_height",
			"gs_shutter_innerOffset",
			"gs_shutter_closingDepth",
			"gs_shutter_bExtraFrame",
			"gs_shutter_extraFrameWidth",
			"gs_shutter_extraFrameThk",
			"gs_slidingShutter_cover",
			"gs_slidingShutter_iCover",
			"gs_slidingShutter_railWidth",
			"gs_slidingShutter_stickLength",
			"gs_slidingShutter_stickRad",
			"gs_slidingShutter_panelDist",
			"gs_foldingShutter_stacking",
			"gs_foldingShutter_iStacking",
			"gs_foldingShutter_ovhg",
			"gs_outFoldingShutter_panelIn",
			"gs_shutter_opened",
			"gs_shutter_opAngle",
			"gs_shutter_opLength",
			"gs_shutter_closedLength",
			"gs_shutter_opHeight",
			"gs_shutter_closedHeight",
			"gs_sunShade_bShowIn2D",
			"gs_sunShade_bShowOpline",
			"gs_sunShade_lineType",
			"gs_sunShade_cutLinesPen",
			"gs_sunShade_unCutLinesPen",
			"gs_sunShade_cutFillType",
			"gs_sunShade_cutFillPen",
			"gs_sunShade_cutFillBackPen",
			"gs_sunShade_insFillType",
			"gs_sunShade_insFillPen",
			"gs_sunShade_insFillBackPen",
			"gs_shutSliding_matRail"

	hideparameter	"gs_sunShade_iType",
			"gs_shutter_nPanels",
			"gs_shutter_nPanels2",
			"gs_shutter_panelPos",
			"gs_sunShade_bAutomaticHeight",
			"gs_sunShade_height",
			"gs_shutter_innerOffset",
			"gs_shutter_closingDepth",
			"gs_shutter_bExtraFrame",
			"gs_shutter_extraFrameWidth",
			"gs_shutter_extraFrameThk",
			"gs_slidingShutter_cover",
			"gs_slidingShutter_railWidth",
			"gs_slidingShutter_stickLength",
			"gs_slidingShutter_stickRad",
			"gs_slidingShutter_panelDist",
			"gs_foldingShutter_stacking",
			"gs_foldingShutter_iStacking",
			"gs_foldingShutter_ovhg",
			"gs_outFoldingShutter_panelIn",
			"gs_shutter_opened",
			"gs_shutter_opAngle",
			"gs_shutter_opLength",
			"gs_shutter_closedLength",
			"gs_shutter_opHeight",
			"gs_shutter_closedHeight",
			"gs_sunShade_bShowIn2D",
			"gs_sunShade_bShowOpline",
			"gs_sunShade_lineType",
			"gs_sunShade_cutLinesPen",
			"gs_sunShade_unCutLinesPen",
			"gs_sunShade_cutFillType",
			"gs_sunShade_cutFillPen",
			"gs_sunShade_cutFillBackPen",
			"gs_sunShade_insFillType",
			"gs_sunShade_insFillPen",
			"gs_sunShade_insFillBackPen",
			"gs_shutSliding_matRail"

	gosub "HidePanelParameters"

	gosub "HideRollingParameters"

	gosub "HideVenetianParameters"

! ------------------------------------------------------------------------------
	end	! If no sunshade then exit here !
! ------------------------------------------------------------------------------
endif


! ------------------------------------------------------------------------------
! Panel numbers
! ------------------------------------------------------------------------------

! --- Setting defaults ----------------------------------------------------------

if (GLOB_MODPAR_NAME = "bSunshade" | GLOB_MODPAR_NAME = "gs_sunShade_iType") then
	if gs_sunShade_iType = SUNSHADE_DECORATIVE	then gs_shutter_nPanels = 2
	if gs_sunShade_iType = SUNSHADE_SHUTTER		then gs_shutter_nPanels = 2
	if gs_sunShade_iType = SUNSHADE_FOLDING		then
			gs_shutter_nPanels = 1
			gs_shutter_nPanels2 = 1
	endif
	if gs_sunShade_iType = SUNSHADE_OUTFOLDING	then gs_shutter_nPanels = 4
	if gs_sunShade_iType = SUNSHADE_SLIDING		then gs_shutter_nPanels = 2

	parameters gs_shutter_nPanels = gs_shutter_nPanels, gs_shutter_nPanels2 = gs_shutter_nPanels2
endif


! --- Allowed panelnumbers ------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_FOLDING		then
	maxPanelNum = int (a / panelMinimalWidth)

	values "gs_shutter_nPanels" range [1, maxPanelNum - gs_shutter_nPanels2]
	values "gs_shutter_nPanels2" range [1, maxPanelNum - gs_shutter_nPanels]

else
	if gs_sunShade_iType = SUNSHADE_DECORATIVE	then
		if bLeftCornerFunction | bRightCornerFunction | gs_stack_left | gs_stack_right then
			put 1
		else
			put 1, 2
		endif
	endif
	if gs_sunShade_iType = SUNSHADE_SHUTTER	then
		if iWindowShape = 0 then
			put 1, 2, 3, 4
		else
			put 1, 2
		endif
	endif
	if gs_sunShade_iType = SUNSHADE_OUTFOLDING	then put 4
	if gs_sunShade_iType = SUNSHADE_SLIDING		then
		if bLeftCornerFunction | bRightCornerFunction | gs_stack_left | gs_stack_right then
			put 1, 2
		else
			put 1, 2, 3, 4
		endif
	endif

	if NSP > 0 then
		values "gs_shutter_nPanels" use (NSP)

		dim panelNums[]
		for i = NSP to 1 step -1
			panelNums[i] = get(1)
		next i

		minPanelNum = 1
		maxPanelNum = 1
		for i = 1 to vardim1(panelNums)
			minPanelNum = min(panelNums[i], minPanelNum)
			maxPanelNum = max(panelNums[i], maxPanelNum)
		next i

		if gs_shutter_nPanels > maxPanelNum then gs_shutter_nPanels = maxPanelNum
		if gs_shutter_nPanels < minPanelNum then gs_shutter_nPanels = minPanelNum
		if gs_sunShade_iType = SUNSHADE_OUTFOLDING then gs_shutter_nPanels = 4

		parameters gs_shutter_nPanels = gs_shutter_nPanels
	else
		hideparameter "gs_shutter_nPanels"
		lock "gs_shutter_nPanels"
	endif

	hideparameter "gs_shutter_nPanels2"
	lock "gs_shutter_nPanels2"
endif


! ------------------------------------------------------------------------------
! Shutter panel position values
! ------------------------------------------------------------------------------

shutterPanelPosBit = 0

if gs_sunShade_iType = SUNSHADE_DECORATIVE then
	if gs_shutter_nPanels = 1 then
		shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 1)
		shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 1)
	else
		shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_SYMMETRIC, 1)
	endif
endif
if gs_sunShade_iType = SUNSHADE_SHUTTER then
	if gs_shutter_nPanels = 1 then
		shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 1)
		shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 1)
	else
		if gs_shutter_nPanels = 2 then
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 1)
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 1)
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_SYMMETRIC, 1)
		else
			if gs_shutter_nPanels = 3 then
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYLEFT, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYRIGHT, 1)
			else
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYLEFT, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYRIGHT, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_SYMMETRIC, 1)
			endif
		endif
	endif
endif
if gs_sunShade_iType = SUNSHADE_OUTFOLDING then
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_SYMMETRIC, 1)
endif
if gs_sunShade_iType = SUNSHADE_SLIDING then
	if gs_shutter_nPanels = 1 then
		shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 1)
		shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 1)
	else
		if gs_shutter_nPanels = 2 then
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFTTOP, 1)
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFTBOTTOM, 1)
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHTTOP, 1)
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHTBOTTOM, 1)
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_SYMMETRIC, 1)
		else
			if gs_shutter_nPanels = 3 then
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFTTOP, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFTBOTTOM, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHTTOP, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHTBOTTOM, 1)
			else
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_DOUBLETOP, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_DOUBLEBOTTOM, 1)
			endif
		endif
	endif
endif

if gs_stack_left | bLeftCornerFunction then
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_SYMMETRIC, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYLEFT, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYRIGHT, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFTTOP, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFTBOTTOM, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_DOUBLETOP, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_DOUBLEBOTTOM, 0)
endif

if gs_stack_right | bRightCornerFunction then
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_SYMMETRIC, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYLEFT, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYRIGHT, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHTTOP, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHTBOTTOM, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_DOUBLETOP, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_DOUBLEBOTTOM, 0)
endif

if iWindowShape > 0 & gs_shutter_nPanels = 2 then
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 0)
endif

for i = 1 to vardim1(stShutterPanelPos)
	if bittest (shutterPanelPosBit, i) then put i
next i

if NSP > 0 then
	values "gs_shutter_iPanelPos" use (NSP)

	dim availableShutterPos[]
	for i = NSP to 1 step -1
		availableShutterPos[i] = stShutterPanelPos[get(1)]
	next i
	values "gs_shutter_panelPos" availableShutterPos
else
	if bRightCornerFunction and not(bLeftCornerFunction) then
		values "gs_shutter_iPanelPos" PANELPOS_LEFT
		values "gs_shutter_panelPos" stShutterPanelPos[PANELPOS_LEFT]
	else
		if bLeftCornerFunction and not(bRightCornerFunction) then
			values "gs_shutter_iPanelPos" PANELPOS_RIGHT
			values "gs_shutter_panelPos" stShutterPanelPos[PANELPOS_RIGHT]
		else
			values "gs_shutter_iPanelPos" PANELPOS_SYMMETRIC
			values "gs_shutter_panelPos" stShutterPanelPos[PANELPOS_SYMMETRIC]
		endif
	endif
endif

if GLOB_MODPAR_NAME = "gs_shutter_panelPos" then
	gs_shutter_iPanelPos = 1
	for i = 2 to vardim1(stShutterPanelPos)
		if gs_shutter_panelPos = stShutterPanelPos[i] then
			gs_shutter_iPanelPos = i
			i = vardim1(stShutterPanelPos)		!break, last
		endif
	next i
	parameters gs_shutter_iPanelPos = gs_shutter_iPanelPos
else
	parameters gs_shutter_panelPos = stShutterPanelPos[gs_shutter_iPanelPos]
endif


! ------------------------------------------------------------------------------
! Panel Height Parameters
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_DECORATIVE | \
		gs_sunShade_iType = SUNSHADE_SHUTTER | \
		gs_sunShade_iType = SUNSHADE_SLIDING then

	if gs_sunShade_bAutomaticHeight then

		gs_sunShade_height = b
		parameters gs_sunShade_height = gs_sunShade_height

		hideparameter "gs_sunShade_height"
		lock "gs_sunShade_height"
	else
		values "gs_sunShade_height" range (0,)
	endif
else
	hideparameter "gs_sunShade_bAutomaticHeight", "gs_sunShade_height"
	lock "gs_sunShade_bAutomaticHeight", "gs_sunShade_height"
endif


! ------------------------------------------------------------------------------
! Shutter Panel Parameters
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_DECORATIVE | \
		gs_sunShade_iType = SUNSHADE_SHUTTER | \
		gs_sunShade_iType = SUNSHADE_FOLDING | \
		gs_sunShade_iType = SUNSHADE_OUTFOLDING | \
		gs_sunShade_iType = SUNSHADE_SLIDING then

	if gs_sunShade_iType = SUNSHADE_OUTFOLDING then
		panelWidth = min(gs_outFoldingShutter_panelIn, a/2 - gs_outFoldingShutter_panelIn - distShutterWall)
	else
		if gs_sunShade_iType = SUNSHADE_FOLDING then
			panelWidth = a / (gs_shutter_nPanels + gs_shutter_nPanels2)
		else
			if gs_sunShade_iType = SUNSHADE_SHUTTER then
				panelWidth = (a - gs_shutter_innerOffset * 2) / gs_shutter_nPanels
			else
				if gs_sunShade_iType = SUNSHADE_DECORATIVE then
					if gs_shutPanel_bAutomaticWidth then
						panelWidth = a / gs_shutter_nPanels

						gs_shutPanel_panelWidth = a / gs_shutter_nPanels
						parameters gs_shutPanel_panelWidth = gs_shutPanel_panelWidth
						lock "gs_shutPanel_panelWidth"
					else
						panelWidth = gs_shutPanel_panelWidth

						if	gs_shutPanel_iType = PANEL_Z |\
							gs_shutPanel_iType = PANEL_FULL |\
							gs_shutPanel_iType = PANEL_VERTBOARDS |\
							gs_shutPanel_iType = PANEL_ROTATEDBOARDsS |\
							gs_shutPanel_iType = PANEL_CUSTOM then

							values "gs_shutPanel_panelWidth" range (0,)
						else
							values "gs_shutPanel_panelWidth" range (gs_shutPanel_frameWidth*2,)
						endif
					endif
				else
					panelWidth = a / gs_shutter_nPanels
				endif
			endif
		endif
	endif

	if gs_sunShade_bAutomaticHeight then
		panelHeight = b
	else
		panelHeight = gs_sunShade_height
	endif

	call "ShutterPanels_WMCC" parameters a			= panelWidth,
				b								= panelHeight,
				gs_shutPanel_type				= gs_shutPanel_type,
				gs_shutPanel_iType				= gs_shutPanel_iType,
				gs_shutPanel_frameWidth			= gs_shutPanel_frameWidth,
				gs_shutPanel_BDiffBottomFrame	= gs_shutPanel_BDiffBottomFrame,
				gs_shutPanel_frameWidthBottom	= gs_shutPanel_frameWidthBottom,
				gs_shutPanel_nHoleHor			= gs_shutPanel_nHoleHor,
				gs_shutPanel_nHoleVert			= gs_shutPanel_nHoleVert,
				gs_shutPanel_holeRadius			= gs_shutPanel_holeRadius,
				gs_shutPanel_ZThk				= gs_shutPanel_ZThk,
				gs_shutPanel_boardThkVert		= gs_shutPanel_boardThkVert,
				gs_shutPanel_boardThkHor		= gs_shutPanel_boardThkHor,
				stShutterPanelTypes				= stShutterPanelTypes

	if gs_sunShade_iType <> SUNSHADE_DECORATIVE then
		lock "gs_shutPanel_bAutomaticWidth", "gs_shutPanel_panelWidth"
		hideparameter "gs_shutPanel_bAutomaticWidth", "gs_shutPanel_panelWidth"
	endif

else

	gosub "HidePanelParameters"

endif


! ------------------------------------------------------------------------------
! Opening Shutter only
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_SHUTTER then
	values "gs_shutter_opAngle" range [0, 180]

	if iWindowShape = SHAPE_RECTANGULAR | iWindowShape = SHAPE_ARCHED | iWindowShape = SHAPE_ELLIPSEARCH then
		values "gs_shutter_extraFrameWidth" range (0,)
		values "gs_shutter_extraFrameThk" range (0,)
	else
		gs_shutter_bExtraFrame = 0
		parameters gs_shutter_bExtraFrame = gs_shutter_bExtraFrame

		hideparameter "gs_shutter_extraFrameWidth", "gs_shutter_extraFrameThk", "gs_shutter_bExtraFrame"
		lock "gs_shutter_extraFrameWidth", "gs_shutter_extraFrameThk", "gs_shutter_bExtraFrame"
	endif
else
	hideparameter	"gs_shutter_opAngle",
					"gs_shutter_closingDepth",
					"gs_shutter_innerOffset",
					"gs_shutter_bExtraFrame",
					"gs_shutter_extraFrameWidth",
					"gs_shutter_extraFrameThk"
	lock "gs_shutter_opAngle",
			"gs_shutter_closingDepth",
			"gs_shutter_innerOffset",
			"gs_shutter_bExtraFrame",
			"gs_shutter_extraFrameWidth",
			"gs_shutter_extraFrameThk"
endif


if gs_sunShade_iType <> SUNSHADE_SHUTTER & gs_sunShade_iType <> SUNSHADE_OUTFOLDING then
	lock "gs_sunShade_bShowOpline"
	hideparameter "gs_sunShade_bShowOpline"
endif


! ------------------------------------------------------------------------------
! Folding to Wall Face only
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_OUTFOLDING then
	if not(bOutfoldingWarning) then
		values "gs_outFoldingShutter_panelIn" range [panelMinimalWidth, min (WIDO_SILL - gs_shutPanel_Thk, a/2-panelMinimalWidth)]
	else
		lock "gs_outFoldingShutter_panelIn", "gs_shutter_opened", "gs_sunShade_bShowIn2D"
		hideparameter "gs_outFoldingShutter_panelIn", "gs_shutter_opened", "gs_sunShade_bShowIn2D"
	endif

	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		hideparameter "gs_outFoldingShutter_panelIn"
		lock "gs_outFoldingShutter_panelIn"
	endif
else
	hideparameter "gs_outFoldingShutter_panelIn", "gs_shutter_opened"
	lock "gs_outFoldingShutter_panelIn", "gs_shutter_opened"
endif


! ------------------------------------------------------------------------------
! Opening length coordination for sliding and folding
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_SLIDING | gs_sunShade_iType = SUNSHADE_FOLDING then

	if gs_sunShade_iType = SUNSHADE_FOLDING then
		nPanelLeft = gs_shutter_nPanels
		nPanelRight = gs_shutter_nPanels2
		maxOpLength = sunShadeLength3D - (gs_shutter_nPanels + gs_shutter_nPanels2) * gs_shutPanel_Thk
	else
		maxOpLength = sunShadeLength3D
	endif

	if gs_shutter_closedLength < 0 then
		gs_shutter_closedLength = 0
		parameters gs_shutter_closedLength = gs_shutter_closedLength
	endif
	if gs_shutter_closedLength > maxOpLength then
		gs_shutter_closedLength = maxOpLength
		parameters gs_shutter_closedLength = gs_shutter_closedLength
	endif

	if GLOB_MODPAR_NAME = "gs_sunShade_type" | GLOB_MODPAR_NAME = "gs_sunShade_iType" then
		gs_shutter_opLength = maxOpLength
		parameters gs_shutter_opLength = gs_shutter_opLength
	endif

	nPanel = nPanelLeft + nPanelRight

	values "gs_shutter_opLength" range [0, maxOpLength]

	if nPanel > 0 then	! nPanelLeft & nPanelRight isn't set in master script, when glob_modpar_name = type and type = sliding
		values "gs_shutter_opLength_1" range [0, nPanelLeft/nPanel * maxOpLength]
		values "gs_shutter_opLength_2" range [0, nPanelRight/nPanel * maxOpLength]

		if GLOB_MODPAR_NAME = "gs_shutter_opLength_1" then
			gs_shutter_opLength = max(0, nPanel / nPanelLeft * gs_shutter_opLength_1)
			gs_shutter_opLength_2 = max(0, nPanelRight / nPanelLeft * gs_shutter_opLength_1)
			gs_shutter_closedLength = max(0, maxOpLength - gs_shutter_opLength)
			parameters	gs_shutter_opLength_2	= gs_shutter_opLength_2,
						gs_shutter_opLength		= gs_shutter_opLength,
						gs_shutter_closedLength = gs_shutter_closedLength
		else
			if GLOB_MODPAR_NAME = "gs_shutter_opLength_2" then
				gs_shutter_opLength = max(0, nPanel / nPanelRight * gs_shutter_opLength_2)
				gs_shutter_opLength_1 = max(0, nPanelLeft / nPanelRight * gs_shutter_opLength_2)
				gs_shutter_closedLength = max(0, maxOpLength - gs_shutter_opLength)
				parameters	gs_shutter_opLength_1	= gs_shutter_opLength_1,
							gs_shutter_opLength		= gs_shutter_opLength,
							gs_shutter_closedLength = gs_shutter_closedLength
			else
				if GLOB_MODPAR_NAME = "gs_shutter_opLength" then
					gs_shutter_opLength_1 = max(0, nPanelLeft  / nPanel * gs_shutter_opLength)
					gs_shutter_opLength_2 = max(0, nPanelRight / nPanel * gs_shutter_opLength)
					gs_shutter_closedLength = max(0, maxOpLength - gs_shutter_opLength)
					parameters	gs_shutter_opLength_1	= gs_shutter_opLength_1,
								gs_shutter_opLength_2	= gs_shutter_opLength_2,
								gs_shutter_closedLength	= gs_shutter_closedLength
				else
					gs_shutter_opLength = max(0, maxOpLength - gs_shutter_closedLength)
					gs_shutter_opLength_1 = max(0, nPanelLeft  / nPanel * gs_shutter_opLength)
					gs_shutter_opLength_2 = max(0, nPanelRight / nPanel * gs_shutter_opLength)
					parameters	gs_shutter_opLength_1	= gs_shutter_opLength_1,
								gs_shutter_opLength_2	= gs_shutter_opLength_2,
								gs_shutter_opLength		= gs_shutter_opLength
				endif
			endif
		endif
	endif
else
	hideparameter "gs_shutter_opLength"
	lock "gs_shutter_opLength"
endif


! ------------------------------------------------------------------------------
! Folding to Reveal only
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_FOLDING then
	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		values "gs_foldingShutter_stacking" stFoldingShutterStacking[2]		! outside only
		values "gs_foldingShutter_iStacking" 2

		gs_foldingShutter_ovhg = -(WIDO_SILL - gs_shutPanel_Thk - (a / (gs_shutter_nPanels + gs_shutter_nPanels2)))
		parameters gs_foldingShutter_ovhg = gs_foldingShutter_ovhg
		hideparameter "gs_foldingShutter_ovhg"
		lock "gs_foldingShutter_ovhg"
	else
		values "gs_foldingShutter_stacking" stFoldingShutterStacking
		values "gs_foldingShutter_iStacking" 1, 2

		if gs_foldingShutter_iStacking = STACKING_OUTSIDE then
			values "gs_foldingShutter_ovhg" range [0, a / (gs_shutter_nPanels + gs_shutter_nPanels2))
		else
			hideparameter "gs_foldingShutter_ovhg"
			lock "gs_foldingShutter_ovhg"
		endif
	endif

	if GLOB_MODPAR_NAME = "gs_foldingShutter_stacking" then
		gs_foldingShutter_iStacking = STACKING_INSIDE
		if gs_foldingShutter_stacking = stFoldingShutterStacking[2] then gs_foldingShutter_iStacking = STACKING_OUTSIDE
		parameters gs_foldingShutter_iStacking = gs_foldingShutter_iStacking
	else
		parameters gs_foldingShutter_stacking = stFoldingShutterStacking[gs_foldingShutter_iStacking]
	endif

	if bFoldingWarning then
		lock "gs_shutter_opLength", "gs_sunShade_bShowIn2D"
		hideparameter "gs_shutter_opLength", "gs_sunShade_bShowIn2D"
	endif
else
	hideparameter "gs_foldingShutter_stacking", "gs_foldingShutter_iStacking", "gs_foldingShutter_ovhg"
	lock "gs_foldingShutter_stacking", "gs_foldingShutter_iStacking", "gs_foldingShutter_ovhg"
endif


! ------------------------------------------------------------------------------
! Sliding only
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_SLIDING then
	values "gs_slidingShutter_cover" stSlidingShutterCover
	values "gs_slidingShutter_iCover" 0, 1, 2

	if GLOB_MODPAR_NAME = "gs_slidingShutter_cover" then
		gs_slidingShutter_iCover = COVER_NONE
		if gs_slidingShutter_cover = stSlidingShutterCover[2] then gs_slidingShutter_iCover = COVER_Z
		if gs_slidingShutter_cover = stSlidingShutterCover[3] then gs_slidingShutter_iCover = COVER_BOX
		parameters  gs_slidingShutter_iCover = gs_slidingShutter_iCover
	else
		parameters gs_slidingShutter_cover = stSlidingShutterCover[gs_slidingShutter_iCover + 1]
	endif
else
	hideparameter "gs_slidingShutter_cover",
					"gs_slidingShutter_iCover",
					"gs_shutSliding_matRail",
					"gs_slidingShutter_railWidth",
					"gs_slidingShutter_stickLength",
					"gs_slidingShutter_stickRad",
					"gs_slidingShutter_panelDist"
	lock "gs_slidingShutter_cover",
			"gs_slidingShutter_iCover",
			"gs_shutSliding_matRail",
			"gs_slidingShutter_railWidth",
			"gs_slidingShutter_stickLength",
			"gs_slidingShutter_stickRad",
			"gs_slidingShutter_panelDist"
endif


! ------------------------------------------------------------------------------
! Rolling shutter parameters
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_ROLLING then
	call "RollingShutter_WMCC" parameters A		= A,
				B							= B,
				sunShadeHeight3D			= sunShadeHeight3D,
				gs_shutter_opHeight			= gs_shutter_opHeight,
				gs_shutter_closedHeight		= gs_shutter_closedHeight,
				gs_shutRoll_placement		= gs_shutRoll_placement,
				gs_shutRoll_iPlacement		= gs_shutRoll_iPlacement,
				gs_shutRoll_placementEnable	= gs_shutRoll_placementEnable,
				gs_shutRoll_boxType			= gs_shutRoll_boxType,
				gs_shutRoll_iBoxType		= gs_shutRoll_iBoxType,
				gs_shutRoll_railPos			= gs_shutRoll_railPos,
				gs_shutRoll_iRailPos		= gs_shutRoll_iRailPos,
				gs_shutRoll_cutWallBehind	= gs_shutRoll_cutWallBehind,
				gs_shutRoll_boxWidth		= gs_shutRoll_boxWidth,
				gs_shutRoll_boxHeight		= gs_shutRoll_boxHeight,
				gs_shutRoll_boxDefaultSize	= gs_shutRoll_boxDefaultSize,
				gs_shutRoll_iBoxDefaultSize	= gs_shutRoll_iBoxDefaultSize,
				gs_shutRoll_distFromHead	= gs_shutRoll_distFromHead,
				stShutRollPlacement			= stShutRollPlacement,
				stShutRollBoxType			= stShutRollBoxType,
				stShutRollBoxDefaultSize	= stShutRollBoxDefaultSize,
				stShutRollRailPos			= stShutRollRailPos,
				gs_reveal_top				= gs_reveal_top
else

	gosub "HideRollingParameters"

endif


! ------------------------------------------------------------------------------
! Venetian Blinds parameters
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_VENETIAN | gs_sunShade_iType = SUNSHADE_EXTVENETIAN then
	call "VenetianBlinds_WMCC" parameters A	= A,
			B							= B,
			sunShadeHeight3D			= sunShadeHeight3D,
			gs_sunShade_iType			= gs_sunShade_iType,
			gs_shutter_opHeight			= gs_shutter_opHeight,
			gs_shutter_closedHeight		= gs_shutter_closedHeight,
			gs_shutLam_placement		= gs_shutLam_placement,
			gs_shutLam_iPlacement		= gs_shutLam_iPlacement,
			gs_shutLam_railPos			= gs_shutLam_railPos,
			gs_shutLam_iRailPos			= gs_shutLam_iRailPos,
			gs_shutLam_cutWallBehind	= gs_shutLam_cutWallBehind,
			gs_shutLam_placementEnable	= gs_shutLam_placementEnable,
			gs_shutLam_boxHeight		= gs_shutLam_boxHeight,
			gs_shutLam_distFromHead		= gs_shutLam_distFromHead,
			gs_shutLam2_boxHeight		= gs_shutLam2_boxHeight,
			gs_shutLam2_distFromHead	= gs_shutLam2_distFromHead,
			gs_shutLam2_axisFromHead	= gs_shutLam2_axisFromHead,
			stShutLamPlacement			= stShutLamPlacement,
			stShutLamRailPos			= stShutLamRailPos,
			gs_reveal_top				= gs_reveal_top,
			gs_shutLam_bRail			= gs_shutLam_bRail

else

	gosub "HideVenetianParameters"

endif


! ------------------------------------------------------------------------------
! Rolling shutter and Venetian Blinds parameters
! ------------------------------------------------------------------------------

if not(gs_sunShade_iType = SUNSHADE_ROLLING	| gs_sunShade_iType = SUNSHADE_EXTVENETIAN)	then
	lock "gs_sunShade_insFillType",
			"gs_sunShade_insFillPen",
			"gs_sunShade_insFillBackPen"

	hideparameter "gs_sunShade_insFillType",
			"gs_sunShade_insFillPen",
			"gs_sunShade_insFillBackPen"
endif


! ------------------------------------------------------------------------------
! Hiding and locking opening height parameters
! ------------------------------------------------------------------------------

if gs_sunShade_iType <> SUNSHADE_VENETIAN & gs_sunShade_iType <> SUNSHADE_EXTVENETIAN & gs_sunShade_iType <> SUNSHADE_ROLLING then
	lock "gs_shutter_closedHeight", "gs_shutter_opHeight"
	hideparameter "gs_shutter_opHeight"
endif


! ------------------------------------------------------------------------------
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! ------------------------------------------------------------------------------


! ------------------------------------------------------------------------------
"HidePanelParameters":
! ------------------------------------------------------------------------------

	lock 	"gs_shutPanel_type",
			"gs_shutPanel_iType",
			"gs_cust_shutterPanel",
			"gs_shutPanel_frameWidth",
			"gs_shutPanel_BDiffBottomFrame",
			"gs_shutPanel_frameWidthBottom",
			"gs_shutPanel_bAutomaticWidth",
			"gs_shutPanel_panelWidth",
			"gs_shutPanel_Thk",
			"gs_shutPanel_fieldThk",
			"gs_shutPanel_louverThk",
			"gs_shutPanel_louverWidth",
			"gs_shutPanel_louverAngle",
			"gs_shutPanel_midFrameHorW",
			"gs_shutPanel_midFrameVertW",
			"gs_shutPanel_nHoleHor",
			"gs_shutPanel_nHoleVert",
			"gs_shutPanel_holeRadius",
			"gs_shutPanel_ZBoardW",
			"gs_shutPanel_ZWidth",
			"gs_shutPanel_ZThk",
			"gs_shutPanel_boardThkVert",
			"gs_shutPanel_boardThkHor",
			"gs_shutPanel_vertBoardW",
			"gs_shutPanel_horBoardW",
			"gs_shutPanel_materialMain",
			"gs_shutPanel_materialAcc"

	hideparameter "gs_shutPanel_type",
			"gs_cust_shutterPanel",
			"gs_shutPanel_frameWidth",
			"gs_shutPanel_BDiffBottomFrame",
			"gs_shutPanel_frameWidthBottom",
			"gs_shutPanel_bAutomaticWidth",
			"gs_shutPanel_panelWidth",
			"gs_shutPanel_Thk",
			"gs_shutPanel_fieldThk",
			"gs_shutPanel_louverThk",
			"gs_shutPanel_louverWidth",
			"gs_shutPanel_louverAngle",
			"gs_shutPanel_midFrameHorW",
			"gs_shutPanel_midFrameVertW",
			"gs_shutPanel_nHoleHor",
			"gs_shutPanel_nHoleVert",
			"gs_shutPanel_holeRadius",
			"gs_shutPanel_ZBoardW",
			"gs_shutPanel_ZWidth",
			"gs_shutPanel_ZThk",
			"gs_shutPanel_boardThkVert",
			"gs_shutPanel_boardThkHor",
			"gs_shutPanel_vertBoardW",
			"gs_shutPanel_horBoardW",
			"gs_shutPanel_materialMain",
			"gs_shutPanel_materialAcc"
return


! ------------------------------------------------------------------------------
"HideRollingParameters":
! ------------------------------------------------------------------------------

	if bittest (gs_sunShade_typeEnable, 6) then	! SUNSHADE_ROLLING
		lock	"gs_shutRoll_placement",
				"gs_shutRoll_iPlacement",
				"gs_shutRoll_boxType",
				"gs_shutRoll_iBoxType",
				"gs_shutRoll_railPos",
				"gs_shutRoll_iRailPos",
				"gs_shutRoll_showCasingBehind",
				"gs_shutRoll_cutWallBehind",
				"gs_shutRoll_bIncludeBoxHeight",
				"gs_shutRoll_boxHeight",
				"gs_shutRoll_boxWidth",
				"gs_shutRoll_railDepth",
				"gs_shutRoll_distFromHead",
				"gs_shutRoll_distFromWall",
				"gs_shutRoll_boxAngle",
				"gs_shutRoll_boxDefaultSize",
				"gs_shutRoll_iBoxDefaultSize",
				"gs_shutRoll_boxOffsetLeft",
				"gs_shutRoll_boxOffsetRight",
				"gs_shutRoll_segmentWidth",
				"gs_shutRoll_matBox",
				"gs_shutRoll_matSegm",
				"gs_shutRoll_matRail"

		hideparameter	"gs_shutRoll_placement",
				"gs_shutRoll_iPlacement",
				"gs_shutRoll_boxType",
				"gs_shutRoll_iBoxType",
				"gs_shutRoll_railPos",
				"gs_shutRoll_iRailPos",
				"gs_shutRoll_showCasingBehind",
				"gs_shutRoll_cutWallBehind",
				"gs_shutRoll_bIncludeBoxHeight",
				"gs_shutRoll_boxHeight",
				"gs_shutRoll_boxWidth",
				"gs_shutRoll_railDepth",
				"gs_shutRoll_distFromHead",
				"gs_shutRoll_distFromWall",
				"gs_shutRoll_boxAngle",
				"gs_shutRoll_boxDefaultSize",
				"gs_shutRoll_boxOffsetLeft",
				"gs_shutRoll_boxOffsetRight",
				"gs_shutRoll_segmentWidth",
				"gs_shutRoll_matBox",
				"gs_shutRoll_matSegm",
				"gs_shutRoll_matRail"
	endif
return

! ------------------------------------------------------------------------------
"HideVenetianParameters":
! ------------------------------------------------------------------------------

	lock	"gs_shutLam_placement",
			"gs_shutLam_iPlacement",
			"gs_shutLam_railPos",
			"gs_shutLam_iRailPos",
			"gs_shutLam_showCasingBehind",
			"gs_shutLam_boxHeight",
			"gs_shutLam_boxWidth",
			"gs_shutLam_bOpenBox",
			"gs_shutLam_distFromWall",
			"gs_shutLam_coverWidth",
			"gs_shutLam_distFromHead",
			"gs_shutLam_cutWallBehind",
			"gs_shutLam_segmentWidth",
			"gs_shutLam_rotation",
			"gs_shutLam_bRail",
			"gs_shutLam_matBox",
			"gs_shutLam_matLam"

	hideparameter	"gs_shutLam_placement",
			"gs_shutLam_railPos",
			"gs_shutLam_showCasingBehind",
			"gs_shutLam_boxHeight",
			"gs_shutLam_boxWidth",
			"gs_shutLam_bOpenBox",
			"gs_shutLam_distFromWall",
			"gs_shutLam_coverWidth",
			"gs_shutLam_distFromHead",
			"gs_shutLam_cutWallBehind",
			"gs_shutLam_segmentWidth",
			"gs_shutLam_rotation",
			"gs_shutLam_bRail",
			"gs_shutLam_matBox",
			"gs_shutLam_matLam"

	lock	"gs_shutLam2_boxHeight",
			"gs_shutLam2_boxWidth",
			"gs_shutLam2_distFromWindow",
			"gs_shutLam2_distFromHead",
			"gs_shutLam2_axisFromHead",
			"gs_shutLam2_segmentWidth",
			"gs_shutLam2_rotation"

	hideparameter	"gs_shutLam2_boxHeight",
			"gs_shutLam2_boxWidth",
			"gs_shutLam2_distFromWindow",
			"gs_shutLam2_distFromHead",
			"gs_shutLam2_axisFromHead",
			"gs_shutLam2_segmentWidth",
			"gs_shutLam2_rotation"
return


]]>
</Script_VL>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" path="uipicts/SunShade/panelStyles.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="3" path="uipicts/SunShade/panelPositions.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="4" path="uipicts/SunShade/panel_folding_double.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="5" path="uipicts/SunShade/panel_folding_frame.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="6" path="uipicts/SunShade/panel_folding_full.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="7" path="uipicts/SunShade/panel_folding_louvers.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="8" path="uipicts/SunShade/panel_folding_z.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="9" path="uipicts/SunShade/folding_horizontal_section.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="10" path="uipicts/SunShade/panel_decorative_double.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="11" path="uipicts/SunShade/panel_decorative_frame.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="12" path="uipicts/SunShade/panel_decorative_full.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="13" path="uipicts/SunShade/panel_decorative_louvers.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="14" path="uipicts/SunShade/panel_decorative_z.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="15" path="uipicts/SunShade/panel_shutter_double.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="16" path="uipicts/SunShade/panel_shutter_double_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="17" path="uipicts/SunShade/panel_shutter_frame.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="18" path="uipicts/SunShade/panel_shutter_frame_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="19" path="uipicts/SunShade/panel_shutter_full.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="20" path="uipicts/SunShade/panel_shutter_full_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="21" path="uipicts/SunShade/panel_shutter_louvers.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="22" path="uipicts/SunShade/panel_shutter_louvers_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="23" path="uipicts/SunShade/panel_shutter_z.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="24" path="uipicts/SunShade/panel_shutter_z_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="25" path="uipicts/SunShade/slidingWall.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="26" path="uipicts/SunShade/slidingTop.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="27" path="uipicts/SunShade/slidingTopBox.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="28" path="uipicts/SunShade/slidingTopZ.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="29" path="uipicts/SunShade/panel_sliding_double.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="30" path="uipicts/SunShade/panel_sliding_frame.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="31" path="uipicts/SunShade/panel_sliding_full.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="32" path="uipicts/SunShade/panel_sliding_louvers.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="33" path="uipicts/SunShade/panel_sliding_z.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="34" path="uipicts/SunShade/venetian_inLintel.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="35" path="uipicts/SunShade/venetian_behind.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="36" path="uipicts/SunShade/venetian_behind_noIns.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="37" path="uipicts/SunShade/venetian_onFacade.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="38" path="uipicts/SunShade/venetian_toWindow.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="39" path="uipicts/SunShade/rollingBoxTypes.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="40" path="uipicts/SunShade/rolling_behind.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="41" path="uipicts/SunShade/rolling_behind_noIns.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="42" path="uipicts/SunShade/rolling_facade_arched.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="43" path="uipicts/SunShade/rolling_facade_rect.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="44" path="uipicts/SunShade/rolling_onWindow_arched.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="45" path="uipicts/SunShade/rolling_onWindow_rect.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="46" path="uipicts/SunShade/outfolding_horizontal_section.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="47" path="uipicts/ui_warningsign.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="48" path="uipicts/SunShade/outfolding_horizontal_section_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="49" path="uipicts/SunShade/folding_horizontal_section_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="50" path="uipicts/SunShade/folding_horizontal_section_3.png">
</GDLPict>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>BIMobject</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>22</Version>
		<AutoHotspots>no</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Value>1.5</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Hole has Wall's Side Surface"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="sunShadeLength3D">
			<Description><![CDATA["Sunshade Length as Drawn in 3D"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="sunShadeHeight3D">
			<Description><![CDATA["Sunshade Height as Drawn in 3D"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Integer Name="lod2D_sunShade">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Value>2</Value>
		</Integer>
		<Integer Name="lod3D_sunShade">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Value>4</Value>
		</Integer>
		<Boolean Name="bSunshade">
			<Description><![CDATA["Sunshade"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_sunShade_iType">
			<Description><![CDATA["Sunshade Type"]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_sunShade_typeEnable">
			<Description><![CDATA["Enabled Sunshade Tpyes"]]></Description>
			<Value>511</Value>
		</Integer>
		<Integer Name="gs_sunShade_iCashedEnableTypes">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<Boolean Name="gs_sunShade_bChangeEnabledTypes">
			<Description><![CDATA["Change Enabled Types"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_shutter_nPanels">
			<Description><![CDATA["Number of Panels"]]></Description>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_shutter_nPanels2">
			<Description><![CDATA["Number of Panels"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="gs_shutter_panelPos">
			<Description><![CDATA["Panel Position"]]></Description>
			<Value><![CDATA["Symmetric"]]></Value>
		</String>
		<Integer Name="gs_shutter_iPanelPos">
			<Description><![CDATA["Panel Position"]]></Description>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_sunShade_bAutomaticHeight">
			<Description><![CDATA["Automatic Shutter Height"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_sunShade_height">
			<Description><![CDATA["Panel Height"]]></Description>
			<Value>1.5</Value>
		</Length>
		<Length Name="gs_shutter_innerOffset">
			<Description><![CDATA["Inner Offset"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutter_closingDepth">
			<Description><![CDATA["Closing Depth"]]></Description>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_shutter_bExtraFrame">
			<Description><![CDATA["Extra Frame"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutter_extraFrameWidth">
			<Description><![CDATA["Extra Frame Width"]]></Description>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutter_extraFrameThk">
			<Description><![CDATA["Extra Frame Thk"]]></Description>
			<Value>0.01</Value>
		</Length>
		<String Name="gs_slidingShutter_cover">
			<Description><![CDATA["Cover Type"]]></Description>
			<Value><![CDATA["None"]]></Value>
		</String>
		<Integer Name="gs_slidingShutter_iCover">
			<Description><![CDATA["Cover Type"]]></Description>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_slidingShutter_railWidth">
			<Description><![CDATA["Rail Width"]]></Description>
			<Value>0.003</Value>
		</Length>
		<Length Name="gs_slidingShutter_stickLength">
			<Description><![CDATA["Hanging Stick Length"]]></Description>
			<Value>0.02</Value>
		</Length>
		<Length Name="gs_slidingShutter_stickRad">
			<Description><![CDATA["Hanging Stick Radius"]]></Description>
			<Value>0.005</Value>
		</Length>
		<Length Name="gs_slidingShutter_panelDist">
			<Description><![CDATA["Panel Distance"]]></Description>
			<Value>0.006</Value>
		</Length>
		<String Name="gs_foldingShutter_stacking">
			<Description><![CDATA["Stacking Direction"]]></Description>
			<Value><![CDATA["Inside"]]></Value>
		</String>
		<Integer Name="gs_foldingShutter_iStacking">
			<Description><![CDATA["Stacking Direction"]]></Description>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_foldingShutter_ovhg">
			<Description><![CDATA["Outside Overhang"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_outFoldingShutter_panelIn">
			<Description><![CDATA["Inner Panel Width"]]></Description>
			<Value>0.15</Value>
		</Length>
		<Length Name="outfolding_innerPanelLeft">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="outfolding_innerPanelRight">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_shutter_opened">
			<Description><![CDATA["Opened in 3D"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Angle Name="gs_shutter_opAngle">
			<Description><![CDATA["3D Opening Angle"]]></Description>
			<Value>180</Value>
		</Angle>
		<Length Name="gs_shutter_opLength">
			<Description><![CDATA["3D Opening Length"]]></Description>
			<Value>1</Value>
		</Length>
		<Length Name="gs_shutter_closedLength">
			<Description><![CDATA["3D Closed Length"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutter_opLength_1">
			<Description><![CDATA["3D Opening Length 1"]]></Description>
			<Value>0.5</Value>
		</Length>
		<Length Name="gs_shutter_opLength_2">
			<Description><![CDATA["3D Opening Length 2"]]></Description>
			<Value>0.5</Value>
		</Length>
		<Length Name="gs_shutter_opHeight">
			<Description><![CDATA["3D Opening Height"]]></Description>
			<Value>1.5</Value>
		</Length>
		<Length Name="gs_shutter_closedHeight">
			<Description><![CDATA["3D Closed Height"]]></Description>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_sunShade_bShowIn2D">
			<Description><![CDATA["Show 2D Symbol"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sunShade_bShowOpline">
			<Description><![CDATA["Show Opening Lines on Symbol"]]></Description>
			<Value>0</Value>
		</Boolean>

		<!-- gs_shutterPanelTitle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutterPanelTitle">
			<Description><![CDATA["Panel Parameters"]]></Description>
		</Title>
		<Length Name="gs_shutPanel_archHeight">
			<Description><![CDATA["Arch Height"]]></Description>
			<Value>0.5</Value>
		</Length>
		<String Name="gs_shutPanel_type">
			<Description><![CDATA["Panel Type"]]></Description>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="gs_shutPanel_iType">
			<Description><![CDATA["Panel Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cust_shutterPanel">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="gs_shutPanel_Thk">
			<Description><![CDATA["Panel Thickness"]]></Description>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_shutPanel_frameWidth">
			<Description><![CDATA["Panel Frame Width"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Boolean Name="gs_shutPanel_BDiffBottomFrame">
			<Description><![CDATA["Different Bottom Frame Width"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutPanel_frameWidthBottom">
			<Description><![CDATA["Frame Width Bottom"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Boolean Name="gs_shutPanel_bAutomaticWidth">
			<Description><![CDATA["Automatic Shutter Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_shutPanel_panelWidth">
			<Description><![CDATA["Panel Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutPanel_fieldThk">
			<Description><![CDATA["Panel Fill Thickness"]]></Description>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutPanel_louverThk">
			<Description><![CDATA["Louver Thickness"]]></Description>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutPanel_louverWidth">
			<Description><![CDATA["Louver Width"]]></Description>
			<Value>0.04</Value>
		</Length>
		<Angle Name="gs_shutPanel_louverAngle">
			<Description><![CDATA["Louver Angle"]]></Description>
			<Value>30</Value>
		</Angle>
		<Length Name="gs_shutPanel_midFrameHorW">
			<Description><![CDATA["Horizontal Frame Divider Width"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_shutPanel_midFrameVertW">
			<Description><![CDATA["Vertical Frame Divider Width"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Integer Name="gs_shutPanel_nHoleHor">
			<Description><![CDATA["Holes Number Horizontal"]]></Description>
			<Value>5</Value>
		</Integer>
		<Integer Name="gs_shutPanel_nHoleVert">
			<Description><![CDATA["Holes Number Vertical"]]></Description>
			<Value>8</Value>
		</Integer>
		<Length Name="gs_shutPanel_holeRadius">
			<Description><![CDATA["Hole Radius"]]></Description>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutPanel_ZBoardW">
			<Description><![CDATA["Vertical Board Width"]]></Description>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_shutPanel_ZWidth">
			<Description><![CDATA["Z Frame Width"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_shutPanel_ZThk">
			<Description><![CDATA["Z Frame Thickness"]]></Description>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_shutPanel_boardThkVert">
			<Description><![CDATA["Vertical Boards Thickness"]]></Description>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_shutPanel_boardThkHor">
			<Description><![CDATA["Horizontal Boards Thickness"]]></Description>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_shutPanel_vertBoardW">
			<Description><![CDATA["Vertical Boards Approximate Width"]]></Description>
			<Value>0.08</Value>
		</Length>
		<Length Name="gs_shutPanel_horBoardW">
			<Description><![CDATA["Horizontal Boards Approximate Width"]]></Description>
			<Value>0.115</Value>
		</Length>

		<!-- gs_shutRollingTitle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutRollingTitle">
			<Description><![CDATA["Rolling Shutter Parameters"]]></Description>
		</Title>
		<String Name="gs_shutRoll_placement">
			<Description><![CDATA["Rolling Shutter Placement"]]></Description>
			<Value><![CDATA["Fixed on Facade"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iPlacement">
			<Description><![CDATA["Rolling Shutter Placement"]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_shutRoll_placementEnable">
			<Description><![CDATA["Enabled Placement Types"]]></Description>
			<Value>7</Value>
		</Integer>
		<String Name="gs_shutRoll_boxType">
			<Description><![CDATA["Box Type"]]></Description>
			<Value><![CDATA["Rectangular"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iBoxType">
			<Description><![CDATA["Box Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="gs_shutRoll_railPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Value><![CDATA["On Casing"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iRailPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_shutRoll_showCasingBehind">
			<Description><![CDATA["Show Casing behind Sunshade"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_shutRoll_cutWallBehind">
			<Description><![CDATA["Insulation behind Box"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_shutRoll_bIncludeBoxHeight">
			<Description><![CDATA["Include Height in Wallhole Height"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutRoll_boxHeight">
			<Description><![CDATA["Box Height"]]></Description>
			<Value>0.2</Value>
		</Length>
		<Length Name="gs_shutRoll_boxWidth">
			<Description><![CDATA["Box Depth"]]></Description>
			<Value>0.15</Value>
		</Length>
		<Angle Name="gs_shutRoll_boxAngle">
			<Description><![CDATA["Box Top Angle"]]></Description>
			<Value>10</Value>
		</Angle>
		<String Name="gs_shutRoll_boxDefaultSize">
			<Description><![CDATA["Box Default Width"]]></Description>
			<Value><![CDATA["Reveal Width"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iBoxDefaultSize">
			<Description><![CDATA["Box Default Width"]]></Description>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_shutRoll_boxOffsetLeft">
			<Description><![CDATA["Box Left Offset"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_boxOffsetRight">
			<Description><![CDATA["Box Right Offset"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_railDepth">
			<Description><![CDATA["Depth of Rails"]]></Description>
			<Value>0.0725</Value>
		</Length>
		<Length Name="gs_shutRoll_distFromWall">
			<Description><![CDATA["Distance from Wall"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_distFromHead">
			<Description><![CDATA["Distance from Header"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_segmentWidth">
			<Description><![CDATA["Slat Width"]]></Description>
			<Value>0.05</Value>
		</Length>

		<!-- gs_shutLamTitle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutLamTitle">
			<Description><![CDATA["External Venetian Blinds"]]></Description>
		</Title>
		<String Name="gs_shutLam_placement">
			<Description><![CDATA["Venetian Blinds Placement"]]></Description>
			<Value><![CDATA["Fixed on Facade"]]></Value>
		</String>
		<Integer Name="gs_shutLam_iPlacement">
			<Description><![CDATA["Venetian Blinds Placement"]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_shutLam_placementEnable">
			<Description><![CDATA["Enabled Placement Types"]]></Description>
			<Value>7</Value>
		</Integer>
		<Boolean Name="gs_shutLam_cutWallBehind">
			<Description><![CDATA["Insulation behind Box"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutLam_boxHeight">
			<Description><![CDATA["Box Height"]]></Description>
			<Value>0.2</Value>
		</Length>
		<Length Name="gs_shutLam_boxWidth">
			<Description><![CDATA["Box Depth"]]></Description>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="gs_shutLam_bOpenBox">
			<Description><![CDATA["Opened Box"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_shutLam_bRail">
			<Description><![CDATA["Rail"]]></Description>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_shutLam_railPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["On Casing"]]></Value>
		</String>
		<Integer Name="gs_shutLam_iRailPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_shutLam_showCasingBehind">
			<Description><![CDATA["Show Casing behind Sunshade"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutLam_coverWidth">
			<Description><![CDATA["Cover Width"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam_distFromWall">
			<Description><![CDATA["Distance from Wall"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam_distFromHead">
			<Description><![CDATA["Distance from Header"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam_segmentWidth">
			<Description><![CDATA["Segment Width"]]></Description>
			<Value>0.06</Value>
		</Length>
		<Angle Name="gs_shutLam_rotation">
			<Description><![CDATA["Rotation Angle of Slats"]]></Description>
			<Value>45</Value>
		</Angle>

		<!-- gs_shutLamTitle2: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutLamTitle2">
			<Description><![CDATA["Venetian Blinds in Lintel"]]></Description>
		</Title>
		<Length Name="gs_shutLam2_boxHeight">
			<Description><![CDATA["Box Height"]]></Description>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_boxWidth">
			<Description><![CDATA["Box Width"]]></Description>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_distFromWindow">
			<Description><![CDATA["Distance from Window"]]></Description>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_distFromHead">
			<Description><![CDATA["Distance from Header"]]></Description>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_axisFromHead">
			<Description><![CDATA["Box Axis Height from Header"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam2_segmentWidth">
			<Description><![CDATA["Segment Width"]]></Description>
			<Value>0.06</Value>
		</Length>
		<Angle Name="gs_shutLam2_rotation">
			<Description><![CDATA["Rotation Angle of Slats"]]></Description>
			<Value>45</Value>
		</Angle>

		<!-- gs_sunShadeAttributesTitle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_sunShadeAttributesTitle">
			<Description><![CDATA["Attributes"]]></Description>
		</Title>
		<LineType Name="gs_sunShade_lineType">
			<Description><![CDATA["Symbol Line Type"]]></Description>
			<Value>1</Value>
		</LineType>
		<PenColor Name="gs_sunShade_cutLinesPen">
			<Description><![CDATA["Cut Line Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_unCutLinesPen">
			<Description><![CDATA["Uncut Line Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<FillPattern Name="gs_sunShade_cutFillType">
			<Description><![CDATA["Cut Fill Type"]]></Description>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_sunShade_cutFillPen">
			<Description><![CDATA["Cut Fill Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_cutFillBackPen">
			<Description><![CDATA["Cut Fill Background Pen"]]></Description>
			<Value>-1</Value>
		</PenColor>
		<FillPattern Name="gs_sunShade_insFillType">
			<Description><![CDATA["Sunshade Insulation Fill Type"]]></Description>
			<Value>18</Value>
		</FillPattern>
		<PenColor Name="gs_sunShade_insFillPen">
			<Description><![CDATA["Sunshade Insulation Fill Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_insFillBackPen">
			<Description><![CDATA["Sunshade Insulation Background Pen"]]></Description>
			<Value>-1</Value>
		</PenColor>
		<Material Name="gs_shutPanel_materialMain">
			<Description><![CDATA["Shutter Panel Surface"]]></Description>
			<Value>15</Value>
		</Material>
		<Material Name="gs_shutPanel_materialAcc">
			<Description><![CDATA["Shutter Panel Frame Surface"]]></Description>
			<Value>15</Value>
		</Material>
		<Material Name="gs_shutRoll_matBox">
			<Description><![CDATA["Box Surface"]]></Description>
			<Value>11</Value>
		</Material>
		<Material Name="gs_shutRoll_matSegm">
			<Description><![CDATA["Segments Surface"]]></Description>
			<Value>60</Value>
		</Material>
		<Material Name="gs_shutRoll_matRail">
			<Description><![CDATA["Rolling Shutter Rail Surface"]]></Description>
			<Value>60</Value>
		</Material>
		<Material Name="gs_shutLam_matBox">
			<Description><![CDATA["Box Surface"]]></Description>
			<Value>11</Value>
		</Material>
		<Material Name="gs_shutLam_matLam">
			<Description><![CDATA["Segments Surface"]]></Description>
			<Value>60</Value>
		</Material>
		<Material Name="gs_shutSliding_matRail">
			<Description><![CDATA["Rail Surface"]]></Description>
			<Value>11</Value>
		</Material>

		<!-- gs_otherParams: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_otherParams">
			<Description><![CDATA["String Resouces & Other Params"]]></Description>
		</Title>
		<String Name="stSunShadeTypes">
			<Description><![CDATA["Sunshade Types"]]></Description>
			<ArrayValues FirstDimension="9" SecondDimension="0">
				<AVal Row="1"><![CDATA["None"]]></AVal>
				<AVal Row="2"><![CDATA["Decorative"]]></AVal>
				<AVal Row="3"><![CDATA["Regular"]]></AVal>
				<AVal Row="4"><![CDATA["Folding to Reveal"]]></AVal>
				<AVal Row="5"><![CDATA["Folding to Wall Face"]]></AVal>
				<AVal Row="6"><![CDATA["Sliding"]]></AVal>
				<AVal Row="7"><![CDATA["Rolling"]]></AVal>
				<AVal Row="8"><![CDATA["External Venetian Blinds"]]></AVal>
				<AVal Row="9"><![CDATA["Venetian Blinds in Lintel"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutterPanelPos">
			<Description><![CDATA["Panel Positions"]]></Description>
			<ArrayValues FirstDimension="11" SecondDimension="0">
				<AVal Row="1"><![CDATA["Symmetric"]]></AVal>
				<AVal Row="2"><![CDATA["Left"]]></AVal>
				<AVal Row="3"><![CDATA["Right"]]></AVal>
				<AVal Row="4"><![CDATA["Mostly Left"]]></AVal>
				<AVal Row="5"><![CDATA["Mostly Right"]]></AVal>
				<AVal Row="6"><![CDATA["Left Top"]]></AVal>
				<AVal Row="7"><![CDATA["Left Bottom"]]></AVal>
				<AVal Row="8"><![CDATA["Right Top"]]></AVal>
				<AVal Row="9"><![CDATA["Right Bottom"]]></AVal>
				<AVal Row="10"><![CDATA["Double Top"]]></AVal>
				<AVal Row="11"><![CDATA["Double Bottom"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stFoldingShutterStacking">
			<Description><![CDATA["Folding Shutter Stacking Types"]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Inside"]]></AVal>
				<AVal Row="2"><![CDATA["Outside"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSlidingShutterCover">
			<Description><![CDATA["Sliding Shutter Cover Types"]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["None"]]></AVal>
				<AVal Row="2"><![CDATA["Z-Profile"]]></AVal>
				<AVal Row="3"><![CDATA["Box"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutterPanelTypes">
			<Description><![CDATA["Shutter Panel Types"]]></Description>
			<ArrayValues FirstDimension="11" SecondDimension="0">
				<AVal Row="1"><![CDATA["Style 1"]]></AVal>
				<AVal Row="2"><![CDATA["Style 2"]]></AVal>
				<AVal Row="3"><![CDATA["Style 3"]]></AVal>
				<AVal Row="4"><![CDATA["Style 4"]]></AVal>
				<AVal Row="5"><![CDATA["Style 5"]]></AVal>
				<AVal Row="6"><![CDATA["Style 6"]]></AVal>
				<AVal Row="7"><![CDATA["Style 7"]]></AVal>
				<AVal Row="8"><![CDATA["Style 8"]]></AVal>
				<AVal Row="9"><![CDATA["Style 9"]]></AVal>
				<AVal Row="10"><![CDATA["Style 10"]]></AVal>
				<AVal Row="11"><![CDATA["Custom"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutRollPlacement">
			<Description><![CDATA["Rolling Shutter Placement Types"]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["On Facade"]]></AVal>
				<AVal Row="2"><![CDATA["To Window"]]></AVal>
				<AVal Row="3"><![CDATA["Behind Facade"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutRollBoxType">
			<Description><![CDATA["Rolling Shutter Box Types"]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Rectangular"]]></AVal>
				<AVal Row="2"><![CDATA["Arched"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutRollBoxDefaultSize">
			<Description><![CDATA["Rolling Shutter Box Default Width"]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["To Reveal Width"]]></AVal>
				<AVal Row="2"><![CDATA["To Wallhole Width"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutRollRailPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["On Casing"]]></AVal>
				<AVal Row="2"><![CDATA["On Wall"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutLamPlacement">
			<Description><![CDATA["Venetian Blinds Placement Types"]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["On Facade"]]></AVal>
				<AVal Row="2"><![CDATA["To Window"]]></AVal>
				<AVal Row="3"><![CDATA["Behind Facade"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutLamRailPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["On Casing"]]></AVal>
				<AVal Row="2"><![CDATA["On Wall"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSunShadeUI">
			<Description><![CDATA["UI strings"]]></Description>
			<ArrayValues FirstDimension="59" SecondDimension="0">
				<AVal Row="1"><![CDATA["Type"]]></AVal>
				<AVal Row="2"><![CDATA["Number of Panels"]]></AVal>
				<AVal Row="3"><![CDATA["Left"]]></AVal>
				<AVal Row="4"><![CDATA["Right"]]></AVal>
				<AVal Row="5"><![CDATA["Panel Style"]]></AVal>
				<AVal Row="6"><![CDATA["Position"]]></AVal>
				<AVal Row="7"><![CDATA["3D Opening"]]></AVal>
				<AVal Row="8"><![CDATA["3D Opening Angle"]]></AVal>
				<AVal Row="9"><![CDATA["Open in 3D"]]></AVal>
				<AVal Row="10"><![CDATA["2D Symbol"]]></AVal>
				<AVal Row="11"><![CDATA["Divider Width"]]></AVal>
				<AVal Row="12"><![CDATA["Horizontal"]]></AVal>
				<AVal Row="13"><![CDATA["Vertical"]]></AVal>
				<AVal Row="14"><![CDATA["Automatic Shutter Height"]]></AVal>
				<AVal Row="15"><![CDATA["Shutter Height"]]></AVal>
				<AVal Row="16"><![CDATA["Approximate Board Width"]]></AVal>
				<AVal Row="17"><![CDATA["Board Width"]]></AVal>
				<AVal Row="18"><![CDATA["Extra Frame"]]></AVal>
				<AVal Row="19"><![CDATA["Hole Radius"]]></AVal>
				<AVal Row="20"><![CDATA["Holes Horizontal"]]></AVal>
				<AVal Row="21"><![CDATA["Holes Vertical"]]></AVal>
				<AVal Row="22"><![CDATA["Stacking Direction"]]></AVal>
				<AVal Row="23"><![CDATA["Tin Covering"]]></AVal>
				<AVal Row="24"><![CDATA["Custom Panel Name"]]></AVal>
				<AVal Row="25"><![CDATA["2D Symbol"]]></AVal>
				<AVal Row="26"><![CDATA["Line Type"]]></AVal>
				<AVal Row="27"><![CDATA["Show Opening Line"]]></AVal>
				<AVal Row="28"><![CDATA["Surfaces"]]></AVal>
				<AVal Row="29"><![CDATA["Frame"]]></AVal>
				<AVal Row="30"><![CDATA["Filling"]]></AVal>
				<AVal Row="31"><![CDATA["Rail"]]></AVal>
				<AVal Row="32"><![CDATA["Attributes"]]></AVal>
				<AVal Row="33"><![CDATA["Cut Lines Pen"]]></AVal>
				<AVal Row="34"><![CDATA["Uncut Lines Pen"]]></AVal>
				<AVal Row="35"><![CDATA["Cut Fill Type"]]></AVal>
				<AVal Row="36"><![CDATA["Cut Fill Pen"]]></AVal>
				<AVal Row="37"><![CDATA["Cut Fill Background Pen"]]></AVal>
				<AVal Row="38"><![CDATA["Placement"]]></AVal>
				<AVal Row="39"><![CDATA["Box Shape"]]></AVal>
				<AVal Row="40"><![CDATA["Box Bottom from Header"]]></AVal>
				<AVal Row="41"><![CDATA["Insulation behind Box"]]></AVal>
				<AVal Row="42"><![CDATA["Angle of Slats"]]></AVal>
				<AVal Row="43"><![CDATA["The Reveal Depth is not large enough to accommodate these settings. Sunshade cannot be generated."]]></AVal>
				<AVal Row="44"><![CDATA["Box"]]></AVal>
				<AVal Row="45"><![CDATA["Blades"]]></AVal>
				<AVal Row="46"><![CDATA["3D Opening Height"]]></AVal>
				<AVal Row="47"><![CDATA["Box Offset Left"]]></AVal>
				<AVal Row="48"><![CDATA["Box Offset Right"]]></AVal>
				<AVal Row="49"><![CDATA["Box Default Width"]]></AVal>
				<AVal Row="50"><![CDATA["Rail Position"]]></AVal>
				<AVal Row="51"><![CDATA["Show Casing behind Sunshade"]]></AVal>
				<AVal Row="52"><![CDATA["Automatic Shutter Width"]]></AVal>
				<AVal Row="53"><![CDATA["Shutter Width"]]></AVal>
				<AVal Row="54"><![CDATA["This structure is not available with the actual wallhole shape"]]></AVal>
				<AVal Row="55"><![CDATA["Insulation Attributes"]]></AVal>
				<AVal Row="56"><![CDATA["Fill Type"]]></AVal>
				<AVal Row="57"><![CDATA["Fill Pen"]]></AVal>
				<AVal Row="58"><![CDATA["Fill Background Pen"]]></AVal>
				<AVal Row="59"><![CDATA["Include Height in Wallhole Height"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSunshadeTooltip">
			<Description><![CDATA["UI Tooltip strings"]]></Description>
			<ArrayValues FirstDimension="27" SecondDimension="0">
				<AVal Row="1"><![CDATA["Frame Thickness"]]></AVal>
				<AVal Row="2"><![CDATA["Frame Width"]]></AVal>
				<AVal Row="3"><![CDATA["Louver Angle"]]></AVal>
				<AVal Row="4"><![CDATA["Vertical Boards Thickness"]]></AVal>
				<AVal Row="5"><![CDATA["Filling Thickness"]]></AVal>
				<AVal Row="6"><![CDATA["Panel Thickness"]]></AVal>
				<AVal Row="7"><![CDATA["Horizontal Boards Thickness"]]></AVal>
				<AVal Row="8"><![CDATA["Inside Offset"]]></AVal>
				<AVal Row="9"><![CDATA["Closing Depth"]]></AVal>
				<AVal Row="10"><![CDATA["Extra Frame Thickness"]]></AVal>
				<AVal Row="11"><![CDATA["Extra Frame Width"]]></AVal>
				<AVal Row="12"><![CDATA["Outside Overhang"]]></AVal>
				<AVal Row="13"><![CDATA["Inner Panel Width"]]></AVal>
				<AVal Row="14"><![CDATA["Rail Width"]]></AVal>
				<AVal Row="15"><![CDATA["Box Top Angle"]]></AVal>
				<AVal Row="16"><![CDATA["Distance from Wall"]]></AVal>
				<AVal Row="17"><![CDATA["Rail Depth"]]></AVal>
				<AVal Row="18"><![CDATA["Box Depth"]]></AVal>
				<AVal Row="19"><![CDATA["Box Height"]]></AVal>
				<AVal Row="20"><![CDATA["Blades Width"]]></AVal>
				<AVal Row="21"><![CDATA["Distance from Header"]]></AVal>
				<AVal Row="22"><![CDATA["Cover Width"]]></AVal>
				<AVal Row="23"><![CDATA["Distance from Window"]]></AVal>
				<AVal Row="24"><![CDATA["Axis from Header"]]></AVal>
				<AVal Row="25"><![CDATA["Z Frame Width"]]></AVal>
				<AVal Row="26"><![CDATA["Z Frame Thickness"]]></AVal>
				<AVal Row="27"><![CDATA["Slat Width"]]></AVal>
			</ArrayValues>
		</String>
		<Length Name="radSill">
			<Description><![CDATA["Wall Radius on Sill Side"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="radBoard">
			<Description><![CDATA["Wall Radius on Board Side"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_casingThkOnFacade">
			<Description><![CDATA["Casing Thickness on Facade"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_casingThkAtWindow">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Integer Name="iWindowShape">
			<Description><![CDATA["Window Shape"]]></Description>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bLeftCornerFunction">
			<Description><![CDATA["Left Corner"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bRightCornerFunction">
			<Description><![CDATA["Right Corner"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Angle Name="leftCornerAngle">
			<Description><![CDATA["Left Corner Angle"]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="rightCornerAngle">
			<Description><![CDATA["Right Corner Angle"]]></Description>
			<Value>0</Value>
		</Angle>
		<Boolean Name="gs_stack_left">
			<Description><![CDATA["Connection on the Left"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_right">
			<Description><![CDATA["Connection on the Right"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="shutterPanelPosBit">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="iRevealType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_reveal_top">
			<Description><![CDATA["Head Jamb Depth"]]></Description>
			<Value>0</Value>
		</Length>
		<Integer Name="nArchResolution">
			<Description><![CDATA["Arch Resolution"]]></Description>
			<Value>32</Value>
		</Integer>
		<Length Name="smallRadiusEllips">
			<Description><![CDATA["Smaller radius of ellips arch"]]></Description>
			<Value>0</Value>
		</Length>
		<Angle Name="leftWallAngle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="rightWallAngle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="topWallAngle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="bottomWallAngle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Length Name="slantedRevealDepth">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Boolean Name="bEnableCasing">
			<Description><![CDATA["Enable/Disable Casing Function"]]></Description>
			<Value>1</Value>
		</Boolean>
	</Parameters>
</ParamSection>

</Symbol>

<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="no" IsPlaceable="no" MainGUID="6C84434C-2CD2-49F7-A41C-70E3C9693015" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="34">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="no">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>6ACDA889-69B2-4EC5-936C-CB1DA7032A92</MainGUID>
	<MainGUID>F6AE9687-2BC7-4D47-88C9-8F793E1DE2D6</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["GetDWOplines_bo18"]]></MName>
		<MainGUID>410E3C3B-D45E-4262-B0A7-185891D9E9D2</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["GetDWOplines_bo18"]]></MName>
		<MainGUID>410E3C3B-D45E-4262-B0A7-185891D9E9D2</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

bOplines3d				= 0
opLineType3dIn			= 1
opLineType3dOut			= 1
gs_opline_style_m		= 1
gs_opLinePen			= 1

call "GetDWOpLines_WMCC" parameters	gs_opening_dir_m			= gs_opening_dir_m,
								bWindow						= bWindow,
								bSkylight					= bSkylight,
								bEnableSecondaryOpLineTypes = bEnableSecondaryOpLineTypes,
						returned_parameters bOplines3d,
											opLineType3dIn,
											opLineType3dOut,
											opLineTypeSecondary,
											gs_opline_style_m,
											gs_opLinePen

!!if GLOB_PREVIEW_MODE = 3 then				! in case of 2D-3D Favorite Preview
!!	bOplines3d			= 1
!!	opLineType3dIn		= 0
!!	opLineType3dOut		= 1
!!endif

if bDoorWithSidelightSupport then
	if bOverride_MVO_win_3D then
		if or_bWinOplines3d then
			if gs_opening_dir_m = 2 then
				opLineType3dIn		= or_iWinOpLineType3dIn
				opLineType3dOut		= or_iWinOpLineType3dOut
			else
				opLineType3dOut		= or_iWinOpLineType3dIn
				opLineType3dIn		= or_iWinOpLineType3dOut
			endif
			gs_opline_style_m	= or_iWinOplineStyle
			gs_opLinePen		= or_winOpLinePen
			bOplines3d			= 1
		else
			bOplines3d			= 0
		endif
	endif
else
	if bOverride_MVO_3D then
		if or_bOplines3d then
			if gs_opening_dir_m = 2 then
				opLineType3dIn		= or_iOpLineType3dIn
				opLineType3dOut		= or_iOpLineType3dOut
			else
				opLineType3dOut		= or_iOpLineType3dIn
				opLineType3dIn		= or_iOpLineType3dOut
			endif
			gs_opline_style_m	= or_iOplineStyle
			gs_opLinePen		= or_opLinePen
			bOplines3d			= 1

			if bEnableSecondaryOpLineTypes then
				opLineTypeSecondary	= or_iOpLineType3dSecondary
			else
				opLineTypeSecondary = opLineType3dOut
			endif
		else
			bOplines3d			= 0
		endif
	endif
endif

end	bOplines3d,
	opLineType3dIn,
	opLineType3dOut,
	opLineTypeSecondary,
	gs_opline_style_m,
	gs_opLinePen

]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

gs_opLinePen			= 1
gs_iSwingType			= 1
gs_iSlidingType			= 0
gs_swingLineType		= 1

if bSkylight then
	call "GetDWOpLines_WMCC" parameters	bSkylight					= 1,
									bEnableSecondaryOpLineTypes	= 0,
							returned_parameters gs_opLinePen,
												gs_iSwingType,
												gs_swingLineType,
												gs_opline_style_m

!!	if GLOB_PREVIEW_MODE = 3 then				! in case of 2D-3D Favorite Preview
!!		gs_iSwingType		= 1
!!		gs_swingLineType	= 1
!!	endif
else
	call "GetDWOpLines_WMCC" parameters	bWindow						= bWindow,
									bEnableSecondaryOpLineTypes = bEnableSecondaryOpLineTypes,
									bEnableSwingLineTurnOff		= bEnableSwingLineTurnOff,
							returned_parameters bShowOplines2D,
											gs_opLinePen,
											gs_iSwingType,
											gs_iSlidingType,
											gs_swingLineType,
											gs_swingLineType2

!!	if GLOB_PREVIEW_MODE = 3 then				! in case of 2D-3D Favorite Preview
!!		bShowOplines2D		= 1
!!		gs_iSwingType		= 1
!!		gs_swingLineType	= 1
!!		gs_iSlidingType		= 1
!!	endif
endif

if bDoorWithSidelightSupport then
	if bOverride_MVO_win_2D then
		gs_opLinePen		= or_winOpLinePen
		gs_iSwingType		= or_iWinSwingType
		gs_swingLineType	= or_winSwingLineType
	endif
else
	if bOverride_MVO_2D then
		gs_opLinePen		= or_opLinePen
		gs_iSwingType		= or_iSwingType
		gs_iSlidingType		= or_iSlidingType
		gs_swingLineType	= or_swingLineType
	
		if bSkylight then gs_opline_style_m = or_iOplineStyle
	
		if bEnableSecondaryOpLineTypes or bEnableSwingLineTurnOff then
			if bEnableSwingLineTurnOff then
				bShowOplines2D		= or_bOplines2d
			endif
			if bEnableSecondaryOpLineTypes then
				gs_swingLineType2	= or_swingLineType2
			endif
		else
			bShowOplines2D		= 1
			gs_swingLineType2	= gs_swingLineType
		endif
	endif
endif

if bSkylight then
	end gs_opLinePen,
		gs_iSwingType,
		gs_swingLineType,
		gs_opline_style_m
else
	if iLineShapeCategory = LINE_SHAPE_CATEGORY_SWING then
		gs_iSlidingType = 0
	else
		gs_iSwingType = 0
	endif

	end	bShowOplines2D,
		gs_opLinePen,
		gs_iSwingType,
		gs_iSlidingType,
		gs_swingLineType,
		gs_swingLineType2

endif

]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

EPS = 0.0001

dim stLineShapeSwingType[5]
	stLineShapeSwingType[1] = `None`
	stLineShapeSwingType[2] = `Curved`
	stLineShapeSwingType[3] = `Straight`
	stLineShapeSwingType[4] = `Opening Axis Line`
	stLineShapeSwingType[5] = `Leaf Axis Line`

dim stLineShapeSlidingType[3]
	stLineShapeSlidingType[1] = `None`
	stLineShapeSlidingType[2] = `Arrow`
	stLineShapeSlidingType[3] = `Opening Axis Line`

! or_iSwingType:
LINE_SHAPE_SWING_NONE			= 0
LINE_SHAPE_SWING_CURVED			= 1
LINE_SHAPE_SWING_STRAIGHT		= 2
LINE_SHAPE_SWING_SIMPLE_LINE	= 3
LINE_SHAPE_SWING_LEAF_LINE		= 4

! or_iSlidingType:
LINE_SHAPE_SLIDING_NONE			= 0
LINE_SHAPE_SLIDING_ARROW		= 1
LINE_SHAPE_SLIDING_SIMPLE_LINE	= 2

! gs_leaf_optype_m:
LEAF_1L_SIDE_HUNG			= 1
LEAF_1L_SIDE_HUNG_M			= 2
LEAF_1L_DOUBLE_ACTING		= 3
LEAF_1L_DOUBLE_ACTING_M		= 4
LEAF_2L_SIDE_HUNG			= 5
LEAF_2L_DOUBLE_ACTING		= 6
LEAF_2L_DOUBLE_EGRESS		= 7
LEAF_2L_DOUBLE_EGRESS_M		= 8
LEAF_1L_PIVOT				= 9
LEAF_1L_PIVOT_M				= 10
LEAF_2L_1SLIDING			= 11
LEAF_2L_1SLIDING_M			= 12
LEAF_2L_2SLIDING			= 13
LEAF_2L_2SLIDING_M			= 14
LEAF_3L_2SLIDING			= 15
LEAF_3L_2SLIDING_M			= 16
LEAF_4L_2SLIDING			= 17
LEAF_4L_3SLIDING			= 18
LEAF_4L_3SLIDING_M			= 19
LEAF_4L_4SLIDING			= 20
LEAF_4L_4SLIDING_M			= 21
LEAF_1L_EXTERNAL_SLIDING	= 22
LEAF_1L_EXTERNAL_SLIDING_M	= 23
LEAF_2L_EXTERNAL_SLIDING	= 24
LEAF_1L_POCKET				= 25
LEAF_1L_POCKET_M			= 26
LEAF_2L_POCKET				= 27
LEAF_1L_MULTIPANEL			= 28
LEAF_1L_MULTIPANEL_M		= 29
LEAF_2L_MULTIPANEL			= 30
LEAF_Revolving				= 31
LEAF_3L_2SLIDING_CENTER		= 32
LEAF_GAR_1L_UP_AND_OVER		= 100
LEAF_GAR_1L_UP_SLIDING		= 101
LEAF_GAR_1L_SECTIONAL		= 102
LEAF_GAR_2L_SIDE_HUNG		= 103
LEAF_GAR_2L_ROLLSIDE		= 104
LEAF_GAR_1L_ROLLUP			= 105

! iLineShapeCategory:
LINE_SHAPE_CATEGORY_SWING	= 1
LINE_SHAPE_CATEGORY_SLIDING	= 2

bGarageDoorNoSideHung = (gs_leaf_optype_m = LEAF_GAR_1L_UP_AND_OVER |\
						 gs_leaf_optype_m = LEAF_GAR_1L_UP_SLIDING	|\
						 gs_leaf_optype_m = LEAF_GAR_1L_SECTIONAL	|\
						 gs_leaf_optype_m = LEAF_GAR_2L_ROLLSIDE	|\
						 gs_leaf_optype_m = LEAF_GAR_1L_ROLLUP		)

bSlidingFolding		= (gs_leaf_optype_m = LEAF_1L_MULTIPANEL	|\
					   gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M	|\
					   gs_leaf_optype_m = LEAF_2L_MULTIPANEL	)

bDoubleOpeningDoor	= (gs_leaf_optype_m = LEAF_2L_SIDE_HUNG			| \
					   gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING		| \
					   gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS		| \
					   gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M	| \
					   gs_leaf_optype_m = LEAF_GAR_2L_SIDE_HUNG		)

bDoubleActing = 0
if iOpeningParamType = 7 | iOpeningParamType = 71 | iOpeningParamType = 8 then
	bDoubleActing = 1
endif

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[


! --------------------------------------------------------------------------------
! Lock flag conditions
! --------------------------------------------------------------------------------
lockPicContour = 0
if bEnableSwingLineTurnOff then
	textFlag2DMVO = 4 - 4*(not(bDisable2DOverride) & bOverride_MVO_2D & or_bOplines2d)
	lockPicContour = 1-1*(bOverride_MVO_2D & or_bOplines2d)
	textFlagOpLinePen = 4 - 4*((not(bDisable2DOverride) & bOverride_MVO_2D & or_bOplines2d) | (not(bDisable3DOverride) & bOverride_MVO_3D & or_bOplines3d))
else
	textFlag2DMVO = 4 - 4*(bOverride_MVO_2D)
	if bSkylight then
		textFlagOpLinePen = 4 - 4*((not(bDisable2DOverride) & bOverride_MVO_2D) | (not(bDisable3DOverride) & bOverride_MVO_3D & or_bOplines3d))
	else
		if iLineShapeCategory = LINE_SHAPE_CATEGORY_SWING then
			textFlagOpLinePen = 4 - 4*((((bOverride_MVO_2D & not(or_iSwingType = LINE_SHAPE_SWING_NONE)) |\
								  (bOverride_MVO_3D & or_bOplines3d)) |\
								  (((bOverride_MVO_2D | bOverride_MVO_3D) & gs_opline_2D) & ((iOpeningParamType = 9) | (iOpeningParamType = 11)))) & \
								  (not(bDisable2DOverride) | not(bDisable3DOverride)))
		else
			textFlagOpLinePen = 4 - 4*((not(bDisable2DOverride) & bOverride_MVO_2D & not(or_iSlidingType = LINE_SHAPE_SLIDING_NONE)) | (not(bDisable3DOverride) & bOverride_MVO_3D & or_bOplines3d))
		endif
	endif
endif

if iOpeningParamType = 12 then
	textFlag2DMVO = 4 - 4 * (not(bDisable2DOverride) & bOverride_MVO_2D & gs_passdoor)
endif

textFlag3DMVO = 4 - 4*(not(bDisable3DOverride) & bOverride_MVO_3D & or_bOplines3D)
textFlagSideLight3D = 4 - 4*((bOverride_MVO_win_2D | (bOverride_MVO_win_3D & or_bWinOplines3d)) & (not(bDisable2DOverride) | not(bDisable3DOverride)))
textFlagWin2D = 4*(not(bOverride_MVO_win_2D) | bDisable2DOverride)		! Sidelights

! --------------------------------------------------------------------------------
! Swing Line Enable
! --------------------------------------------------------------------------------
if iLineShapeCategory = LINE_SHAPE_CATEGORY_SWING then
	numLineShapeType = (bittest(iLineShapeSwingEnable, LINE_SHAPE_SWING_NONE)		+\
						bittest(iLineShapeSwingEnable, LINE_SHAPE_SWING_CURVED)	+\
						bittest(iLineShapeSwingEnable, LINE_SHAPE_SWING_STRAIGHT)	+\
						bittest(iLineShapeSwingEnable, LINE_SHAPE_SWING_SIMPLE_LINE))
else
	numLineShapeType = (bittest(iLineShapeSlidingEnable, LINE_SHAPE_SLIDING_NONE)		+\
						bittest(iLineShapeSlidingEnable, LINE_SHAPE_SLIDING_ARROW)		+\
						bittest(iLineShapeSlidingEnable, LINE_SHAPE_SLIDING_SIMPLE_LINE))
endif

bUsePicForSwingLine = 1
if	iOpeningParamType = 6	|\
	iOpeningParamType = 61	|\
	iOpeningParamType = 8	|\
	iOpeningParamType = 11	|\
	iOpeningParamType = 12	|\
	iOpeningParamType = 2	|\
	(iOpeningParamType = 1 & bEnableSecondaryOpLineTypes)	|\
	(numLineShapeType > 3)	then

	bUsePicForSwingLine = 0
endif


! --------------------------------------------------------------------------------
! Page content
! --------------------------------------------------------------------------------

startPosX = 2
y = pageStartY + 25
dy = 23
yMaxRight = y
yMaxLeft = y

bShowSameLineTypeonUI = bShowSameLineTypeForLeaves & bEnableSecondaryOpLineTypes & not(bDisableSwingLineType)

if bShowSameLineTypeonUI then
	ui_style 0, 0
	ui_infield{3}	"gs_bSameLineTypeForLeaves",	startPosX,	y,	442-startPosX, 19,
		7, "", 2, 1, 0, 0, 0, 0,
		"", stOpeningOptionsUI[38], 0,
		"", stOpeningOptionsUI[38], 1
	y = y + dy
	ui_separator 5, y-3, 440, y - 3
	yVertSepStart = y + 3 + 29
else
	yVertSepStart = pageStartY + 29
endif


yVertSepEnd = y

if b2ColumnsOnOpLineUI then
	x1 = startPosX
		x3 = 217
	x2 = x3 - 90	! picWidth
	ui_style 0, 1
	ui_outfield stOpeningOptionsUI[1], startPosX, y+4, x3-x1, 15, 4*(bDisable2DOverride & iOpeningParamType = 0)
	y = y + dy
endif

ui_style 0, 0
! --------------------------------------------------------------------------------
! Opening angle parameters
! --------------------------------------------------------------------------------
if b2ColumnsOnOpLineUI then
	if iOpeningParamType = 1 then gosub "openingType1_2D"
	if iOpeningParamType = 2 then gosub "openingType2_2D"
	if iOpeningParamType = 3 then gosub "openingType3_2D"
	if iOpeningParamType = 5 then gosub "openingType5_2D"
	if iOpeningParamType = 19 then gosub "openingType19_2D"
	if iOpeningParamType = 20 then gosub "openingType20_2D"

	if iOpeningParamType = 6 then
		gosub "openingType1_2D"
		gosub "GhostLineParameters"		! ghost line params
	endif
	if iOpeningParamType = 61 then
		gosub "GhostLineParameters"		! ghost line params
	endif
	if iOpeningParamType = 7 then
		gosub "openingType1_2D"
		gosub "DoubleActingLineType"		! Double Acting Line Type
	endif
	if iOpeningParamType = 71 then
		gosub "DoubleActingLineType"		! Double Acting Line Type
	endif
	if iOpeningParamType = 8 then
		gosub "openingType1_2D"
		gosub "DoubleActingLineType"		! Double Acting Line Type
		gosub "GhostLineParameters"		! ghost line params
	endif
	if iOpeningParamType = 9 or iOpeningParamType = 10 or \
		iOpeningParamType = 13 or iOpeningParamType = 14 or \
		iOpeningParamType = 17 then		! D1 Garage 1 INT or USA or CHE
		gosub "GarageOpline2D"		! Garage 2D oplines
	endif
	if iOpeningParamType = 11 or iOpeningParamType = 12 then	! D1 Garage 4 INT or D1 Garage 3 USA with passdoor
		gosub "GarageOpline2D"		! Garage 2D oplines
		gosub "PassDoorAngle2D"		! Pass Door angle in 2D
		lockPicContour = (not(gs_passdoor) & (iOpeningParamType = 12))
	endif
	if iOpeningParamType = 16 or iOpeningParamType = 18 then		!Vertically rolling CHE garage doors
		gosub "closed2DControl"			!Closed in 2D
	endif
endif

! --------------------------------------------------------------------------------
! 2D control parameters
! --------------------------------------------------------------------------------
if b2ColumnsOnOpLineUI and not(bDisable2DOverride) then
	gosub "2DControlsMVO"
endif

yMaxRight = y + 5

! --------------------------------------------------------------------------------
! 3D control parameters
! --------------------------------------------------------------------------------

y = pageStartY + dy*bShowSameLineTypeonUI + 25
if b2ColumnsOnOpLineUI then
		startPosX = 227
	x1 = startPosX
	x3 = 442
	x2 = x3 - 90	! picWidth
else
	x1 = startPosX
	x2 = startPosX + 205
	x3 = startPosX + 325
endif
ui_style 0, 1
ui_outfield stOpeningOptionsUI[2], startPosX, y+4, x3-x1, 15, 4*(bDisable3DOverride & iOpeningParamType = 0)
y = y + dy

ui_style 0, 0

if iOpeningParamType = 1 then gosub "openingType1_3D"
if iOpeningParamType = 2 then gosub "openingType2_3D"
if iOpeningParamType = 3 | iOpeningParamType = 21 then gosub "openingType3_3D"
if iOpeningParamType = 4 then gosub "openingType4_3D"
if iOpeningParamType = 5 then gosub "openingType5_3D"
if iOpeningParamType = 6 then gosub "openingType1_3D"		! Same as Type 1
if iOpeningParamType = 7 then gosub "openingType1_3D"		! Same as Type 1
if iOpeningParamType = 8 then gosub "openingType1_3D"		! Same as Type 1
if iOpeningParamType = 9 then gosub "openingType4_3D"		! same as Type 4
if iOpeningParamType = 10 then gosub "openingType4_3D"		! same as Type 4
if iOpeningParamType = 11 or iOpeningParamType = 12 then	! D1 Garage 3 INT or 4 USA with passdoor
	gosub "openingType11_3D"		! Pass Door angle in 2D
endif
if iOpeningParamType = 13 then gosub "openingType4_3D"
if iOpeningParamType = 14 then gosub "openingType14_3D"
if iOpeningParamType = 16 or iOpeningParamType = 18 then gosub "openingType16_3D"
if iOpeningParamType = 17 then gosub "openingType17_3D"
if iOpeningParamType = 19 then gosub "openingType19_3D"
if iOpeningParamType = 20 then gosub "openingType20_3D"

gosub "3DControlsMVO"

yMaxLeft = y + 5

! --------------------------------------------------------------------------------
! Pen control parameters and Vertical separator
! --------------------------------------------------------------------------------

y = max(yMaxRight, yMaxleft)
! if small space is left underneath, move pen to bottom line

if iOpeningParamType = 8 then
	! pen group is under 3D section
	ui_separator 220, yVertSepStart, 220, 265
	ui_separator 220 + 5, yMaxleft, 444, yMaxleft
	x1 = startPosX
	y = yMaxleft + 5
	gosub "linePenUnder3DColumn"
else
	if 266 - y < 2*dy then
		y = 266 - dy
	endif
	
	if b2ColumnsOnOpLineUI then
		yVertSepEnd = y - 9
			ui_separator 220, yVertSepStart, 220, yVertSepEnd
		endif
	
	startPosX = 3
	if b2ColumnsOnOpLineUI and not(bDisable2DOverride) then
		x1 = startPosX
			x2 = 232
		gosub "linePen2Dand3D"
	else
		x1 = startPosX
		x2 = startPosX + 225
		gosub "linePen3D"
	endif
endif


! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! ==============================================================================


! ------------------------------------------------------------------------------
"3DControlsMVO":
! ------------------------------------------------------------------------------
	if bDoorWithSidelightSupport then
		ui_infield{3}	"bOverride_MVO_win_3D",	x1,	y,	x3-x1, 19,
				7, "", 2, 1, 0, 0, 0, 0,
				"", stOpeningOptionsUI[3], 0,
				"", stOpeningOptionsUI[3], 1
		y = y + dy

		ui_infield{3}	"or_bWinOplines3D",	x1,	y,	x3-x1, 19,
				7, "", 2, 1, 0, 0, 0, 0,
				"", stOpeningOptionsUI[4], 0,
				"", stOpeningOptionsUI[4], 1
		y = y + dy

		gosub "lineOrientationSub"

		ui_outfield stOpeningOptionsUI[5], x1, y+4, x2-x1-2, 15, textFlagSideLight3D
		ui_infield{3}	"or_iWinOplineType3DIn",	x2, y, x3-x2, 19,
				8, "", 3, 1, 0, 0, 0, 0,
				"", stOpeningLineType[1], 0,
				"", stOpeningLineType[2], 1,
				"", stOpeningLineType[3], 2
		y = y + dy

		ui_outfield stOpeningOptionsUI[6], x1, y+4, x2-x1-2, 15, textFlagSideLight3D
		ui_infield{3}	"or_iWinOplineType3DOut",	x2, y, x3-x2, 19,
				8, "", 3, 1, 0, 0, 0, 0,
				"", stOpeningLineType[1], 0,
				"", stOpeningLineType[2], 1,
				"", stOpeningLineType[3], 2
		y = y + dy + 14
	else
		ui_infield{3}	"bOverride_MVO_3D",	x1,	y,	x3-x1, 19,
				7, "", 2, 1, 0, 0, 0, 0,
				"", stOpeningOptionsUI[3], 0,
				"", stOpeningOptionsUI[3], 1
		y = y + dy
		ui_infield{3}	"or_bOplines3D",	x1,	y,	x3-x1, 19,
				7, "", 2, 1, 0, 0, 0, 0,
				"", stOpeningOptionsUI[4], 0,
				"", stOpeningOptionsUI[4], 1
		y = y + dy

		gosub "lineOrientationSub"

		ui_outfield stOpeningOptionsUI[5], x1, y+4, x2-x1-2, 15, textFlag3DMVO
		ui_infield{3}	"or_iOplineType3DIn",	x2, y, x3-x2, 19,
			8, "", 4, 1, 0, 0, 0, 0,
				"", stOpeningLineType[1], 0,
				"", stOpeningLineType[2], 1,
				"", stOpeningLineType[3], 2,
				"", stOpeningLineType[4], 3
		y = y + dy

		ui_outfield stOpeningOptionsUI[6], x1, y+4, x2-x1-2, 15, textFlag3DMVO
		ui_infield{3}	"or_iOplineType3DOut",	x2, y, x3-x2, 19,
			8, "", 4, 1, 0, 0, 0, 0,
				"", stOpeningLineType[1], 0,
				"", stOpeningLineType[2], 1,
				"", stOpeningLineType[3], 2,
				"", stOpeningLineType[4], 3
		y = y + dy

		if bEnableSecondaryOpLineTypes then
			if bWindow then
				ui_outfield stOpeningOptionsUI[7], x1, y+4, x2-x1-2, 15, textFlag3DMVO
			else
				textFlagSecondary3D = textFlag3DMVO
				if gs_bSameLineTypeForLeaves then
					textFlagSecondary3D = 4
				endif
				ui_outfield stOpeningOptionsUI[8], x1, y+4, x2-x1-2, 15, textFlagSecondary3D
			endif
			ui_infield{3}	"or_iOpLineType3dSecondary",	x2, y, x3-x2, 19,
					8, "", 5, 1, 0, 0, 0, 0,
					"", stOpeningLineTypeSec[1], 0,
					"", stOpeningLineTypeSec[2], 1,
					"", stOpeningLineTypeSec[3], 2,
					"", stOpeningLineTypeSec[4], 3,
					"", stOpeningLineTypeSec[5], 4

			y = y + dy
		endif
		y = y + 14
	endif
return


! ------------------------------------------------------------------------------
"2DControlsMVO":
! ------------------------------------------------------------------------------
	xPic	= x3 - 90
	if bDoorWithSidelightSupport then
		ui_infield{3}	"bOverride_MVO_win_2D",	x1,	y,	x3-x1, 19,
				7, "", 2, 1, 0, 0, 0, 0,
				"", stOpeningOptionsUI[3], 0,
				"", stOpeningOptionsUI[3], 1
	else
		ui_infield{3}	"bOverride_MVO_2D",	x1,	y,	x3-x1, 19,
				7, "", 2, 1, 0, 0, 0, 0,
				"", stOpeningOptionsUI[3], 0,
				"", stOpeningOptionsUI[3], 1
	endif

	y = y + dy

	if bEnableSwingLineTurnOff then
		ui_infield{3}	"or_bOplines2d",	x1,	y,	x3-x1, 19,
				7, "", 2, 1, 0, 0, 0, 0,
				"", stOpeningOptionsUI[4], 0,
				"", stOpeningOptionsUI[4], 1

		y = y + dy
	endif

	!positioning defaults
	yPicDefault = y
	_numRadButton = 0
	if not(bUseRadioButtons) then
		yPicDefault = y + dy
	endif

	if not(bSkylight) and not(bDisableSwingType) then
		if bUsePicForSwingLine then
			picHeight = 66
			picWidth = 90
			popWidth = picWidth

			if bDoorWithSidelightSupport then
				ui_outfield stOpeningOptionsUI[9], x1, y + 4, xPic-x1-2, 15, textFlagWin2D
			else
					ui_outfield stOpeningOptionsUI[9], x1, y + 4, xPic-x1-2, 15, textFlag2DMVO
				endif

			if bUseRadioButtons then y = y + dy

			if iLineShapeCategory = LINE_SHAPE_CATEGORY_SWING then

				if bUseRadioButtons then
					if bDoorWithSidelightSupport then
						ui_radiobutton "or_iWinSwingType", LINE_SHAPE_SWING_CURVED, stLineShapeSwingType[2], 	x1, y, xPic-x1-2, 19
						y = y + dy
						_numRadButton = _numRadButton + 1

						ui_radiobutton "or_iWinSwingType", LINE_SHAPE_SWING_STRAIGHT, stLineShapeSwingType[3], 	x1, y, xPic-x1-2, 19
						y = y + dy
						_numRadButton = _numRadButton + 1
					else
						if bittest(iLineShapeSwingEnable, LINE_SHAPE_SWING_NONE) then
							ui_radiobutton "or_iSwingType", LINE_SHAPE_SWING_NONE, stLineShapeSwingType[1], 	x1, y, xPic-x1-2, 19
							y = y + dy
							_numRadButton = _numRadButton + 1
						endif
	
						if bittest(iLineShapeSwingEnable, LINE_SHAPE_SWING_CURVED) then
							ui_radiobutton "or_iSwingType", LINE_SHAPE_SWING_CURVED, stLineShapeSwingType[2], 	x1, y, xPic-x1-2, 19
							y = y + dy
							_numRadButton = _numRadButton + 1
						endif
	
						if bittest(iLineShapeSwingEnable, LINE_SHAPE_SWING_STRAIGHT) then
							ui_radiobutton "or_iSwingType", LINE_SHAPE_SWING_STRAIGHT, stLineShapeSwingType[3], 	x1, y, xPic-x1-2, 19
							y = y + dy
							_numRadButton = _numRadButton + 1
						endif
	
						if bittest(iLineShapeSwingEnable, LINE_SHAPE_SWING_SIMPLE_LINE) then
							ui_radiobutton "or_iSwingType", LINE_SHAPE_SWING_SIMPLE_LINE, stLineShapeSwingType[4], 	x1, y, xPic-x1-2, 19
							y = y + dy
							_numRadButton = _numRadButton + 1
						endif
					endif
				else
					if bDoorWithSidelightSupport then
						ui_infield{3}	"or_iWinSwingType",	xPic, y, popWidth, 19,
							8, "", 5, 1, 0, 0, 0, 0,
							"", stLineShapeSwingType[2], LINE_SHAPE_SWING_CURVED,
							"", stLineShapeSwingType[3], LINE_SHAPE_SWING_STRAIGHT
					else
						ui_infield{3}	"or_iSwingType",	xPic, y, popWidth, 19,
								8, "", 5, 1, 0, 0, 0, 0,
								"", stLineShapeSwingType[1], LINE_SHAPE_SWING_NONE,
								"", stLineShapeSwingType[2], LINE_SHAPE_SWING_CURVED,
								"", stLineShapeSwingType[3], LINE_SHAPE_SWING_STRAIGHT,
								"", stLineShapeSwingType[4], LINE_SHAPE_SWING_SIMPLE_LINE,
								"", stLineShapeSwingType[5], LINE_SHAPE_SWING_LEAF_LINE
					endif
				endif

				! positioning swingline picture
				yPic = yPicDefault + (_numRadButton+1)*dy - 2 - picHeight
				yPic = max(yPic, yPicDefault)

					if bDoorWithSidelightSupport then
						if or_iWinSwingType = LINE_SHAPE_SWING_CURVED then
						ui_pict 9, xPic, yPic, picWidth, picHeight, 1				! ui_w_swing_curved.png
						endif
						if or_iWinSwingType = LINE_SHAPE_SWING_STRAIGHT then
							ui_pict 10, xPic, yPic, picWidth, picHeight, 1				! ui_w_swing_straight.png
						endif
					else
						if or_iSwingType = LINE_SHAPE_SWING_NONE then
							if bGarageDoorNoSideHung then
							ui_pict 15, xPic, yPic, picWidth, picHeight, 1			! ui_garage_none.png
							else
								if bDoubleOpeningDoor then
								ui_pict 22, xPic, yPic, picWidth, picHeight, 1		! ui_swing_none2.png
								else
								ui_pict 17, xPic, yPic, picWidth, picHeight, 1		! ui_swing_none.png
								endif
							endif
						endif
						if or_iSwingType = LINE_SHAPE_SWING_CURVED then
							if bWindow then
							ui_pict 9, xPic, yPic, picWidth, picHeight, 1			! ui_w_swing_curved.png
							else
								if bDoubleOpeningDoor then
								ui_pict 21, xPic, yPic, picWidth, picHeight, 1		! ui_swing_curved2.png
								else
								ui_pict 4, xPic, yPic, picWidth, picHeight, 1		! ui_swing_curved.png
								endif
							endif
						endif
						if or_iSwingType = LINE_SHAPE_SWING_STRAIGHT then
							if bWindow then
							ui_pict 10, xPic, yPic, picWidth, picHeight, 1			! ui_w_swing_straight.png
							else
								if bDoubleOpeningDoor then
								ui_pict 25, xPic, yPic, picWidth, picHeight, 1		! ui_swing_straight2.png
								else
								ui_pict 5, xPic, yPic, picWidth, picHeight, 1		! ui_swing_straight.png
								endif
							endif
						endif
						if or_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
							if bGarageDoorNoSideHung then
							ui_pict 16, xPic, yPic, picWidth, picHeight, 1			! ui_garage_simple_line.png
							else
								if bDoubleOpeningDoor then
								ui_pict 23, xPic, yPic, picWidth, picHeight, 1		! ui_swing_simple_line2.png
								else
								ui_pict 11, xPic, yPic, picWidth, picHeight, 1		! ui_swing_simple_line.png
								endif
							endif
						endif
						if or_iSwingType = LINE_SHAPE_SWING_LEAF_LINE then
						ui_pict 24, xPic, yPic, picWidth, picHeight, 1				! ui_swing_simple_line3.png
					endif
				endif
			else	! iLineShapeCategory # LINE_SHAPE_CATEGORY_SWING 
				if bUseRadioButtons then
					if bittest(iLineShapeSlidingEnable, LINE_SHAPE_SLIDING_NONE) then
						ui_radiobutton "or_iSlidingType", LINE_SHAPE_SLIDING_NONE, stLineShapeSlidingType[1], 	x1, y, xPic-x1-2, 19
						y = y + dy
						_numRadButton = _numRadButton + 1
					endif

					if bittest(iLineShapeSlidingEnable, LINE_SHAPE_SLIDING_ARROW) then
						ui_radiobutton "or_iSlidingType", LINE_SHAPE_SLIDING_ARROW, stLineShapeSlidingType[2], 	x1, y, xPic-x1-2, 19
						y = y + dy
						_numRadButton = _numRadButton + 1
					endif

					if bittest(iLineShapeSlidingEnable, LINE_SHAPE_SLIDING_SIMPLE_LINE) then
						ui_radiobutton "or_iSlidingType", LINE_SHAPE_SLIDING_SIMPLE_LINE, stLineShapeSlidingType[3], 	x1, y, xPic-x1-2, 19
						y = y + dy
						_numRadButton = _numRadButton + 1
					endif
				else
					ui_infield{3}	"or_iSlidingType",	xPic, y, popWidth, 19,
						8, "", 5, 1, 0, 0, 0, 0,
						"", stLineShapeSlidingType[1], LINE_SHAPE_SLIDING_NONE,
						"", stLineShapeSlidingType[2], LINE_SHAPE_SLIDING_ARROW,
						"", stLineShapeSlidingType[3], LINE_SHAPE_SLIDING_SIMPLE_LINE
				endif

				! positioning swingline picture
				yPic = yPicDefault + (_numRadButton+1)*dy - 2 - picHeight
				yPic = max(yPic, yPicDefault)

				if or_iSlidingType = LINE_SHAPE_SLIDING_NONE then
					ui_pict 12, xPic, yPic, picWidth, picHeight, 1				! ui_sliding_none.png
				endif
				if or_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
					ui_pict 13, xPic, yPic, picWidth, picHeight, 1				! ui_sliding_arrow.png
				endif
				if or_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
					ui_pict 14, xPic, yPic, picWidth, picHeight, 1				! ui_sliding_simple_line.png
				endif
			endif

			!positioning controls after picture
			y = yPic + picHeight + 2
		else
			xPopup = x3 - 90
			if iOpeningParamType = 12 then
				ui_outfield stOpeningOptionsUI[12], x1, y+4, xPopup-x1-2, 15, textFlag2DMVO
			else
				if bDoorWithSidelightSupport then
					ui_outfield stOpeningOptionsUI[9], x1, y+4, xPopup-x1-2, 15, textFlagWin2D
				else
					ui_outfield stOpeningOptionsUI[9], x1, y+4, xPopup-x1-2, 15, textFlag2DMVO
				endif
			endif
			
			if iLineShapeCategory = LINE_SHAPE_CATEGORY_SWING then
				ui_infield{3}	"or_iSwingType",	xPopup, y, x3-xPopup, 19,
					8, "", 5, 1, 0, 0, 0, 0,
					"", stLineShapeSwingType[1], 0,
					"", stLineShapeSwingType[2], 1,
					"", stLineShapeSwingType[3], 2,
					"", stLineShapeSwingType[4], 3
			else
				ui_infield{3}	"or_iSlidingType",	xPopup, y, x3-xPopup, 19,
					8, "", 5, 1, 0, 0, 0, 0,
					"", stLineShapeSlidingType[1], 0,
					"", stLineShapeSlidingType[2], 1,
					"", stLineShapeSlidingType[3], 2
			endif
			y = y + dy
		endif
	endif
	if not(bDisableSwingLineType) then
		xLineType = x3 - 98
		if bEnableSecondaryOpLineTypes then
			gosub "mainLineTypeControl"
			gosub "secondaryLineTypeControl"
		else
			gosub "mainLongerLineTypeControl"
		endif
	endif
return

! ------------------------------------------------------------------------------
"mainLongerLineTypeControl":
! ------------------------------------------------------------------------------


	if bDoorWithSidelightSupport then
		if bOverride_MVO_win_2D & not(lockPicContour) then
			ui_pict "ui_list_dw_OpLineType_flat_WMCC", x1, y+6, 32, 15, 1
		else
			ui_pict "ui_list_dw_OpLineType_lock_flat_WMCC", x1, y+6, 32, 15, 1
		endif
		ui_infield "or_winSwingLineType",	x1+40, y,	x3-x1-40, 27
	else
		if bOverride_MVO_2D & not(lockPicContour) then
			ui_pict "ui_list_dw_OpLineType_flat_WMCC", x1, y+6, 32, 15, 1
		else
			ui_pict "ui_list_dw_OpLineType_lock_flat_WMCC", x1, y+6, 32, 15, 1
		endif
		ui_infield "or_swingLineType",		x1+40, y,	x3-x1-40, 27
	endif
	y = y + dy + 13
return


! ------------------------------------------------------------------------------
"mainLineTypeControl":
! ------------------------------------------------------------------------------
	if bEnableSecondaryOpLineTypes then
		if	bWindow | \
			bDoorWithSidelightSupport then
			ui_outfield stOpeningOptionsUI[13], x1, y+4, xLineType-x1-2, 15, 0	! Main Sash
		else
			ui_outfield stOpeningOptionsUI[14], x1, y+4, xLineType-x1-2, 15, 0	! Main Leaf
		endif
	endif
	if bDoorWithSidelightSupport then
		ui_infield "or_winSwingLineType", 	xLineType, y+3,	x3-xLineType, 27
	else
		ui_infield "or_swingLineType", 	xLineType, y+3,	x3-xLineType, 27
	endif
	y = y + dy + 10
return


! ------------------------------------------------------------------------------
"secondaryLineTypeControl":
! ------------------------------------------------------------------------------
	if bEnableSecondaryOpLineTypes then	
		if bWindow then
			ui_outfield stOpeningOptionsUI[15], x1, y+4, xLineType-x1-2, 15, textFlag2DMVO	! Secondary Sash
		else
			textFlagSecondary2D = textFlag2DMVO
			if gs_bSameLineTypeForLeaves then
				textFlagSecondary2D = 4
			endif
			ui_outfield stOpeningOptionsUI[16], x1, y+4, xLineType-x1-2, 15, textFlagSecondary2D		! Secondary Leaf
		endif
		ui_infield "or_swingLineType2", xLineType, y+3,	x3-xLineType, 27
		y = y + dy + 10
	endif
return


! ------------------------------------------------------------------------------
"linePen3D":
! ------------------------------------------------------------------------------
	ui_separator 5, y-6, 440, y-6
	ui_style 0, 1

	picWidth = 32

	if bDoorWithSidelightSupport then
		if textFlagSideLight3D = 0 then
			ui_pict "ui_list_contourPen_flat_WMCC", x2, y+2, picWidth, 15, 1
		else
			ui_pict "ui_list_contourPen_lock_flat_WMCC", x2, y+2, picWidth, 15, 1
		endif
		ui_outfield stOpeningOptionsUI[17], x1,							y+4,	x2-x1-1,	15, textFlagSideLight3D
		ui_infield "or_iWinOpLinePen", 		x2 + picWidth + 2,			y, 		30,			19		ui_tooltip stOpeningOptionsUI[17]
		ui_infield "or_winOpLinePen", 		x2 + picWidth + 2 + 30 + 2,	y, 		33,			19		ui_tooltip stOpeningOptionsUI[17]
		y = y + dy
	else
		if textFlagOpLinePen = 0 then
			ui_pict "ui_list_contourPen_flat_WMCC", x2, y+2, picWidth, 15, 1
		else
			ui_pict "ui_list_contourPen_lock_flat_WMCC", x2, y+2, picWidth, 15, 1
		endif
		ui_outfield stOpeningOptionsUI[17],	x1,							y+4,	x2-x1-1,	15, textFlagOpLinePen
		ui_infield "or_iOpLinePen", 		x2 + picWidth + 2,			y, 		30,			19		ui_tooltip stOpeningOptionsUI[17]
		ui_infield "or_opLinePen", 			x2 + picWidth + 2 + 30 + 2,	y, 		33,			19		ui_tooltip stOpeningOptionsUI[17]
		y = y + dy
	endif
return


! ------------------------------------------------------------------------------
"linePen2Dand3D":
! ------------------------------------------------------------------------------
	ui_separator 5, y-6, 440, y-6

	ui_style 0, 1
	picWidth = 32

	if bDoorWithSidelightSupport then
		if textFlagSideLight3D = 0 then
			ui_pict "ui_list_contourPen_flat_WMCC", x2, y+2, picWidth, 15, 1
		else
			ui_pict "ui_list_contourPen_lock_flat_WMCC", x2, y+2, picWidth, 15, 1
		endif
		ui_outfield stOpeningOptionsUI[20], x1,						y+4,	x2-x1-1,	15, textFlagSideLight3D

		ui_style 0, 0
		ui_infield "or_iWinOpLinePen", 	x2 + picWidth + 2,			y, 		30,			19		ui_tooltip stOpeningOptionsUI[19]
		ui_infield "or_winOpLinePen", 	x2 + picWidth + 2 + 30 + 2,	y, 		33,			19		ui_tooltip stOpeningOptionsUI[19]
	else
		if textFlagOpLinePen = 0 then
			ui_pict "ui_list_contourPen_flat_WMCC", x2, y+2, picWidth, 15, 1
		else
			ui_pict "ui_list_contourPen_lock_flat_WMCC", x2, y+2, picWidth, 15, 1
		endif
		ui_outfield stOpeningOptionsUI[20], x1,						y+4,	x2-x1-1,	15, textFlagOpLinePen

		ui_style 0, 0
		ui_infield "or_iOpLinePen",		x2 + picWidth + 2,			y, 		30,			19		ui_tooltip stOpeningOptionsUI[19]
		ui_infield "or_opLinePen",		x2 + picWidth + 2 + 30 + 2,	y, 		33,			19		ui_tooltip stOpeningOptionsUI[19]
	endif
return


! ------------------------------------------------------------------------------
"linePenUnder3DColumn":
! ------------------------------------------------------------------------------
	ui_style 0, 1
	picWidth = 32

	if bDoorWithSidelightSupport then
		if textFlagSideLight3D = 0 then
			ui_pict "ui_list_contourPen_flat_WMCC", x1, y+dy+2, picWidth, 15, 1
		else
			ui_pict "ui_list_contourPen_lock_flat_WMCC", x1, y+dy+2, picWidth, 15, 1
		endif
		ui_outfield stOpeningOptionsUI[20], x1,						y+4,	444-x1-1,	15, textFlagSideLight3D
		y = y + dy

		ui_style 0, 0
		ui_infield "or_iWinOpLinePen",	x1 + picWidth + 2,			y, 		30,			19		ui_tooltip stOpeningOptionsUI[19]
		ui_infield "or_winOpLinePen", 	x1 + picWidth + 2 + 30 + 2,	y, 		33,			19		ui_tooltip stOpeningOptionsUI[19]
	else
		if textFlagOpLinePen = 0 then
			ui_pict "ui_list_contourPen_flat_WMCC", x1, y+dy+2, picWidth, 15, 1
		else
			ui_pict "ui_list_contourPen_lock_flat_WMCC", x1, y+dy+2, picWidth, 15, 1
		endif
		ui_outfield stOpeningOptionsUI[20], x1,						y+4,	444-x1-1,	15, textFlagOpLinePen
		y = y + dy

		ui_style 0, 0
		ui_infield "or_iOpLinePen",		x1 + picWidth + 2,			y, 		30,			19		ui_tooltip stOpeningOptionsUI[19]
		ui_infield "or_opLinePen",		x1 + picWidth + 2 + 30 + 2,	y, 		33,			19		ui_tooltip stOpeningOptionsUI[19]
	endif
return


! ------------------------------------------------------------------------------
"lineOrientationSub":
! ------------------------------------------------------------------------------
	if not(bHideOplineStyle) then
		if (b2ColumnsOnOpLineUI and bDisable2DOverride) or bDoubleActing then
			gosub "lineOrientationText"
		else
			if iOpeningParamType = 11 or iOpeningParamType = 12 | iOpeningParamType = 20 then
				gosub "lineOrientationRadButton"
			else
				gosub "lineOrientationPic"
			endif
		endif
	endif
return


! ------------------------------------------------------------------------------
"lineOrientationRadButton":
! ------------------------------------------------------------------------------
	textFlagOpLine = textFlag3DMVO
	if bLockOplineStyle then textFlagOpLine = 4
	ui_outfield stOpeningOptionsUI[21], x1, y+4, x2-x1-1, 15, textFlagOpLine

	ui_radiobutton "or_iOplineStyle", 1, stOpeningLineStyle[1], 	x2, y, x3-x2-1, 19
	y = y + dy
	ui_radiobutton "or_iOplineStyle", 2, stOpeningLineStyle[2], 	x2, y, x3-x2-1, 19
	y = y + dy
return


! ------------------------------------------------------------------------------
"lineOrientationPic":
! ------------------------------------------------------------------------------
	xPic = x3 - 90
	picWidth	= 90
	picHeight	= 66

	if bDoorWithSidelightSupport then
		if not(or_bWinOplines3D) then
			ui_pict 8, xPic, y, picWidth, picHeight, 1		! ui_w_opline3d_off.png
		else
			if or_iWinOplineStyle = 1 then
				ui_pict 6, xPic, y, picWidth, picHeight, 1		! ui_w_opline3d_handle.png
			else
				ui_pict 7, xPic, y, picWidth, picHeight, 1		! ui_w_opline3d_hinges.png
			endif
		endif
		textFlagOpLine = textFlagSideLight3D
		if bLockOplineStyle then textFlagOpLine = 4
		ui_outfield stOpeningOptionsUI[21], x1, y+4, xPic-x1-2, 15, textFlagOpLine
		y = y + dy
		ui_radiobutton "or_iWinOplineStyle", 1, stOpeningLineStyle[1], 	x1, y, xPic-x1-2, 19
		y = y + dy
		ui_radiobutton "or_iWinOplineStyle", 2, stOpeningLineStyle[2], 	x1, y, xPic-x1-2, 19
		y = y + dy
	else
		if not(or_bOplines3D) then
			if bWindow then
				ui_pict 8, xPic, y, picWidth, picHeight, 1		! ui_w_opline3d_off.png
			else
				if bDoubleOpeningDoor then
					ui_pict 20, xPic, y, picWidth, picHeight, 1		! ui_opline3d_off2.png
				else
					ui_pict 3, xPic, y, picWidth, picHeight, 1		! ui_opline3d_off.png
				endif
			endif
		else
			if or_iOplineStyle = 1 then
				if bWindow then
					ui_pict 6, xPic, y, picWidth, picHeight, 1		! ui_w_opline3d_handle.png
				else
					if bDoubleOpeningDoor then
						ui_pict 18, xPic, y, picWidth, picHeight, 1		! ui_opline3d_handle2.png
					else
						ui_pict 1, xPic, y, picWidth, picHeight, 1		! ui_opline3d_handle.png
					endif
				endif
			else
				if bWindow then
					ui_pict 7, xPic, y, picWidth, picHeight, 1		! ui_w_opline3d_hinges.png
				else
					if bDoubleOpeningDoor then
						ui_pict 19, xPic, y, picWidth, picHeight, 1		! ui_opline3d_hinges2.png
					else
						ui_pict 2, xPic, y, picWidth, picHeight, 1		! ui_opline3d_hinges.png
					endif
				endif
			endif
		endif

		textFlagOpLine = textFlag3DMVO
		if bLockOplineStyle then textFlagOpLine = 4
		ui_outfield stOpeningOptionsUI[21], x1, y+4, xPic-x1-2, 15, textFlagOpLine
		y = y + dy

		ui_radiobutton "or_iOplineStyle", 1, stOpeningLineStyle[1], 	x1, y, xPic-x1-2, 19
		y = y + dy
		ui_radiobutton "or_iOplineStyle", 2, stOpeningLineStyle[2], 	x1, y, xPic-x1-2, 19
		y = y + dy
	endif
return


! ------------------------------------------------------------------------------
"lineOrientationText":
! ------------------------------------------------------------------------------
	textFlagOpLine = textFlag3DMVO
	if bLockOplineStyle then textFlagOpLine = 4

	ui_outfield stOpeningOptionsUI[21], x1, y+4, x2-x1-2, 15, textFlagOpLine
	ui_infield{3}	"or_iOplineStyle",	x2, y, x3-x2, 19,
		8, "", 2, 1, 0, 0, 0, 0,
		"", stOpeningLineStyle[1], 1,
		"", stOpeningLineStyle[2], 2

	y = y + dy
return


! ------------------------------------------------------------------------------
"openingType1_2D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[22], x1, y+4, x2-x1-2, 15
	ui_infield	"gs_open_2d",	x2, y, x3-x2, 19
	y = y + dy
return


! ------------------------------------------------------------------------------
"openingType1_3D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[22], x1, y+4, x2-x1-2, 15
	ui_infield	"gs_open_3d",	x2, y, x3-x2, 19
	y = y + dy
return


! ------------------------------------------------------------------------------
"openingType2_2D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[23], x1, y+4, x2-x1-2+20, 15
	ui_infield	"gs_open_2d",	x2+20, y, x3-x2-20, 19
	y = y + dy

	ui_outfield stOpeningOptionsUI[24], x1, y+4, x2-x1-2+20, 15
	ui_infield	"gs_open_2d_s",	x2+20, y, x3-x2-20, 19
	y = y + dy
return


! ------------------------------------------------------------------------------
"openingType2_3D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[23], x1, y+4, x2-x1-2+20, 15
	ui_infield	"gs_open_3d",	x2+20, y, x3-x2-20, 19
	y = y + dy

	ui_outfield stOpeningOptionsUI[24], x1, y+4, x2-x1-2+20, 15
	ui_infield	"gs_open_3d_s",	x2+20, y, x3-x2-20, 19
	y = y + dy
return


! ------------------------------------------------------------------------------
"openingType3_2D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[25], x1, y+4, x2-x1-2, 15
	if NORSlidingType = 1 then
		ui_infield	"gs_open2D_1",	x2, y, x3-x2, 19
	else
		if NORSlidingType = 2 then
			ui_infield	"gs_open2D_2",	x2, y, x3-x2, 19
		else
			ui_infield	"gs_open2D",	x2, y, x3-x2, 19
		endif
	endif
	y = y + dy
return


! ------------------------------------------------------------------------------
"openingType3_3D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[25], x1, y+4, x2-x1-2, 15
	if NORSlidingType = 1 then
		ui_infield	"gs_open3D_1",	x2, y, x3-x2, 19
	else
		if NORSlidingType = 2 then
			ui_infield	"gs_open3D_2",	x2, y, x3-x2, 19
		else
			ui_infield	"gs_open3D",	x2, y, x3-x2, 19
		endif
	endif
	y = y + dy
return


! ------------------------------------------------------------------------------
"openingType4_3D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[26], x1, y+4, x2-x1-2, 15
	ui_infield	"gs_open3D",	x2, y, x3-x2, 19
	y = y + dy
return


! ------------------------------------------------------------------------------
"openingType5_2D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[27], x1, y+4, x2-x1-2+20, 15
	ui_infield	"gs_open2D",	x2+20, y, x3-x2-25, 19
	y = y + dy

	ui_outfield stOpeningOptionsUI[28], x1, y+4, x2-x1-2+20, 15
	ui_infield	"gs_open2D_s",	x2+20, y, x3-x2-25, 19
	y = y + dy
return


! ------------------------------------------------------------------------------
"openingType5_3D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[27], x1, y+4, x2-x1-2+20, 15
	ui_infield	"gs_open3D",	x2+20, y, x3-x2-20, 19
	y = y + dy

	ui_outfield stOpeningOptionsUI[28], x1, y+4, x2-x1-2+20, 15
	ui_infield	"gs_open3D_s",	x2+20, y, x3-x2-20, 19
	y = y + dy
return


! ------------------------------------------------------------------------------
"openingType11_3D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[26], x1, y+4, x2-x1-2, 15
	ui_infield	"gs_open3D",	x2, y, x3-x2, 19
	y = y + dy

	ui_outfield stOpeningOptionsUI[29], x1, y+4, x3-x1, 15, 4 - 4 * gs_passdoor
	y = y + dy
	ui_infield	"gs_open_3d",	x2, y, x3-x2, 19
	y = y + dy
return


! ------------------------------------------------------------------------------
"openingType14_3D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[26], x1, y+4, x2-x1-2, 15
	ui_infield	"hotzpar",	x2, y, x3-x2, 19
	y = y + dy
return


! ------------------------------------------------------------------------------
"openingType16_3D":
! ------------------------------------------------------------------------------
	if iOpeningParamType = 16 then
		ui_outfield stOpeningOptionsUI[26], x1, y+4, x2-x1-2, 15
	else
		ui_outfield stOpeningOptionsUI[25], x1, y+4, x2-x1-2, 15
	endif
	ui_infield	"op",	x2, y, x3-x2, 19
	y = y + dy
return

! ------------------------------------------------------------------------------
"openingType17_3D":
! ------------------------------------------------------------------------------
	ui_infield{3}	"H",	x1,	y,	x3-x1, 19,
			7, "", 2, 1, 0, 0, 0, 0,
			"", stOpeningOptionsUI[37], 0,		!Closed
			"", stOpeningOptionsUI[37], 1		!Closed
	y = y + dy
return



! ------------------------------------------------------------------------------
"openingType19_2D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[22], x1, y+4, x2-x1-2, 15
	ui_infield	"openingAngle2D_01",	x2, y, x3-x2, 19
	y = y + dy
return



! ------------------------------------------------------------------------------
"openingType19_3D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[22], x1, y+4, x2-x1-2, 15
	ui_infield	"openingAngle3D_01",	x2, y, x3-x2, 19
	y = y + dy
return


! ------------------------------------------------------------------------------
"openingType20_2D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[23], x1, y+4, x2-x1-2+20, 15
	ui_infield	"openingAngle2D_01",	x2+20, y, x3-x2-20, 19
	y = y + dy

	ui_outfield stOpeningOptionsUI[24], x1, y+4, x2-x1-2+20, 15
	ui_infield	"openingAngle2D_02",	x2+20, y, x3-x2-20, 19
	y = y + dy
return


! ------------------------------------------------------------------------------
"openingType20_3D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[23], x1, y+4, x2-x1-2+20, 15
	ui_infield	"openingAngle3D_01",	x2+20, y, x3-x2-20, 19
	y = y + dy

	ui_outfield stOpeningOptionsUI[24], x1, y+4, x2-x1-2+20, 15
	ui_infield	"openingAngle3D_02",	x2+20, y, x3-x2-20, 19
	y = y + dy
return


! ------------------------------------------------------------------------------
"GhostLineParameters":
! ------------------------------------------------------------------------------
	ui_infield{3}	"gs_gang",	x1,	y,	x3-x1, 19,
			7, "", 2, 1, 0, 0, 0, 0,
			"", stOpeningOptionsUI[30], 0,
			"", stOpeningOptionsUI[30], 1

	y = y + dy

	ui_outfield stOpeningOptionsUI[31], x1, y+4, x2-x1-2, 15, 4 - 4 * gs_gang
	ui_infield	"gs_gopen_2d",	x2, y, x3-x2, 19
	y = y + dy

	ui_outfield stOpeningOptionsUI[32], x1, y+4, x1+69, 15, 4 - 4 * gs_gang
	ui_infield "gs_gline", 	x1+70, 	y+3, 	x3-x1-70, 	27
	y = y + dy + 10
return


! ------------------------------------------------------------------------------
"DoubleActingLineType":			!Double acting secondary linetype INT
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[33], x1, y+4, x3-x1, 15
	y = y + dy
	ui_infield "gs_swing_pen_line", 	x1+70, 	y, 	x3-x1-70, 	27
	y = y + dy + 10
return


! ------------------------------------------------------------------------------
"GarageOpline2D":
! ------------------------------------------------------------------------------
	if iOpeningParamType = 13 or iOpeningParamType = 14 or iOpeningParamType = 17 then
		lineFlag = 0
	endif

	if iOpeningParamType <> 13 and iOpeningParamType <> 14 and iOpeningParamType <> 17 then
		ui_infield{3}	"gs_opline_2D",	x1,	y,	x3-x1, 19,
				7, "", 2, 1, 0, 0, 0, 0,
				"", stOpeningOptionsUI[34], 0,
				"", stOpeningOptionsUI[34], 1
		y = y + dy
		lineFlag = 4 - 4 * gs_opline_2D
	endif

	if iOpeningParamType = 10 or iOpeningParamType = 12 then
		ui_infield{3}	"gs_onlyPanelContour",	x1,	y,	x3-x1, 19,
				7, "", 2, 1, 0, 0, 0, 0,
				"", stOpeningOptionsUI[35], 0,
				"", stOpeningOptionsUI[35], 1
		y = y + dy
	endif

	ui_outfield stOpeningOptionsUI[32], x1, y+4, x2-x1-42, 15, lineFlag
	ui_infield "gs_opline_type_2D", 	x2-40, 	y+3, 	x3-x2+40, 	27
	y = y + dy + 10
return


! ------------------------------------------------------------------------------
"PassDoorAngle2D":
! ------------------------------------------------------------------------------
	ui_outfield stOpeningOptionsUI[29], x1, y+4, x3-x1, 15, 4 - 4 * gs_passdoor
	y = y + dy
	ui_infield	"gs_open_2d",	x2, y, x3-x2, 19
	y = y + dy
return

! ------------------------------------------------------------------------------
"closed2DControl":
! ------------------------------------------------------------------------------
	ui_infield{3}	"H",	x1,	y,	x3-x1, 19,
			7, "", 2, 1, 0, 0, 0, 0,
			"", stOpeningOptionsUI[36], 0,		!`Closed in 2D`
			"", stOpeningOptionsUI[36], 1		!`Closed in 2D`
	y = y + dy
return




]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

for i = 1 to 255
	put i
next i

if bDoorWithSidelightSupport then
	values "or_winOpLinePen" use(NSP)

	if GLOB_MODPAR_NAME = "or_iWinOpLinePen" then
		or_winOpLinePen = or_iOpLinePen
		parameters or_winOpLinePen = or_winOpLinePen
	else
		or_iWinOpLinePen = or_winOpLinePen
		parameters or_iWinOpLinePen = or_iWinOpLinePen
	endif

	if not(bOverride_MVO_win_3D & or_bWinOplines3d) & not(bOverride_MVO_win_2D) then
		hideparameter "or_winOpLinePen", "or_iWinOpLinePen"
		lock "or_winOpLinePen", "or_iWinOpLinePen"
	endif

	values "or_winOpLineType3dIn" stOpeningLineType[1], stOpeningLineType[2], stOpeningLineType[3]
	values "or_iWinOpLineType3dIn" 0,1,2

	if GLOB_MODPAR_NAME = "or_winOpLineType3dIn" then
		or_iWinOpLineType3dIn = 0
		if or_winOpLineType3dIn = stOpeningLineType[2] then or_iWinOpLineType3dIn = 1
		if or_winOpLineType3dIn = stOpeningLineType[3] then or_iWinOpLineType3dIn = 2
		parameters or_iWinOpLineType3dIn = or_iWinOpLineType3dIn
	else
		or_winOpLineType3dIn = stOpeningLineType[1]
		if or_iWinOpLineType3dIn = 1 then or_winOpLineType3dIn = stOpeningLineType[2]
		if or_iWinOpLineType3dIn = 2 then or_winOpLineType3dIn = stOpeningLineType[3]
		parameters or_winOpLineType3dIn = or_winOpLineType3dIn
	endif

	values "or_winOpLineType3dOut" stOpeningLineType[1], stOpeningLineType[2], stOpeningLineType[3]
	values "or_iWinOpLineType3dOut" 0,1,2
	if GLOB_MODPAR_NAME = "or_winOpLineType3dOut" then
		or_iWinOpLineType3dOut = 0
		if or_winOpLineType3dOut = stOpeningLineType[2] then or_iWinOpLineType3dOut = 1
		if or_winOpLineType3dOut = stOpeningLineType[3] then or_iWinOpLineType3dOut = 2
		parameters or_iWinOpLineType3dOut = or_iWinOpLineType3dOut
	else
		or_winOpLineType3dOut = stOpeningLineType[1]
		if or_iWinOpLineType3dOut = 1 then or_winOpLineType3dOut = stOpeningLineType[2]
		if or_iWinOpLineType3dOut = 2 then or_winOpLineType3dOut = stOpeningLineType[3]
		parameters or_winOpLineType3dOut = or_winOpLineType3dOut
	endif

	values "or_winOplineStyle" stOpeningLineStyle
	values "or_iWinOplineStyle" 1, 2
	if GLOB_MODPAR_NAME = "or_winOplineStyle" then
		or_iWinOplineStyle = 1
		if or_winOplineStyle = stOpeningLineStyle[2] then or_iWinOplineStyle = 2
		parameters or_iWinOplineStyle = or_iWinOplineStyle
	else
		or_winOplineStyle = stOpeningLineStyle[1]
		if or_iWinOplineStyle = 2 then or_winOplineStyle = stOpeningLineStyle[2]
		parameters or_winOplineStyle = or_winOplineStyle
	endif

	if not(or_bWinOplines3d) then
		lock	"or_winOpLineType3dIn",
				"or_iWinOpLineType3dIn",
				"or_winOpLineType3dOut",
				"or_iWinOpLineType3dOut",
				"or_winOplineStyle",
				"or_iWinOplineStyle"

		hideparameter	"or_winOpLineType3dIn",
				"or_iWinOpLineType3dIn",
				"or_winOpLineType3dOut",
				"or_iWinOpLineType3dOut",
				"or_winOplineStyle",
				"or_iWinOplineStyle"
	endif
	if not(bOverride_MVO_win_3D) then
		lock	"or_bWinOplines3d",
				"or_winOpLineType3dIn",
				"or_iWinOpLineType3dIn",
				"or_winOpLineType3dOut",
				"or_iWinOpLineType3dOut",
				"or_winOplineStyle",
				"or_iWinOplineStyle"

		hideparameter	"or_bWinOplines3d",
				"or_winOpLineType3dIn",
				"or_iWinOpLineType3dIn",
				"or_winOpLineType3dOut",
				"or_iWinOpLineType3dOut",
				"or_winOplineStyle",
				"or_iWinOplineStyle"
	endif
	if	not(bOverride_MVO_win_2D) & \
		(gs_sidelight_right | \
		 gs_sidelight_left) then
		lock	"or_winSwingLineType",
				"or_winSwingType",
				"or_iWinSwingType"

		hideparameter	"or_winSwingLineType",
						"or_winSwingType",
						"or_iWinSwingType"
	endif


	if bDisable3DOverride then
		lock	"bOverride_MVO_win_3D",
				"or_bWinOplines3d",
				"or_winOpLineType3dIn",
				"or_iWinOpLineType3dIn",
				"or_winOpLineType3dOut",
				"or_iWinOpLineType3dOut",
				"or_winOplineStyle",
				"or_iWinOplineStyle"

		hideparameter	"bOverride_MVO_win_3D",
				"or_bWinOplines3d",
				"or_winOpLineType3dIn",
				"or_iWinOpLineType3dIn",
				"or_winOpLineType3dOut",
				"or_iWinOpLineType3dOut",
				"or_winOplineStyle",
				"or_iWinOplineStyle"
	endif

	if bDisable2DOverride then
		lock	"bOverride_MVO_win_2D",
				"or_winSwingLineType",
				"or_winSwingType",
				"or_iWinSwingType"

		hideparameter	"bOverride_MVO_win_2D",
						"or_winSwingLineType",
						"or_winSwingType",
						"or_iWinSwingType"
	endif

	if bDisable2DOverride & bDisable3DOverride then
		hideparameter "or_winOpLinePen", "or_iWinOpLinePen"
		lock "or_winOpLinePen", "or_iWinOpLinePen"
	endif

	if bHideOplineStyle then
		hideparameter "or_winOplineStyle"
	endif
	if bLockOplineStyle then
		lock "or_winOplineStyle", "or_iWinOplineStyle"
	endif
endif

values "or_opLinePen" get(NSP)

if GLOB_MODPAR_NAME = "or_iOpLinePen" then
	or_opLinePen = or_iOpLinePen
	parameters or_opLinePen = or_opLinePen
else
	or_iOpLinePen = or_opLinePen
	parameters or_iOpLinePen = or_iOpLinePen
endif
if	not((bOverride_MVO_2D & (not(bEnableSwingLineTurnOff) or (bEnableSwingLineTurnOff & or_bOplines2d ))) |\
		(bOverride_MVO_3D & or_bOplines3d) |\
		(((bOverride_MVO_2D | bOverride_MVO_3D) & gs_opline_2D) & ((iOpeningParamType = 9) | (iOpeningParamType = 11)))) then

	hideparameter "or_opLinePen", "or_iOpLinePen"
	lock "or_opLinePen", "or_iOpLinePen"
endif

if not(bSkylight) then
	if iLineShapeCategory = LINE_SHAPE_CATEGORY_SWING then
		dim iLineShapeSwingValueMask[]
		dim sLineShapeSwingValueMask[]

		j = 1
		for i = 1 to vardim1(stLineShapeSwingType)
			if bittest(iLineShapeSwingEnable, i - 1) then
				iLineShapeSwingValueMask[j] = i - 1
				sLineShapeSwingValueMask[j] = stLineShapeSwingType[i]
				j = j + 1
			else
				if or_iSwingType = i - 1 then
					or_iSwingType = 0
					parameters or_iSwingType = 0
				endif
			endif
		next i

		if vardim1(iLineShapeSwingValueMask) > 0 then
			values "or_SwingType" 	sLineShapeSwingValueMask
			values "or_iSwingType"	iLineShapeSwingValueMask
		endif

		if GLOB_MODPAR_NAME = "or_SwingType" then
			or_iSwingType = 0
			for i = 2 to vardim1(stLineShapeSwingType)
				if or_SwingType = stLineShapeSwingType[i] then
					or_iSwingType = i - 1
					i = vardim1(stLineShapeSwingType)
				endif
			next i
			parameters or_iSwingType = or_iSwingType
		else
			or_iSwingType = min(max(0, or_iSwingType), (vardim1(stLineShapeSwingType) - 1))
			or_SwingType = stLineShapeSwingType[or_iSwingType + 1]
			parameters	or_SwingType	= or_SwingType,
						or_iSwingType	= or_iSwingType
		endif
	else
		dim iLineShapeSlidingValueMask[]
		dim sLineShapeSlidingValueMask[]

		j = 1
		for i = 1 to vardim1(stLineShapeSlidingType)
			if bittest(iLineShapeSlidingEnable, i - 1) then
				iLineShapeSlidingValueMask[j] = i - 1
				sLineShapeSlidingValueMask[j] = stLineShapeSlidingType[i]
				j = j + 1
			else
				if or_iSlidingType = i - 1 then
					or_iSlidingType = 0
					parameters or_iSlidingType = 0
				endif
			endif
		next i

		if vardim1(iLineShapeSlidingValueMask) > 0 then
			values "or_SlidingType" 	sLineShapeSlidingValueMask
			values "or_iSlidingType"	iLineShapeSlidingValueMask
		endif

		if GLOB_MODPAR_NAME = "or_SlidingType" then
			or_iSlidingType = 0
			for i = 2 to vardim1(stLineShapeSlidingType)
				if or_SlidingType = stLineShapeSlidingType[i] then
					or_iSlidingType = i - 1
					i = vardim1(stLineShapeSlidingType)
				endif
			next i
			parameters or_iSlidingType = or_iSlidingType
		else
			or_iSlidingType = min(max(0, or_iSlidingType), (vardim1(stLineShapeSlidingType) - 1))
			or_SlidingType = stLineShapeSlidingType[or_iSlidingType + 1]
			parameters	or_SlidingType	= or_SlidingType,
						or_iSlidingType	= or_iSlidingType
		endif
	endif

	if	bDoorWithSidelightSupport  & \
		(gs_sidelight_left | \
		gs_sidelight_right) then

		values "or_winSwingType" 	stLineShapeSwingType[2],
									stLineShapeSwingType[3]

		values "or_iWinSwingType"	LINE_SHAPE_SWING_CURVED,
									LINE_SHAPE_SWING_STRAIGHT
	
		if GLOB_MODPAR_NAME = "or_winSwingType" then
			or_iWinSwingType = 0
			for i = 2 to vardim1(stLineShapeSwingType)
				if or_winSwingType = stLineShapeSwingType[i] then
					or_iWinSwingType = i - 1
					i = vardim1(stLineShapeSwingType)
				endif
			next i
			parameters or_iWinSwingType = or_iWinSwingType
		else
			or_iWinSwingType = min(max(0, or_iWinSwingType), (vardim1(stLineShapeSwingType) - 1))
			or_winSwingType = stLineShapeSwingType[or_iWinSwingType + 1]
			parameters	or_winSwingType		= or_winSwingType,
						or_iWinSwingType	= or_iWinSwingType
		endif
	endif
endif

if bEnableSwingLineTurnOff then
	values "or_opLineType3dIn" stOpeningLineType
	values "or_iOpLineType3dIn" 0,1,2,3
else
	values "or_opLineType3dIn" stOpeningLineType[1], stOpeningLineType[2], stOpeningLineType[3]
	values "or_iOpLineType3dIn" 0,1,2
endif

if GLOB_MODPAR_NAME = "or_opLineType3dIn" then
	or_iOpLineType3dIn = 0
	if or_opLineType3dIn = stOpeningLineType[2] then or_iOpLineType3dIn = 1
	if or_opLineType3dIn = stOpeningLineType[3] then or_iOpLineType3dIn = 2
	if or_opLineType3dIn = stOpeningLineType[4] then or_iOpLineType3dIn = 3
	parameters or_iOpLineType3dIn = or_iOpLineType3dIn
else
	or_opLineType3dIn = stOpeningLineType[1]
	if or_iOpLineType3dIn = 1 then or_opLineType3dIn = stOpeningLineType[2]
	if or_iOpLineType3dIn = 2 then or_opLineType3dIn = stOpeningLineType[3]
	if or_iOpLineType3dIn = 3 then or_opLineType3dIn = stOpeningLineType[4]
	parameters or_opLineType3dIn = or_opLineType3dIn
endif

if bEnableSwingLineTurnOff then
	values "or_opLineType3dOut" stOpeningLineType
	values "or_iOpLineType3dOut" 0,1,2,3
else
	values "or_opLineType3dOut" stOpeningLineType[1], stOpeningLineType[2], stOpeningLineType[3]
	values "or_iOpLineType3dOut" 0,1,2
endif

if GLOB_MODPAR_NAME = "or_opLineType3dOut" then
	or_iOpLineType3dOut = 0
	if or_opLineType3dOut = stOpeningLineType[2] then or_iOpLineType3dOut = 1
	if or_opLineType3dOut = stOpeningLineType[3] then or_iOpLineType3dOut = 2
	if or_opLineType3dOut = stOpeningLineType[4] then or_iOpLineType3dOut = 3
	parameters or_iOpLineType3dOut = or_iOpLineType3dOut
else
	or_opLineType3dOut = stOpeningLineType[1]
	if or_iOpLineType3dOut = 1 then or_opLineType3dOut = stOpeningLineType[2]
	if or_iOpLineType3dOut = 2 then or_opLineType3dOut = stOpeningLineType[3]
	if or_iOpLineType3dOut = 3 then or_opLineType3dOut = stOpeningLineType[4]
	parameters or_opLineType3dOut = or_opLineType3dOut
endif

if bEnableSecondaryOpLineTypes then
	values "or_opLineType3dSecondary" stOpeningLineTypeSec
	values "or_iOpLineType3dSecondary" 0, 1, 2, 3, 4
	if GLOB_MODPAR_NAME = "or_opLineType3dSecondary" then
		or_iOpLineType3dSecondary = 0
		if or_opLineType3dSecondary = stOpeningLineTypeSec[2] then or_iOpLineType3dSecondary = 1
		if or_opLineType3dSecondary = stOpeningLineTypeSec[3] then or_iOpLineType3dSecondary = 2
		if or_opLineType3dSecondary = stOpeningLineTypeSec[4] then or_iOpLineType3dSecondary = 3
		if or_opLineType3dSecondary = stOpeningLineTypeSec[5] then or_iOpLineType3dSecondary = 4
		parameters or_iOpLineType3dSecondary = or_iOpLineType3dSecondary
	else
		or_opLineType3dSecondary = stOpeningLineType[1]
		if or_iOpLineType3dSecondary = 1 then or_opLineType3dSecondary = stOpeningLineTypeSec[2]
		if or_iOpLineType3dSecondary = 2 then or_opLineType3dSecondary = stOpeningLineTypeSec[3]
		if or_iOpLineType3dSecondary = 3 then or_opLineType3dSecondary = stOpeningLineTypeSec[4]
		if or_iOpLineType3dSecondary = 4 then or_opLineType3dSecondary = stOpeningLineTypeSec[5]
		parameters or_opLineType3dSecondary = or_opLineType3dSecondary
	endif

	if gs_bSameLineTypeForLeaves then
		hideparameter "or_swingLineType2", "or_iOpLineType3dSecondary", "or_opLineType3dSecondary"
		lock "or_swingLineType2", "or_iOpLineType3dSecondary", "or_opLineType3dSecondary"
	endif
endif

values "or_oplineStyle" stOpeningLineStyle
values "or_iOplineStyle" 1, 2
if GLOB_MODPAR_NAME = "or_oplineStyle" then
	or_iOplineStyle = 1
	if or_oplineStyle = stOpeningLineStyle[2] then or_iOplineStyle = 2
	parameters or_iOplineStyle = or_iOplineStyle
else
	or_oplineStyle = stOpeningLineStyle[1]
	if or_iOplineStyle = 2 then or_oplineStyle = stOpeningLineStyle[2]
	parameters or_oplineStyle = or_oplineStyle
endif

if not(or_bOplines3d) then
	lock	"or_opLineType3dIn",
			"or_iOpLineType3dIn",
			"or_opLineType3dOut",
			"or_iOpLineType3dOut",
			"or_oplineStyle",
			"or_iOplineStyle"

	hideparameter	"or_opLineType3dIn",
			"or_iOpLineType3dIn",
			"or_opLineType3dOut",
			"or_iOpLineType3dOut",
			"or_oplineStyle",
			"or_iOplineStyle"

	if bEnableSecondaryOpLineTypes then
		lock "or_opLineType3dSecondary", "or_iOpLineType3dSecondary"
		hideparameter "or_opLineType3dSecondary"
	endif
endif
if not(bOverride_MVO_3D) then
	lock	"or_bOplines3d",
			"or_opLineType3dIn",
			"or_iOpLineType3dIn",
			"or_opLineType3dOut",
			"or_iOpLineType3dOut",
			"or_oplineStyle",
			"or_iOplineStyle"

	hideparameter	"or_bOplines3d",
			"or_opLineType3dIn",
			"or_iOpLineType3dIn",
			"or_opLineType3dOut",
			"or_iOpLineType3dOut",
			"or_oplineStyle",
			"or_iOplineStyle"

	if bEnableSecondaryOpLineTypes then
		lock "or_opLineType3dSecondary", "or_iOpLineType3dSecondary"
		hideparameter "or_opLineType3dSecondary"
	endif
endif

if not(bOverride_MVO_2D) then
	lock			"or_swingLineType"
	hideparameter	"or_swingLineType"

	if not(bSkylight) then
		lock	"or_SwingType",
				"or_iSwingType",
				"or_SlidingType",
				"or_iSlidingType"

		hideparameter	"or_SwingType",
						"or_iSwingType",
						"or_SlidingType",
						"or_iSlidingType"
	endif

	if bEnableSecondaryOpLineTypes then
		hideparameter "or_swingLineType2"
		lock "or_swingLineType2"
	endif
	if bEnableSwingLineTurnOff then
		hideparameter "or_bOplines2d"
		lock "or_bOplines2d"
	endif
endif

if bEnableSwingLineTurnOff & bOverride_MVO_2D & not(or_bOplines2d) then
	lock	"or_swingLineType",
			"or_SwingType",
			"or_iSwingType",
			"or_SlidingType",
			"or_iSlidingType"
	hideparameter	"or_swingLineType",
					"or_SwingType",
					"or_iSwingType",
					"or_SlidingType",
					"or_iSlidingType"

	if bEnableSecondaryOpLineTypes then
		lock	"or_swingLineType2"
		hideparameter	"or_swingLineType2"
	endif
endif

if bDisable2DOverride then
	hideparameter	"bOverride_MVO_2D",
					"or_SwingType",
					"or_iSwingType",
					"or_swingLineType",
					"or_SlidingType",
					"or_iSlidingType"
	lock	"bOverride_MVO_2D",
			"or_SwingType",
			"or_iSwingType",
			"or_swingLineType",
			"or_SlidingType",
			"or_iSlidingType"
	if bEnableSwingLineTurnOff then
		hideparameter "or_bOplines2d"
		lock "or_bOplines2d"
	endif
	if bEnableSecondaryOpLineTypes then
		hideparameter "or_swingLineType2"
		lock "or_swingLineType2"
	endif
endif

if bDisable3DOverride then
	lock	"bOverride_MVO_3D",
			"or_bOplines3d",
			"or_opLineType3dIn",
			"or_iOpLineType3dIn",
			"or_opLineType3dOut",
			"or_iOpLineType3dOut",
			"or_oplineStyle",
			"or_iOplineStyle"

	hideparameter	"bOverride_MVO_3D",
			"or_bOplines3d",
			"or_opLineType3dIn",
			"or_iOpLineType3dIn",
			"or_opLineType3dOut",
			"or_iOpLineType3dOut",
			"or_oplineStyle",
			"or_iOplineStyle"

	if bEnableSecondaryOpLineTypes then
		lock "or_opLineType3dSecondary", "or_iOpLineType3dSecondary"
		hideparameter "or_opLineType3dSecondary"
	endif
endif

if not(bSkylight) then
	if bDisableSwingType then
		lock	"or_SwingType",
				"or_iSwingType",
				"or_SlidingType",
				"or_iSlidingType"
		hideparameter	"or_SwingType",
						"or_iSwingType",
						"or_SlidingType",
						"or_iSlidingType"
	else
		if iLineShapeCategory = LINE_SHAPE_CATEGORY_SWING then
			lock	"or_SlidingType",
					"or_iSlidingType"
			hideparameter	"or_SlidingType",
							"or_iSlidingType"
		else
			lock	"or_SwingType",
					"or_iSwingType"
			hideparameter	"or_SwingType",
							"or_iSwingType"
		endif
	endif
endif

if bDisableSwingLineType then
	lock "or_swingLineType"
	hideparameter "or_swingLineType"

	if bEnableSecondaryOpLineTypes then
		hideparameter "or_swingLineType2"
		lock "or_swingLineType2"
	endif
endif

if bDisable2DOverride & bDisable3DOverride then
	hideparameter "or_opLinePen", "or_iOpLinePen"
	lock "or_opLinePen", "or_iOpLinePen"
endif

if iOpeningParamType = 12 then	! D1 Garage 3 USA with passdoor
	if not(gs_passdoor) then
		lock "or_swingLineType", "or_SwingType", "or_iSwingType"
		hideparameter "or_swingLineType", "or_SwingType", "or_iSwingType"
	endif
endif
if bHideOplineStyle then
	hideparameter "or_oplineStyle"
endif
if bLockOplineStyle then
	lock "or_oplineStyle", "or_iOplineStyle"
endif

if not(bSkylight) then
	if iLineShapeCategory = LINE_SHAPE_CATEGORY_SWING then
		if or_iSwingType = LINE_SHAPE_SWING_NONE then
			lock "or_swingLineType"
			hideparameter "or_swingLineType"

			if not(bOverride_MVO_3D) & not(gs_opline_2D & ((iOpeningParamType = 9) | (iOpeningParamType = 11))) then
				lock	"or_opLinePen",
						"or_iOpLinePen"
				hideparameter	"or_opLinePen",
								"or_iOpLinePen"
			endif
		endif
	else
		if or_iSlidingType = LINE_SHAPE_SLIDING_NONE then
			lock "or_swingLineType"
			hideparameter "or_swingLineType"

			if not(bOverride_MVO_3D) then
				lock	"or_opLinePen",
						"or_iOpLinePen"
				hideparameter	"or_opLinePen",
								"or_iOpLinePen"
			endif
		endif
	endif
endif

]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" path="uipicts/OpeningOptions/ui_opline3d_handle.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" path="uipicts/OpeningOptions/ui_opline3d_hinges.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="3" path="uipicts/OpeningOptions/ui_opline3d_off.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="4" path="uipicts/OpeningOptions/ui_swing_curved.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="5" path="uipicts/OpeningOptions/ui_swing_straight.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="6" path="uipicts/OpeningOptions/ui_w_opline3d_handle.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="7" path="uipicts/OpeningOptions/ui_w_opline3d_hinges.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="8" path="uipicts/OpeningOptions/ui_w_opline3d_off.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="9" path="uipicts/OpeningOptions/ui_w_swing_curved.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="10" path="uipicts/OpeningOptions/ui_w_swing_straight.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="11" path="uipicts/OpeningOptions/ui_swing_simple_line.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="12" path="uipicts/OpeningOptions/ui_sliding_none.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="13" path="uipicts/OpeningOptions/ui_sliding_arrow.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="14" path="uipicts/OpeningOptions/ui_sliding_simple_line.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="15" path="uipicts/OpeningOptions/ui_garage_none.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="16" path="uipicts/OpeningOptions/ui_garage_simple_line.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="17" path="uipicts/OpeningOptions/ui_swing_none.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="18" path="uipicts/OpeningOptions/ui_opline3d_handle2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="19" path="uipicts/OpeningOptions/ui_opline3d_hinges2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="20" path="uipicts/OpeningOptions/ui_opline3d_off2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="21" path="uipicts/OpeningOptions/ui_swing_curved2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="22" path="uipicts/OpeningOptions/ui_swing_none2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="23" path="uipicts/OpeningOptions/ui_swing_simple_line2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="24" path="uipicts/OpeningOptions/ui_swing_simple_line3.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="25" path="uipicts/OpeningOptions/ui_swing_straight2.png">
</GDLPict>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>BIMobject</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>22</Version>
		<AutoHotspots>no</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Value>1</Value>
		</Length>
		<Integer Name="AC_WallContours">
			<Description><![CDATA["Wall Contours (0-None,1-Full,2-Side,3-Length)"]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_Hole_Hotspot_Control">
			<Description><![CDATA["Hotspots 0-None,1-2D,2-3D,3-All"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Hole has Wall's Side Surface"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="AC_HoleMaterialCurved">
			<Description><![CDATA["Hole Surface's Split is Curved in Curved Walls"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iLineShapeCategory">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="iLineShapeSwingEnable">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="iLineShapeSlidingEnable">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_leaf_optype_m">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bWindow">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bSkylight">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_opening_dir_m">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_sidelight_left">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sidelight_right">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bOverride_MVO_2D">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="or_bOplines2d">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<LineType Name="or_swingLineType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</LineType>
		<LineType Name="or_swingLineType2">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</LineType>
		<String Name="or_SwingType">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["None"]]></Value>
		</String>
		<Integer Name="or_iSwingType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="or_SlidingType">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="or_iSlidingType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<PenColor Name="or_opLinePen">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</PenColor>
		<Integer Name="or_iOpLinePen">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<PenColor Name="or_winOpLinePen">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</PenColor>
		<Integer Name="or_iWinOpLinePen">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bOverride_MVO_3D">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="or_bOplines3d">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<String Name="or_opLineType3dIn">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Dashed"]]></Value>
		</String>
		<Integer Name="or_iOpLineType3dIn">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="or_opLineType3dOut">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Solid Line"]]></Value>
		</String>
		<Integer Name="or_iOpLineType3dOut">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="or_opLineType3dSecondary">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Solid Line"]]></Value>
		</String>
		<Integer Name="or_iOpLineType3dSecondary">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stOpeningLineTypeSec">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="5" SecondDimension="0">
				<AVal Row="1"><![CDATA["Solid Line"]]></AVal>
				<AVal Row="2"><![CDATA["Dashed"]]></AVal>
				<AVal Row="3"><![CDATA["Dotted"]]></AVal>
				<AVal Row="4"><![CDATA["Dash & Dotted"]]></AVal>
				<AVal Row="5"><![CDATA["None"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="or_oplineStyle">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Handle"]]></Value>
		</String>
		<Integer Name="or_iOplineStyle">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stOpeningLineStyle">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Handle"]]></AVal>
				<AVal Row="2"><![CDATA["Hinges"]]></AVal>
			</ArrayValues>
		</String>
		<Boolean Name="bOverride_MVO_win_2D">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<LineType Name="or_winSwingLineType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</LineType>
		<String Name="or_winSwingType">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="or_iWinSwingType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bOverride_MVO_win_3D">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="or_bWinOplines3d">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<String Name="or_winOpLineType3dIn">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Dashed"]]></Value>
		</String>
		<Integer Name="or_iWinOpLineType3dIn">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="or_winOpLineType3dOut">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Solid Line"]]></Value>
		</String>
		<Integer Name="or_iWinOpLineType3dOut">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stOpeningLineType">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1"><![CDATA["Solid Line"]]></AVal>
				<AVal Row="2"><![CDATA["Dashed"]]></AVal>
				<AVal Row="3"><![CDATA["Dotted"]]></AVal>
				<AVal Row="4"><![CDATA["Dash & Dotted"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="or_winOplineStyle">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="or_iWinOplineStyle">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>

		<!-- controlParams: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="controlParams">
			<Description><![CDATA[""]]></Description>
		</Title>
		<Boolean Name="b2ColumnsOnOpLineUI">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bHideOplineStyle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bLockOplineStyle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDisable2DOverride">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDisable3DOverride">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDisableSwingType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDisableSwingLineType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDisableSimpleLine">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bUseRadioButtons">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="NORSlidingType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="iOpeningParamType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_open2D_1">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_open3D_1">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_open2D_2">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_open3D_2">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Angle Name="gs_open_2d">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_open_2d_s">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_open_3d">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_open_3d_s">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Length Name="gs_open2D">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_open3D">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_open2D_s">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_open3D_s">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_gang">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Angle Name="gs_gopen_2D">
			<Description><![CDATA[""]]></Description>
			<Value>135</Value>
		</Angle>
		<Angle Name="openingAngle2D_01">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2D_02">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle3D_01">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle3D_02">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<LineType Name="gs_gline">
			<Description><![CDATA[""]]></Description>
			<Value>4</Value>
		</LineType>
		<LineType Name="gs_swing_pen_line">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</LineType>
		<Boolean Name="gs_opline_2D">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_onlyPanelContour">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_opline_type_2D">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</LineType>
		<Boolean Name="gs_passdoor">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableSecondaryOpLineTypes">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableSwingLineTurnOff">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDoorWithSidelightSupport">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_bSameLineTypeForLeaves">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<String Name="stOpeningOptionsUI">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="38" SecondDimension="0">
				<AVal Row="1"><![CDATA["2D Symbolic Display"]]></AVal>
				<AVal Row="2"><![CDATA["3D Projections"]]></AVal>
				<AVal Row="3"><![CDATA["Override Model View Options"]]></AVal>
				<AVal Row="4"><![CDATA["Opening Line"]]></AVal>
				<AVal Row="5"><![CDATA["Opening Side"]]></AVal>
				<AVal Row="6"><![CDATA["Opposite Side"]]></AVal>
				<AVal Row="7"><![CDATA["Secondary Sash"]]></AVal>
				<AVal Row="8"><![CDATA["Secondary Leaf"]]></AVal>
				<AVal Row="9"><![CDATA["Line Shape"]]></AVal>
				<AVal Row="10"><![CDATA["Curved"]]></AVal>
				<AVal Row="11"><![CDATA["Straight"]]></AVal>
				<AVal Row="12"><![CDATA["Pass Door Line Shape"]]></AVal>
				<AVal Row="13"><![CDATA["Main Sash"]]></AVal>
				<AVal Row="14"><![CDATA["Main Leaf"]]></AVal>
				<AVal Row="15"><![CDATA["Secondary Sash"]]></AVal>
				<AVal Row="16"><![CDATA["Secondary Leaf"]]></AVal>
				<AVal Row="17"><![CDATA["Opening Line Pen"]]></AVal>
				<AVal Row="18"><![CDATA["2D & 3D Line Pen"]]></AVal>
				<AVal Row="19"><![CDATA["Opening Line in 2D/3D and Swing Pen"]]></AVal>
				<AVal Row="20"><![CDATA["2D & 3D Opening Line Pen"]]></AVal>
				<AVal Row="21"><![CDATA["Line Orientation"]]></AVal>
				<AVal Row="22"><![CDATA["Opening Angle"]]></AVal>
				<AVal Row="23"><![CDATA["Angle of Main Leaf"]]></AVal>
				<AVal Row="24"><![CDATA["Angle of Secondary Leaf"]]></AVal>
				<AVal Row="25"><![CDATA["Opening Length"]]></AVal>
				<AVal Row="26"><![CDATA["Opening Height"]]></AVal>
				<AVal Row="27"><![CDATA["Left Opening Width"]]></AVal>
				<AVal Row="28"><![CDATA["Right Opening Width"]]></AVal>
				<AVal Row="29"><![CDATA["Pass Door Opening Angle"]]></AVal>
				<AVal Row="30"><![CDATA["Ghost Opening Line"]]></AVal>
				<AVal Row="31"><![CDATA["Ghost Opening Angle"]]></AVal>
				<AVal Row="32"><![CDATA["Line Type"]]></AVal>
				<AVal Row="33"><![CDATA["Double Acting Line Type"]]></AVal>
				<AVal Row="34"><![CDATA["Show Opening in 2D"]]></AVal>
				<AVal Row="35"><![CDATA["Opening Line Only Panel Contour"]]></AVal>
				<AVal Row="36"><![CDATA["Closed in 2D"]]></AVal>
				<AVal Row="37"><![CDATA["Closed"]]></AVal>
				<AVal Row="38"><![CDATA["Same Line Type on Both Leaves"]]></AVal>
			</ArrayValues>
		</String>
		<Boolean Name="bShowSameLineTypeForLeaves">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="pageStartY">
			<Description><![CDATA[""]]></Description>
			<Value>5</Value>
		</Integer>
	</Parameters>
</ParamSection>

</Symbol>

<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="no" IsPlaceable="no" MainGUID="B1C37462-266A-4585-955A-747AAECF9378" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="34">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="no">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>B2970E4C-8680-4061-8670-2F4B638F3953</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

! Ornamental Window Moldings ----------------------------------------------------
!	gs_faschen_top:			on/off
!	gs_faschen_right:		on/off
!	gs_faschen_left:		on/off
!	gs_faschen_bottom:		on/off
!	gs_faschen_A:			Width of left/right. (length)
!	gs_faschen_B:			Height of bottom. (length)
!	gs_faschen_C:			Height of top. (length)
!	gs_faschen_width:		Depth of Ornamental Window Molding
!	gs_faschen_t:			on/off Ornamental Window Molding Depth >= Reveal Depth = WIDO_SILL
!	gs_faschen_height_left:	in case of two different window connecting
!	gs_faschen_height_right:in case of two different window connecting
!	gs_faschen_pen:			3D Contour Pen
!	gs_faschen_fill:		section fill
!	gs_faschen_fp:			section fill pen
!	gs_faschen_bg:			section fill background pen
!	gs_faschen_type:		brickwork/plaster
!	gs_faschen_brick_thk:	brick width in case of brickwork
!	gs_faschen_mort_thk:	mortar width in case of brickwork
!	gs_faschen_plaster_mat:	plaster material in case of plaster
!	gs_faschen_brick_mat:	brick material in case of brickwork
!	gs_faschen_mort_mat:	mortar material in case of brickwork

if bNotAvailableByReveal then end

addy -sillSlantOffset
B = B + sillSlantOffset

addz -eps

resol WALL_RESOL

if gs_stack_top then gs_faschen_top = 0
if gs_stack_bottom then gs_faschen_bottom = 0


if abs(gs_faschen_width)<eps then gs_faschen_width=10*eps


j2=gs_reveal_right
j1=gs_reveal_left


if gs_faschen_width>WIDO_SILL then gs_faschen_width_n=gs_faschen_width-WIDO_SILL else gs_faschen_width_n=0

if gs_stack_left  then gs_faschen_left = 0
if gs_stack_right  then gs_faschen_right = 0

upperJamb = gs_reveal_top*not(gs_stack_top) - gs_faschen_C*gs_faschen_top
lowerJamb = gs_reveal_bottom*not(gs_stack_bottom) - gs_faschen_B*gs_faschen_bottom

if WIDO_REVEAL_SIDE then
	matRevealSide	= WALL_MAT_A
	matOppositeSide = WALL_MAT_B
else
	matRevealSide	= WALL_MAT_B
	matOppositeSide = WALL_MAT_A
endif

	pen WALL_VIEW_PEN
	material matRevealSide


if gs_faschen_left  or gs_faschen_right  or gs_faschen_top  or gs_faschen_bottom then
	if curvedWall then

		! ===== Curved Wall =====

		if WIDO_REVEAL_SIDE then mulz -1

		dxL = WIDO_FRAME_THICKNESS * tan(alfaLeftOs)
		dxR = WIDO_FRAME_THICKNESS * tan(alfaRightOs)

		! ===== Cut Reveal Side =====

		material matRevealSide

		addy gs_reveal_bottom * not(gs_stack_bottom) - gs_faschen_B * not(gs_stack_bottom) * gs_faschen_bottom
		rotx -90

		if SYMB_ROTANGLE > EPS then
			 if not(WIDO_REVEAL_SIDE) then
				fk = rSill + gs_faschen_width - WIDO_SILL
				fb = rSill -WIDO_SILL
			else
				fk = -rSill + 1
				fb = -rSill - WIDO_SILL
			endif
		else
			 if not(WIDO_REVEAL_SIDE) then
				fk = -rSill + 1
				fb = -rSill - WIDO_SILL
			else
				fk = rSill + 1
				fb = rSill -WIDO_SILL
			endif
		endif

		kfLx = ySign*fk * sin(alfaleft - alfaLeftJamb * not(gs_stack_left) + alfafaschen * not(gs_stack_left))
		kfLy = fk * cos(alfaleft - alfaLeftJamb * not(gs_stack_left) + alfafaschen * not(gs_stack_left))	 - wod	+  WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE
		kfRx = -ySign*fk * sin(alfaright - alfaRightJamb * not(gs_stack_Right) + alfafaschen * not(gs_stack_right))
		kfRy = fk * cos(alfaright - alfaRightJamb * not(gs_stack_Right) + alfafaschen * not(gs_stack_right)) - wod	+  WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE
		bfLx = ySign*fb * sin(alfaleft - alfaLeftJamb * not(gs_stack_left) + alfafaschen * not(gs_stack_left))
		bfLy = fb * cos(alfaleft - alfaLeftJamb * not(gs_stack_left) + alfafaschen * not(gs_stack_left))	- wod	+  WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE
		bfRx = -ySign*fb * sin(alfaright - alfaRightJamb * not(gs_stack_Right) + alfafaschen * not(gs_stack_right))
		bfRy = fb * cos(alfaright - alfaRightJamb * not(gs_stack_Right) + alfafaschen * not(gs_stack_right)) - wod	+  WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE


		if gs_faschen_top then
			addz B - gs_reveal_top*not(gs_stack_top) + gs_faschen_B*gs_faschen_bottom
				wallniche 6, 1, 2 + 0,
					0,0, 1, gs_faschen_C,
					kfLx, kfLy, 79,
					0, -WOD, 979,
					kfRx, kfRy, 3015 - 3000*(SYMB_ROTANGLE<eps),
					bfRx, bfRy, 79,
					0, -WOD, 979,
					bfLx, bfLy, 3015
			del 1
		endif

		if gs_faschen_bottom then
			wallniche 6, 1, 2 + 0,
				0,0, 1, gs_faschen_B,
				kfLx, kfLy, 79,
				0, -WOD, 979,
				kfRx, kfRy, 3015 - 3000*(SYMB_ROTANGLE<eps),
				bfRx, bfRy, 79,
				0, -WOD, 979,
				bfLx, bfLy, 3015
		endif

		if gs_faschen_left then
			wallniche 6, 1, 2 + 0,
				0,0, 1, B - lowerJamb - upperJamb,
				kfLx, kfLy, 79,
				0, -WOD, 979,
				0, fk - WOD + WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE, 3015 - 3000*(SYMB_ROTANGLE<eps),
				0, fb - WOD + WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE, 79,
				0, -WOD, 979,
				bfLx, bfLy, 3015
		endif

		if gs_faschen_right then
			wallniche 6, 1, 2 + 0,
				0,0, 1, B - lowerJamb - upperJamb,
				0, fk - WOD + WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE, 79,
				0, -WOD, 979,
				kfRx, kfRy, 3015 - 3000*(SYMB_ROTANGLE<eps),
				bfRx, bfRy, 79,
				0, -WOD, 979,
				0, fb - WOD + WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE, 3015
		endif

		del 2

		if WIDO_REVEAL_SIDE then del 1

	else
		if WIDO_REVEAL_SIDE then
			addz WIDO_SILL - WALL_THICKNESS + WIDO_FRAME_THICKNESS    ! Flip
		else
			addz -WIDO_SILL
		endif

		if WIDO_REVEAL_SIDE then
			mulz -1
			addz -WALL_THICKNESS
		endif

		if WIDO_SILL > EPS then
			material matRevealSide

			px1 = + rightwidth - gs_reveal_right * not(gs_stack_right) + gs_faschen_A * not(gs_stack_right) + gs_right_oversize + gs_faschen_ovhg_right
			px2 = - leftwidth  + gs_reveal_left  * not(gs_stack_left)  - gs_faschen_A * not(gs_stack_left)  + gs_left_oversize  - gs_faschen_ovhg_left

			if gs_faschen_bottom then
				wallniche 4, 1, 2 + 16,
					0,0,1,	WIDO_SILL + eps,
					px1,	lowerJamb,		31,
					px1,	lowerJamb + gs_faschen_B * gs_faschen_bottom,	31,
					px2,	lowerJamb + gs_faschen_B * gs_faschen_bottom,	31,
					px2,	lowerJamb,		31
			endif

			if gs_faschen_top then
				wallniche 4, 1, 2 + 16,
					0,0,1,	WIDO_SILL + eps,
					px1,	B - upperJamb,		31,
					px1,	B - upperJamb - gs_faschen_C * gs_faschen_top,	31,
					px2,	B - upperJamb - gs_faschen_C * gs_faschen_top,	31,
					px2,	B - upperJamb,		31
			endif

			if gs_faschen_left then
				wallniche 4, 1, 2 + 16,
					0,0,1,	WIDO_SILL + eps,
					-leftwidth + gs_reveal_left * not(gs_stack_left),	lowerJamb,		31,
					-leftwidth + gs_reveal_left * not(gs_stack_left),	B - upperJamb,	31,
					px2,		B - upperJamb,	31,
					px2,		lowerJamb,		31
			endif

			if gs_faschen_right then
				wallniche 4, 1, 2 + 16,
					0,0,1,	WIDO_SILL + eps,
					px1,		lowerJamb,		31,
					px1,		B - upperJamb,	31,
					rightwidth - gs_reveal_right * not(gs_stack_right),	B - upperJamb,	31,
					rightwidth - gs_reveal_right * not(gs_stack_right),	lowerJamb,		31
			endif
		endif
		del 1 + WIDO_REVEAL_SIDE * 2
	endif
endif


		! ===== Cut for Corner Window =====

if bCornerWindow or bRightCornerFunction then
	addx rightwidth+WIDO_FRAME_THICKNESS*tan(ww)
	addz zm
	rotz 90
	cutplane wew
	del 3
endif

if bLeftCornerFunction then
	addx -leftwidth-WIDO_FRAME_THICKNESS*tan(ww2)
	addz zm2
	rotz 90
	cutplane -wew2
	del 3
endif


!!! top
	addx (gs_faschen_ovhg_right - gs_faschen_ovhg_left) / 2 - (leftwidth - rightwidth) / 2
	addy B - gs_reveal_top*not(gs_stack_top)

		gs_height		= gs_faschen_C
		gs_ovhg_left	= gs_faschen_A
		gs_ovhg_right	= gs_faschen_A
		mort_n			= 1
		aaa				= leftwidth + rightwidth + (gs_faschen_A - gs_reveal_right)*not(gs_stack_right) + (gs_faschen_A - gs_reveal_left)*not(gs_stack_left)\
						+gs_faschen_ovhg_right+gs_faschen_ovhg_left
		alpha			= alpha_orig -not(gs_faschen_R)*alfafaschen-not(gs_faschen_L)*alfafaschen-gs_stack_left*alfafaschen-gs_stack_right*alfafaschen + alfaleftjamb*gs_stack_left + alfarightjamb*gs_stack_right
		bbb				=B

		if gs_faschen_top then										!!! top
			if not(curvedWall) then
				if iFaschenTyp = WIN_MOLDING_PLASTER then
					addx (gs_faschen_A - gs_reveal_right)/2 * not(gs_stack_right) - (gs_faschen_A - gs_reveal_left)/2 * not(gs_stack_left)
				else
					addx (gs_faschen_A - gs_reveal_right - not(gs_faschen_R)*gs_faschen_A)/2 * not(gs_stack_right) - (gs_faschen_A - gs_reveal_left+not(gs_faschen_L)*gs_faschen_A)/2 * not(gs_stack_left)
				endif
			endif
			gs_rise = 0

			gosub 1000
			if not(curvedWall) then del 1
		endif

	del 2


	!!! bottom
	addx (gs_faschen_ovhg_right - gs_faschen_ovhg_left) / 2 - (leftwidth - rightwidth) / 2
	addy  - gs_faschen_B + gs_reveal_bottom*not(gs_stack_bottom)

		gs_height		= gs_faschen_B
		gs_ovhg_left	= gs_faschen_A
		gs_ovhg_right	= gs_faschen_A
		mort_n			= 1
		aaa				= leftwidth + rightwidth + (gs_faschen_A - gs_reveal_right)*not(gs_stack_right) + (gs_faschen_A - gs_reveal_left)*not(gs_stack_left)\
						+gs_faschen_ovhg_right+gs_faschen_ovhg_left
		alpha			= alpha_orig - gs_stack_left*alfafaschen - gs_stack_right*alfafaschen + alfaleftjamb*gs_stack_left + alfarightjamb*gs_stack_right
		bbb				= b

		if gs_faschen_bottom then 									!!!! bottom
			if not(curvedWall) then
				if iFaschenTyp = WIN_MOLDING_PLASTER then
					addx (gs_faschen_A - gs_reveal_right)/2 * not(gs_stack_right) - (gs_faschen_A - gs_reveal_left)/2 * not(gs_stack_left)
				else
					addx (gs_faschen_A - gs_reveal_right - not(gs_faschen_R)*gs_faschen_A)/2 * not(gs_stack_right) - (gs_faschen_A - gs_reveal_left+not(gs_faschen_L)*gs_faschen_A)/2 * not(gs_stack_left)
				endif
			endif
			gosub 1000
			if not(curvedWall) then del 1
		endif

	del 2


	!!!! side
	if not(curvedWall) then
		addx - leftwidth + gs_reveal_left*not(gs_stack_left)
		rotz 90
		addx B/2 + (gs_reveal_bottom)/2 - (gs_reveal_top)/2
	else
		addz wod - wod * 2 * WIDO_REVEAL_SIDE +  WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE
	endif

		corrmort		= 0
		gs_height		= gs_faschen_A
		gs_ovhg_left	= 0
		gs_ovhg_right	= 0
		mort_n			= 2
		bbb				= leftwidth + rightwidth
		all_a			= B - gs_reveal_bottom*not(gs_stack_bottom) - gs_reveal_top*not(gs_stack_top)

		if gs_faschen_L then
			aaa=all_a
			if curvedWall then
				roty alfaLeft - alfaLeftJamb + alfafaschen/2 - (-alfaLeftJamb + alfaRightJamb)*(SYMB_ROTANGLE<eps)
			else
				addx  - gs_stack_bottom*gs_reveal_bottom/2 + gs_stack_top*gs_reveal_top/2
			endif
		else
			aaa = gs_faschen_L_height
			corrmort = 1
			if curvedWall then
				roty alfaLeft - alfaLeftJamb + alfafaschen/2 - (-alfaLeftJamb + alfaRightJamb)*(SYMB_ROTANGLE<eps)
			else
				addx aaa/2-all_a/2  - gs_stack_bottom*gs_reveal_bottom/2  + gs_stack_top*gs_reveal_top/2
			endif
		endif

		if gs_faschen_left then
			if bLeftCornerFunction < eps  then gosub 1000
			corrmort = 0
		endif

		del 1

		if gs_faschen_R then
			aaa=all_a
			if curvedWall then
				roty -alfaRight + alfaRightJamb - alfafaschen/2 - (-alfaLeftJamb + alfaRightJamb)*(SYMB_ROTANGLE<eps)
			else
				addx - gs_stack_bottom*gs_reveal_bottom/2  + gs_stack_top*gs_reveal_top/2
			endif
		else
			aaa = gs_faschen_R_height
			corrmort = 1
			if curvedWall then
				roty -alfaRight  + alfaRightJamb - alfafaschen/2  - (-alfaLeftJamb + alfaRightJamb)*(SYMB_ROTANGLE<eps)
			else
				addx aaa/2-all_a/2  - gs_stack_bottom*gs_reveal_bottom/2  + gs_stack_top*gs_reveal_top/2
			endif
		endif

		if gs_faschen_right then
			if not(curvedWall) then addy - gs_faschen_A + gs_reveal_left*not(gs_stack_left) + gs_reveal_right*not(gs_stack_right) - leftwidth - rightwidth
				if bRightCornerFunction < eps then gosub 1000
			corrmort = 0
			if not(curvedWall) then del 1
		endif

		del 1

	if not(curvedWall) then del 3 else del 1

if bCornerWindow or bRightCornerFunction then cutend
if bLeftCornerFunction then cutend


end


1000:


if iFaschenTyp = WIN_MOLDING_PLASTER then
	mat_brick_plaster=gs_faschen_plaster_mat
endif

if iFaschenTyp = WIN_MOLDING_BRICKWORK then
	mat_brick_plaster=gs_faschen_brick_mat
endif



if iWindowShape = 0 then	! Rectangular
	openingArchHeight = gs_rise
endif



if WIDO_REVEAL_SIDE then
	addz WIDO_SILL - WALL_THICKNESS + WIDO_FRAME_THICKNESS    ! Flip
else
	addz -WIDO_SILL
endif

if WIDO_REVEAL_SIDE then
	mulz -1
	addz -WALL_THICKNESS
endif

add 0, 0, WIDO_SILL-gs_faschen_width

	pen gs_faschen_pen
	sect_fill gs_faschen_fill, gs_faschen_bg, gs_faschen_fg, WALL_SECT_PEN

	if iFaschenTyp = WIN_MOLDING_PLASTER and mort_n = 1 then		! Plaster bottom - top
		material mat_brick_plaster

		addz gs_faschen_width
		rotx -90
			if curvedWall then
				if SYMB_ROTANGLE > EPS then
					 if not(WIDO_REVEAL_SIDE) then
						fk = rSill + gs_faschen_width - WIDO_SILL
						fb = rSill -WIDO_SILL
					else
						fk = -rSill - WIDO_SILL + gs_faschen_width - WIDO_FRAME_THICKNESS
						fb = -rSill - WIDO_SILL - WIDO_FRAME_THICKNESS
					endif
				else
					 if not(WIDO_REVEAL_SIDE) then
						fk = -rSill - WIDO_SILL + gs_faschen_width
						fb = -rSill - WIDO_SILL
					else
						fk = rSill - WIDO_SILL - WIDO_FRAME_THICKNESS + gs_faschen_width
						fb = rSill - WIDO_SILL - WIDO_FRAME_THICKNESS
					endif
				endif

				kfLx = ySign*fk * sin(alfaleft - alfaLeftJamb * not(gs_stack_left) + alfafaschen * not(gs_stack_left))
				kfLy = fk * cos(alfaleft - alfaLeftJamb * not(gs_stack_left) + alfafaschen * not(gs_stack_left))	 - wod	+  WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE
				kfRx = -ySign*fk * sin(alfaright - alfaRightJamb * not(gs_stack_Right) + alfafaschen * not(gs_stack_right))
				kfRy = fk * cos(alfaright - alfaRightJamb * not(gs_stack_Right) + alfafaschen * not(gs_stack_right)) - wod	+  WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE
				bfLx = ySign*fb * sin(alfaleft - alfaLeftJamb * not(gs_stack_left) + alfafaschen * not(gs_stack_left))
				bfLy = fb * cos(alfaleft - alfaLeftJamb * not(gs_stack_left) + alfafaschen * not(gs_stack_left))	- wod	+  WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE
				bfRx = -ySign*fb * sin(alfaright - alfaRightJamb * not(gs_stack_Right) + alfafaschen * not(gs_stack_right))
				bfRy = fb * cos(alfaright - alfaRightJamb * not(gs_stack_Right) + alfafaschen * not(gs_stack_right)) - wod	+  WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE

				prism_ 6, gs_height,
					kfLx, kfLy, 79,
					0, -wod, 979,
					kfRx, kfRy, 3015,
					bfRx, bfRy, 79,
					0, -wod, 979,
					bfLx, bfLy, 3015
			else
				prism_ 4, gs_height,
					-aaa/2,		0, 15,
					 aaa/2,		0, 15,
					 aaa/2,		gs_faschen_width, 15,
					-aaa/2,		gs_faschen_width, 15
			endif
		del 2

		txAngle = 90: gosub 200
	endif

	if iFaschenTyp = WIN_MOLDING_PLASTER and mort_n = 2 then		! Plaster left - right
		material mat_brick_plaster

			if curvedWall then
				addy B-gs_reveal_top
					addz (rSill+(-WIDO_SILL))*ySign - (-WIDO_SILL*2)*(ySign=1) +  WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE
						prism_ 4, gs_faschen_width,
							-gs_height/2,		0, 15,
							gs_height/2,	0, 15,
							gs_height/2,	-aaa, 15,
							-gs_height/2,	-aaa, 15
					del 1
				del 1
			else
				addz gs_faschen_width
				rotx -90
					prism_ 4, gs_height,
						-aaa/2,		0, 15,
						 aaa/2,		0, 15,
						 aaa/2,		gs_faschen_width, 15,
						-aaa/2,		gs_faschen_width, 15
				del 2
			endif

		txAngle = 90: gosub 200
	endif

	if iFaschenTyp = WIN_MOLDING_BRICKWORK and mort_n = 1 then		! Brick bottom - top
		if curvedWall then
			masonryL  = alpha *  (rSill+(gs_faschen_width-WIDO_SILL)) * PI / 180
		else
			masonryL  = aaa
		endif

		numBricks = int(masonryL / (gs_faschen_brick_thk + gs_faschen_mort_thk))

		mortaralpha = (alpha-brickalpha*numBricks)/(numBricks-1)

		if curvedWall then
			mortarbeta2 = brickalpha + mortaralpha - 2*(atn((gs_faschen_brick_thk/2)/(rSill+(-WIDO_SILL))))
			mortarbeta1 = brickalpha + mortaralpha - 2*(atn((gs_faschen_brick_thk/2)/(rSill+(gs_faschen_width-WIDO_SILL)-0.01)))

			mortarThk2  = (rSill+(-WIDO_SILL))*tan(mortarbeta2/2)
			mortarThk1  = (rSill+(gs_faschen_width-WIDO_SILL)-0.01)*tan(mortarbeta1/2)
		else
			mortarThk  = (masonryL - (numBricks * gs_faschen_brick_thk)) / (numBricks - 1)
		endif

		if not(curvedWall) then
			addx -rightwidth \
				+ (gs_reveal_left  - gs_faschen_A + not(gs_faschen_L) * gs_faschen_A) * not(gs_stack_left)  / 2 \
				+ (gs_reveal_right - gs_faschen_A + not(gs_faschen_R) * gs_faschen_A) * not(gs_stack_right) / 2 \
				- (gs_faschen_ovhg_right + gs_faschen_ovhg_left) / 2 \
				- (leftwidth - rightwidth) / 2

			rotx -90

			material mat_brick_plaster
			for i=1 to numBricks
					muly -1
						block gs_faschen_brick_thk, gs_faschen_width, gs_height
					del 1
				txAngle = 90: gosub 200

				addx gs_faschen_brick_thk + mortarThk
			next i
			del numBricks

			material gs_faschen_mort_mat
			for i=1 to numBricks - 1
				add gs_faschen_brick_thk, -0.01, 0
				muly -1
					block mortarThk, gs_faschen_width - masonryArchMortInset, gs_height
				del 2
				addx gs_faschen_brick_thk + mortarThk
			next i
			del (numBricks - 1)

			del 1

			txAngle = 90: gosub 200

			del 1
		else
			addz wod+gs_faschen_width
			roty -alfaRight  + alfaRightjamb*not(gs_stack_right) - alfafaschen + brickalpha/2 + gs_stack_right * alfafaschen  - (-alfaLeftJamb + alfaRightJamb)*(ySign = 1)

			for ii=1 to numBricks
				addz (rSill+(gs_faschen_width-WIDO_SILL))*ySign - (gs_faschen_width*2 -WIDO_SILL*2)*(ySign=1)
					material mat_brick_plaster

					prism_ 4, gs_faschen_width,
						-gs_faschen_brick_thk/2, 0, 15,
						gs_faschen_brick_thk/2, 0, 15,
						gs_faschen_brick_thk/2, gs_height, 15,
						-gs_faschen_brick_thk/2, gs_height, 15

					txAngle = 90: gosub 200
				del 1
				roty mortaralpha + brickalpha
			next ii
			del numBricks

			roty brickalpha/2 + mortaralpha/2

			for jj=1 to numBricks - 1
				addz ((rSill+(gs_faschen_width-WIDO_SILL))-0.01 )*ySign - (gs_faschen_width -WIDO_SILL*2 - 0.01)*(ySign=1)
				mulz -1*ySign
					material gs_faschen_mort_mat

					addy gs_height
					rotx 90
						prism_ 4,  gs_height,
							mortarThk1, 0, 15,
							-mortarThk1, 0, 15,
							-mortarThk2, gs_faschen_width-0.01, 15,
							mortarThk2, gs_faschen_width-0.01, 15
					del 2

					txAngle = 90: gosub 200
				del 2

				roty mortaralpha + brickalpha
			next jj
			del numBricks - 1

			del 1

			del 2
		endif
	endif

	if iFaschenTyp = WIN_MOLDING_BRICKWORK and mort_n = 2 then		! Brick side
		masonryL  = aaa

		numBricks = int((masonryL + gs_faschen_brick_thk * corrmort) / (gs_faschen_brick_thk + gs_faschen_mort_thk)) - 1
		mortarThk  = (masonryL - (numBricks * gs_faschen_brick_thk)) / (numBricks + 1 - corrmort)

		if not(curvedWall) then
			addx -aaa/2

				material mat_brick_plaster

				for i=1 to numBricks
					addx  mortarThk
						block gs_faschen_brick_thk, gs_height, gs_faschen_width
					del 1
					txAngle = 90: gosub 200

					addx gs_faschen_brick_thk + mortarThk
				next i

				del numBricks

				material gs_faschen_mort_mat

				add 0, 0, masonryArchMortInset
					block mortarThk, gs_height, gs_faschen_width - masonryArchMortInset
				del 1

				for i=1 to numBricks - corrmort
					add gs_faschen_brick_thk + mortarThk, 0, masonryArchMortInset
						block mortarThk, gs_height, gs_faschen_width - masonryArchMortInset
					del 1
					addx gs_faschen_brick_thk + mortarThk
				next i
				del numBricks - corrmort

				txAngle = 90: gosub 200

			del 1
		else
			material gs_faschen_mort_mat

			for i=1 to numBricks + 1
					addz ((rSill+(-WIDO_SILL)) - 0.01)*ySign - ( -WIDO_SILL*2 - 0.02)*(ySign=1) +  WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE
						prism_ 4, gs_faschen_width - 0.01,
							gs_height/2, 0, 15,
							-gs_height/2, 0, 15,
							-gs_height/2, mortarThk, 15,
							gs_height/2, mortarThk, 15
					del 1
				txAngle = 0: gosub 200

				addy gs_faschen_brick_thk + mortarThk
			next i
			del numBricks + 1

			addy mortarThk
				material mat_brick_plaster

				for i=1 to numBricks
						addz (rSill+(-WIDO_SILL))*ySign - ( -WIDO_SILL*2)*(ySign=1) +  WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE
							prism_ 4, gs_faschen_width,
								gs_height/2, 0, 15,
								-gs_height/2, 0, 15,
								-gs_height/2, gs_faschen_brick_thk, 15,
								gs_height/2, gs_faschen_brick_thk, 15
						del 1
					txAngle = 0: gosub 200

					addy gs_faschen_brick_thk + mortarThk
				next i
				del numBricks
			del 1
		endif
	endif

del 1

if WIDO_REVEAL_SIDE then
	del 2
endif


del 1


!endif
!
!

return

end

200:
! ==============================================================================
! Texture alignment
! ------------------------------------------------------------------------------
! Input Parameters:
!	txAngle:			rotation angle of texture
! ==============================================================================

	base

	roty txAngle

	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	coor 2 + 256, -1, -2, -3, -4
	body 1

	del 1
return





]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

!
!line2 0, 0, 0, -wod
!
!add2 0, -wod
!rot2 alfaLeft
!	line2 0, wod, 0, 0
!del 2
!
!add2 0, -wod
!rot2 -alfaRight
!
!	line2 0, wod, 0, 0
!del 2
!
!
!
!add2 0, -wod
!rot2 alfaLeft - alfaLeftJamb + alfafaschen
!	line2 0, rSill, 0, 0
!del 2
!
!add2 0, -wod
!rot2 -alfaRight + alfaRightJamb - alfafaschen
!
!	line2 0, rSill, 0, 0
!del 2

]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

! const values for parameter: iFaschenTyp
WIN_MOLDING_PLASTER   = 1
WIN_MOLDING_BRICKWORK = 2



EPS = 0.0001


gs_frame_thk = WIDO_FRAME_THICKNESS

bDisableFaschen = not(gs_faschen_left | gs_faschen_right | gs_faschen_top | gs_faschen_bottom)

! ==============================================================================
! Calculations for Corner Window
! ==============================================================================

gs_faschen_ovhg_left	= 0
gs_faschen_ovhg_right	= 0

if bRightCornerFunction & abs(rightCornerAngle) > EPS then
	gs_stack_right = 1

	if abs(rightCornerAngle)<eps then rightCornerAngle=180

	!****************************************************
	!******************** for corner 1 ******************

	if not(WIDO_REVEAL_SIDE) then

		!*** window is not flipped
		if abs(rightCornerAngle-180)<eps then
			!*** rightCornerAngle = 0, 180, 360
			wew=90
		else
			if rightCornerAngle<180 then
				zm=0
				ww=90-rightCornerAngle/2
				wew=90-ww
			else
				zm=WIDO_FRAME_THICKNESS
				ww=rightCornerAngle/2-90
				wew=90+ww
			endif
		endif
	else

	   !*** window is flipped
		if abs(rightCornerAngle-180)<eps then
			!*** rightCornerAngle= 0, 180, 360
			wew=90
		else
			if ew1<180 then
				zm=WIDO_FRAME_THICKNESS
				ww=90-rightCornerAngle/2
				wew=90+ww
			else
				zm=0
				ww=rightCornerAngle/2-90
				wew=90-ww
			endif
		endif
	endif

	gs_right_oversize = 0
	gs_reveal_right = 0

	gs_faschen_ovhg_right = (gs_faschen_width + WIDO_FRAME_THICKNESS) * tan(ww)
endif

if bLeftCornerFunction & abs(leftCornerAngle) > EPS then
	gs_stack_left = 1

	if abs(leftCornerAngle)<eps then leftCornerAngle=180

	if not(WIDO_REVEAL_SIDE) then

		!*** window is not flipped
		if abs(leftCornerAngle-180)<eps then
			!*** ew = 0, 180, 360
			wew2=90
		else
			if leftCornerAngle<180 then
				zm2=0
				ww2=90-leftCornerAngle/2
				wew2=90-ww2
			else
				zm2=WIDO_FRAME_THICKNESS
				ww2=leftCornerAngle/2-90
				wew2=90+ww2
			endif
		endif
	else

	   !*** window is flipped
		if abs(leftCornerAngle-180)<eps then
			!*** ew = 0, 180, 360
			wew2=90
		else
			if leftCornerAngle<180 then
				zm2=WIDO_FRAME_THICKNESS
				ww2=90-leftCornerAngle/2
				wew2=90+ww2
			else
				zm2=0
				ww2=leftCornerAngle/2-90
				wew2=90-ww2
			endif
		endif
	endif
	gs_left_oversize = 0
	gs_reveal_left = 0

	gs_faschen_ovhg_left = (gs_faschen_width + WIDO_FRAME_THICKNESS)* tan(ww2)

endif

! ==============================================================================
! Eigene Wandecken control
! ==============================================================================
if abs(leftCornerAngle mod 360) < EPS then leftCornerAngle = 0
if abs(rightCornerAngle mod 360) < EPS then rightCornerAngle = 0

if bLeftCornerFunction and abs(leftCornerAngle) < EPS then bLeftCornerFunction = 0
if bRightCornerFunction and abs(rightCornerAngle) < EPS then bRightCornerFunction = 0



if gs_faschen_fill = 0	then gs_faschen_fill = SYMB_FILL
if gs_faschen_fg = 0	then gs_faschen_fg = SYMB_FILL_PEN
if gs_faschen_bg = 0	then gs_faschen_bg = SYMB_FBGD_PEN

masonryArchMortInset=0.01



! ==============================================================================
! Calculations for Inclined Walls
! ==============================================================================

if abs(WALL_INCL) > EPS then
	bInclinedWall = 1
	bFactor = SYMB_MIRRORED exor WIDO_REVEAL_SIDE exor wallIsLeft
	incFactor = not(bFactor) - bFactor
	incX = incFactor * tan(WALL_INCL)
	incY = incFactor * (1 / cos(WALL_INCL))

	bDir = SYMB_MIRRORED exor (SYMB_ROTANGLE > EPS)
	iDir = not(bDir) - bDir
	incH = cos(WALL_INCL)
	incV = sin(WALL_INCL) * iDir
	offsD = iDir * offsX * tan(WALL_INCL)
else
	bInclinedWall = 0
	incX = 0
	incY = 1
	incH = 0
	incV = 0
endif



curvedWall		= abs(WIDO_ORIG_DIST) > EPS

! =============================================================================
! Wallhole Geometry
! =============================================================================

diff = bCornerWindow * (overSizeLeft - overSizeRight) / 2

REVEAL_EDGE				= 0
REVEAL_NO				= 1
REVEAL_POSITIVE			= 2
REVEAL_NEGATIVE			= 3
REVEAL_SLANTED			= 4
REVEAL_SPLAYED			= 5
REVEAL_HISTORIC			= 6
REVEAL_DOUBLE			= 7
REVEAL_DOUBLE_SPLAYED	= 8
REVEAL_OUTSIDE_SPLAYED	= 9

bNotAvailableByReveal = (\
	iRevealType = REVEAL_DOUBLE_SPLAYED | \
	iRevealType = REVEAL_OUTSIDE_SPLAYED )

if iRevealType = REVEAL_SPLAYED then
	gs_reveal_left	= 0
	gs_reveal_right	= 0
endif

!!!openingHeight	= ac_wallhole_height + overSizeLower + overSizeUpper
!!!offsX			= bCornerWindow * (-gs_unit_nominal * gs_tolerance_left / 2 - gs_reveal_nominal * (WIDO_LEFT_JAMB + WIDO_RIGHT_JAMB) / 2)
!!!offsY			= overSizeLower

! ==============================================================================
! Calculations for Curved Walls
! ==============================================================================

alfafaschen		= 0
alpha_orig		= 0
alfaLeftJamb	= 0
alfaRightJamb	= 0

if curvedWall then

	DegRad = PI / 180

!!!	if gs_parapet_wall_inset & not(bBoard) & not(bInsideTrim) then gs_board_curved = 0

	if GLOB_SCRIPT_TYPE <> 2 then
		widoOrigDist = -WIDO_ORIG_DIST
	else
		widoOrigDist = WIDO_ORIG_DIST
	endif

	WOD = abs(widoOrigDist) - (SYMB_ROTANGLE > EPS) * WIDO_FRAME_THICKNESS

	alfaLeft	= atn((leftWidth  + overSizeLeft)  / WOD)
	alfaRight	= atn((rightWidth + overSizeRight) / WOD)

	alfaLeftOs	= atn((leftWidth  + gs_left_oversize) / WOD)
	alfaRightOs	= atn((rightWidth + gs_right_oversize) / WOD)

	bArchSign = (WIDO_REVEAL_SIDE exor SYMB_ROTANGLE > EPS)
	iArchSign = bArchSign - not(bArchSign)		! 1 / -1

	if WIDO_REVEAL_SIDE then
		WOD = widoOrigDist + WIDO_FRAME_THICKNESS
	else
		WOD = -widoOrigDist
	endif

	if WIDO_REVEAL_SIDE exor SYMB_ROTANGLE < EPS then
		ySign = 1
		if WIDO_REVEAL_SIDE then
			rSill = sqr(refWidth^2 / 4 + WOD^2) - WIDO_SILL
			rBoard = rSill + WALL_THICKNESS
		else
			rSill = sqr(refWidth^2 / 4 + WOD^2) - WIDO_SILL
			rBoard = rSill + WALL_THICKNESS
		endif
	else
		ySign = -1
		if WIDO_REVEAL_SIDE then
			rBoard = sqr(refWidth^2 / 4 + WOD^2) + WIDO_SILL - WALL_THICKNESS
			rSill = rBoard + WALL_THICKNESS
		else
			rSill = sqr(refWidth^2 / 4 + WOD^2) + WIDO_SILL
			rBoard = rSill - WALL_THICKNESS
		endif
	endif

	ArcLengthSillToAngle	= 180 / rSill / PI
	ArcLengthBoardToAngle	= 180 / rBoard / PI

	alfaLeftJamb	= gs_reveal_left  * ArcLengthSillToAngle
	alfaRightJamb	= gs_reveal_right * ArcLengthSillToAngle

	alfafaschen	= gs_faschen_A  * ArcLengthSillToAngle

	alpha_orig = alfaLeft + alfaRight - alfaRightJamb - alfaLeftJamb + 2*alfafaschen

	brickalpha = 2*atn(((gs_faschen_brick_thk)/2)/(rSill+(gs_faschen_width-WIDO_SILL)))

endif	! curvedWall






]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

pageStartY	= 0
xsep		= 200
x1			= 4
x2			= 67
x3			= 210
x4			= 350
y			= 6 + pageStartY
dy			= 24
rrr			= request("Linear_dimension", "", formatstr)
bFlag		= 4*bDisableFaschen
xpic		= 74
ypic		= 60

if bNotAvailableByReveal then
	ui_pict 18, 7, 1 + pageStartY, 12, 12, 1
	ui_style 0,0
	ui_outfield stFasschenUI[14], 28, 1 + pageStartY, 410, 17

	end
endif

ui_style 0,1
ui_outfield stFasschenUI[12], x1, y, xsep-x1-10, 15
ui_style 0,0


! ------ Picture -------
ui_pict 13, xpic+9, ypic+9, 33, 59, 1

if gs_Faschen_top then
	if iFaschenTyp = WIN_MOLDING_PLASTER then ui_pict 14, xpic, ypic, 51, 9, 1
	if iFaschenTyp = WIN_MOLDING_BRICKWORK then ui_pict 15, xpic, ypic, 51, 9, 1
endif

if gs_Faschen_bottom then
	if iFaschenTyp = WIN_MOLDING_PLASTER then ui_pict 14, xpic, ypic+77-9, 51, 9, 1
	if iFaschenTyp = WIN_MOLDING_BRICKWORK then ui_pict 15, xpic, ypic+77-9, 51, 9, 1
endif

if gs_Faschen_left then
	if iFaschenTyp = WIN_MOLDING_PLASTER then ui_pict 16, xpic, ypic+8, 9, 61, 1
	if iFaschenTyp = WIN_MOLDING_BRICKWORK then ui_pict 17, xpic, ypic+8, 9, 61, 1
endif

if gs_Faschen_right then
	if iFaschenTyp = WIN_MOLDING_PLASTER then ui_pict 16, xpic+51-9, ypic+8, 9, 61, 1
	if iFaschenTyp = WIN_MOLDING_BRICKWORK then ui_pict 17, xpic+51-9, ypic+8, 9, 61, 1
endif

ui_infield "gs_Faschen_top",	xpic+20, ypic-20, 18,18
ui_infield "gs_Faschen_bottom",	xpic+20, ypic+80, 18,18
ui_infield "gs_Faschen_left",	xpic-20, ypic+30, 18,18
ui_infield "gs_Faschen_right",	xpic+57, ypic+30, 18,18


ui_style 0,1
ui_outfield stFasschenUI[13], x1,y+168, x2-x1-1,15, bFlag
ui_style 0,0

ui_infield{3} "iFaschenTyp", x2,y+166, 120,19,
		8, "", 2, 1, 0, 0, 0, 0,
		1, gs_faschen_type[1],	WIN_MOLDING_PLASTER,
		2, gs_faschen_type[2],	WIN_MOLDING_BRICKWORK



ui_separator xsep, 0, xsep, 266


ui_style 0,1
ui_outfield stFasschenUI[11], x3, y, x4-x3+90, 15, 4*(bDisableFaschen | not(gs_faschen_top))
ui_style 0,0
y = y + dy

! Top Height
ui_outfield stFasschenUI[1], x3, y+2, x4-x3-1, 15, 4*(bDisableFaschen | not(gs_faschen_top))
ui_infield "gs_faschen_C", x4, y, 90, 19
y = y + dy

! Left/Right Width
ui_outfield stFasschenUI[2], x3,y+2, x4-x3-1, 15, 4*(bDisableFaschen | (not(gs_faschen_left) & not(gs_faschen_right)))
ui_infield "gs_faschen_A", x4, y, 90, 19
y = y + dy

! Bottom Height
ui_outfield stFasschenUI[3], x3, y+2, x4-x3-1, 15, 4*(bDisableFaschen | not(gs_faschen_bottom))
ui_infield "gs_faschen_B", x4, y, 90, 19
y = y + dy


! Depth
ui_outfield stFasschenUI[6], x3, y+2, x4-x3-1, 15, bFlag
ui_infield "gs_Faschen_width", x4, y, 90, 19
y = y + dy

! Brick Thickness
bFlagBrick = 4*(bDisableFaschen | iFaschenTyp = WIN_MOLDING_PLASTER)
ui_outfield stFasschenUI[7], x3, y+2, x4-x3-1, 15, bFlagBrick
ui_infield "gs_Faschen_brick_thk", x4, y, 90, 19
y = y + dy

! Mortar Thickness
ui_outfield stFasschenUI[8], x3, y+2, x4-x3-1, 15, bFlagBrick
ui_infield "gs_Faschen_mort_thk", x4, y, 90, 19
y = y + dy

ui_infield{3} "gs_faschen_L", x3, y, x4-x3+90, 19,
	7, "",
	2,
	1, 20, 20, 20, 20,
	0, stFasschenUI[9], 0,
	1, stFasschenUI[9], 1
y = y + dy

! Left Height
ui_outfield stFasschenUI[10], x3, y+2, x4-x3-1, 15, 4*(bDisableFaschen |gs_faschen_L | not(gs_faschen_left))
ui_infield "gs_faschen_L_height", x4, y, 90, 19
y = y + dy

ui_infield{3} "gs_faschen_R", x3, y, x4-x3+90, 19,
	7, "",
	2,
	1, 20, 20, 20, 20,
	0, stFasschenUI[4], 0,
	1, stFasschenUI[4], 1
	y = y + dy

! Right Height
ui_outfield stFasschenUI[5], x3, y+2, x4-x3-1, 15, 4*(bDisableFaschen |gs_faschen_R | not(gs_faschen_right))
ui_infield "gs_faschen_R_height", x4, y, 90, 19
y = y + dy


]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[


if bNotAvailableByReveal then lock "gs_faschen"

if bDisableFaschen then
	lock	"iFaschenTyp",
			"gs_faschen_A",
			"gs_faschen_C",
			"gs_faschen_B",
			"gs_faschen_R",
			"gs_faschen_R_height",
			"gs_faschen_L",
			"gs_faschen_L_height",
			"gs_faschen_t",
			"gs_faschen_width",
			"gs_faschen_brick_thk",
			"gs_faschen_mort_thk",
			"gs_faschen_fill",
			"gs_faschen_fg",
			"gs_faschen_bg",
			"gs_faschen_pen",
			"gs_faschen_plaster_mat",
			"gs_faschen_brick_mat",
			"gs_faschen_mort_mat"

	hideparameter	"iFaschenTyp",
					"gs_faschen_A",
					"gs_faschen_C",
					"gs_faschen_B",
					"gs_faschen_R",
					"gs_faschen_R_height",
					"gs_faschen_L",
					"gs_faschen_L_height",
					"gs_faschen_t",
					"gs_faschen_width",
					"gs_faschen_brick_thk",
					"gs_faschen_mort_thk",
					"gs_faschen_fill",
					"gs_faschen_fg",
					"gs_faschen_bg",
					"gs_faschen_pen",
					"gs_faschen_plaster_mat",
					"gs_faschen_brick_mat",
					"gs_faschen_mort_mat"
endif

values{2} "iFaschenTyp" 	WIN_MOLDING_PLASTER,	gs_faschen_type[1],
							WIN_MOLDING_BRICKWORK,	gs_faschen_type[2]

if gs_faschen_t then values "gs_faschen_width" range[WIDO_SILL,]


if iFaschenTyp = WIN_MOLDING_PLASTER then
	lock 	"gs_faschen_brick_thk",
			"gs_faschen_mort_thk",
			"gs_faschen_brick_mat",
			"gs_faschen_mort_mat"

	hideparameter	"gs_faschen_brick_thk",
					"gs_faschen_mort_thk",
					"gs_faschen_brick_mat",
					"gs_faschen_mort_mat"
endif

if iFaschenTyp = WIN_MOLDING_BRICKWORK then
	lock "gs_faschen_plaster_mat"
	hideparameter "gs_faschen_plaster_mat"
endif

if not(gs_faschen_top) then
	lock "gs_faschen_C"
	hideparameter "gs_faschen_C"
endif

if (not(gs_faschen_left) & not(gs_faschen_right)) then
	lock "gs_faschen_A"
	hideparameter "gs_faschen_A"
endif

if not(gs_faschen_bottom) then
	lock "gs_faschen_B"
	hideparameter "gs_faschen_B"
endif

if not(gs_faschen_left) then
	lock "gs_faschen_L", "gs_faschen_L_height"
	hideparameter "gs_faschen_L", "gs_faschen_L_height"
else
	values "gs_faschen_L_height" range(0.015, B - gs_reveal_bottom - gs_reveal_top]

	if gs_faschen_L then
		lock "gs_faschen_L_height"
		hideparameter "gs_faschen_L_height"
	endif
endif

if not(gs_faschen_right) then
	lock "gs_faschen_R", "gs_faschen_R_height"
	hideparameter "gs_faschen_R", "gs_faschen_R_height"
else
	values "gs_faschen_R_height" range(0.015, B - gs_reveal_bottom - gs_reveal_top]

	if gs_faschen_R then
		lock "gs_faschen_R_height"
		hideparameter "gs_faschen_R_height"
	endif
endif

if GLOB_MODPAR_NAME = "gs_faschen_R" and gs_faschen_R then
	parameters gs_faschen_R_height = B - gs_reveal_bottom - gs_reveal_top
endif

if GLOB_MODPAR_NAME = "gs_faschen_L" and gs_faschen_L then
	parameters gs_faschen_L_height = B - gs_reveal_bottom - gs_reveal_top
endif

values "gs_faschen_A" RANGE(0,)
values "gs_faschen_B" RANGE(0,)
values "gs_faschen_C" RANGE(0,)
values "gs_faschen_brick_thk" RANGE(0,)
values "gs_faschen_mort_thk" RANGE(0,)
values "gs_faschen_width" RANGE(0,)


]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="3" path="uipicts/Faschen/GDLPict_10.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="4" path="uipicts/Faschen/GDLPict_10.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="5" path="uipicts/Faschen/GDLPict_10.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="6" path="uipicts/Faschen/GDLPict_10.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="7" path="uipicts/Faschen/GDLPict_10.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="8" path="uipicts/Faschen/GDLPict_10.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="9" path="uipicts/Faschen/GDLPict_10.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="10" path="uipicts/Faschen/GDLPict_10.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="11" path="uipicts/Faschen/GDLPict_10.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="12" path="uipicts/Faschen/GDLPict_10.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="13" path="uipicts/Faschen/ui_faschen_window.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="14" path="uipicts/Faschen/ui_faschen_horiz_plaster.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="15" path="uipicts/Faschen/ui_faschen_horiz_brick.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="16" path="uipicts/Faschen/ui_faschen_vert_plaster.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="17" path="uipicts/Faschen/ui_faschen_vert_brick.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="18" path="uipicts/ui_warningsign.png">
</GDLPict>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>BIMobject</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>22</Version>
		<AutoHotspots>no</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_macro_version">
			<Description><![CDATA["Macro Version"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Length Name="refWidth">
			<Description><![CDATA["Reference Width"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="leftWidth">
			<Description><![CDATA["Left Offset from the Origo"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="rightWidth">
			<Description><![CDATA["Right Offset from the Origo"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="offsX">
			<Description><![CDATA["Horizontal Offset Size"]]></Description>
			<Value>0</Value>
		</Length>
		<Integer Name="iWindowShape">
			<Description><![CDATA["Window Shape"]]></Description>
			<Value>0</Value>
		</Integer>
		<Length Name="sillSlantOffset">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Angle Name="sillSlantAngle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>

		<!-- Faschen_sp0: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="Faschen_sp0">
			<Description><![CDATA["Ornamental Window Moldings"]]></Description>
		</Title>
		<String Name="gs_faschen_type">
			<Description><![CDATA["Ornamental Window Molding Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Plaster"]]></AVal>
				<AVal Row="2"><![CDATA["Brickwork"]]></AVal>
			</ArrayValues>
		</String>
		<Boolean Name="gs_faschen_left">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_faschen_right">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_faschen_top">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_faschen_bottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iFaschenTyp">
			<Description><![CDATA["Ornamental Window Molding Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_faschen_A">
			<Description><![CDATA["Width Left/Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Length Name="gs_faschen_C">
			<Description><![CDATA["Height of Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Length Name="gs_faschen_B">
			<Description><![CDATA["Height of Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Boolean Name="gs_faschen_R">
			<Description><![CDATA["Default Right Side Ornamental Window Molding"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_faschen_R_height">
			<Description><![CDATA["Height of the Right Side Ornamental Window Molding"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.8</Value>
		</Length>
		<Boolean Name="gs_faschen_L">
			<Description><![CDATA["Default Left Side Ornamental Window Molding"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_faschen_L_height">
			<Description><![CDATA["Height of the Left Side Ornamental Window Moldings"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.8</Value>
		</Length>
		<Boolean Name="gs_faschen_t">
			<Description><![CDATA["Ornamental Window Molding Depth >= Reveal Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_faschen_width">
			<Description><![CDATA["Depth of Ornamental Window Molding"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.12</Value>
		</Length>
		<Length Name="gs_faschen_brick_thk">
			<Description><![CDATA["Brick Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.065</Value>
		</Length>
		<Length Name="gs_faschen_mort_thk">
			<Description><![CDATA["Mortar Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<FillPattern Name="gs_faschen_fill">
			<Description><![CDATA["Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</FillPattern>
		<PenColor Name="gs_faschen_fg">
			<Description><![CDATA["Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>5</Value>
		</PenColor>
		<PenColor Name="gs_faschen_bg">
			<Description><![CDATA["Section Fill Bkg. Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_faschen_pen">
			<Description><![CDATA["3D Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</PenColor>
		<Material Name="gs_faschen_plaster_mat">
			<Description><![CDATA["Plaster Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="gs_faschen_brick_mat">
			<Description><![CDATA["Brick Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</Material>
		<Material Name="gs_faschen_mort_mat">
			<Description><![CDATA["Mortar Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>66</Value>
		</Material>

		<!-- gs_reveal_parameters: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_reveal_parameters">
			<Description><![CDATA["Reveal Parameters"]]></Description>
		</Title>
		<Integer Name="iRevealType">
			<Description><![CDATA["iRevealType"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_reveal_left">
			<Description><![CDATA["Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_right">
			<Description><![CDATA["Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_top">
			<Description><![CDATA["Head Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_bottom">
			<Description><![CDATA["Sill Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>

		<!-- ac_corner_window: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="ac_corner_window">
			<Description><![CDATA["Corner Window Function"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bCornerWindow">
			<Description><![CDATA["Corner window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="ac_cw_function">
			<Description><![CDATA["Placement Type (1=CW,0=W)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="ac_corner_angle">
			<Description><![CDATA["Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Boolean Name="ac_diff_con_wall_thk">
			<Description><![CDATA["Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_con_wall_thk">
			<Description><![CDATA["Connecting Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bLeftCornerFunction">
			<Description><![CDATA["Left Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="leftCornerAngle">
			<Description><![CDATA["Left Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>180</Value>
		</Angle>
		<Length Name="leftConnWallThk">
			<Description><![CDATA["Left Connected Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bRightCornerFunction">
			<Description><![CDATA["Right Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="rightCornerAngle">
			<Description><![CDATA["Right Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="rightConnWallThk">
			<Description><![CDATA["Right Connected Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_oversize: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_oversize">
			<Description><![CDATA["Oversize"]]></Description>
		</Title>
		<Length Name="gs_left_oversize">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_right_oversize">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_upper_oversize">
			<Description><![CDATA["Upper Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_lower_oversize">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_window_stack: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_stack">
			<Description><![CDATA["Ganging"]]></Description>
		</Title>
		<Boolean Name="gs_stack_top">
			<Description><![CDATA["Connection on the Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_bottom">
			<Description><![CDATA["Connection on the Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_left">
			<Description><![CDATA["Connection on the Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_right">
			<Description><![CDATA["Connection on the Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_frame_thk">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="ac_wallhole_width">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_ui_sub_tabpage">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<Length Name="overSizeLeft">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="overSizeRight">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="overSizeUpper">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="overSizeLower">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<String Name="stFasschenUI">
			<Description><![CDATA["Ornamental Window Moldings"]]></Description>
			<ArrayValues FirstDimension="14" SecondDimension="0">
				<AVal Row="1"><![CDATA["Top Height"]]></AVal>
				<AVal Row="2"><![CDATA["Left/Right Width"]]></AVal>
				<AVal Row="3"><![CDATA["Bottom Height"]]></AVal>
				<AVal Row="4"><![CDATA["Default Height on Right Side"]]></AVal>
				<AVal Row="5"><![CDATA["Right Height"]]></AVal>
				<AVal Row="6"><![CDATA["Depth"]]></AVal>
				<AVal Row="7"><![CDATA["Brick Thickness"]]></AVal>
				<AVal Row="8"><![CDATA["Mortar Thickness"]]></AVal>
				<AVal Row="9"><![CDATA["Default Height on Left Side"]]></AVal>
				<AVal Row="10"><![CDATA["Left Height"]]></AVal>
				<AVal Row="11"><![CDATA["Molding Sizes"]]></AVal>
				<AVal Row="12"><![CDATA["Window Moldings"]]></AVal>
				<AVal Row="13"><![CDATA["Type"]]></AVal>
				<AVal Row="14"><![CDATA["This structure is not available with the actual reveal type"]]></AVal>
			</ArrayValues>
		</String>
		<Integer Name="iRevealPointsIdx">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="20" SecondDimension="0">
				<AVal Row="1">1</AVal>
				<AVal Row="2">1</AVal>
				<AVal Row="3">1</AVal>
				<AVal Row="4">1</AVal>
				<AVal Row="5">1</AVal>
				<AVal Row="6">1</AVal>
				<AVal Row="7">1</AVal>
				<AVal Row="8">1</AVal>
				<AVal Row="9">1</AVal>
				<AVal Row="10">1</AVal>
				<AVal Row="11">1</AVal>
				<AVal Row="12">1</AVal>
				<AVal Row="13">1</AVal>
				<AVal Row="14">1</AVal>
				<AVal Row="15">1</AVal>
				<AVal Row="16">1</AVal>
				<AVal Row="17">1</AVal>
				<AVal Row="18">1</AVal>
				<AVal Row="19">1</AVal>
				<AVal Row="20">1</AVal>
			</ArrayValues>
		</Integer>
		<Length Name="leftWallholeRevealPnts">
			<Description><![CDATA["Left Reveal Points"]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="rightWallholeRevealPnts">
			<Description><![CDATA["Right Reveal Points"]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Length>
	</Parameters>
</ParamSection>

</Symbol>

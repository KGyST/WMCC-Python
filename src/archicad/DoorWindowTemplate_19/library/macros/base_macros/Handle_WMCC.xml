<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="no" IsPlaceable="no" MainGUID="4FDF529D-D957-495D-BD49-107836C4DD99" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="34">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="no">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>B2970E4C-8680-4061-8670-2F4B638F3953</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[


!sphere 0.01 : lin_ 0,0,0, 0,1,0 : lin_ 0,0,0, 1,0,0 : lin_ 0,0,0, 0,0,1 : hotspot 0,0,0

!pen pdSashCont[FILL_OPERATOR]

!---------------------------------Hotspots---------------------------------

if	iOpeningType = OPTYPE_SIDE_HUNG \
|	iOpeningType = OPTYPE_TILT_TURN \
|	iOpeningType = OPTYPE_BOTTOM_HUNG \
|	iOpeningType = OPTYPE_UPPER_VENT \
|	iOpeningType = OPTYPE_VER_PIVOT \
|	iOpeningType = OPTYPE_OUTWARDS \
|	iOpeningType = OPTYPE_SIDE_HUNG_SLIDING \

|	iOpeningType = DOUBLE_FIRST_SASH \
|	iOpeningType = DOUBLE_OUTWARDS_FIRST_SASH \

|	iOpeningType = SLIDING_FOLDING_FIRST_SASH \
|	iOpeningType = OPTYPE_TILT_SLIDE \
|	iOpeningType = DOUBLE_SLIDING_FIRST_SASH \
then
	hotspot LeafBoxA - yHandle,	0, 			zHandle - 0.05,	UnID, xHandle[1], 1 + 128	: UnID = UnID + 1
	hotspot LeafBoxA - yHandle,	xHandle[1],	zHandle - 0.05,	UnID, xHandle[1], 2 		: UnID = UnID + 1
	hotspot LeafBoxA - yHandle,	-1,			zHandle - 0.05,	UnID, xHandle[1], 3 		: UnID = UnID + 1

	add  LeafBoxA - yHandle, xHandle[1], zHandle
	rotx 90
	mul -1, -1, 1
endif


if	iOpeningType = OPTYPE_TOP_HUNG \
|	iOpeningType = OPTYPE_TOP_HUNG_SLIDING \
|	iOpeningType = OPTYPE_HOR_PIVOT \
then
	hotspot 0,			yHandle,			zHandle - 0.05,	UnID, xHandle[1], 1 + 128	: UnID = UnID + 1
	hotspot xHandle[1],	yHandle,			zHandle - 0.05,	UnID, xHandle[1], 2 		: UnID = UnID + 1
	hotspot -1,			yHandle,			zHandle - 0.05,	UnID, xHandle[1], 3 		: UnID = UnID + 1

	add  xHandle[1],	yHandle,			zHandle
	rotx 90
	roty 90
	mul 1, -1, -1
endif


if	iOpeningType = OPTYPE_DOOR \
|	iOpeningType = OPTYPE_DOOR_OUTWARDS \
|	iOpeningType = OPTYPE_PIVOT_DOOR \
|	iOpeningType = OPTYPE_PIVOT_DOOR_OUTWARDS \
|	iOpeningType = OPTYPE_WINDOW_DOOR \
|	iOpeningType = OPTYPE_WINDOW_DOOR_DOUBLE \
|	iOpeningType = OPTYPE_WINDOW_DOOR_OUTWARDS \
|	iOpeningType = OPTYPE_WINDOW_DOOR_OUTWARDS_DOUBLE \

|	iOpeningType = DOUBLE_DOOR_FIRST_SASH \
|	iOpeningType = DOUBLE_DOOR_OUTWARDS_FIRST_SASH \

|	iOpeningType = DOUBLE_DOOR_SECOND_SASH \
|	iOpeningType = DOUBLE_DOOR_OUTWARDS_SECOND_SASH \
|	iOpeningType = DOUBLE_ZT_DOOR_SECOND_SASH \
|	iOpeningType = DOUBLE_ZT_DOOR_OUTWARDS_SECOND_SASH \
then
	if not (bPanicBar) or not (isInnerSide) then
		hotspot LeafBoxA - yHandle,	0, 			zHandle - 0.05,	UnID, xHandle[1], 1 + 128	: UnID = UnID + 1
		hotspot LeafBoxA - yHandle,	xHandle[1],	zHandle - 0.05,	UnID, xHandle[1], 2 		: UnID = UnID + 1
		hotspot LeafBoxA - yHandle,	-1,			zHandle - 0.05,	UnID, xHandle[1], 3 		: UnID = UnID + 1

		add  LeafBoxA - yHandle, xHandle[1], zHandle
		rotx 90
		mul -1, -1, -1
	else
		hotspot LeafBoxA -	yHandle,	0, 			zHandle - 0.05,	UnID, xHandle[1], 1 + 128	: UnID = UnID + 1
		hotspot LeafBoxA -	yHandle,	xHandle[1],	zHandle - 0.05,	UnID, xHandle[1], 2 		: UnID = UnID + 1
		hotspot LeafBoxA -	yHandle,	-1,			zHandle - 0.05,	UnID, xHandle[1], 3 		: UnID = UnID + 1

		hotspot 			yHandle,	0, 			zHandle - 0.05,	UnID, xHandle[1], 1 + 128	: UnID = UnID + 1
		hotspot 			yHandle,	xHandle[1],	zHandle - 0.05,	UnID, xHandle[1], 2 		: UnID = UnID + 1
		hotspot 			yHandle,	-1,			zHandle - 0.05,	UnID, xHandle[1], 3 		: UnID = UnID + 1

		add 0, xHandle[1], zHandle
		rotx 90
		mul 1, -1, 1
	endif
endif

!---------------------------------Lock---------------------------------

if	iOpeningType = DOUBLE_DOOR_FIRST_SASH \
|	iOpeningType = OPTYPE_DOOR \
|	iOpeningType = OPTYPE_DOOR_OUTWARDS \
|	iOpeningType = OPTYPE_PIVOT_DOOR \
|	iOpeningType = OPTYPE_PIVOT_DOOR_OUTWARDS \
|	iOpeningType = DOUBLE_DOOR_OUTWARDS_FIRST_SASH \
|	iOpeningType = DOUBLE_ZT_DOOR_FIRST_SASH \
|	iOpeningType = DOUBLE_ZT_DOOR_OUTWARDS_FIRST_SASH \
|	iOpeningType = DOUBLE_SLIDING_FIRST_SASH \
|	iOpeningType = SLIDING_FOLDING_FIRST_SASH \
then bHasLock = 1 else bHasLock = 0

material mats[MAT_OPERATOR]

!---------------------------------escutcheons---------------------------------

if not (bPanicBar) or not (isInnerSide) then
	if	iOpeningType = DOUBLE_DOOR_FIRST_SASH \
	|	iOpeningType = OPTYPE_SIDE_HUNG \
	|	iOpeningType = OPTYPE_TILT_TURN \
	|	iOpeningType = OPTYPE_BOTTOM_HUNG \
	|	iOpeningType = OPTYPE_HOR_PIVOT \
	|	iOpeningType = OPTYPE_TOP_HUNG \
	|	iOpeningType = OPTYPE_VER_PIVOT \
	|	iOpeningType = OPTYPE_OUTWARDS \
	|	iOpeningType = OPTYPE_SIDE_HUNG_SLIDING \
	|	iOpeningType = OPTYPE_TOP_HUNG_SLIDING \
	|	iOpeningType = OPTYPE_DOOR \
	|	iOpeningType = OPTYPE_DOOR_OUTWARDS \
	|	iOpeningType = OPTYPE_PIVOT_DOOR \
	|	iOpeningType = OPTYPE_PIVOT_DOOR_OUTWARDS \
	|	iOpeningType = DOUBLE_FIRST_SASH \
	|	iOpeningType = DOUBLE_OUTWARDS_FIRST_SASH \
	|	iOpeningType = DOUBLE_DOOR_OUTWARDS_FIRST_SASH \
	|	iOpeningType = OPTYPE_WINDOW_DOOR \
	|	iOpeningType = OPTYPE_WINDOW_DOOR_DOUBLE \
	|	iOpeningType = OPTYPE_WINDOW_DOOR_OUTWARDS \
	|	iOpeningType = OPTYPE_WINDOW_DOOR_OUTWARDS_DOUBLE \
	then
		wEscut = 0.033
		hEscut = 0.062
		thkEscut = 0.004
		rEscut = 0.0052
		hHill = 0.0005
		wShaftOffset	= 0.008
		hShaftDist 		= 0.072
		matEscut		= mats[MAT_OPERATOR]
	
		rotx -90
			hprism_ matEscut, matEscut, matEscut, matEscut,
				9, thkEscut, 0, hHill, 2+8,		
				-wEscut/2, rEscut - hEscut/2, 73,
				-wEscut/2, hEscut/2 - rEscut, 73,
				rEscut - wEscut/2, hEscut/2, 1073,
				wEscut/2 - rEscut, hEscut/2, 73,
				wEscut/2, hEscut/2 - rEscut, 1073,
				wEscut/2, rEscut - hEscut/2, 73,
				wEscut/2 - rEscut, -hEscut/2, 1073,
				rEscut - wEscut/2, -hEscut/2, 73,
				-wEscut/2, rEscut - hEscut/2, 1073
	
				if bHasLock then
					gosub 302
		
					hprism_ matEscut, matEscut, matEscut, matEscut,
						9, thkEscut, 0, hHill, 2+8,		
						-wEscut/2, hShaftDist + rEscut - hEscut/2 + wShaftOffset, 73,
						-wEscut/2, hShaftDist + hEscut/2 - rEscut + wShaftOffset, 73,
						rEscut - wEscut/2, hShaftDist + hEscut/2 + wShaftOffset, 1073,
						wEscut/2 - rEscut, hShaftDist + hEscut/2 + wShaftOffset, 73,
						wEscut/2, hShaftDist + hEscut/2 - rEscut + wShaftOffset, 1073,
						wEscut/2, hShaftDist + rEscut - hEscut/2 + wShaftOffset, 73,
						wEscut/2 - rEscut, hShaftDist - hEscut/2 + wShaftOffset, 1073,
						rEscut - wEscut/2, hShaftDist - hEscut/2 + wShaftOffset, 73,
						-wEscut/2, hShaftDist + rEscut - hEscut/2 + wShaftOffset, 1073
					
						cutend
				endif
				gosub 402
		del 1
	endif
endif


!---------------------------------handles---------------------------------

if bPanicBar and isInnerSide then
	gosub "PanicBar"
else
	if	iOpeningType = OPTYPE_SIDE_HUNG \
	|	iOpeningType = OPTYPE_TILT_TURN \
	|	iOpeningType = OPTYPE_BOTTOM_HUNG \
	|	iOpeningType = OPTYPE_UPPER_VENT \
	|	iOpeningType = OPTYPE_HOR_PIVOT \
	|	iOpeningType = OPTYPE_TOP_HUNG \
	|	iOpeningType = OPTYPE_VER_PIVOT \
	|	iOpeningType = OPTYPE_OUTWARDS \
	|	iOpeningType = OPTYPE_SIDE_HUNG_SLIDING \
	|	iOpeningType = OPTYPE_TOP_HUNG_SLIDING \
	
	|	iOpeningType = OPTYPE_DOOR \
	|	iOpeningType = OPTYPE_DOOR_OUTWARDS \
	|	iOpeningType = OPTYPE_PIVOT_DOOR \
	|	iOpeningType = OPTYPE_PIVOT_DOOR_OUTWARDS \
	
	|	iOpeningType = DOUBLE_FIRST_SASH \
	|	iOpeningType = DOUBLE_OUTWARDS_FIRST_SASH \
	|	iOpeningType = DOUBLE_DOOR_FIRST_SASH \
	|	iOpeningType = DOUBLE_DOOR_OUTWARDS_FIRST_SASH \
	|	iOpeningType = DOUBLE_ZT_DOOR_FIRST_SASH \
	|	iOpeningType = DOUBLE_ZT_DOOR_OUTWARDS_FIRST_SASH \
	
	|	iOpeningType = SLIDING_FOLDING_FIRST_SASH \

	|	iOpeningType = OPTYPE_WINDOW_DOOR \
	|	iOpeningType = OPTYPE_WINDOW_DOOR_DOUBLE \
	|	iOpeningType = OPTYPE_WINDOW_DOOR_OUTWARDS \
	|	iOpeningType = OPTYPE_WINDOW_DOOR_OUTWARDS_DOUBLE \
	then 
		gosub "ReynaersPurityHandle"
	endif
endif


if	iOpeningType = OPTYPE_TILT_SLIDE \
|	iOpeningType = DOUBLE_SLIDING_FIRST_SASH \
then 
	gosub "ReynaersPuritySlidingHandle"
endif

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!
   end UnID 
!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! ---PZ cut---
302:
	cutpolya 7, 1, 0,					
		-0.005, hShaftDist + 0.00687386, 13,
		-0.005, hShaftDist + 0.0195, 13,
		0.005, hShaftDist + 0.0195, 1013,
		0.005, hShaftDist + 0.00687386, 13,
		0, hShaftDist, 913,
		0, -287.9362, 4013,
		-0.005, hShaftDist + 0.00687386, -1
return

! ---PZ fill---
402:
!	material matLock

!	prism_ 7, thkEscut + 0.0015,							
!		-0.005, hShaftDist + 0.00687386, 13,
!		-0.005, hShaftDist + 0.0195, 13,
!		0.005, hShaftDist + 0.0195, 1013,
!		0.005, hShaftDist + 0.00687386, 13,
!		0, hShaftDist, 913,
!		0, -287.9362, 4013,
!		-0.005, hShaftDist + 0.00687386, -1
return


"ReynaersPurityHandle":
	if	aOpenings3D[1] < EPS \
	&	aTilt < EPS	\
	&	not (bDoor) \
		then roty -90	! Handle rotated when door is open

	mulz mulHandleZ

	tube 2, 4, 2+32,
		0, 0, 901,
		0.012, 360, 4000,
		0, -1, 0, 0,
		0, 0, 0, 0,
		0, 0.0178, 0, 0,
		0, 1, 0, 0
	
	rotx -90
		addz 0.038
			prism_ 5, 0.008,
				0.007, -0.012, 79,
				0.135, -0.012, 79,
				0.135, 0.012, 1079,
				0.007, 0.012, 79,
				0.007, -0.012, 1079			
		del 1
	
		r1 = 0.012
		r2 = 0.0598
		angFrag1 = 90/iCurveResol
		angFrag2 = 28.2/iCurveResol
		rGap = (0.0282 - eps)/iCurveResol
		iCycleDiff = int(0.008/rGap)
		rFactor = lgt(3.916)
		rFactor = rFactor / (iCurveResol - iCycleDiff - 1)
		rFactor = 10^rFactor

		addz 0.0178
	
			for r = 0 to iCurveResol - 1		! - iCycleDiff
				addz r*rGap
					for s = 0 to iCurveResol - 1
							put (rFactor^r) * r1*sin(s*angFrag1) + r2-r2*cos(r*angFrag2), -r1*cos(s*angFrag1), 1
						next s
						put (rFactor^r) * r1*sin(90) + r2-r2*cos(r*angFrag2), -r1*cos(90), 1
						for t = 0 to iCurveResol - 1
							put (rFactor^r) * r1*sin(90 + t*angFrag1) + r2-r2*cos(r*angFrag2), -r1*cos(90 + t*angFrag1), 1
						next t
						put (rFactor^r) * r1*sin(180) + r2-r2*cos(r*angFrag2), -r1*cos(180), 1
	
						for ss = 0 to iCurveResol - 1
							put -r1*sin(ss*angFrag1) + r2-r2*cos(r*angFrag2), r1*cos(ss*angFrag1), 1
						next ss
						put -r1*sin(90) + r2-r2*cos(r*angFrag2), r1*cos(90), 1
						for tt = 0 to iCurveResol - 1
							put -r1*sin(90 + tt*angFrag1) + r2-r2*cos(r*angFrag2), r1*cos(90 + tt*angFrag1), 1
						next tt
						put -r1*sin(180) + r2-r2*cos(r*angFrag2), r1*cos(180), 1
	
						for u = 0 to iCurveResol - 1
							put (rFactor^(r+1)) * r1*sin(u*angFrag1) + r2-r2*cos((r+1)*angFrag2), -r1*cos(u*angFrag1), rGap
						next u
						put (rFactor^(r+1)) * r1*sin(90) + r2-r2*cos((r+1)*angFrag2), -r1*cos(90), rGap
						for v = 0 to iCurveResol - 1
							put (rFactor^(r+1)) * r1*sin(90 - v*angFrag1) + r2-r2*cos((r+1)*angFrag2), r1*cos(90 - v*angFrag1), rGap
						next v
						put (rFactor^(r+1)) * r1*sin(0) + r2-r2*cos((r+1)*angFrag2), r1*cos(0), rGap
	
						for uu = 0 to iCurveResol - 1
							put -r1*sin(uu*angFrag1) + r2-r2*cos((r+1)*angFrag2), r1*cos(uu*angFrag1), rGap
						next uu
						put -r1*sin(90) + r2-r2*cos((r+1)*angFrag2), r1*cos(90), rGap
						for vv = 0 to iCurveResol - 1
							put -r1*sin(90 - vv*angFrag1) + r2-r2*cos((r+1)*angFrag2), r1*cos(90 + vv*angFrag1), rGap
						next vv
						put -r1*sin(0) + r2-r2*cos((r+1)*angFrag2), -r1*cos(0), rGap
	
					ruled{2} 4*iCurveResol + 4, 4,
						get(nsp)
				del 1	
			next r
	
			for qq = 1 to nsp
				tmp = get(1)
			next qq			
		del 1
	del 1
return


"ReynaersPuritySlidingHandle":
	if	aOpenings3D[1] < EPS \
	&	aTilt < EPS	\
	&	not (bDoor) \
		then roty -90	! Handle rotated when door is open

	mulz mulHandleZ

	tube 2, 4, 2+32,
		0, 0, 901,
		0.012, 360, 4000,
		0, -1, 0, 0,
		0, 0, 0, 0,
		0, 0.0178, 0, 0,
		0, 1, 0, 0

		rotx -90
			addz 0.038
				prism_ 5, 0.008,
					0.007, -0.012, 79,
					0.223, -0.012, 79,
					0.223, 0.012, 1079,
					0.007, 0.012, 79,
					0.007, -0.012, 1079			
			del 1
	
			r1 = 0.012
			r2 = 0.0598
			angFrag1 = 90/iCurveResol
			angFrag2 = 28.2/iCurveResol
			rGap = (0.0282 - eps)/iCurveResol
			iCycleDiff = int(0.008/rGap)
			rFactor = lgt(3.916)
			rFactor = rFactor / (iCurveResol - iCycleDiff - 1)
			rFactor = 10^rFactor

			addz 0.0178
	
			for r = 0 to iCurveResol - 1		! - iCycleDiff
				addz r*rGap
					
					for s = 0 to iCurveResol - 1
							put (rFactor^r) * r1*sin(s*angFrag1) + r2-r2*cos(r*angFrag2), -r1*cos(s*angFrag1), 1
						next s
						put (rFactor^r) * r1*sin(90) + r2-r2*cos(r*angFrag2), -r1*cos(90), 1
						for t = 0 to iCurveResol - 1
							put (rFactor^r) * r1*sin(90 + t*angFrag1) + r2-r2*cos(r*angFrag2), -r1*cos(90 + t*angFrag1), 1
						next t
						put (rFactor^r) * r1*sin(180) + r2-r2*cos(r*angFrag2), -r1*cos(180), 1

						for ss = 0 to iCurveResol - 1
							put -r1*sin(ss*angFrag1) + r2-r2*cos(r*angFrag2), r1*cos(ss*angFrag1), 1
						next ss
						put -r1*sin(90) + r2-r2*cos(r*angFrag2), r1*cos(90), 1
						for tt = 0 to iCurveResol - 1
							put -r1*sin(90 + tt*angFrag1) + r2-r2*cos(r*angFrag2), r1*cos(90 + tt*angFrag1), 1
						next tt
						put -r1*sin(180) + r2-r2*cos(r*angFrag2), r1*cos(180), 1

						for u = 0 to iCurveResol - 1
							put (rFactor^(r+1)) * r1*sin(u*angFrag1) + r2-r2*cos((r+1)*angFrag2), -r1*cos(u*angFrag1), rGap
						next u
						put (rFactor^(r+1)) * r1*sin(90) + r2-r2*cos((r+1)*angFrag2), -r1*cos(90), rGap
						for v = 0 to iCurveResol - 1
							put (rFactor^(r+1)) * r1*sin(90 - v*angFrag1) + r2-r2*cos((r+1)*angFrag2), r1*cos(90 - v*angFrag1), rGap
						next v
						put (rFactor^(r+1)) * r1*sin(0) + r2-r2*cos((r+1)*angFrag2), r1*cos(0), rGap

						for uu = 0 to iCurveResol - 1
							put -r1*sin(uu*angFrag1) + r2-r2*cos((r+1)*angFrag2), r1*cos(uu*angFrag1), rGap
						next uu
						put -r1*sin(90) + r2-r2*cos((r+1)*angFrag2), r1*cos(90), rGap
						for vv = 0 to iCurveResol - 1
							put -r1*sin(90 - vv*angFrag1) + r2-r2*cos((r+1)*angFrag2), r1*cos(90 + vv*angFrag1), rGap
						next vv
						put -r1*sin(0) + r2-r2*cos((r+1)*angFrag2), -r1*cos(0), rGap

					ruled{2} 4*iCurveResol + 4, 4,
						get(nsp)
				del 1
			next r

			for qq = 1 to nsp
				tmp = get(1)
			next qq
return


"PanicBar":
	add 0, 0, 0
	if aOpenings3D[1] < EPS then aPanic = 30 else aPanic = 0
	put\
		 -thkPanicBar / 2,	lPanicBar - thkPanicBar,	15,
		 -thkPanicBar / 2,	lPanicBar,	15,
		  thkPanicBar / 2,	lPanicBar,	15,
		  thkPanicBar / 2,	lPanicBar - thkPanicBar,	15
	xform	 0,		 	 	 0,			 	 1,		  wPanicBarHolder + yHandle + thkPanicBar,
			 -cos(-aPanic),	 -sin(-aPanic),	 0,		  0.04,
			  sin( aPanic),	  cos( aPanic),	 0,		 -0.02
		prism_ nsp/3, LeafBoxA - 2 * (yHandle + wPanicBarHolder + thkPanicBar), use(nsp)
	del 1

!TRICKY **USE**
	put\
		 thkPanicBar / 2,	 -thkPanicBar / 2,	15,
		-thkPanicBar / 2,	 -thkPanicBar / 2,	15
	xform	 0,		 	 	 0,			 	 1,		  wPanicBarHolder + yHandle,
			 -cos(-aPanic),	 -sin(-aPanic),	 0,		  0.04,
			  sin( aPanic),	  cos( aPanic),	 0,		 -0.02
		prism_ nsp/3, 0.02, use(nsp)
	del 1

	xform	 0,		 	 	 0,			 	-1,		  LeafBoxA - wPanicBarHolder - yHandle,
			 -cos(-aPanic),	 -sin(-aPanic),	 0,		  0.04,
			  sin( aPanic),	  cos( aPanic),	 0,		 -0.02
		prism_ nsp/3, 0.02, get(nsp)
	del 1
	put\
		 0,		-0.04,	15,
		 0,		 0,		15,
		 0.05,	-0.005,	15,
		 0.05,	-0.035,	15
	xform	 0,	 0,	 -1,		 LeafBoxA - yHandle,
			 1,	 0,	  0,		 0,
			 0,	 1,	  0,		 0
		prism_ nsp/3, 0.02, use(nsp)
	del 1

	xform	 0,	 0,	 1,		 yHandle,
			 1,	 0,	 0,		 0,
			 0,	 1,	 0,		 0
		prism_ nsp/3, wPanicBarHolder, get(nsp)
	del 1
return

"hotspots":
return



]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!circle2 0,0, .01 : hotspot2 0,0 : line2 0,0, 0,1 : line2 0,0, 1,0

pen iFills[FILL_HANDLE][FP_FGPEN]

!if iDetLevel2D < DETLEVEL_2D_100 then
!	if handleSide = -1 then 
!		add2 xHandle, -gs_sash_thk
!	endif

!	if handleSide = 1 then
!		add2 xSashWidth [i] - xHandle, -gs_sash_thk
!	endif

if bPanicBar and isInnerSide then
	add2  0, 					zHandle
	xPos = wPanicBarHolder + yHandle 
	line2 xPos, 0,					xPos, -lPanicBar * sin(30)
	line2 xPos + thkPanicBar, 0,	xPos + thkPanicBar, -lPanicBar * sin(30)

	xPos = LeafBoxA - wPanicBarHolder - yHandle 
	line2 xPos, 0, 					xPos, -lPanicBar * sin(30)
	line2 xPos - thkPanicBar, 0,	xPos - thkPanicBar, -lPanicBar * sin(30)

	line2 xPos -  thkPanicBar, -lPanicBar * sin(30) + thkPanicBar, wPanicBarHolder + yHandle + thkPanicBar, -lPanicBar * sin(30) + thkPanicBar
	line2 xPos, -lPanicBar * sin(30),								wPanicBarHolder + yHandle, 				-lPanicBar * sin(30)	
else
	if	iOpeningType = OPTYPE_TOP_HUNG \
	|	iOpeningType = OPTYPE_TOP_HUNG_SLIDING \
	|	iOpeningType = OPTYPE_HOR_PIVOT \
	then
		add2  min( max(xHandle[1], xMinP), xMaxP),	zHandle
	else
		add2  LeafBoxA - yHandle, 					zHandle
	endif

	mul2 mulHandleZ, 1

	line2 -0.0165,  0, 		-0.0135, -0.044
	line2 -0.0135, -0.044, 	-0.0075, -0.048
	line2 -0.0075, -0.048,   0.0075, -0.048
	line2 -0.0135, -0.044,   0.0135, -0.044
	line2  0.0135, -0.044, 	 0.0075, -0.048
	line2  0.0135, -0.044, 	 0.0165,  0
endif



]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS				= 0.001

!rArray positions
	SLIDE_OPENING_1		= 1
	SLIDE_OPENING_2		= 2		!To be removed
	HANDLE_POS			= 1
	DIVISION_RATIO		= 2
	MIN_POS_X = 2
	MAX_POS_X = 3

!iArray positions
	NR_OF_LEAFS			= 1
	ASYMMETRY			= 2

! Fill/contour array column positions as seen in sect_attrs
	FP_BGPEN		= 1		! Background pen
	FP_FGPEN		= 2		! Foreground pen
	FP_CONTPEN		= 3		! Contour pen
	FP_FILL			= 4		! Fill type
	FP_LTYPE		= 5		! Contour linetype

! iType2D
	FILL_EMPTY		= 1		! Non section lines
	FILL_ALU		= 2		! Aluminium
	FILL_WOOD		= 3		! Timber
	FILL_PVC		= 4		! PVC
	FILL_STEEL		= 5 	! Steel
	FILL_FOAM		= 6		! Foam
	FILL_SEALANT	= 7		! Gum
	FILL_THERMAL	= 8		! Thermal blocker
	FILL_GLASS		= 9		! Glass
	FILL_SASH		= 10	! Sash
	FILL_FRAME		= 11	! Frame
	FILL_HANDLE		= 12	! Operator (kilincs, vasalat) sz&#237;n
	FILL_WALLHOLE	= 13	! Wallhole fill
	FILL_ORIGFRAME	= 14	! Original frame fill
	FILL_COVER		= 15	! Cover
	FILL_PVC		= 16	! PVC
	FILL_BRUSH		= 17	! Brush

! iType3D
	MAT_IN			= 1		! Inner side surface
	MAT_OUT			= 2		! Outer side surface
	MAT_ALU			= 3		! Aluminium
	MAT_STEEL		= 4 	! Steel surface
	MAT_SEALANT		= 5		! Sealant surface
	MAT_THERMAL		= 6		! Thermal blocker
	MAT_GLASSBACK 	= 7		! Glassback
	MAT_BRUSH		= 8		! Brush
	MAT_GLASS		= 9		! Glass surface
	MAT_OPERATOR	= 10	! Operator (handle, hinge) surfaces
	MAT_THRESHOLD	= 11	! Threshold
	MAT_SASH_IN		= 12	! Sash inner, if differs from frame
	MAT_SASH_OUT	= 13	! Sash outer, if differs from frame
	MAT_FOAM 		= 14	! Foam fillings


! iOpeningType:
	OPTYPE_BASE									= 10000

	OPTYPE_EMPTY								= -1	! Empty (no sash, no glass)
	OPTYPE_SOLID								= 0		! Solid panel in sash
	OPTYPE_FIXED								= 1		! Fixed Glass 									!
	OPTYPE_FIXED_SCREW							= 2		! Fixed Sash
	OPTYPE_SIDE_HUNG							= 3		! Side Hung 									!
	OPTYPE_SIDE_HUNG_M							= 4		! Side Hung Mirrored
	OPTYPE_TILT_TURN							= 5		! Tilt and Turn									!
	OPTYPE_TILT_TURN_M							= 6		! Tilt and Turn Mirrored
	OPTYPE_BOTTOM_HUNG							= 7		! Bottom Hung									!
	OPTYPE_TOP_HUNG								= 8		! Top Hung										!
	OPTYPE_HOR_PIVOT							= 9		! Horizontal Pivot Hung							!	
	OPTYPE_VER_PIVOT							= 10	! Vertical Pivotted								!
	OPTYPE_TILT_SLIDE							= 11	! Tilt and Slide
	OPTYPE_DOUBLE_TILT_SLIDE					= 12	! in place of OPTYPE_LEFT_SLIDING
	OPTYPE_RIGHT_SLIDING						= 13	! Right Sliding
	OPTYPE_UP_SLIDING							= 14	! Sliding Up
	OPTYPE_DOWN_SLIDING							= 15	! Sliding Down
	OPTYPE_VER_PIVOT_M							= 16	! Vertical Pivotted Mirrored
	OPTYPE_DOUBLE_SIDE_HUNG						= 18	! Double Sash									!
	OPTYPE_DOUBLE_TILT_TURN						= 19	! Double Tilt and Turn							!
	OPTYPE_DOUBLE_TILT_TURN_M					= 20	! Double Tilt and Turn Mirrored
	OPTYPE_SLIDING_HOR							= 21	! Sliding
	OPTYPE_SLIDING_HOR_M						= 22	! Sliding Mirrored
	OPTYPE_DOUBLE_SLIDING_HOR					= 23	! Double Sliding
	OPTYPE_DOUBLE_SLIDING_HOR_M					= 24	! Double Sliding Mirrored
	OPTYPE_SLIDING_VER							= 25	! Single Hung
	OPTYPE_DOUBLE_SLIDING_VER					= 26	! Double Hung
	OPTYPE_SLIDING_FIX							= 27	! Sliding Fix
	OPTYPE_SLIDING_FIX_M						= 28	! Sliding Fix Mirrored
	OPTYPE_TOP_SWING							= 31	! Top Swing
	OPTYPE_SIDE_SWING							= 32	! Side Swing
	OPTYPE_SIDE_SWING_M							= 33	! Side Swing mirrored
	OPTYPE_TOP_TURN								= 34	! Top Turn
	OPTYPE_FIXED_COMBI							= 35	! Fixed Glass Combi window
	OPTYPE_DOUBLE_TILT_FIXED					= 36	! Double Tilt and Turn							!
	OPTYPE_DOOR_WIN_SIDE_HUNG					= 37	! Door window side hung							!
	OPTYPE_DOUBLE_DOOR_WIN_SIDE_HUNG			= 38	! Double door window side hung					!
	OPTYPE_OUTWARDS								= 39	! Side hung, outwards opening					!
	OPTYPE_OUTWARDS_M							= 40	! Side hung, outwards opening, mirrored			!
	OPTYPE_OUTWARDS_DOUBLE						= 41	! Side hung, outwards opening, double			!
	OPTYPE_OUTWARDS_DOUBLE_M					= 42	! Side hung, outwards opening, double mirrored	!
	OPTYPE_TILT_TURN_AND_FIXED					= 43	! Tilt&turn + fixed
	OPTYPE_TOP_HUNG_SLIDING						= 44	! Top-hung sliding 								!
	OPTYPE_TOP_HUNG_SLIDING_FIXED				= 45	! Top-hung sliding and fixed					!
	OPTYPE_SIDE_HUNG_SLIDING					= 46	! Side-hung sliding 							!#266. page
	OPTYPE_FIXED_WITH_VENT						= 47	! Fixed window frame with vent					!
	OPTYPE_COMBINED_FIXED						= 48    ! Combined fixed window							!#272
	OPTYPE_COMPOSITE    						= 49    ! Composite with top hung inside glazed			!#292
	OPTYPE_UPPER_VENT							= 50    ! Upper vent									!
	OPTYPE_COMBINED_TOP_HUNG					= 51    ! Combined window with top hung sliding window	!
	OPTYPE_SLIDING_FOLDING						= 52    ! Sliding-folding, composite

	OPTYPE_DOOR									= 60	! Door window side hung
	OPTYPE_DOUBLE_DOOR							= 61	! Double door window side hung
	OPTYPE_DOUBLE_DOOR_Z_T						= 62	! Double door Z-T opening						!#340
	OPTYPE_COMBI_DOOR							= 63	! Combi door
	OPTYPE_DOOR_OUTWARDS						= 64	! Door window side hung, outwards opening
	OPTYPE_DOUBLE_DOOR_OUTWARDS					= 65	! Double door side hung, outwards opening		!#356/487
	OPTYPE_DOUBLE_DOOR_Z_T_OUTWARDS				= 66	! Double Z-T door, outwards opening
	OPTYPE_COMBI_DOOR_OUTWARDS					= 67	! Combi door, outwards opening
	OPTYPE_ALTERNATE_DOOR						= 68	! Alternate door
	OPTYPE_PIVOT_DOOR							= 69	! Pivot door									!#450
	OPTYPE_PIVOT_DOOR_OUTWARDS					= 70	! Pivot door, outwards opening

	OPTYPE_WINDOW_DOOR							= 71	! Window door, inwards opening
	OPTYPE_WINDOW_DOOR_DOUBLE					= 72	! Double window door, inwards opening
	OPTYPE_WINDOW_DOOR_OUTWARDS					= 73	! Window door, outwards opening
	OPTYPE_WINDOW_DOOR_OUTWARDS_DOUBLE			= 74	! Double window door, outwards opening

	OPTYPE_AUTO_DOOR_2_ZONES					= 80	! Auto sliding door, 2 zones (1 fix, 1 sliding)
	OPTYPE_AUTO_DOOR_4_ZONES					= 81	! Auto sliding door, 4 zones (2 fix, 2 sliding)

	DIVISION_HORIZONTAL							= 100	!TODO mext time use DIVIDER_HORIZONTAL to be clear
	DIVISION_VERTICAL							= 101
	DOUBLE_FIRST_SASH							= 102
	DOUBLE_SECOND_SASH							= 103
	DOUBLE_OUTWARDS_FIRST_SASH					= 104
	DOUBLE_OUTWARDS_SECOND_SASH					= 105
	DOUBLE_DOOR_FIRST_SASH						= 106
	DOUBLE_DOOR_SECOND_SASH						= 107
	DOUBLE_DOOR_OUTWARDS_FIRST_SASH				= 108
	DOUBLE_DOOR_OUTWARDS_SECOND_SASH			= 109
	DOUBLE_ZT_DOOR_FIRST_SASH					= 110	!Same as DOUBLE_DOOR_FIRST_SASH				to be removed
	DOUBLE_ZT_DOOR_SECOND_SASH					= 111
	DOUBLE_ZT_DOOR_OUTWARDS_FIRST_SASH			= 112	!Same as DOUBLE_DOOR_OUTWARDS_FIRST_SASH	to be removed
	DOUBLE_ZT_DOOR_OUTWARDS_SECOND_SASH			= 113
	DOUBLE_SLIDING_FIRST_SASH					= 114
	DOUBLE_SLIDING_SECOND_SASH					= 115
	SLIDING_FOLDING_FIRST_SASH					= 116
	SLIDING_FOLDING_SECOND_SASH					= 117

!--------------------------------- handle position ---------------------------------

xHandle[1] = min (max (xHandle[1], xMinP), xMaxP)
 
!--------------------------------- panic bar defaults ------------------------------

if bPanicBar and isInnerSide then
	wPanicBarHolder	= 0.02
	yHandle			= yHandle - 0.03
	thkPanicBar		= 0.02
	lPanicBar		= 0.1
endif
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[





]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[





]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
parameters xHandle = xHandle
]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[





]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[





]]>
</Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>BIMobject</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>22</Version>
		<AutoHotspots>no</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="iArray">
			<Description><![CDATA["Integers' extendable array"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
			</ArrayValues>
		</Integer>
		<Length Name="rArray">
			<Description><![CDATA["Floats' extendable array"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
			</ArrayValues>
		</Length>
		<String Name="sArray">
			<Description><![CDATA["Strings' extendable array"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="2">
				<AVal Column="1" Row="1"><![CDATA[""]]></AVal>
				<AVal Column="2" Row="1"><![CDATA[""]]></AVal>
				<AVal Column="1" Row="2"><![CDATA[""]]></AVal>
				<AVal Column="2" Row="2"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Angle Name="aOpenings2D">
			<Description><![CDATA["2D openings of zones"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0</AVal>
			</ArrayValues>
		</Angle>
		<Angle Name="aOpenings3D">
			<Description><![CDATA["3D openings of zones"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0</AVal>
			</ArrayValues>
		</Angle>
		<Angle Name="aTilt">
			<Description><![CDATA["Tilt angle"]]></Description>
			<Value>0</Value>
		</Angle>
		<Length Name="yHandle">
			<Description><![CDATA["Handle pos perpendicular to the profile length"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.021</Value>
		</Length>
		<Length Name="zHandle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="LeafBoxA">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="LeafBoxB">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="UnID">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Length Name="xMaxP">
			<Description><![CDATA["Handle max pos"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="xMinP">
			<Description><![CDATA["Handle min pos"]]></Description>
			<Value>0</Value>
		</Length>
		<Material Name="mats">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="14" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
				<AVal Row="5">0</AVal>
				<AVal Row="6">0</AVal>
				<AVal Row="7">0</AVal>
				<AVal Row="8">0</AVal>
				<AVal Row="9">0</AVal>
				<AVal Row="10">0</AVal>
				<AVal Row="11">0</AVal>
				<AVal Row="12">0</AVal>
				<AVal Row="13">0</AVal>
				<AVal Row="14">0</AVal>
			</ArrayValues>
		</Material>
		<Integer Name="iFills">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="17" SecondDimension="5">
				<AVal Column="1" Row="1">1</AVal>
				<AVal Column="2" Row="1">1</AVal>
				<AVal Column="3" Row="1">1</AVal>
				<AVal Column="4" Row="1">1</AVal>
				<AVal Column="5" Row="1">1</AVal>
				<AVal Column="1" Row="2">1</AVal>
				<AVal Column="2" Row="2">1</AVal>
				<AVal Column="3" Row="2">1</AVal>
				<AVal Column="4" Row="2">1</AVal>
				<AVal Column="5" Row="2">1</AVal>
				<AVal Column="1" Row="3">1</AVal>
				<AVal Column="2" Row="3">1</AVal>
				<AVal Column="3" Row="3">1</AVal>
				<AVal Column="4" Row="3">1</AVal>
				<AVal Column="5" Row="3">1</AVal>
				<AVal Column="1" Row="4">1</AVal>
				<AVal Column="2" Row="4">1</AVal>
				<AVal Column="3" Row="4">1</AVal>
				<AVal Column="4" Row="4">1</AVal>
				<AVal Column="5" Row="4">1</AVal>
				<AVal Column="1" Row="5">1</AVal>
				<AVal Column="2" Row="5">1</AVal>
				<AVal Column="3" Row="5">1</AVal>
				<AVal Column="4" Row="5">1</AVal>
				<AVal Column="5" Row="5">1</AVal>
				<AVal Column="1" Row="6">1</AVal>
				<AVal Column="2" Row="6">1</AVal>
				<AVal Column="3" Row="6">1</AVal>
				<AVal Column="4" Row="6">1</AVal>
				<AVal Column="5" Row="6">1</AVal>
				<AVal Column="1" Row="7">1</AVal>
				<AVal Column="2" Row="7">1</AVal>
				<AVal Column="3" Row="7">1</AVal>
				<AVal Column="4" Row="7">1</AVal>
				<AVal Column="5" Row="7">1</AVal>
				<AVal Column="1" Row="8">1</AVal>
				<AVal Column="2" Row="8">1</AVal>
				<AVal Column="3" Row="8">1</AVal>
				<AVal Column="4" Row="8">1</AVal>
				<AVal Column="5" Row="8">1</AVal>
				<AVal Column="1" Row="9">1</AVal>
				<AVal Column="2" Row="9">1</AVal>
				<AVal Column="3" Row="9">1</AVal>
				<AVal Column="4" Row="9">1</AVal>
				<AVal Column="5" Row="9">1</AVal>
				<AVal Column="1" Row="10">1</AVal>
				<AVal Column="2" Row="10">1</AVal>
				<AVal Column="3" Row="10">1</AVal>
				<AVal Column="4" Row="10">1</AVal>
				<AVal Column="5" Row="10">1</AVal>
				<AVal Column="1" Row="11">1</AVal>
				<AVal Column="2" Row="11">1</AVal>
				<AVal Column="3" Row="11">1</AVal>
				<AVal Column="4" Row="11">1</AVal>
				<AVal Column="5" Row="11">1</AVal>
				<AVal Column="1" Row="12">1</AVal>
				<AVal Column="2" Row="12">1</AVal>
				<AVal Column="3" Row="12">1</AVal>
				<AVal Column="4" Row="12">1</AVal>
				<AVal Column="5" Row="12">1</AVal>
				<AVal Column="1" Row="13">1</AVal>
				<AVal Column="2" Row="13">1</AVal>
				<AVal Column="3" Row="13">1</AVal>
				<AVal Column="4" Row="13">1</AVal>
				<AVal Column="5" Row="13">1</AVal>
				<AVal Column="1" Row="14">1</AVal>
				<AVal Column="2" Row="14">1</AVal>
				<AVal Column="3" Row="14">1</AVal>
				<AVal Column="4" Row="14">1</AVal>
				<AVal Column="5" Row="14">1</AVal>
				<AVal Column="1" Row="15">1</AVal>
				<AVal Column="2" Row="15">1</AVal>
				<AVal Column="3" Row="15">1</AVal>
				<AVal Column="4" Row="15">1</AVal>
				<AVal Column="5" Row="15">1</AVal>
				<AVal Column="1" Row="16">1</AVal>
				<AVal Column="2" Row="16">1</AVal>
				<AVal Column="3" Row="16">1</AVal>
				<AVal Column="4" Row="16">1</AVal>
				<AVal Column="5" Row="16">1</AVal>
				<AVal Column="1" Row="17">1</AVal>
				<AVal Column="2" Row="17">1</AVal>
				<AVal Column="3" Row="17">1</AVal>
				<AVal Column="4" Row="17">1</AVal>
				<AVal Column="5" Row="17">1</AVal>
			</ArrayValues>
		</Integer>
		<Integer Name="iCurveResol">
			<Description><![CDATA[""]]></Description>
			<Value>25</Value>
		</Integer>
		<Integer Name="iOpeningType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Length Name="xHandle">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Boolean Name="bDoor">
			<Description><![CDATA["Is it a door?"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bPanicBar">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="zProfile">
			<Description><![CDATA["Profile thickness perpendicular to door leaf plane"]]></Description>
			<Value>0</Value>
		</Length>
		<Boolean Name="isInnerSide">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iLeafProfile">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<RealNum Name="mulHandleZ">
			<Description><![CDATA["If less than 1 handle will be thinner"]]></Description>
			<Value>1</Value>
		</RealNum>
	</Parameters>
</ParamSection>

</Symbol>

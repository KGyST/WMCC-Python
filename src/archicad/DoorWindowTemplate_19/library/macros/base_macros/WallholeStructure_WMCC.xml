<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="no" IsPlaceable="no" MainGUID="48A25EE9-28AE-4831-855A-0BBAA289A392" MigrationValue="Normal" Owner="1196638531" Signature="1465080141" Version="34">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="no">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>6ACDA889-69B2-4EC5-936C-CB1DA7032A92</MainGUID>
	<MainGUID>F6AE9687-2BC7-4D47-88C9-8F793E1DE2D6</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[


! ==============================================================================
! Interactive Schedule and Listing related display options
! ==============================================================================

if GLOB_CONTEXT = 6 then
	bDrawMasonryArch	= 0
	bDrawFaschen		= 0
endif


!! ==============================================================================
!! Visualize Reveal Points
!! ==============================================================================
!
!rotx -90
!if WIDO_REVEAL_SIDE then
!	addy -WIDO_FRAME_THICKNESS
!else
!	muly -1
!endif
!
!pen 1
!for i=1 to vardim1(leftWallholeRevealPnts)
!	add leftWallholeRevealPnts[i][1], leftWallholeRevealPnts[i][2], 0
!	RR = i*0.005
!	circle  RR
!	lin_ -RR,-RR,0, RR, RR,0
!	lin_ -RR, RR,0, RR,-RR,0
!	del 1
!next i
!
!pen 20
!for i=1 to vardim1(rightWallholeRevealPnts)
!	add rightWallholeRevealPnts[i][1], rightWallholeRevealPnts[i][2], 0
!	RR = i*0.005
!	circle  RR
!	lin_ -RR,-RR,0, RR, RR,0
!	lin_ -RR, RR,0, RR,-RR,0
!	del 1
!next i
!
!del top


! =============================================================================
! Cut the Wallhole
! =============================================================================

addy -offsY + elevationOffset

call "WallholeCut_WMCC" parameters gs_macro_version = 12,
	B								= openingHeight,
	AC_Sill_To_Curr_Story			= AC_Sill_To_Curr_Story,
	AC_Hole_Hotspot_Control			= AC_Hole_Hotspot_Control,
	AC_HoleSideMaterial				= AC_HoleSideMaterial,
	AC_HoleMaterialCurved			= AC_HoleMaterialCurved,
! --- Function Control Parameters
	bEnableParapetInset				= bEnableParapetInset,
	bCut3DWallhole					= bCut3DWallhole,
	bDWSymbolAtMiddle				= bDWSymbolAtMiddle,
	lod3D_MountingFrame				= lod3D_MountingFrame,
! --- Wallhole Geometry
	bParalellInCurvedWalls			= bParalellInCurvedWalls,
	refWidth						= refWidth,
	leftWidth						= leftWidth,
	rightWidth						= rightWidth,
	radSill							= radSill,
	radBoard						= radBoard,
	WOD								= WOD,
	elevationOffset					= elevationOffset,
	bBoardElevUsa					= bBoardElevUsa,
! --- Wallhole Parameters
	ac_wallhole_width				= ac_wallhole_width,
	ac_wallhole_height				= ac_wallhole_height,
	ac_wallhole_height_original		= ac_wallhole_height_original,
	ac_reveal_height				= ac_reveal_height,
	gs_reveal_hotspots				= gs_reveal_hotspots,
	overSizeLower					= overSizeLower,
! --- Reveal Parameters
	iRevealType						= iRevealType,
	iSillRevealType					= iSillRevealType,
	iBoardRevealType				= iBoardRevealType,
	leftRevealPnts					= leftWallholeRevealPnts,
	rightRevealPnts					= rightWallholeRevealPnts,
	iRevealPointsIdx				= iRevealPointsIdx,
	revealInnerLeft					= revealInnerLeft,
	revealInnerRight				= revealInnerRight,
	gs_reveal_left					= gs_reveal_left,
	gs_reveal_right					= gs_reveal_right,
	gs_reveal_top					= gs_reveal_top,
	gs_reveal_bottom				= gs_reveal_bottom,
	original_gs_reveal_bottom		= original_gs_reveal_bottom,
	bShowRevealSE					= bShowRevealSE,
	gs_reveal_splayed_innerTop		= gs_reveal_splayed_innerTop,
	gs_reveal_splayed_innerBottom	= gs_reveal_splayed_innerBottom,
	gs_reveal_double_innerLeft		= gs_reveal_double_innerLeft,
	gs_reveal_double_innerRight		= gs_reveal_double_innerRight,
	gs_reveal_double_innerTop		= gs_reveal_double_innerTop,
	gs_reveal_double_innerBottom	= gs_reveal_double_innerBottom,
	gs_reveal_left_sL				= gs_reveal_left_sL,
	gs_reveal_right_sR				= gs_reveal_right_sR,
	gs_reveal_bottom_sL				= gs_reveal_bottom_sL,
	gs_reveal_bottom_sR				= gs_reveal_bottom_sR,
	gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
	gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
	gs_reveal_double_innerBottom_sL	= gs_reveal_double_innerBottom_sL,
	gs_reveal_double_innerBottom_sR	= gs_reveal_double_innerBottom_sR,
	gs_reveal_left_angle			= gs_reveal_left_angle,
	gs_reveal_right_angle			= gs_reveal_right_angle,
	gs_reveal_top_angle				= gs_reveal_top_angle,
	gs_reveal_bottom_angle			= gs_reveal_bottom_angle,
	gs_reveal_outer_jamb_depth		= gs_reveal_outer_jamb_depth,
	gs_reveal_outerLeft_angle		= gs_reveal_outerLeft_angle,
	gs_reveal_outerRight_angle		= gs_reveal_outerRight_angle,
	gs_reveal_outerTop_angle		= gs_reveal_outerTop_angle,
	gs_reveal_outerBottom_angle		= gs_reveal_outerBottom_angle,
	gs_mountingFrame				= gs_mountingFrame,
	gs_mountingFrame_depth			= gs_mountingFrame_depth,
	gs_mountingFrame_width_left		= gs_mountingFrame_width_left,
	gs_mountingFrame_width_right	= gs_mountingFrame_width_right,
	gs_mountingFrame_width_top		= gs_mountingFrame_width_top,
	gs_mountingFrame_width_bottom	= gs_mountingFrame_width_bottom,
	gs_mountingFrame_pen_view		= gs_mountingFrame_pen_view,
	gs_mountingFrame_fill			= gs_mountingFrame_fill,
	gs_mountingFrame_pen_bg			= gs_mountingFrame_pen_bg,
	gs_mountingFrame_pen_fg			= gs_mountingFrame_pen_fg,
	gs_mountingFrame_pen_cont		= gs_mountingFrame_pen_cont,
	gs_mountingFrame_mat			= gs_mountingFrame_mat,
! --- Turn Plaster
	gs_turn_plaster_show_3D			= gs_turn_plaster_show_3D,
	thkPlasterAtSillLeft			= thkPlasterAtSillLeft,
	thkPlasterAtSillRight			= thkPlasterAtSillRight,
	thkPlasterAtSillTop				= thkPlasterAtSillTop,
	thkPlasterAtSillBottom			= thkPlasterAtSillBottom,
	thkPlasterAtSillSlLeft			= thkPlasterAtSillSlLeft,
	thkPlasterAtSillSlLeftBottom	= thkPlasterAtSillSlLeftBottom,
	thkPlasterAtSillSlRight			= thkPlasterAtSillSlRight,
	thkPlasterAtSillSlRightBottom	= thkPlasterAtSillSlRightBottom,
	thkPlasterAtBoardLeft			= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight			= thkPlasterAtBoardRight,
	thkPlasterAtBoardTop			= thkPlasterAtBoardTop,
	thkPlasterAtBoardBottom			= thkPlasterAtBoardBottom,
	thkPlasterAtBoardSlLeft			= thkPlasterAtBoardSlLeft,
	thkPlasterAtBoardSlLeftBottom	= thkPlasterAtBoardSlLeftBottom,
	thkPlasterAtBoardSlRight		= thkPlasterAtBoardSlRight,
	thkPlasterAtBoardSlRightBottom	= thkPlasterAtBoardSlRightBottom,
! --- Macro Control Parameters
	isWindow						= isWindow,
	gs_IsCurved						= gs_IsCurved,
	iWindowShape					= iWindowShape,
	archHeight						= openingArchHeight,
	gs_lowerArchHeight				= gs_lowerArchHeight,
	bMirroredOpening				= bMirroredOpening,
	nArchResolution					= nArchResolution,
	smallRadiusEllips				= smallRadiusEllips,
	holeBottomOffset				= holeBottomOffset,
	holeSideOffset					= holeSideOffset,
	gs_numOfSides					= gs_numOfSides,
	gs_posTopEdge_triangle			= gs_posTopEdge_triangle,
	gs_frame_width					= gs_frame_width,
! --- Sidelight
	gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
	gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
	gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
	gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
! --- Corner Functions
	bLeftCornerFunction				= bLeftCornerFunction,
	leftCornerAngle					= leftCornerAngle,
	leftConnWallThk					= leftConnWallThk,
	bRightCornerFunction			= bRightCornerFunction,
	rightCornerAngle				= rightCornerAngle,
	rightConnWallThk				= rightConnWallThk,
	bCornerWindow					= bRightCornerFunction,
! --- Ganging
	gs_stack_left					= gs_stack_left,
	gs_stack_right					= gs_stack_right,
	gs_stack_top					= gs_stack_top,
	gs_stack_bottom					= gs_stack_bottom,
! --- Oversize
!!!	gs_left_oversize				= gs_left_oversize,
!!!	gs_right_oversize				= gs_right_oversize,
	gs_upper_oversize				= gs_upper_oversize,
	gs_lower_oversize				= gs_lower_oversize,
! --- Wall Inset
	gs_parapet_wall_inset			= gs_parapet_wall_inset,
	iParapetSize					= iParapetSize,
	gs_parapet_inset_thk			= gs_parapet_inset_thk,
	gs_parapet_width				= gs_parapet_width,
	gs_parapet_left					= gs_parapet_left,
	gs_parapet_right				= gs_parapet_right,
	gs_parapet_height				= gs_parapet_height,
	iParapetBottom					= iParapetBottom,
	gs_parapet_botelev				= gs_parapet_botelev,
	bShowAddHotspotsForIS			= bShowAddHotspotsForIS,
! --- Masonry Arch
	bCustomMatNicheTop				= (bEnableCustomMatNicheTop & bCustomMatNicheTop),
	matNicheTop						= matNicheTop

del 1


! =============================================================================
! Draw the Cavity Closure and turned skins
! =============================================================================

if	 not(gs_stack_top & gs_stack_bottom) &\
	(iClosureType = CLOSURE_VARIABLE | iClosureType = CLOSURE_DUTCH_VARIABLE) then

	bCavityCloserTop	= not(gs_stack_top)
	bCavityCloserBottom	= not(gs_stack_bottom)

	addy -offsY + elevationOffset
	call "CavityClosure_WMCC",
		parameters all	A							= ac_wallhole_width,
						B							= openingHeight,
						AC_Hole_Position_Angle		= AC_Hole_Position_Angle,
						AC_HoleSideMaterial			= AC_HoleSideMaterial,
						refWidth					= refWidth,
						leftWidth					= leftWidth,
						rightWidth					= rightWidth,
						iWindowShape				= iWindowShape,
						radSill						= radSill,
						radBoard					= radBoard,
						WOD							= WOD,
					! --- Oversize
						gs_upper_oversize			= gs_upper_oversize,
						gs_lower_oversize			= gs_lower_oversize,
					! --- Reveal Parameters
						iRevealType					= iRevealType,
						leftRevealPnts				= leftWallholeRevealPnts,
						rightRevealPnts				= rightWallholeRevealPnts,
						iRevealPointsIdx			= iRevealPointsIdx,
						gs_reveal_left				= gs_reveal_left,
						gs_reveal_right				= gs_reveal_right,
						gs_reveal_top				= gs_reveal_top,
						gs_reveal_bottom			= gs_reveal_bottom,
						gs_reveal_top_angle			= gs_reveal_top_angle,
						gs_reveal_bottom_angle		= gs_reveal_bottom_angle,
						gs_reveal_double_innerLeft	= gs_reveal_double_innerLeft,
						gs_reveal_double_innerRight	= gs_reveal_double_innerRight,
						gs_reveal_outerTop_angle	= gs_reveal_outerTop_angle,
						gs_reveal_outerBottom_angle	= gs_reveal_outerBottom_angle,
						revealInnerLeft				= revealInnerLeft,
						revealInnerRight			= revealInnerRight,
					! --- Macro Control Parameters
						bWndCurved					= gs_IsCurved,
						bParalellInCurvedWalls 		= bParalellInCurvedWalls,
						iClosureType				= iClosureType,
						bCavityCloserTop			= bCavityCloserTop,
						bCavityCloserBottom			= bCavityCloserBottom,
						bCornerWindow				= bRightCornerFunction,
						bLeftCornerFunction			= bLeftCornerFunction,
						gs_left_oversize			= gs_left_oversize,
						gs_right_oversize			= gs_right_oversize,
					! --- Ganging
						gs_stack_top				= gs_stack_top,
						gs_stack_bottom				= gs_stack_bottom,
						gs_bAutoTurnIn				= gs_bAutoTurnIn,
						gs_bOverIn					= gs_bOverIn,
						gs_bAutoTurnOut				= gs_bAutoTurnOut,
						gs_bOverOut					= gs_bOverOut,
					! --- String Resource ---
						stCavityClosureTurnDir		= stCavityClosureTurnDir
	del 1
endif


! =============================================================================
! Masonry Arch
! =============================================================================

if bEnableMasonryArch & lod3D > 0 & bDrawMasonryArch & not(gs_stack_top) then

	addy -offsY + elevationOffset

	call "MasonryArch_WMCC" parameters gs_macro_version = 12,
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		B						= openingHeight,
		iWindowShape			= iWindowShape,
		openingArchHeight		= openingArchHeight,
		radBoard				= radBoard,
		radSill					= radSill,
		WOD						= WOD,
		nArchResolution			= nArchResolution,
	! --- Masonry Arch
		bMasonryArch					= bMasonryArch,
		gs_masonry_arch_int				= gs_masonry_arch_int,
		gs_masonry_arch_structure		= gs_masonry_arch_structure,
		gs_masonry_arch_structure_int	= gs_masonry_arch_structure_int,
		gs_masonry_arch_ovhg_left		= gs_masonry_arch_ovhg_left,
		gs_masonry_arch_ovhg_right		= gs_masonry_arch_ovhg_right,
		gs_masonry_arch_rise			= gs_masonry_arch_rise,
		gs_masonry_arch_skewback_angle	= gs_masonry_arch_skewback_angle,
		gs_masonry_arch_proj			= gs_masonry_arch_proj,
		gs_masonry_arch_height			= gs_masonry_arch_height,
		gs_masonry_arch_depth			= gs_masonry_arch_depth,
		gs_masonry_arch_rearHoleDepth	= gs_masonry_arch_rearHoleDepth,
		gs_masonry_arch_brick_thk		= gs_masonry_arch_brick_thk,
		gs_masonry_arch_mort_thk		= gs_masonry_arch_mort_thk,
		gs_masonry_arch_keystone_width	= gs_masonry_arch_keystone_width,
		gs_masonry_arch_keystone_osize	= gs_masonry_arch_keystone_osize,
		gs_masonry_arch_keystone_proj	= gs_masonry_arch_keystone_proj,
		gs_masonry_arch_fill			= gs_masonry_arch_fill,
		gs_masonry_arch_pen_fg			= gs_masonry_arch_pen_fg,
		gs_masonry_arch_pen_bg			= gs_masonry_arch_pen_bg,
		gs_masonry_arch_pen				= gs_masonry_arch_pen,
		gs_masonry_arch_brick_mat		= gs_masonry_arch_brick_mat,
		gs_masonry_arch_mort_mat		= gs_masonry_arch_mort_mat,
		gs_masonry_arch_keystone_mat	= gs_masonry_arch_keystone_mat,
		bCustomMatNicheTop				= bCustomMatNicheTop,
		matNicheTop						= matNicheTop,
	! --- Reveal Parameters
		iRevealType				= iRevealType,
		leftWallholeRevealPnts	= leftWallholeRevealPnts,
		rightWallholeRevealPnts	= rightWallholeRevealPnts,
		iRevealPointsIdx		= iRevealPointsIdx,
		gs_reveal_outerLeft_angle		= gs_reveal_outerLeft_angle,
		gs_reveal_outerRight_angle		= gs_reveal_outerRight_angle,
		gs_reveal_outerTop_angle		= gs_reveal_outerTop_angle,
		gs_reveal_outerBottom_angle		= gs_reveal_outerBottom_angle,
		gs_reveal_outer_jamb_depth		= gs_reveal_outer_jamb_depth,
		gs_reveal_left					= gs_reveal_left,
		gs_reveal_right					= gs_reveal_right,
		gs_reveal_top					= gs_reveal_top,
		gs_turn_plaster_show_3D			= gs_turn_plaster_show_3D,
		thkPlasterAtSillLeft			= thkPlasterAtSillLeft,
		thkPlasterAtSillRight			= thkPlasterAtSillRight,
		thkPlasterAtSillTop				= thkPlasterAtSillTop,
		thkPlasterAtSillBottom			= thkPlasterAtSillBottom,
	! --- Corner Window Parameters - by addon
		ac_corner_window		= ac_corner_window,
		ac_cw_function			= ac_cw_function,
		ac_corner_angle			= ac_corner_angle,
		ac_diff_con_wall_thk	= ac_diff_con_wall_thk,
		ac_con_wall_thk			= ac_con_wall_thk,
	! --- Corner Functions - by custom corner
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		leftConnWallThk			= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
		rightConnWallThk		= rightConnWallThk,
!		bCornerWindow			= rightCornerFunction,
	! --- Oversize
		gs_upper_oversize		= gs_upper_oversize,
	! --- Distance between Arch and Window ---
		gs_AutomaticArchHeight	= gs_AutomaticArchHeight,
		gs_MasonryArch_height	= gs_MasonryArch_height,
		gs_NicheBelowArch		= gs_NicheBelowArch,
	! --- Connections ---
		gs_stack_top			= gs_stack_top,
		gs_stack_left			= gs_stack_left,
		gs_stack_right			= gs_stack_right,
	! --- String Resource ---
		stMasonryArchTypes		= stMasonryArchTypes,
		stMasonryArchStructure	= stMasonryArchStructure
	del 1
endif


! =============================================================================
! Ornamental Window Moldings
! =============================================================================

if lod3D > 0 & bEnableFaschen & bDrawFaschen then

	sillSlantAngle	= (iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED) * gs_reveal_outerBottom_angle
	sillSlantOffset	= (WIDO_SILL - gs_mountingFrame * gs_mountingFrame_depth) * tan(sillSlantAngle)

	addy -offsY + elevationOffset

	call "Faschen_WMCC" parameters gs_macro_version = 12,
		A 						= A,
		B						= openingHeight,
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		gs_faschen_type			= gs_faschen_type,
		gs_faschen_left			= gs_faschen_left,
		gs_faschen_right		= gs_faschen_right,
		gs_faschen_top			= gs_faschen_top,
		gs_faschen_bottom		= gs_faschen_bottom,
		iFaschenTyp				= iFaschenTyp,
		gs_faschen_A			= gs_faschen_A,
		gs_faschen_C			= gs_faschen_C,
		gs_faschen_B			= gs_faschen_B,
		gs_faschen_R			= gs_faschen_R,
		gs_faschen_R_height		= gs_faschen_R_height,
		gs_faschen_L			= gs_faschen_L,
		gs_faschen_L_height		= gs_faschen_L_height,
		gs_faschen_t			= gs_faschen_t,
		gs_faschen_width		= gs_faschen_width,
		gs_faschen_brick_thk	= gs_faschen_brick_thk,
		gs_faschen_mort_thk		= gs_faschen_mort_thk,
		gs_faschen_fill			= gs_faschen_fill,
		gs_faschen_fg			= gs_faschen_fg,
		gs_faschen_bg			= gs_faschen_bg,
		gs_faschen_pen			= gs_faschen_pen,
		gs_faschen_plaster_mat	= gs_faschen_plaster_mat,
		gs_faschen_brick_mat	= gs_faschen_brick_mat,
		gs_faschen_mort_mat		= gs_faschen_mort_mat,
		sillSlantAngle			= sillSlantAngle,
		sillSlantOffset			= sillSlantOffset,
	! --- Corner Functions
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		leftConnWallThk			= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
		rightConnWallThk		= rightConnWallThk,
		bCornerWindow			= bRightCornerFunction,
	! --- Oversize
		gs_left_oversize		= gs_left_oversize,
		gs_right_oversize		= gs_right_oversize,
		gs_upper_oversize		= gs_upper_oversize,
		gs_lower_oversize		= gs_lower_oversize,
		overSizeLeft 			= overSizeLeft,
		overSizeRight			= overSizeRight,
		overSizeUpper			= overSizeUpper,
		overSizeLower			= overSizeLower,
	! --- Reveal
		iRevealType				= iRevealType,
		leftWallholeRevealPnts	= leftWallholeRevealPnts,
		rightWallholeRevealPnts	= rightWallholeRevealPnts,
		iRevealPointsIdx		= iRevealPointsIdx,
		gs_reveal_left			= gs_reveal_left,
		gs_reveal_right			= gs_reveal_right,
		gs_reveal_top			= gs_reveal_top,
		gs_reveal_bottom		= gs_reveal_bottom,
	! --- Ganging
		gs_stack_left			= gs_stack_left,
		gs_stack_right			= gs_stack_right,
		gs_stack_top			= gs_stack_top,
		gs_stack_bottom			= gs_stack_bottom
	del 1
endif







]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[


! ==============================================================================
! Interactive Schedule and Listing related display options
! ==============================================================================

if GLOB_CONTEXT = 6 then
	bDrawMasonryArch	= 0
	bDrawFaschen		= 0
endif

!! ==============================================================================
!! Visualize Framing Contour Lines
!! ==============================================================================
!
!del top
!if WIDO_REVEAL_SIDE then
!	add2 0,-WIDO_FRAME_THICKNESS
!else
!	mul2 1,-1
!endif
!
!LINE_BEG_X		= 1
!LINE_BEG_Y		= 2
!LINE_END_X		= 3
!LINE_END_Y		= 4
!LINE_ATTRIBUTES	= 5	! bitfield, look at LINE_ATTRIBUTES_xxx for available values
!LINE_PEN_IDX	= 6
!LINE_LTYPE_IDX	= 7
!
!LINE_ATTRIBUTES_GDLLINE		= 0			! Draw GDL Line in the section
!LINE_ATTRIBUTES_WALLLINE	= 1			! Draw WallLine in the section
!LINE_ATTRIBUTES_WALLSIDE	= 2			! The section is on the wall side (it is an arc in curved wall)
!LINE_ATTRIBUTES_DRAWCC		= 3			! The section is drawn by CavityClosure macro (otherwise the WallHoleCut macro)
!LINE_ATTRIBUTES_CONTOUR		= 4			! The section is contour or inner line
!!!!LINE_ATTRIBUTES_WALLEDGE	= 0			! The section is on the wall edge (always a line)
!
!for i=1 to vardim1(lineSections)
!	RR  = i * 0.001
!
!	iBitField = round_int(lineSections[i][LINE_ATTRIBUTES])
!	bGDLLine	= (bittest(iBitField, LINE_ATTRIBUTES_GDLLINE))
!	bWallLine	= (bittest(iBitField, LINE_ATTRIBUTES_WALLLINE))
!
!	if bGDLLine & not(bWallLine) then
!		pen 1	! GDL lines only
!	endif
!
!	if not(bGDLLine) & bWallLine then
!		pen 20	! Walllines only
!	endif
!
!	if bGDLLine & bWallLine then
!		pen 16	! Walllines and GDL lines
!	endif
!
!	add2 lineSections[i][LINE_BEG_X], lineSections[i][LINE_BEG_Y]
!	circle2 0,0, RR
!	line2 -RR,-RR, RR, RR
!	line2 -RR, RR, RR,-RR
!	del 1
!
!	add2 lineSections[i][LINE_END_X], lineSections[i][LINE_END_Y]
!	circle2 0,0, RR
!	line2 -RR,-RR, RR, RR
!	line2 -RR, RR, RR,-RR
!	del 1
!next i
!
!del top


! ==============================================================================
!
! ------------------------------------------------------------------------------
! Input parameters:
!	iWallContourLine		Identifies the wall cotours to be drawn
!								(integer; 1 = none, 2 = inside, 3 = outside, 4 = both sides)
!	gs_wcont_line_in:		Type of the wall contour line inside. (line type)
!	gs_wcont_line_out:		Type of the wall contour line outside. (line type)
!	gs_wcont_hidden_line_in:	Type of the hidden wall contour line inside. (line type)
!	gs_wcont_hidden_line_out:	Type of the hidden wall contour line outside. (line type)
!	gs_wcont_line_pen:		Pen of the wall contour lines (pen)
! ==============================================================================


! ==============================================================================
! Partial Stucture Display related calculations
! ==============================================================================

offsetSill	= 0
offsetBoard	= 0
!!!bRevealInDisplayedStructure = 1
!!!bOneFillAtRevealSide		= 1

if GLOB_STRUCTURE_DISPLAY <> STRUCTURE_ENTIRE_STRUCTURE then

	bCompositeWall = (WALL_SKINS_NUMBER > 0)

	if bCompositeWall then

		offsetInside		= 0
		offsetOutside		= 0

		for i = 1 to WALL_SKINS_NUMBER

			bShowSkin = (GLOB_STRUCTURE_DISPLAY = STRUCTURE_WITHOUT_FINISHES & abs(WALL_SKINS_PARAMS[i][SKIN_FINISH_STATUS] - 1) > EPS) | \
						(GLOB_STRUCTURE_DISPLAY = STRUCTURE_CORE_ONLY & WALL_SKINS_PARAMS[i][SKIN_CORE_STATUS] > EPS)

			if not(bShowSkin) then
				offsetInside = offsetInside + WALL_SKINS_PARAMS[i][SKIN_THICKNESS]
			else
				i = WALL_SKINS_NUMBER	! Break loop
			endif
		next i

		for i = WALL_SKINS_NUMBER to 1 step -1

			bShowSkin = (GLOB_STRUCTURE_DISPLAY = STRUCTURE_WITHOUT_FINISHES & abs(WALL_SKINS_PARAMS[i][SKIN_FINISH_STATUS] - 1) > EPS) | \
						(GLOB_STRUCTURE_DISPLAY = STRUCTURE_CORE_ONLY & WALL_SKINS_PARAMS[i][SKIN_CORE_STATUS] > EPS)

			if not(bShowSkin) then
				offsetOutside = offsetOutside + WALL_SKINS_PARAMS[i][SKIN_THICKNESS]
			else
				i = 1	! Break loop
			endif
		next i

		if wallIsLeft then
			offsetSill	= offsetInside
			offsetBoard	= offsetOutside
		else
			offsetSill	= offsetOutside
			offsetBoard	= offsetInside
		endif

!!!		bRevealInDisplayedStructure	= (WIDO_REVEAL_ON & (offsetSill < WIDO_SILL) & (offsetBoard < WALL_THICKNESS - WIDO_SILL))
!!!		bOneFillAtRevealSide		= (WIDO_REVEAL_ON & (offsetSill < WIDO_SILL))
	endif
endif


gs_wallhole_fill	= gs_bFills * gs_wallhole_fill
if bTShapedOpening then
	gs_wallhole_fill_sl	= gs_bFills * gs_wallhole_fill_sl
endif


! =============================================================================
! Wallhole Cut
! =============================================================================

	call "WallholeCut_WMCC" parameters gs_macro_version = 12,
		AC_Hole_Hotspot_Control			= AC_Hole_Hotspot_Control,
		AC_Hole_Display_Option			= AC_Hole_Display_Option,
		AC_WallType						= AC_WallType,
		AC_WindowInWallContour			= AC_WindowInWallContour,
		AC_WallContourPolygon			= AC_WallContourPolygon,
		AC_Wall_Direction_Type			= AC_Wall_Direction_Type,
	! --- Demolition/New Symbol
		iTypeDemolitionFill				= iTypeDemolitionFill,
		gs_new_symb_fill				= gs_new_symb_fill,
		gs_new_symb_pen_Fg				= gs_new_symb_pen_Fg,
		gs_new_symb_pen_bg				= gs_new_symb_pen_bg,
		gs_new_symb_width_r				= gs_new_symb_width_r,
		gs_new_symb_width_l				= gs_new_symb_width_l,
		gs_bShowNewOnCC					= gs_bShowNewOnCC,
	! --- Function Control Parameters
		bEnableParapetInset				= bEnableParapetInset,
		lod2D_MountingFrame				= lod2D_MountingFrame,
		bEnableWallContourHiddenLine	= bEnableWallContourHiddenLine,
	! --- Wallhole Geometry
		iWindowShape					= iWindowShape,
		bParalellInCurvedWalls			= bParalellInCurvedWalls,
		refWidth						= refWidth,
		leftWidth						= leftWidth,
		rightWidth						= rightWidth,
		radSill							= radSill,
		radBoard						= radBoard,
		WOD								= WOD,
		offsetSill						= offsetSill,
		offsetBoard						= offsetBoard,
		lineSections					= lineSections,
	! --- Reveal Parameters
		iRevealType						= iRevealType,
		leftRevealPnts					= leftWallholeRevealPnts,
		rightRevealPnts					= rightWallholeRevealPnts,
		iRevealPointsIdx				= iRevealPointsIdx,
		gs_reveal_splayed_innerLeft		= gs_reveal_splayed_innerLeft,
		gs_reveal_splayed_innerRight	= gs_reveal_splayed_innerRight,
		gs_reveal_double_innerLeft		= gs_reveal_double_innerLeft,
		gs_reveal_double_innerRight		= gs_reveal_double_innerRight,
		revealInnerLeft					= revealInnerLeft,
		revealInnerRight				= revealInnerRight,
		gs_reveal_left_angle			= gs_reveal_left_angle,
		gs_reveal_right_angle			= gs_reveal_right_angle,
		gs_reveal_top_angle				= gs_reveal_top_angle,
		gs_reveal_bottom_angle			= gs_reveal_bottom_angle,
		gs_reveal_splayed_innerTop		= gs_reveal_splayed_innerTop,
		gs_reveal_splayed_innerBottom	= gs_reveal_splayed_innerBottom,
		gs_reveal_left_sL				= gs_reveal_left_sL,
		gs_reveal_right_sR				= gs_reveal_right_sR,
		gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
		gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
		gs_mountingFrame				= gs_mountingFrame,
		gs_mountingFrame_depth			= gs_mountingFrame_depth,
		gs_mountingFrame_width_left		= gs_mountingFrame_width_left,
		gs_mountingFrame_width_right	= gs_mountingFrame_width_right,
		gs_mountingFrame_pen_view		= gs_mountingFrame_pen_view,
		gs_mountingFrame_fill			= gs_mountingFrame_fill,
		gs_mountingFrame_pen_bg			= gs_mountingFrame_pen_bg,
		gs_mountingFrame_pen_fg			= gs_mountingFrame_pen_fg,
		gs_mountingFrame_pen_cont		= gs_mountingFrame_pen_cont,
		bMountingFrame_DrawInsideLine	= (not(isWindow) | isEmptyOpening),
	! --- Turn Plaster
		gs_turn_plaster_dim_2D			= gs_turn_plaster_dim_2D,
		thkPlasterAtSillLeft			= thkPlasterAtSillLeft,
		thkPlasterAtSillRight			= thkPlasterAtSillRight,
		thkPlasterAtSillSlLeft			= thkPlasterAtSillSlLeft,
		thkPlasterAtSillSlRight			= thkPlasterAtSillSlRight,
		thkPlasterAtBoardLeft			= thkPlasterAtBoardLeft,
		thkPlasterAtBoardRight			= thkPlasterAtBoardRight,
		thkPlasterAtBoardSlLeft			= thkPlasterAtBoardSlLeft,
		thkPlasterAtBoardSlRight		= thkPlasterAtBoardSlRight,
	! --- Macro Control Parameters
		isWindow						= isWindow,
		gs_IsCurved						= gs_IsCurved,
		bDrawSillFill					= bDrawSillFill,
		bDrawBoardFill					= bDrawBoardFill,
		bWallContHiddenLineIn			= bWallContHiddenLineIn,
		bWallContHiddenLineOut			= bWallContHiddenLineOut,
		bWallContHiddenLineInLeftSl		= bWallContHiddenLineInLeftSl,
		bWallContHiddenLineOutLeftSl	= bWallContHiddenLineOutLeftSl,
		bWallContHiddenLineInRightSl	= bWallContHiddenLineInRightSl,
		bWallContHiddenLineOutRightSl	= bWallContHiddenLineOutRightSl,
		wallContourLineOffsetLeftIn		= wallContourLineOffsetLeftIn,
		wallContourLineOffsetRightIn	= wallContourLineOffsetRightIn,
		wallContourLineOffsetLeftOut	= wallContourLineOffsetLeftOut,
		wallContourLineOffsetRightOut	= wallContourLineOffsetRightOut,
	! --- Corner Functions
		bLeftCornerFunction				= bLeftCornerFunction,
		leftCornerAngle					= leftCornerAngle,
		leftConnWallThk					= leftConnWallThk,
		bRightCornerFunction			= bRightCornerFunction,
		rightCornerAngle				= rightCornerAngle,
		rightConnWallThk				= rightConnWallThk,
	! --- Window Sizes
		gs_wallhole_hotspots			= gs_wallhole_hotspots,
		gs_reveal_hotspots				= gs_reveal_hotspots,
	! --- Ganging
		gs_stack_left					= gs_stack_left,
		gs_stack_right					= gs_stack_right,
		gs_stack_top					= gs_stack_top,
		gs_stack_bottom					= gs_stack_bottom,
	! --- Oversize
		gs_left_oversize				= gs_left_oversize,
		gs_right_oversize				= gs_right_oversize,
		gs_upper_oversize				= gs_upper_oversize,
		gs_lower_oversize				= gs_lower_oversize,
	! --- Wall Inset
		gs_parapet_wall_inset			= gs_parapet_wall_inset,
		iParapetSize					= iParapetSize,
		gs_parapet_inset_thk			= gs_parapet_inset_thk,
		gs_parapet_width				= gs_parapet_width,
		gs_parapet_left					= gs_parapet_left,
		gs_parapet_right				= gs_parapet_right,
		gs_parapet_height				= gs_parapet_height,
		gs_parapet_2D					= gs_parapet_2D,
		gs_parapet_line					= gs_parapet_line,
	! --- Wallhole Fill
		gs_wallhole_fill				= gs_wallhole_fill,
		gs_wallhole_pen_fg				= gs_wallhole_pen_fg,
		gs_wallhole_pen_bg				= gs_wallhole_pen_bg,
		gs_wallhole_fill_sl				= gs_wallhole_fill_sl,
		gs_wallhole_pen_sl_fg			= gs_wallhole_pen_sl_fg,
		gs_wallhole_pen_sl_bg			= gs_wallhole_pen_sl_bg,
	! --- Sidelight
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Wall Contour Line
		iWallContourLine				= iWallContourLine,
		gs_wcont_line					= gs_wcont_line,
		gs_wcont_line_in				= gs_wcont_line_in,
		gs_wcont_line_out				= gs_wcont_line_out,
		gs_wcont_hidden_line_in			= gs_wcont_hidden_line_in,
		gs_wcont_hidden_line_out		= gs_wcont_hidden_line_out,
		gs_wcont_line_pen				= gs_wcont_line_pen,
		iWallContourLineSl				= iWallContourLineSL,
		gs_wcont_line_sl_in				= gs_wcont_line_sl_in,
		gs_wcont_line_sl_out			= gs_wcont_line_sl_out,
		gs_wcont_hidden_line_sl_in		= gs_wcont_hidden_line_sl_in,
		gs_wcont_hidden_line_sl_out		= gs_wcont_hidden_line_sl_out,
	! --- Head/Threshold symbol
		gs_head_symbol					= gs_head_symbol,
		gs_head_symbol_line				= gs_head_symbol_line,
		gs_head_symbol_pen				= gs_head_symbol_pen,
	! --- Display as Transom
		gs_transom_display				= gs_transom_display,
		gs_transom_display_linetype		= gs_transom_display_linetype,
		gs_transom_display_pen			= gs_transom_display_pen



! =============================================================================
! Draw the Turned Plasters
! =============================================================================

bCavityCloserLeft	= (not(gs_stack_left)  & ((iCavityClosureSide = CAVITY_SIDE_BOTH | iCavityClosureSide = CAVITY_SIDE_LEFT) |\
						iClosureType = CLOSURE_CUSTOM |\
						iClosureType = CLOSURE_PLASTER_REVEAL |\
						iClosureType = CLOSURE_INSULATED_REVEAL |\
						iClosureType = CLOSURE_INSULATED_FOR_RENOVATION))
bCavityCloserRight	= (not(gs_stack_right) & ((iCavityClosureSide = CAVITY_SIDE_BOTH | iCavityClosureSide = CAVITY_SIDE_RIGHT) |\
						iClosureType = CLOSURE_CUSTOM |\
						iClosureType = CLOSURE_PLASTER_REVEAL |\
						iClosureType = CLOSURE_INSULATED_REVEAL |\
						iClosureType = CLOSURE_INSULATED_FOR_RENOVATION))

bDrawObjContourOut	= bDrawOutsideTrim
bDrawObjContourIn	= bDrawInsideTrim

bDrawFrameContourLeft	= (gs_left_oversize < EPS)
bDrawFrameContourRight	= (gs_right_oversize < EPS)

if gs_bShowNewOnCC & (iTypeDemolitionFill = RENOVATION_FILL_NEW) then
	nSkinTurnOut	= 0
	nSkinTurnIn		= 0
endif

if not(gs_stack_left & gs_stack_right) then

	call "TurnPlaster_WMCC",
		parameters all	refWidth				= refWidth,
						leftWidth				= leftWidth,
						rightWidth				= rightWidth,
						radSill					= radSill,
						radBoard				= radBoard,
						WOD						= WOD,
						offsetSill				= offsetSill,
						offsetBoard				= offsetBoard,
					! --- Reveal Parameters
						iRevealType				= iRevealType,
						leftRevealPnts			= leftWallholeRevealPnts,
						rightRevealPnts			= rightWallholeRevealPnts,
						iRevealPointsIdx		= iRevealPointsIdx,
						bAddPoint				= bAddPoint,
						gs_reveal_left			= gs_reveal_left,
						gs_reveal_right			= gs_reveal_right,
						gs_reveal_left_angle	= gs_reveal_left_angle,
						gs_reveal_right_angle	= gs_reveal_right_angle,
					! --- Turned Plaster Skins
						possibleSkinTurnIn		= possibleSkinTurnIn,
						possibleSkinTurnOut		= possibleSkinTurnOut,
						maxSkinTurnIn			= maxSkinTurnIn,
						maxSkinTurnOut			= maxSkinTurnOut,
						nSkinTurnOut			= nSkinTurnOut,
						nSkinTurnIn				= nSkinTurnIn,
					! --- Macro Control Parameters
						bWndCurved				= gs_IsCurved,
						bParalellInCurvedWalls  = bParalellInCurvedWalls,
						bDrawObjContourIn		= bDrawObjContourIn,
						bDrawObjContourOut		= bDrawObjContourOut,
						bDrawFrameContourLeft	= bDrawFrameContourLeft,
						bDrawFrameContourRight	= bDrawFrameContourRight,
						bCornerWindow			= bRightCornerFunction,
						bLeftCornerFunction		= bLeftCornerFunction,
						bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
						bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
						bEnablePlasterRightIn	= bEnablePlasterRightIn,
						bEnablePlasterRightOut	= bEnablePlasterRightOut,
					! --- Ganging
						gs_stack_left			= gs_stack_left,
						gs_stack_right			= gs_stack_right,
						gs_bAutoTurnIn			= gs_bAutoTurnIn,
						gs_bOverIn				= gs_bOverIn,
						gs_bAutoTurnOut			= gs_bAutoTurnOut,
						gs_bOverOut				= gs_bOverOut
endif


! =============================================================================
! Draw the Cavity Closure and turned skins
! =============================================================================

drawindex 50	! Draw Cavity Closure at the top

if gs_bShowNewOnCC & (iTypeDemolitionFill = RENOVATION_FILL_NEW) then
	bCavityCloserLeft	= 0
	bCavityCloserRight	= 0
endif

call "CavityClosure_WMCC",
	parameters all	refWidth					= refWidth,
					leftWidth					= leftWidth,
					rightWidth					= rightWidth,
					radSill						= radSill,
					radBoard					= radBoard,
					WOD							= WOD,
					offsetSill					= offsetSill,
					offsetBoard					= offsetBoard,
					lineSections				= lineSections,
				! --- Reveal Parameters
					iRevealType					= iRevealType,
					leftRevealPnts				= leftWallholeRevealPnts,
					rightRevealPnts				= rightWallholeRevealPnts,
					iRevealPointsIdx			= iRevealPointsIdx,
					gs_reveal_left				= gs_reveal_left,
					gs_reveal_right				= gs_reveal_right,
					gs_reveal_double_innerLeft	= gs_reveal_double_innerLeft,
					gs_reveal_double_innerRight	= gs_reveal_double_innerRight,
					revealInnerLeft				= revealInnerLeft,
					revealInnerRight			= revealInnerRight,
					gs_reveal_outer_jamb_depth	= gs_reveal_outer_jamb_depth,
					gs_reveal_left_angle		= gs_reveal_left_angle,
					gs_reveal_right_angle		= gs_reveal_right_angle,
					gs_reveal_outerLeft_angle	= gs_reveal_outerLeft_angle,
					gs_reveal_outerRight_angle	= gs_reveal_outerRight_angle,
					gs_mountingFrame			= gs_mountingFrame,
					gs_mountingFrame_depth		= gs_mountingFrame_depth,
				! --- Macro Control Parameters
					bWndCurved					= gs_IsCurved,
					bParalellInCurvedWalls 		= bParalellInCurvedWalls,
					iClosureType				= iClosureType,
					bCavityCloserLeft			= bCavityCloserLeft,
					bCavityCloserRight			= bCavityCloserRight,
					bDrawObjContourIn			= bDrawObjContourIn,
					bDrawObjContourOut			= bDrawObjContourOut,
					bDrawFrameContourLeft		= bDrawFrameContourLeft,
					bDrawFrameContourRight		= bDrawFrameContourRight,
					bCornerWindow				= bRightCornerFunction,
					bLeftCornerFunction			= bLeftCornerFunction,
					fillWallHole				= gs_wallhole_fill,
					penWallHoleFg				= gs_wallhole_pen_fg,
					penWallHoleBg				= gs_wallhole_pen_bg,
					iWallContourLine			= iWallContourLine,
					gs_wcont_line_in			= gs_wcont_line_in,
					gs_wcont_line_out			= gs_wcont_line_out,
					penWallContour				= gs_wcont_line_pen,
					gs_left_oversize			= gs_left_oversize,
					gs_right_oversize			= gs_right_oversize,
				! --- Ganging
					gs_stack_left				= gs_stack_left,
					gs_stack_right				= gs_stack_right,
					gs_bAutoTurnIn				= gs_bAutoTurnIn,
					gs_bOverIn					= gs_bOverIn,
					gs_bAutoTurnOut				= gs_bAutoTurnOut,
					gs_bOverOut					= gs_bOverOut,
				! --- String Resource ---
					stCavityClosureTurnDir		= stCavityClosureTurnDir


]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

! const values for parameter: iCustomCCEditWallSide
EDITED_WALL_FACE_OUTSIDE = 1
EDITED_WALL_FACE_INSIDE  = 2


! const values for parameter: iCustomCCEditJambSide
EDITED_JAMB_SIDE_BOTH  = 1
EDITED_JAMB_SIDE_LEFT  = 2
EDITED_JAMB_SIDE_RIGHT = 3


! const values for parameter: iCustomCCThicknessType
THICKNESS_TYPE_ORIGINAL = 1
THICKNESS_TYPE_CUSTOM   = 2


! const values for parameter: iCustomCCEditSkin
EDITED_SKIN_1 = 1
EDITED_SKIN_2 = 2
EDITED_SKIN_3 = 3
EDITED_SKIN_4 = 4


! const values for parameter: iCustomCCOrientation
ORIENTATION_ORIGINAL  = 1
ORIENTATION_TURNED_IN = 2

! const values for parameter: iBrickSilldetlevel
BRICKSILL_SIMPLE   = 1
BRICKSILL_DETAILED = 2

! gs_masonry_arch_int
MASONRY_ARCH					= 2
MASONRY_JACK_ARCH				= 3
MASONRY_JACK_ARCH_KEYSTONE		= 4
MASONRY_SEGMENT_ARCH			= 5
MASONRY_SEGMENT_ARCH_KEYSTONE	= 6
MASONRY_BULLSEYE_ARCH			= 7

! =============================================================================
! Contact person: <NJ>

EPS = 0.0001

! iRevealType:
REVEAL_EDGE				= 0
REVEAL_NO				= 1
REVEAL_POSITIVE			= 2
REVEAL_NEGATIVE			= 3
REVEAL_SLANTED			= 4
REVEAL_SPLAYED			= 5
REVEAL_HISTORIC			= 6
REVEAL_DOUBLE			= 7
REVEAL_DOUBLE_SPLAYED	= 8
REVEAL_OUTSIDE_SPLAYED	= 9

! gs_reveal_type_bottom_int
REVEAL_BOTTOM_UNIFORM	= 1
REVEAL_BOTTOM_NO		= 2
REVEAL_BOTTOM_POSITIVE	= 3
REVEAL_BOTTOM_NEGATIVE	= 4

! iWindowShape:
SHAPE_RECTANGULAR			= 0
SHAPE_ARCHED				= 1
SHAPE_ROUND					= 2
SHAPE_EYEBROWS				= 3
SHAPE_HALFCIRCLE			= 4 	! straight side is horizontal
SHAPE_MULTISIDE				= 5
SHAPE_OCTAGONAL				= 6
SHAPE_HALFARCH				= 7
SHAPE_PENTAGON				= 8
SHAPE_QUARTERROUND			= 9
SHAPE_HALFROUND				= 10 	! straight side is vertical
SHAPE_TRAPEZOID				= 11
SHAPE_TRIANGLE				= 12
SHAPE_GOTHICARCH			= 13
SHAPE_ELLIPSEARCH			= 14
SHAPE_ROMBUS				= 15
SHAPE_HORSESHOE				= 16
SHAPE_OGEECENTERED			= 17
SHAPE_SARACENIC				= 18
SHAPE_T						= 19
SHAPE_HALF_T_LEFT			= 20
SHAPE_ARCHED_T				= 21
SHAPE_ARCHED_HALF_T_LEFT	= 22
SHAPE_PARALLELOGRAM			= 23
SHAPE_ELLIPSE				= 24
SHAPE_CORNER_TRIANGLE		= 25
SHAPE_QUARTERROUND_NOFRAME	= 26
SHAPE_HALF_T_RIGHT			= 27
SHAPE_ARCHED_HALF_T_RIGHT	= 28

! iClosureType:
CLOSURE_NO					= 0
CLOSURE_TRADITIONAL			= 1
CLOSURE_PREFABRICATED		= 2
CLOSURE_CUSTOM				= 3
CLOSURE_SOLID_WALL			= 4
CLOSURE_STUD_WALL			= 5
CLOSURE_STUD_WALL_SIDING	= 6
CLOSURE_BRICK_VENEER		= 7
CLOSURE_VARIABLE			= 8
CLOSURE_PLASTER_REVEAL	 			= 9		! same as CLOSURE_CUSTOM
CLOSURE_INSULATED_REVEAL			= 10	! same as CLOSURE_CUSTOM
CLOSURE_INSULATED_FOR_RENOVATION	= 11	! same as CLOSURE_CUSTOM
CLOSURE_FINISH						= 12	! same as CLOSURE_TRADITIONAL
CLOSURE_AIR_SPACE					= 13	! same as CLOSURE_PREFABRICATED
CLOSURE_DUTCH_VARIABLE				= 14

CLOSURE_CUSTOM_PRESETS				= 9		! Common enable bit for the preset Custom Closure types
											!	CLOSURE_PLASTER_REVEAL
											!	CLOSURE_INSULATED_REVEAL
											!	CLOSURE_INSULATED_FOR_RENOVATION
CLOSURE_TRADITIONAL_PRESETS			= 10	! Common enable bit for the preset Traditional Closure types
											!	CLOSURE_FINISH
CLOSURE_PREFABRICATED_PRESETS		= 11	! Common enable bit for the preset Traditional Closure types
											!	CLOSURE_AIR_SPACE



! Partial Stucture Display defines:
STRUCTURE_ENTIRE_STRUCTURE	= 0
STRUCTURE_CORE_ONLY			= 1
STRUCTURE_WITHOUT_FINISHES	= 2

! Turn Skin on Side - iCavityClosureSide
CAVITY_SIDE_BOTH	= 1
CAVITY_SIDE_LEFT	= 2
CAVITY_SIDE_RIGHT	= 3
CAVITY_SIDE_NONE	= 4

! Wall Contour Line - iWallContourLine, iWallContourLineSl
WALL_CONTOUR_OFF		= 1
WALL_CONTOUR_INSIDE		= 2
WALL_CONTOUR_OUTSIDE	= 3
WALL_CONTOUR_BOTHSIDES	= 4

SKIN_THICKNESS			=  2
SKIN_CORE_STATUS		=  6
SKIN_FINISH_STATUS		= 15

! ac_revealAnchorPos:
REVEAL_TO_WALL_FACE	= 1
REVEAL_TO_WALL_CORE	= 2

! iTypeDemolitionFill
RENOVATION_FILL_EXIST		= 1
RENOVATION_FILL_DEMOLISHED	= 2
RENOVATION_FILL_NEW			= 3
RENOVATION_FILL_NEW_FULL	= 4

! =============================================================================

bInclinedWall	= (abs(WALL_INCL) > EPS)
curvedWall		= (abs(WIDO_ORIG_DIST) > EPS)
wallIsLeft		= (SYMB_ROTANGLE > EPS) exor WIDO_REVEAL_SIDE

bTShapedOpening =  (iWindowShape = SHAPE_T |\
					iWindowShape = SHAPE_HALF_T_LEFT |\
					iWindowShape = SHAPE_HALF_T_RIGHT |\
					iWindowShape = SHAPE_ARCHED_T |\
					iWindowShape = SHAPE_ARCHED_HALF_T_LEFT |\
					iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT)


! =============================================================================
! Polygon Wall Related Calculations
! =============================================================================

if AC_WallType = 2 then
	id1 = AC_WindowInWallContour[1]
	id2 = AC_WindowInWallContour[2]
	id3 = AC_WindowInWallContour[3]
	id4 = AC_WindowInWallContour[4]

	if id1 > 0 & id2 > 0 & id3 > 0 & id4 > 0 & abs(id1 - id2) = 1 & abs(id3 - id4) = 1 then
		if	abs(AC_WallContourPolygon[id1][2] - AC_WallContourPolygon[id2][2]) < EPS & \
			abs(AC_WallContourPolygon[id2][3]) < EPS & \
			abs(AC_WallContourPolygon[id3][2] - AC_WallContourPolygon[id4][2]) < EPS & \
			abs(AC_WallContourPolygon[id4][3]) < EPS then
			AC_WallType = 1		! Switch back to a simple case
		endif
	endif
endif


! =============================================================================
! Definitions
! =============================================================================

bDrawMasonryArch	= (bMasonryArch)
bDrawFaschen		= (gs_faschen_left | gs_faschen_right | gs_faschen_top | gs_faschen_bottom)


! ==============================================================================
! Custom Masonry Arch Niche Surface
! ==============================================================================

bEnableCustomMatNicheTop		= 0
if bDrawMasonryArch & bEnableMasonryArch & gs_RevealTypeEnable > 1 & gs_masonry_arch_int <> 7 then
	if gs_masonry_arch_int = 2 | gs_masonry_arch_int = 3 | gs_masonry_arch_int = 4 then
		if not(gs_AutomaticArchHeight) & gs_MasonryArch_height > eps & gs_NicheBelowArch then
			bEnableCustomMatNicheTop	= 1
		endif
	else
		if gs_NicheBelowArch then
			bEnableCustomMatNicheTop	= 1
		endif
	endif
endif


! ==============================================================================
! Calculations for Trapezoid Walls
! ==============================================================================

if bInclinedWall then
	bInclDir = SYMB_MIRRORED exor (SYMB_ROTANGLE > EPS)	! (0 / 1)
	iInclDir = not(bInclDir) - bInclDir					! (1 / -1)

	incH = cos(WALL_INCL)
	incV = sin(WALL_INCL) * iInclDir

	incHor = tan(WALL_INCL)
endif


! =============================================================================
! Wallhole Geometry
! =============================================================================

bCornerWindow	= (ac_cw_function & ac_corner_window)

openingHeight	= ac_wallhole_height + overSizeLower + overSizeUpper - includeBoxHeight
offsY			= overSizeLower


! =============================================================================
! Wall Contour Line
! =============================================================================

if not(bTShapedOpening) then
	iWallContourLineSl = WALL_CONTOUR_OFF
endif


! =============================================================================
! Force uniform bottom reveal by shape types
! =============================================================================

if bForceUniformBottomReveal then
	_bForceUniformBottomReveal	= bForceUniformBottomReveal
else
	_bForceUniformBottomReveal	=  (iWindowShape = SHAPE_ROUND |\
									iWindowShape = SHAPE_MULTISIDE |\
									iWindowShape = SHAPE_OCTAGONAL |\
									iWindowShape = SHAPE_ROMBUS |\
									iWindowShape = SHAPE_ELLIPSE |\
									iWindowShape = SHAPE_HALFROUND)
endif

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

! =============================================================================
! Tabpage Structure Definition
! =============================================================================

! call all available page fix IDs

if bTabFlatList then
	if isWindow then
		if isSunshadeObjectDA then
			call "ui_tabIDlist_m_WMCC" parameters iObjectUIGroupType = 201, 	! SUNSHADE_DA_UI
								returned_parameters iUiID_Root,
													iUiID_NominalSizes,
													iUiID_Reveal,
													iUiID_Closure,
													iUiID_Shutter,
													iUiID_FloorPlanSection,
													iUiID_Descriptions
		endif
	endif
else
	call "ui_tabIDlistHierarchy_m_WMCC" parameters bWallOpeningTabIDsOnly = 1,
				returned_parameters iUiID_Root,
									iUiID_WallOpening,	iParID_WallOpening,
									iUiID_Reveal,		iParID_Reveal,
									iUiID_Closure,		iParID_Closure,
									iUiID_WallInset,	iParID_WallInset,
									iUiID_Faschen,		iParID_Faschen,
									iUiID_MasonryArch,	iParID_MasonryArch,
									iUiID_Tolerances,	iParID_Tolerances,
									iUiID_WallOpModelAttr,	iParID_WallOpModelAttr
							
endif


! =============================================================================
! Display actual tabpages
! =============================================================================
bClosurePage = 0
bWallInsetPage = 0
bRevealSettingsPage = 0

tabIDlistRoot = -1

for iTabs = 1 to vardim1(uiUsedPageIDs)
	if uiUsedPageIDs[iTabs][1]= iUiID_Reveal then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_Reveal then
			bRevealSettingsPage = 1
			gosub "pageRevealSettings"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_Closure then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_Closure then
			bClosurePage = 1
			gosub "pageWallClosure"
		endif
	endif
	if bEnableMasonryArch then
		if uiUsedPageIDs[iTabs][1]= iUiID_MasonryArch then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_MasonryArch then
				gosub "pageCallMasonryArch"
			endif
		endif
	endif
	if bEnableFaschen then
		if uiUsedPageIDs[iTabs][1]= iUiID_Faschen then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_Faschen then
				gosub "pageCallFaschen"
			endif
		endif
	endif
	if isWindow and bEnableParapetInset then
		if uiUsedPageIDs[iTabs][1]= iUiID_WallInset then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_WallInset then
				bWallInsetPage = 1
				gosub "pageWallInset"
			endif
		endif
	endif
	if not(bTabFlatList) then
		if uiUsedPageIDs[iTabs][1]= iUiID_WallOpModelAttr then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_WallOpModelAttr then
				gosub "pageWallOpModAttributes"
			endif
		endif
	endif
next iTabs

! =============================================================================
end
! =============================================================================


! --------------------------------------------------------------------------------
! Masonry Arch
! --------------------------------------------------------------------------------
"pageCallMasonryArch":
		call "MasonryArch_WMCC" parameters gs_macro_version = 12,
			iWindowShape					= iWindowShape,
			bMasonryArch					= bMasonryArch,
			gs_masonry_arch_int				= gs_masonry_arch_int,
			gs_masonry_arch_structure		= gs_masonry_arch_structure,
			gs_masonry_arch_structure_int	= gs_masonry_arch_structure_int,
			gs_stack_top					= gs_stack_top,
			gs_ui_sub_tabpage				= gs_ui_sub_tabpage,
		! --- Distance between Arch and Window ---
			gs_AutomaticArchHeight			= gs_AutomaticArchHeight,
			gs_NicheBelowArch				= gs_NicheBelowArch,
			gs_MasonryArch_height			= gs_MasonryArch_height,
			gs_masonry_arch_rise			= gs_masonry_arch_rise,
			bEnableCustomMatNicheTop		= bEnableCustomMatNicheTop,
		! --- String Resource ---
			stMasonryArchTypes				= stMasonryArchTypes,
			stMasonryArchStructure			= stMasonryArchStructure,
			stMasonryArchUI					= stMasonryArchUI,
			stSubTabpageToolTip				= stSubTabpageToolTip

return


! --------------------------------------------------------------------------------
! Ornamental Window Moldings (Faschen)
! --------------------------------------------------------------------------------
"pageCallFaschen":
	call "Faschen_WMCC",
		parameters all stFasschenUI	= stFasschenUI,
		gs_faschen_type	= gs_faschen_type,
		iRevealType		= iRevealType
return


! --------------------------------------------------------------------------------
! Wall Inset
! --------------------------------------------------------------------------------
"pageWallInset":
	call "WallholeCut_WMCC" parameters all A = A,
			bRevealSettingsPage		= 0,
			bWallInsetPage			= bWallInsetPage
return


! --------------------------------------------------------------------------------
! Reveal
! --------------------------------------------------------------------------------
"pageRevealSettings":

	pageStartY = 0 + 32

	y = pageStartY
	numIcons = 0

	for i=1 to vardim1(stRevealTypes)
		if bittest(gs_RevealTypeEnable, i - 1) then numIcons = numIcons + 1
	next i

	if numIcons > 1 then
		px = 40
		py = 23

		if numIcons < 9 then
			ui_style 0,1
			ui_outfield stRevealUI[1], 	2, 10 + pageStartY, 115, 20	! Reveal Type
			x = 120
		else
			x = 222 - (numIcons * px)/2
		endif
		ui_style 0,0

		ui_infield{3} "gs_reveal_type_int", x, y, numIcons * px, 30,
			4, 76, 10, 1,
			0, 0, px, py,
			1, "",	1,
			2, "",	2,
			3, "",	3,
			4, "",	4,
			5, "",	5,
			6, "",	6,
			7, "",	7,
			9, "",	9,
			10, "",	10,
			8, "",	8

		ui_separator 0, 34 + pageStartY, 444, 34 + pageStartY
	endif

	call "WallholeCut_WMCC" parameters gs_macro_version = 12,
		iWindowShape				= iWindowShape,
		AC_WallType					= AC_WallType,
		ac_wall_crosssection_type	= ac_wall_crosssection_type,
		bEnableParapetInset			= bEnableParapetInset,
		bEnableMountingFrameForReveal	= bEnableMountingFrameForReveal,
		iRevealType					= iRevealType,
		iSillRevealType				= iSillRevealType,
		iBoardRevealType			= iBoardRevealType,
		bForceUniformBottomReveal	= _bForceUniformBottomReveal,
		gs_reveal_type_bottom_int	= gs_reveal_type_bottom_int,
		gs_reveal_uniform			= gs_reveal_uniform,
		gs_reveal_set_side			= gs_reveal_set_side,
		gs_reveal_left				= gs_reveal_left,
		gs_reveal_right				= gs_reveal_right,
		gs_reveal_top				= gs_reveal_top,
		gs_reveal_left_sL			= gs_reveal_left_sL,
		gs_reveal_right_sR			= gs_reveal_right_sR,
		gs_reveal_bottom_sL			= gs_reveal_bottom_sL,
		gs_reveal_bottom_sR			= gs_reveal_bottom_sR,
		gs_reveal_double_innerLeft		= gs_reveal_double_innerLeft,
		gs_reveal_double_innerRight		= gs_reveal_double_innerRight,
		gs_reveal_double_innerTop		= gs_reveal_double_innerTop,
		gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
		gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
		gs_reveal_double_innerBottom_sL	= gs_reveal_double_innerBottom_sL,
		gs_reveal_double_innerBottom_sR	= gs_reveal_double_innerBottom_sR,
		gs_reveal_splayed_innerLeft = gs_reveal_splayed_innerLeft,
		gs_reveal_splayed_innerRight= gs_reveal_splayed_innerRight,
		gs_reveal_splayed_innerTop	= gs_reveal_splayed_innerTop,
		gs_reveal_right_angle		= gs_reveal_left_angle,
		gs_reveal_left_angle		= gs_reveal_right_angle,
		gs_reveal_top_angle			= gs_reveal_top_angle,
		gs_reveal_angle_edit_by_int = gs_reveal_angle_edit_by_int,
		gs_mountingFrame			= gs_mountingFrame,
		gs_closure_auto_changed		= gs_closure_auto_changed,
		isWindow					= isWindow,
		isEmptyOpening				= isEmptyOpening,
		bRevealSettingsPage			= bRevealSettingsPage,
		bWallInsetPage				= 0,
		gs_ui_sub_tabpage			= gs_ui_sub_tabpage,
		pageStartY					= pageStartY,
		iParapetSize				= iParapetSize,
	! --- String Resource ---
		stRevealTypes				= stRevealTypes,
		stRevealTypesBottom			= stRevealTypesBottom,
		stWallholeCutUI				= stWallholeCutUI,
		stRevealUI					= stRevealUI,
		stSetRevealSide				= stSetRevealSide,
		stParapetSize				= stParapetSize,
		stParapetBottom				= stParapetBottom,
		stRevealClusureUITips		= stRevealClusureUITips,
		iClosureType				= iClosureType
return



! --------------------------------------------------------------------------------
! Wall Closure
! --------------------------------------------------------------------------------
"pageWallClosure":

	pageStartY = 0 + 29

	y = pageStartY

	numIcons = 0

	for i=1 to vardim1(stClosureTypes)
		if bittest(gs_ClosureTypeEnable, i - 1) then numIcons = numIcons + 1
	next i

	px = 40
	py = 23

	ui_style 0, 1
	ui_outfield stClosureType, 0, 8 + pageStartY, 130, 16
	ui_style 0,0

	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		pictIdx = 78	! ui_closure_selection_2
	else
		pictIdx = 77	! ui_closure_selection
	endif

	ui_infield{3}	"gs_closure_type_int", 226, 4 + pageStartY, 200, 20,
		8, "", 15, 1,
		0, 0, 0, 0,
		 1, stClosureTypes[ 1], CLOSURE_NO + 1,
		 2, stClosureTypes[ 2], CLOSURE_TRADITIONAL + 1,
		 3, stClosureTypes[ 3], CLOSURE_PREFABRICATED + 1,
		 9, stClosureTypes[ 9], CLOSURE_VARIABLE + 1,
		15, stClosureTypes[15], CLOSURE_DUTCH_VARIABLE + 1,
		 5, stClosureTypes[ 5], CLOSURE_SOLID_WALL + 1,
		 6, stClosureTypes[ 6], CLOSURE_STUD_WALL + 1,
		 7, stClosureTypes[ 7], CLOSURE_STUD_WALL_SIDING + 1,
		 8, stClosureTypes[ 8], CLOSURE_BRICK_VENEER + 1,
		10, stClosureTypes[10], CLOSURE_PLASTER_REVEAL + 1,
		11, stClosureTypes[11], CLOSURE_INSULATED_REVEAL + 1,
		12, stClosureTypes[12], CLOSURE_INSULATED_FOR_RENOVATION + 1,
		13, stClosureTypes[13], CLOSURE_FINISH + 1,
		14, stClosureTypes[14], CLOSURE_AIR_SPACE + 1,
		 4, stClosureTypes[ 4], CLOSURE_CUSTOM + 1

	if gs_reveal_auto_changed_by_cc then
		! ui_warningsign.png: The reveal settings were changed.
		ui_pict 79, 430, 8 + pageStartY, 12,12, 1 ui_tooltip stCavityClosureUI[38]
	endif

	ui_separator 0, 28 + pageStartY, 444, 28 + pageStartY

	if iClosureType = CLOSURE_SOLID_WALL then
		ui_style 0, 1
!		ui_outfield stClosureTypes[gs_closure_type_int], 0, 40 + pageStartY, 120, 16
	endif

	if	iClosureType = CLOSURE_STUD_WALL | \
		iClosureType = CLOSURE_STUD_WALL_SIDING | \
		iClosureType = CLOSURE_BRICK_VENEER then

		ui_style 0, 1
!		ui_outfield stClosureTypes[gs_closure_type_int], 0, 40 + pageStartY, 120, 16

		if iClosureType = CLOSURE_BRICK_VENEER then
			call "Brick Veneer_WMCC" parameters A = A,
				bEnableParapetInset			= bEnableParapetInset,
				bClosurePage				= bClosurePage,
			! --- String Resource ---
				gs_fsill					= gs_fsill,
				bOutsideTrim				= bDrawOutsideTrim,
				bInsideTrim					= bDrawInsideTrim,
				bSill						= bDrawSill,
				bBoard						= bDrawBoard,
				iBrickVeneerRevealDepth		= iBrickVeneerRevealDepth,
				stBrickVeneerRevealDepth	= stBrickVeneerRevealDepth,
				gs_brick_sill				= gs_brick_sill,
				gs_brick_sill_detlev_m		= gs_brick_sill_detlev_m,
				iBrickSilldetlevel			= iBrickSilldetlevel,
				stBrickVeneerTextUSA		= stBrickVeneerTextUSA,
				gs_metal					= gs_metal,
				isWindow					= isWindow,
				gs_IsCurved					= gs_IsCurved,
				bBrickSillUI				= bBrickSillUI
		endif
	else

		if  iClosureType = CLOSURE_TRADITIONAL | \
			(iClosureType = CLOSURE_VARIABLE & gs_ui_sub_tabpage_closure = 1) | \
			(iClosureType = CLOSURE_DUTCH_VARIABLE & gs_ui_sub_tabpage_closure = 1) | \
			iClosureType = CLOSURE_PREFABRICATED |\
			iClosureType = CLOSURE_FINISH |\
			iClosureType = CLOSURE_AIR_SPACE then

!!			! TODO C-165 delete
!!			if bTabFlatList then
!!				if gs_ui_sub_tabpage < 1 then gs_ui_sub_tabpage = 1
!!				if gs_ui_sub_tabpage > 2 then gs_ui_sub_tabpage = 2
!!	
!!				ui_infield{3} "gs_ui_sub_tabpage", 380, 266 - 25 - 2, 64,25,
!!					4, "uiTabsub_1", 2, 1,
!!					0,0, 28,21,
!!					1, "",	1,
!!					2, "",	2 ui_tooltip stSubTabpageToolTip
!!			endif
		else
			gs_ui_sub_tabpage = 1
		endif

		pageStartY	= 19

		call "CavityClosure_WMCC" parameters gs_macro_version = 12,
			iWindowShape				= iWindowShape,
		! --- Ganging
			gs_stack_left				= gs_stack_left,
			gs_stack_right				= gs_stack_right,
			gs_stack_top				= gs_stack_top,
			gs_stack_bottom				= gs_stack_bottom,
		! --- Corner Window
			bLeftCornerFunction			= bLeftCornerFunction,
			bRightCornerFunction		= bRightCornerFunction,
		! --- Cavity Closure ---
			gs_closure_type				= gs_closure_type,
			gs_ui_sub_tabpage			= gs_ui_sub_tabpage,
			gs_ui_sub_tabpage_closure	= gs_ui_sub_tabpage_closure,
			pageStartY					= pageStartY,
			gs_ClosureTypeEnable		= gs_ClosureTypeEnable,
			iCavityClosureSide			= iCavityClosureSide,
			iRevealType					= iRevealType,
			gs_mountingFrame			= gs_mountingFrame,
			isWindow					= isWindow,
			iClosureType				= iClosureType,
			gs_nTurn					= gs_nTurn,
			gs_bJoint					= gs_bJoint,
			gs_reveal_type				= gs_reveal_type,
			gs_reveal_double_innerType	= gs_reveal_double_innerType,
			iCavityClosureTurnDir		= iCavityClosureTurnDir,
		! --- Variable Closure (Spouwlat) ---
			gs_cc_dutch_ShowLeft			= gs_cc_dutch_ShowLeft,
			gs_cc_dutch_ShowRight			= gs_cc_dutch_ShowRight,
			gs_cc_dutch_ShowTop				= gs_cc_dutch_ShowTop,
			gs_cc_dutch_ShowBottom			= gs_cc_dutch_ShowBottom,
			gs_cc_dutch_GapAtOutsideSkin	= gs_cc_dutch_GapAtOutsideSkin,
			gs_cc_dutch_ClosureToSkin		= gs_cc_dutch_ClosureToSkin,
			gs_cc_dutch_ClosureToSide		= gs_cc_dutch_ClosureToSide,
			gs_cc_dutch_TurnToClosure		= gs_cc_dutch_TurnToClosure,
			gs_cc_dutch_matJointCustom		= gs_cc_dutch_matJointCustom,
		! --- Custom Cavity Closure ---
			gs_custom_cc_turn_in		= gs_custom_cc_turn_in,
			iCustomCCThicknessType = iCustomCCThicknessType,
			gs_custom_cc_separator		= gs_custom_cc_separator,
			gs_custom_cc_plaster		= gs_custom_cc_plaster,
			gs_turn_plaster_show_3D		= gs_turn_plaster_show_3D,
	! --- String Resource ---
			stCavityClosureSide				= stCavityClosureSide,
			stCavityClosureTurnDir			= stCavityClosureTurnDir,
			stDutchClosureToSide			= stDutchClosureToSide,
			stCavityClosureUI				= stCavityClosureUI,
			stClosureTypes					= stClosureTypes,
			stCavityClosureEditedJambSide	= stCavityClosureEditedJambSide,
			stCavityClosureEditedWallSide	= stCavityClosureEditedWallSide,
			stCavityClosureEditedSkinNumber	= stCavityClosureEditedSkinNumber,
			stCavityClosureTurnInThickness	= stCavityClosureTurnInThickness,
			stCavityClosureHatchOrientation	= stCavityClosureHatchOrientation,
			stRevealClusureUITips			= stRevealClusureUITips,
			iCustomCCEditSkin				= iCustomCCEditSkin
	endif

	if gs_ui_sub_tabpage = 1 then
		if (iClosureType = CLOSURE_NO | \
			iClosureType = CLOSURE_TRADITIONAL | \
			iClosureType = CLOSURE_PREFABRICATED | \
			iClosureType = CLOSURE_SOLID_WALL | \
			iClosureType = CLOSURE_STUD_WALL | \
			iClosureType = CLOSURE_STUD_WALL_SIDING) | \
		   (iClosureType = CLOSURE_BRICK_VENEER & not(isWindow)) | \
		   (iClosureType = CLOSURE_VARIABLE & gs_ui_sub_tabpage_closure = 2) |\
		   (iClosureType = CLOSURE_DUTCH_VARIABLE & gs_ui_sub_tabpage_closure = 2) |\
			iClosureType = CLOSURE_FINISH |\
			iClosureType = CLOSURE_AIR_SPACE then

			stTitlePrefix = ""
			if iClosureType = CLOSURE_VARIABLE then
				stTitlePrefix = stClosureTypes[9] + " - "
			endif
			if iClosureType = CLOSURE_DUTCH_VARIABLE then
				stTitlePrefix = stClosureTypes[15] + " - "
			endif

			call "TurnPlaster_WMCC" parameters gs_macro_version = 12,
				bEnablePlasterLeftIn		= bEnablePlasterLeftIn,
				bEnablePlasterLeftOut		= bEnablePlasterLeftOut,
				bEnablePlasterRightIn		= bEnablePlasterRightIn,
				bEnablePlasterRightOut		= bEnablePlasterRightOut,
				gs_useWallFinishSkin		= gs_useWallFinishSkin,
				bStandaloneOnPage			= (iClosureType = CLOSURE_VARIABLE | iClosureType = CLOSURE_DUTCH_VARIABLE),
		! --- String Resource ---
				stCavityClosureUI			= stCavityClosureUI,
				stTitlePrefix				= stTitlePrefix,
				pageStartY					= pageStartY,
				gs_turn_plaster_dim_2D		= gs_turn_plaster_dim_2D
		endif
	endif

	if (iClosureType = CLOSURE_VARIABLE | iClosureType = CLOSURE_DUTCH_VARIABLE) & gs_ui_sub_tabpage = 1 then


		x1 = 227 - 44 * (iClosureType = CLOSURE_DUTCH_VARIABLE)
		if gs_ui_sub_tabpage_closure = 1 then
			ui_button ui_function, ">>", 410, 225 + pageStartY - 5, 33, 22, 1111 ! Set GLOB_UI_BUTTON_ID

			ui_style 0,1
			ui_outfield stWallholeStructureUI[1], x1, 213 + pageStartY, 180, 16		! Plaster Skin Definition
			ui_style 0,0
			ui_outfield stWallholeStructureUI[2], x1, 231 + pageStartY, 180, 16		! Go to Plaster Skin Settings...
		else
			ui_button ui_function, "<<", 410, 225 + pageStartY - 5, 33, 22, 1112 ! Set GLOB_UI_BUTTON_ID

			ui_style 0,1
			ui_outfield stWallholeStructureUI[3], x1, 213 + pageStartY, 180, 16		! Wall Closure Settings
			ui_style 0,0
			ui_outfield stWallholeStructureUI[4], x1, 231 + pageStartY, 180, 16		! Go Back to Closure Settings...

			ui_separator 0, 208 + pageStartY, 444, 208 + pageStartY
		endif
	endif
return


! --------------------------------------------------------------------------------
! Wall Opening Model Attributes
! --------------------------------------------------------------------------------
"pageWallOpModAttributes":

	itemID = 1
	ui_listfield iUiID_WallOpModelAttr, 0, 34, 444, 265 - 34

	ui_listitem itemID, iUiID_WallOpModelAttr, "AC_HoleMaterialCurved",			0, "", ""	: itemID = itemID + 1

	if isWindow & bSillUSA & bBrickSillUI then
		ui_listitem itemID, iUiID_WallOpModelAttr, "",									0,	"",							`Brick Sill`	: itemID = itemID + 1
		if iClosureType = CLOSURE_BRICK_VENEER & gs_brick_sill then
			ui_listitem itemID, iUiID_WallOpModelAttr, "gs_sill_pen_3D", 				1,	"ui_list_contourPen_flat_WMCC",	stSillUI[29]	: itemID = itemID + 1
			ui_listitem itemID, iUiID_WallOpModelAttr, "gs_sill_mat",					1,	"ui_list_surface_flat_WMCC", 		stSillUI[12]	: itemID = itemID + 1	! Brick Sill
			if iBrickSilldetlevel = BRICKSILL_DETAILED then
				ui_listitem itemID, iUiID_WallOpModelAttr, "gs_brick_sill_mort_mat",	1,	"ui_list_surface_flat_WMCC", 		stSillUI[13]	: itemID = itemID + 1	! Brick Sill Mortar
			endif
		endif
	endif


	itemID = 10
	ui_listitem itemID, iUiID_WallOpModelAttr, "",									0,	"",						`Masonry Arch`			: itemID = itemID + 1
	if bMasonryArch then
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_masonry_arch_brick_mat",		1,	"ui_list_surface_flat_WMCC",	`Brick Surface`			: itemID = itemID + 1
		if gs_masonry_arch_structure_int = 2 then									! Brick Arch
			ui_listitem itemID, iUiID_WallOpModelAttr, "gs_masonry_arch_mort_mat",	1,	"ui_list_surface_flat_WMCC",	`Mortar Surface`
		endif
		itemID = itemID + 1
		if	gs_masonry_arch_int = MASONRY_JACK_ARCH |\								! Masonry Jack Arch
			gs_masonry_arch_int = MASONRY_JACK_ARCH_KEYSTONE |\						! Masonry Jack Arch with Keystone
			gs_masonry_arch_int = MASONRY_SEGMENT_ARCH_KEYSTONE then				! Masonry Segmented Arch with Keystone
	
			ui_listitem itemID, iUiID_WallOpModelAttr, "gs_masonry_arch_keystone_mat",	1,	"ui_list_surface_flat_WMCC",	`Keystone Surface`
		endif
		itemID = itemID + 1
		if not(isCurtainWallOpeningSWE) then
			ui_listitem itemID, iUiID_WallOpModelAttr, "gs_masonry_arch_pen",			1,	"ui_list_pencolor_flat_WMCC",	stSillUI[42]			: itemID = itemID + 1
			ui_listitem itemID, iUiID_WallOpModelAttr, "bCustomMatNicheTop",			1,	""												: itemID = itemID + 1
			ui_listitem itemID, iUiID_WallOpModelAttr, "matNicheTop",					1,	"ui_list_surface_flat_WMCC"							: itemID = itemID + 1
		endif
	else
		itemID = itemID + 6
	endif

	if bEnableFaschen then
		ui_listitem itemID, iUiID_WallOpModelAttr, "", 0, "", `Ornamental Window Moldings`					: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_Faschen_plaster_mat",	1,	"ui_list_surface_flat_WMCC"	: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_Faschen_brick_mat",		1,	"ui_list_surface_flat_WMCC"	: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_Faschen_mort_mat",		1,	"ui_list_surface_flat_WMCC"	: itemID = itemID + 1

		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_Faschen_pen",			1,	"ui_list_contourPen_flat_WMCC",	stSillUI[42]	: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_Faschen_fill",			1,	"ui_list_fillPen_flat_WMCC"	: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_Faschen_fg",				1,	"ui_list_fillPen_flat_WMCC"	: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_Faschen_bg",				1,	"ui_list_fillBgPen_flat_WMCC"	: itemID = itemID + 1
	endif

	if bEnableMountingFrameForReveal then
		ui_listitem itemID, iUiID_WallOpModelAttr, "", 							0,	"",							`Mounting Frame`		: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_mountingFrame_pen_view", 1,	"ui_list_contourPen_flat_WMCC",	stSillUI[42]			: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_mountingFrame_mat", 		1,	"ui_list_surface_flat_WMCC",		`Surface`				: itemID = itemID + 1
	endif
return




]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[


! =============================================================================
! 3D Based 2D Symbol Support
! =============================================================================

if AC_Hole_Display_Option = 3 then
	parameters AC_WallContours = 0
else
	parameters AC_WallContours = 1
endif

if not(AC_HoleSideMaterial) then
	lock "AC_HoleMaterialCurved"
endif

! =============================================================================
! UI Support
! =============================================================================

if GLOB_UI_BUTTON_ID = 1111 then parameters gs_ui_sub_tabpage_closure = 2
if GLOB_UI_BUTTON_ID = 1112 then parameters gs_ui_sub_tabpage_closure = 1


! =============================================================================
! Wall Contour Lines
! =============================================================================

values "gs_wcont_line" stWallContourLine
values "iWallContourLine" WALL_CONTOUR_OFF, WALL_CONTOUR_INSIDE, WALL_CONTOUR_OUTSIDE, WALL_CONTOUR_BOTHSIDES

if GLOB_MODPAR_NAME = "gs_wcont_line" then
	iWallContourLine = WALL_CONTOUR_OFF
	for i = 2 to vardim1(stWallContourLine)
		if gs_wcont_line = stWallContourLine[i] then
			iWallContourLine = i
			i = vardim1(stWallContourLine)
		endif
	next i
	parameters iWallContourLine = iWallContourLine
else
	gs_wcont_line = stWallContourLine[min(max(1,iWallContourLine),vardim1(stWallContourLine))]
	parameters gs_wcont_line = gs_wcont_line
endif


if not(bForceShowWContParamsOutside) & (iWallContourLine = WALL_CONTOUR_OFF | iWallContourLine = WALL_CONTOUR_INSIDE) then
	hideparameter "gs_wcont_line_out"
	lock "gs_wcont_line_out"
	if bEnableWallContourHiddenLine then
		hideparameter "gs_wcont_hidden_line_out"
		lock "gs_wcont_hidden_line_out"
	endif
endif
if not(bForceShowWContParamsInside) & (iWallContourLine = WALL_CONTOUR_OFF | iWallContourLine = WALL_CONTOUR_OUTSIDE) then
	hideparameter "gs_wcont_line_in"
	lock "gs_wcont_line_in"
	if bEnableWallContourHiddenLine then
		hideparameter "gs_wcont_hidden_line_in"
		lock "gs_wcont_hidden_line_in"
	endif
endif

if not(bForceShowWContParamsOutside | bForceShowWContParamsInside) then
	if bTShapedOpening then
		if iWallContourLine = WALL_CONTOUR_OFF & iWallContourLineSl = WALL_CONTOUR_OFF then
			hideparameter "gs_wcont_line_pen"
			lock "gs_wcont_line_pen"
		endif
	else
		if iWallContourLine = WALL_CONTOUR_OFF then
			hideparameter "gs_wcont_line_pen"
			lock "gs_wcont_line_pen"
		endif
	endif
endif

if bTShapedOpening then
	values "gs_wcont_line_sl" stWallContourLine
	values "iWallContourLineSl" WALL_CONTOUR_OFF, WALL_CONTOUR_INSIDE, WALL_CONTOUR_OUTSIDE, WALL_CONTOUR_BOTHSIDES

	if GLOB_MODPAR_NAME = "gs_wcont_line_sl" then
		iWallContourLineSl = WALL_CONTOUR_OFF
		for i = 2 to vardim1(stWallContourLine)
			if gs_wcont_line_sl = stWallContourLine[i] then
				iWallContourLineSl = i
				i = vardim1(stWallContourLine)
			endif
		next i
		parameters iWallContourLineSl = iWallContourLineSl
	else
		gs_wcont_line_sl = stWallContourLine[min(max(1,iWallContourLineSl),vardim1(stWallContourLine))]
		parameters gs_wcont_line_sl = gs_wcont_line_sl
	endif

	if not(bForceShowWContParamsOutside) & (iWallContourLineSl = WALL_CONTOUR_OFF | iWallContourLineSl = WALL_CONTOUR_INSIDE) then
		hideparameter "gs_wcont_line_sl_out"
		lock "gs_wcont_line_sl_out"
		if bEnableWallContourHiddenLine then
			hideparameter "gs_wcont_hidden_line_sl_out"
			lock "gs_wcont_hidden_line_sl_out"
		endif
	endif
	if not(bForceShowWContParamsInside) & (iWallContourLineSl = WALL_CONTOUR_OFF | iWallContourLineSl = WALL_CONTOUR_OUTSIDE) then
		hideparameter "gs_wcont_line_sl_in"
		lock "gs_wcont_line_sl_in"
		if bEnableWallContourHiddenLine then
			hideparameter "gs_wcont_hidden_line_sl_in"
			lock "gs_wcont_hidden_line_sl_in"
		endif
	endif
	if not(bForceShowWContParamsOutside | bForceShowWContParamsInside) & iWallContourLineSl = WALL_CONTOUR_OFF then
		hideparameter "gs_wcont_line_pen_sl"
		lock "gs_wcont_line_pen_sl"
	endif
endif


! =============================================================================
! Reveal and Closure
! =============================================================================

bDisablePrefabClosure		= ((iRevealType = REVEAL_SLANTED & curvedWall)| iRevealType = REVEAL_SPLAYED | iRevealType = REVEAL_HISTORIC | iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED)
bDisableTradClosure			= (iRevealType = REVEAL_SPLAYED | iRevealType = REVEAL_HISTORIC | iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED)
bDisableTradDutchClosure	= (bDisableTradDutchClosure | iRevealType = REVEAL_SLANTED | iRevealType = REVEAL_SPLAYED | iRevealType = REVEAL_HISTORIC | iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED)
bCustomReveal				= (iRevealType = REVEAL_DOUBLE)

bDefaultElem	= (GLOB_INTGUID = "" | GLOB_INTGUID = "{00000000-0000-0000-0000-000000000000}")
bCompositeWall	= (WALL_SKINS_NUMBER > 0)
if not(bDefaultElem) then
	isCoreSkin = 0
	for i = 1 to WALL_SKINS_NUMBER
		if abs(WALL_SKINS_PARAMS[i][SKIN_CORE_STATUS] - 3) < EPS then
			isCoreSkin = 1
			i = WALL_SKINS_NUMBER
		endif
	next i
	if not(isCoreSkin) then
		bDisablePrefabClosure	= 1
		if iClosureType = CLOSURE_PREFABRICATED | iClosureType = CLOSURE_AIR_SPACE then
			gs_closure_type_int	= 1	! No Closure
			gs_closure_type		= stClosureTypes[1]	! No Closure
			parameters gs_closure_type_int = gs_closure_type_int
			parameters gs_closure_type = gs_closure_type
		endif
	endif
endif

if bittest(gs_ClosureTypeEnable, CLOSURE_NO) & not(bDefaultElem) & not(bCompositeWall) then
	gs_closure_type_int	= 1	! No Closure
	gs_closure_type		= stClosureTypes[1]	! No Closure
	parameters gs_closure_type_int = gs_closure_type_int
	parameters gs_closure_type = gs_closure_type
endif

bHaveClosureForThisReveal	= not((bDisablePrefabClosure	| bCustomReveal) & (iClosureType = CLOSURE_PREFABRICATED | iClosureType = CLOSURE_AIR_SPACE)) & \
							  not((bDisableTradDutchClosure	| bCustomReveal) & (iClosureType = CLOSURE_VARIABLE | iClosureType = CLOSURE_DUTCH_VARIABLE)) & \
							  not((bDisableTradClosure		| bCustomReveal) & (iClosureType = CLOSURE_TRADITIONAL | iClosureType = CLOSURE_FINISH))

if (GLOB_MODPAR_NAME = "gs_reveal_type_new" | GLOB_MODPAR_NAME = "gs_reveal_type_int") & not(bHaveClosureForThisReveal) then
	gs_closure_type_int	= 1	! No Closure
	gs_closure_type		= stClosureTypes[1]	! No Closure
	parameters gs_closure_type_int = gs_closure_type_int
	parameters gs_closure_type = gs_closure_type
	parameters gs_closure_auto_changed = 1
endif
if GLOB_MODPAR_NAME = "" & GLOB_UI_BUTTON_ID = 0 then
	parameters gs_closure_auto_changed = 0
endif

if bDisablePrefabClosure | bCustomReveal then
	gs_ClosureTypeEnable = bitset(gs_ClosureTypeEnable, CLOSURE_PREFABRICATED, 0)
	gs_ClosureTypeEnable = bitset(gs_ClosureTypeEnable, CLOSURE_PREFABRICATED_PRESETS, 0)
endif
if bDisableTradDutchClosure | bCustomReveal then
	gs_ClosureTypeEnable = bitset(gs_ClosureTypeEnable, CLOSURE_VARIABLE, 0)
	gs_ClosureTypeEnable = bitset(gs_ClosureTypeEnable, CLOSURE_DUTCH_VARIABLE, 0)
endif
if bDisableTradClosure | bCustomReveal then
	gs_ClosureTypeEnable = bitset(gs_ClosureTypeEnable, CLOSURE_TRADITIONAL, 0)
	gs_ClosureTypeEnable = bitset(gs_ClosureTypeEnable, CLOSURE_TRADITIONAL_PRESETS, 0)
endif

if iClosureType = CLOSURE_STUD_WALL then
	gs_RevealTypeEnable = 2^REVEAL_EDGE
	parameters gs_reveal_type_int = REVEAL_EDGE + 1
	parameters gs_reveal_type_new = stRevealTypes[REVEAL_EDGE + 1]
endif
if iClosureType = CLOSURE_STUD_WALL_SIDING | iClosureType = CLOSURE_BRICK_VENEER then
	gs_RevealTypeEnable = 2^REVEAL_NEGATIVE
	parameters gs_reveal_type_int = REVEAL_NEGATIVE + 1
	parameters gs_reveal_type_new = stRevealTypes[REVEAL_NEGATIVE + 1]
endif


! =============================================================================
! Reveal Types
! =============================================================================

dim iRevealTypeValueMask[]
dim sRevealTypeValueMask[]

j = 1
bFoundSelectedReveal = 0
for i=1 to vardim1(stRevealTypes)
	if bittest(gs_RevealTypeEnable, i - 1) then
		iRevealTypeValueMask[j] = i
		sRevealTypeValueMask[j] = stRevealTypes[i]
		j = j + 1

		if gs_reveal_type_int = i then
			bFoundSelectedReveal = 1
		endif
	endif
next i

if vardim1(iRevealTypeValueMask) > 0 then
	if not(bFoundSelectedReveal) then
		! Fallback to No Reveal
		if bittest(gs_RevealTypeEnable, 1) then
			gs_reveal_type_int = REVEAL_NO + 1
		else
			gs_reveal_type_int = REVEAL_EDGE + 1
		endif
		parameters gs_reveal_type_int = gs_reveal_type_int
	endif
	values "gs_reveal_type_int" iRevealTypeValueMask
	values "gs_reveal_type_new" sRevealTypeValueMask
endif

if GLOB_MODPAR_NAME = "gs_reveal_type_new" then
	gs_reveal_type_int = 1
	for i=2 to vardim1(stRevealTypes)
		if gs_reveal_type_new = stRevealTypes[i] then
			gs_reveal_type_int = i
			i = vardim1(stRevealTypes)
		endif
	next i
	parameters gs_reveal_type_int = gs_reveal_type_int
else
	gs_reveal_type_int = min(max(1, gs_reveal_type_int), vardim1(stRevealTypes))
	gs_reveal_type_new = stRevealTypes[gs_reveal_type_int]
	parameters	gs_reveal_type_new	= gs_reveal_type_new,
				gs_reveal_type_int	= gs_reveal_type_int
endif


! =============================================================================
! Custom/Double Reveal Types
! =============================================================================

dim iSillRevealTypeValueMask[]
dim sSillRevealTypeValueMask[]

if iRevealType = REVEAL_DOUBLE then
	j = 1
	iSillRevealTypeValueMask[j] = 2
	sSillRevealTypeValueMask[j] = stRevealTypes[2]: j = j + 1
	if bittest(gs_RevealTypeEnable, REVEAL_POSITIVE) then
		iSillRevealTypeValueMask[j]   = 3
		sSillRevealTypeValueMask[j] = stRevealTypes[3]
		j = j + 1
	endif
	if bittest(gs_RevealTypeEnable, REVEAL_NEGATIVE) then
		iSillRevealTypeValueMask[j]    = 4
		sSillRevealTypeValueMask[j] = stRevealTypes[4]
		j = j + 1
	endif
endif
if vardim1(iSillRevealTypeValueMask) > 0 then
	values "gs_reveal_doubleOuterTypeInt" iSillRevealTypeValueMask
	values "gs_reveal_type"	              sSillRevealTypeValueMask
	if vardim1(iSillRevealTypeValueMask) = 1 then
		lock "gs_reveal_type"
	endif
else
	lock "gs_reveal_type"
	hideparameter "gs_reveal_type"
endif

dim iBoardRevealTypeValueMask[]
dim sBoardRevealTypeValueMask[]
if iRevealType = REVEAL_DOUBLE then
	j = 1
	iBoardRevealTypeValueMask[j] = 2
	sBoardRevealTypeValueMask[j] = stRevealTypes[2]: j = j + 1
	if bittest(gs_RevealTypeEnable, REVEAL_POSITIVE) then
		iBoardRevealTypeValueMask[j] = 3
		sBoardRevealTypeValueMask[j] = stRevealTypes[3]
		j = j + 1
	endif
	if bittest(gs_RevealTypeEnable, REVEAL_NEGATIVE) then
		iBoardRevealTypeValueMask[j] = 4
		sBoardRevealTypeValueMask[j] = stRevealTypes[4]
		j = j + 1
	endif
endif
if vardim1(iBoardRevealTypeValueMask) > 0 then
	values "gs_reveal_doubleInnerTypeInt" iBoardRevealTypeValueMask
	values "gs_reveal_double_innerType"   sBoardRevealTypeValueMask
	if vardim1(iBoardRevealTypeValueMask) = 1 then
		lock "gs_reveal_double_innerType"
	endif
else
	lock "gs_reveal_double_innerType"
	hideparameter "gs_reveal_double_innerType"
endif

if GLOB_MODPAR_NAME = "gs_reveal_type" then
	gs_reveal_doubleOuterTypeInt = 2				! No Reveal
	if gs_reveal_type = stRevealTypes[3] then gs_reveal_doubleOuterTypeInt = 3	! "Reveal"
	if gs_reveal_type = stRevealTypes[4] then gs_reveal_doubleOuterTypeInt = 4	! "Negative Reveal"
	parameters gs_reveal_doubleOuterTypeInt = gs_reveal_doubleOuterTypeInt
else
	gs_reveal_type = stRevealTypes[min(max(2,gs_reveal_doubleOuterTypeInt),4)]
	parameters gs_reveal_type = gs_reveal_type
endif

if GLOB_MODPAR_NAME = "gs_reveal_double_innerType" then
	gs_reveal_doubleInnerTypeInt = 2				! No Reveal
	if gs_reveal_double_innerType = stRevealTypes[3] then gs_reveal_doubleInnerTypeInt = 3	! "Reveal"
	if gs_reveal_double_innerType = stRevealTypes[4] then gs_reveal_doubleInnerTypeInt = 4	! "Negative Reveal"
	parameters gs_reveal_doubleInnerTypeInt = gs_reveal_doubleInnerTypeInt
else
	gs_reveal_double_innerType = stRevealTypes[min(max(2,gs_reveal_doubleInnerTypeInt),4)]
	parameters gs_reveal_double_innerType = gs_reveal_double_innerType
endif


! =============================================================================
! Bottom Reveal Types
! =============================================================================

if iRevealType = REVEAL_NO | iRevealType = REVEAL_POSITIVE | iRevealType = REVEAL_NEGATIVE | \
	iRevealType = REVEAL_SLANTED | iRevealType = REVEAL_HISTORIC | iRevealType = REVEAL_DOUBLE then

	if _bForceUniformBottomReveal then
		values "gs_reveal_type_bottom" stRevealTypesBottom[1]
		values "gs_reveal_type_bottom_int" REVEAL_BOTTOM_UNIFORM
		parameters gs_reveal_type_bottom_int = REVEAL_BOTTOM_UNIFORM
	else
		if iRevealType = REVEAL_SLANTED | iRevealType = REVEAL_HISTORIC then
			values "gs_reveal_type_bottom" stRevealTypesBottom
			values "gs_reveal_type_bottom_int" REVEAL_BOTTOM_UNIFORM, REVEAL_BOTTOM_NO, REVEAL_BOTTOM_POSITIVE, REVEAL_BOTTOM_NEGATIVE
		else
			if (iRevealType = REVEAL_NO & gs_reveal_type_bottom_int = REVEAL_BOTTOM_NO) | \
				(iRevealType = REVEAL_POSITIVE & gs_reveal_type_bottom_int = REVEAL_BOTTOM_POSITIVE) | \
				(iRevealType = REVEAL_NEGATIVE & gs_reveal_type_bottom_int = REVEAL_BOTTOM_NEGATIVE) then
	
				gs_reveal_type_bottom_int = REVEAL_BOTTOM_UNIFORM
				gs_reveal_type_bottom = stRevealTypesBottom[1]
				parameters gs_reveal_type_bottom_int = gs_reveal_type_bottom_int, gs_reveal_type_bottom = gs_reveal_type_bottom
			endif

			if iRevealType = REVEAL_DOUBLE then
				if	(iSillRevealType = REVEAL_NO and iBoardRevealType = REVEAL_NO) then
					values "gs_reveal_type_bottom" stRevealTypesBottom[1], stRevealTypesBottom[3], stRevealTypesBottom[4]
					values "gs_reveal_type_bottom_int" REVEAL_BOTTOM_UNIFORM, REVEAL_BOTTOM_POSITIVE, REVEAL_BOTTOM_NEGATIVE
				else
					if (iSillRevealType = REVEAL_NEGATIVE and iBoardRevealType = REVEAL_NO) then
						values "gs_reveal_type_bottom" stRevealTypesBottom[1], stRevealTypesBottom[2], stRevealTypesBottom[3]
						values "gs_reveal_type_bottom_int" REVEAL_BOTTOM_UNIFORM, REVEAL_BOTTOM_NO, REVEAL_BOTTOM_POSITIVE
					else
						if (iSillRevealType = REVEAL_POSITIVE and iBoardRevealType = REVEAL_NO) then
							values "gs_reveal_type_bottom" stRevealTypesBottom[1], stRevealTypesBottom[2], stRevealTypesBottom[4]
							values "gs_reveal_type_bottom_int" REVEAL_BOTTOM_UNIFORM, REVEAL_BOTTOM_NO, REVEAL_BOTTOM_NEGATIVE
						else
							values "gs_reveal_type_bottom" stRevealTypesBottom
							values "gs_reveal_type_bottom_int" REVEAL_BOTTOM_UNIFORM, REVEAL_BOTTOM_NO, REVEAL_BOTTOM_POSITIVE, REVEAL_BOTTOM_NEGATIVE
						endif
					endif
				endif
			endif

			if iRevealType = REVEAL_NO then
				values "gs_reveal_type_bottom" stRevealTypesBottom[1], stRevealTypesBottom[3], stRevealTypesBottom[4]
				values "gs_reveal_type_bottom_int" REVEAL_BOTTOM_UNIFORM, REVEAL_BOTTOM_POSITIVE, REVEAL_BOTTOM_NEGATIVE
			else
				if iRevealType = REVEAL_POSITIVE then
					values "gs_reveal_type_bottom" stRevealTypesBottom[1], stRevealTypesBottom[2], stRevealTypesBottom[4]
					values "gs_reveal_type_bottom_int" REVEAL_BOTTOM_UNIFORM, REVEAL_BOTTOM_NO, REVEAL_BOTTOM_NEGATIVE
				else ! negative reveal
					values "gs_reveal_type_bottom" stRevealTypesBottom[1], stRevealTypesBottom[2], stRevealTypesBottom[3]
					values "gs_reveal_type_bottom_int" REVEAL_BOTTOM_UNIFORM, REVEAL_BOTTOM_NO, REVEAL_BOTTOM_POSITIVE
				endif
			endif
		endif
	endif
else
	lock "gs_reveal_type_bottom", "gs_reveal_type_bottom_int"
	hideparameter "gs_reveal_type_bottom"
endif

if GLOB_MODPAR_NAME = "gs_reveal_type_bottom" then
	gs_reveal_type_bottom_int = 1
	for i=2 to vardim1(stRevealTypesBottom)
		if gs_reveal_type_bottom = stRevealTypesBottom[i] then
			gs_reveal_type_bottom_int = i
			i = vardim1(stRevealTypesBottom)
		endif
	next i
	parameters gs_reveal_type_bottom_int = gs_reveal_type_bottom_int
else
	gs_reveal_type_bottom_int = min(max(1, gs_reveal_type_bottom_int), vardim1(stRevealTypesBottom))
	gs_reveal_type_bottom = stRevealTypesBottom[gs_reveal_type_bottom_int]
	parameters	gs_reveal_type_bottom		= gs_reveal_type_bottom,
				gs_reveal_type_bottom_int	= gs_reveal_type_bottom_int
endif


! --- Set no reveal as default on reveal type change --------------------------

if GLOB_MODPAR_NAME = "gs_reveal_type_new" | GLOB_MODPAR_NAME = "gs_reveal_type_int" then
	gs_reveal_type_bottom_int = REVEAL_BOTTOM_NO
	gs_reveal_type_bottom = stRevealTypesBottom[2]
	parameters gs_reveal_type_bottom_int = gs_reveal_type_bottom_int, gs_reveal_type_bottom = gs_reveal_type_bottom
endif


! =============================================================================
! Closure Types
! =============================================================================

dim sClosureTypeValueMask[]
dim iClosureTypeValueMask[]

j = 1
if bittest(gs_ClosureTypeEnable, CLOSURE_NO)				then: iClosureTypeValueMask[j] = CLOSURE_NO + 1:				sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_NO + 1]:					j = j + 1: endif
if bittest(gs_ClosureTypeEnable, CLOSURE_TRADITIONAL)		then: iClosureTypeValueMask[j] = CLOSURE_TRADITIONAL + 1:		sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_TRADITIONAL + 1]:			j = j + 1: endif
if bittest(gs_ClosureTypeEnable, CLOSURE_PREFABRICATED)		then: iClosureTypeValueMask[j] = CLOSURE_PREFABRICATED + 1:		sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_PREFABRICATED + 1]:		j = j + 1: endif
if bittest(gs_ClosureTypeEnable, CLOSURE_VARIABLE)			then: iClosureTypeValueMask[j] = CLOSURE_VARIABLE + 1:			sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_VARIABLE + 1]:	j = j + 1: endif
if bittest(gs_ClosureTypeEnable, CLOSURE_DUTCH_VARIABLE)	then: iClosureTypeValueMask[j] = CLOSURE_DUTCH_VARIABLE + 1:	sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_DUTCH_VARIABLE + 1]:		j = j + 1: endif
if bittest(gs_ClosureTypeEnable, CLOSURE_SOLID_WALL)		then: iClosureTypeValueMask[j] = CLOSURE_SOLID_WALL + 1:		sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_SOLID_WALL + 1]:			j = j + 1: endif
if bittest(gs_ClosureTypeEnable, CLOSURE_STUD_WALL)			then: iClosureTypeValueMask[j] = CLOSURE_STUD_WALL + 1:			sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_STUD_WALL + 1]:			j = j + 1: endif
if bittest(gs_ClosureTypeEnable, CLOSURE_STUD_WALL_SIDING)	then: iClosureTypeValueMask[j] = CLOSURE_STUD_WALL_SIDING + 1:	sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_STUD_WALL_SIDING + 1]:	j = j + 1: endif
if bittest(gs_ClosureTypeEnable, CLOSURE_BRICK_VENEER)		then: iClosureTypeValueMask[j] = CLOSURE_BRICK_VENEER + 1:		sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_BRICK_VENEER + 1]:		j = j + 1: endif
if bittest(gs_ClosureTypeEnable, CLOSURE_CUSTOM_PRESETS)	then
	iClosureTypeValueMask[j] = CLOSURE_PLASTER_REVEAL + 1
	sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_PLASTER_REVEAL + 1]
	j = j + 1
	iClosureTypeValueMask[j] = CLOSURE_INSULATED_REVEAL + 1
	sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_INSULATED_REVEAL + 1]
	j = j + 1
	iClosureTypeValueMask[j] = CLOSURE_INSULATED_FOR_RENOVATION + 1
	sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_INSULATED_FOR_RENOVATION + 1]
	j = j + 1
endif
if bittest(gs_ClosureTypeEnable, CLOSURE_TRADITIONAL_PRESETS)	then
	iClosureTypeValueMask[j] = CLOSURE_FINISH + 1
	sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_FINISH + 1]
	j = j + 1
endif
if bittest(gs_ClosureTypeEnable, CLOSURE_PREFABRICATED_PRESETS)	then
	iClosureTypeValueMask[j] = CLOSURE_AIR_SPACE + 1
	sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_AIR_SPACE + 1]
	j = j + 1
endif
if bittest(gs_ClosureTypeEnable, CLOSURE_CUSTOM)			then: iClosureTypeValueMask[j] = CLOSURE_CUSTOM + 1:			sClosureTypeValueMask[j] = stClosureTypes[CLOSURE_CUSTOM + 1]:				j = j + 1: endif

if vardim1(iClosureTypeValueMask) > 0 then
	values "gs_closure_type_int" iClosureTypeValueMask
	values "gs_closure_type"	 sClosureTypeValueMask
endif


! =============================================================================
! Sill Depth
! =============================================================================

![#COMPATIBILITY] - START
if gs_wido_sill < -9998 then
	gs_wido_sill = AC_wido_sill
	parameters gs_wido_sill = AC_wido_sill
endif
![#COMPATIBILITY] - END

if defaultSillDepth > EPS & gs_wido_sill < EPS & (GLOB_MODPAR_NAME = "gs_reveal_type_new" | GLOB_MODPAR_NAME = "gs_reveal_type_int") & gs_reveal_type_int <> 1 then	! <> No Reveal - Edge
	gs_wido_sill = defaultSillDepth
	ac_wido_sill = defaultSillDepth
	parameters	gs_wido_sill = defaultSillDepth,
				ac_wido_sill = defaultSillDepth
endif

! in old versions may be differnet namings of "AC_wido_sill" parameter
!!_convertedModParamName = strtolower(GLOB_MODPAR_NAME)
_convertedModParamName = GLOB_MODPAR_NAME
bForceChangeSillDepth = not(GLOB_MODPAR_NAME = "AC_wido_sill" | _convertedModParamName = "ac_wido_sill" | GLOB_MODPAR_NAME = "gs_wido_sill") & (abs(AC_wido_sill - gs_wido_sill) > EPS) & (ac_revealAnchorPos = REVEAL_TO_WALL_CORE)

if iRevealType = REVEAL_EDGE then

	if not(bittest(gs_RevealTypeEnable, 1)) then
		lock "AC_wido_sill"
	endif

	if ((GLOB_MODPAR_NAME = "AC_wido_sill" | _convertedModParamName = "ac_wido_sill") & abs(AC_wido_sill) > EPS) | bForceChangeSillDepth then
		gs_wido_sill		= AC_wido_sill
		gs_reveal_type_int	= REVEAL_NO + 1
		gs_reveal_type_new	= stRevealTypes[REVEAL_NO + 1]
		parameters	gs_wido_sill		= AC_wido_sill,
					gs_reveal_type_int	= REVEAL_NO + 1
					gs_reveal_type_new	= stRevealTypes[REVEAL_NO + 1]
		iRevealType = REVEAL_NO
	else
		AC_wido_sill = 0
		gs_wido_sill = 0
		parameters	AC_wido_sill = 0,
					gs_wido_sill = 0
		if gs_RevealTypeEnable = 1 then lock "AC_wido_sill"
		lock "gs_wido_sill"
		hideparameter "gs_wido_sill"
	endif
else
	if  (iRevealType = REVEAL_NO | iRevealType = REVEAL_POSITIVE | iRevealType = REVEAL_NEGATIVE) & \
		(GLOB_MODPAR_NAME = "AC_wido_sill" | _convertedModParamName = "ac_wido_sill") & \
		 abs(AC_wido_sill) < EPS then

		gs_wido_sill		= 0
		gs_reveal_type_int	= REVEAL_EDGE + 1
		gs_reveal_type_new	= stRevealTypes[REVEAL_EDGE + 1]
		parameters	gs_wido_sill		= 0,
					gs_reveal_type_int	= REVEAL_EDGE + 1
					gs_reveal_type_new	= stRevealTypes[REVEAL_EDGE + 1]
		iRevealType = REVEAL_EDGE
!		lock "gs_wido_sill", "AC_wido_sill"
!		hideparameter "gs_wido_sill"
	else
		if GLOB_MODPAR_NAME = "AC_wido_sill" | _convertedModParamName = "ac_wido_sill" | bForceChangeSillDepth then
			gs_wido_sill = AC_wido_sill
			parameters gs_wido_sill = AC_wido_sill
		else
			AC_wido_sill = gs_wido_sill
			parameters AC_wido_sill = gs_wido_sill
			if abs(gs_wido_sill) < EPS & \
				not(iRevealType = REVEAL_SLANTED | \
					iRevealType = REVEAL_SPLAYED | \
					iRevealType = REVEAL_HISTORIC | \
					(iRevealType = REVEAL_DOUBLE & iBoardRevealType <> REVEAL_NO) | \
					iRevealType = REVEAL_DOUBLE_SPLAYED) then
				gs_wido_sill		= 0
				gs_reveal_type_int	= REVEAL_EDGE + 1
				gs_reveal_type_new	= stRevealTypes[REVEAL_EDGE + 1]
				parameters	gs_wido_sill		= 0,
							gs_reveal_type_int	= REVEAL_EDGE + 1
							gs_reveal_type_new	= stRevealTypes[REVEAL_EDGE + 1]
				iRevealType = REVEAL_EDGE
			endif
		endif
	endif
endif


! =============================================================================
! Corner Window Parameters
! =============================================================================

if not(ac_cw_debug) & bCornerWindow then
	if not(ac_cw_function) then
		hideparameter "ac_corner_window"
	else
		hideparameter "ac_corner_angle", "ac_diff_con_wall_thk", "ac_con_wall_thk"
	endif
	if not(ac_cw_debug) then hideparameter "ac_cw_function"
endif


! =============================================================================
! Reveal Points Indexes
! =============================================================================

idxSillStartRevealLeft		= iRevealPointsIdx[1]
idxSillEndRevealLeft		= iRevealPointsIdx[2]
idxBoardStartRevealLeft		= iRevealPointsIdx[5]
idxBoardEndRevealLeft		= iRevealPointsIdx[6]
idxSillStartRevealRight		= iRevealPointsIdx[11]
idxSillEndRevealRight		= iRevealPointsIdx[12]
idxBoardStartRevealRight	= iRevealPointsIdx[15]
idxBoardEndRevealRight		= iRevealPointsIdx[16]


! =============================================================================
! Wallhole Oversize Calculations
! =============================================================================


hideparameter "ac_details"

if AC_Hole_Display_Option <> 3 then

	if curvedWall then
		WOD = abs(WIDO_ORIG_DIST) + WIDO_REVEAL_SIDE * WIDO_FRAME_THICKNESS

		xMax = 0
		for i=idxSillStartRevealLeft to idxSillEndRevealLeft
			px = leftWallholeRevealPnts[i][1]
			py = leftWallholeRevealPnts[i][2]
			xMax = max(xMax, -(WOD * px) / (WOD - py))
		next i
		for i=idxBoardStartRevealLeft to idxBoardEndRevealLeft
			px = leftWallholeRevealPnts[i][1]
			py = leftWallholeRevealPnts[i][2]
			xMax = max(xMax, -(WOD * px) / (WOD - py))
		next i
		ac_left_oversize	= xMax - A/2 - gs_left_oversize

		xMax = 0
		for i=idxSillStartRevealRight to idxSillEndRevealRight
			px = rightWallholeRevealPnts[i][1]
			py = rightWallholeRevealPnts[i][2]
			xMax = max(xMax, (WOD * px) / (WOD - py))
		next i
		for i=idxBoardStartRevealRight to idxBoardEndRevealRight
			px = rightWallholeRevealPnts[i][1]
			py = rightWallholeRevealPnts[i][2]
			xMax = max(xMax, (WOD * px) / (WOD - py))
		next i
		ac_right_oversize	= xMax - A/2 - gs_right_oversize
	else
		ac_left_oversize	= max(-leftWallholeRevealPnts[idxSillStartRevealLeft][1], -leftWallholeRevealPnts[idxBoardEndRevealLeft][1]) - A/2 - gs_left_oversize
		ac_right_oversize	= max(rightWallholeRevealPnts[idxSillStartRevealRight][1], rightWallholeRevealPnts[idxBoardEndRevealRight][1]) - A/2 - gs_right_oversize
	endif
	ac_upper_oversize	= openingHeight - B - gs_upper_oversize
	ac_lower_oversize	= -gs_lower_oversize
else
	if gs_wallhole_nominal then
		ac_left_oversize	= 0
		ac_right_oversize	= 0
		ac_upper_oversize	=  elevationOffset
		ac_lower_oversize	= -elevationOffset
	endif
	if gs_reveal_nominal then
		if bCornerWindow then
			if bUseRevealDParams then
				ac_left_oversize = (ac_wallhole_width - ac_reveal_width) / 2 - (gs_reveal_left - gs_reveal_right) / 2 + revealDLeft
			else
				ac_left_oversize = (ac_wallhole_width - ac_reveal_width) / 2 - (gs_reveal_left - gs_reveal_right) / 2 + gs_reveal_left
			endif
		else
			ac_left_oversize = (ac_wallhole_width - ac_reveal_width) / 2
		endif
		ac_right_oversize	= (ac_wallhole_width - ac_reveal_width) / 2
		ac_upper_oversize	=  elevationOffset + ac_wallhole_height - ac_reveal_height
		ac_lower_oversize	= -elevationOffset
	endif
	if gs_unit_nominal then
		if bCornerWindow then
			ac_left_oversize	= gs_tolerance_left
		else
			ac_left_oversize	= (gs_tolerance_left + gs_tolerance_right) / 2
		endif
		ac_right_oversize	= (gs_tolerance_left + gs_tolerance_right) / 2
		ac_upper_oversize	=  elevationOffset + gs_tolerance_upper + gs_tolerance_lower + includeBoxHeight + includeVentilationHeight
		ac_lower_oversize	= -elevationOffset
	endif
	if gs_egress_nominal then
		ac_left_oversize	= (unitDLeft + unitDRight) / 2 + (gs_tolerance_left + gs_tolerance_right) / 2
		ac_right_oversize	= (unitDLeft + unitDRight) / 2 + (gs_tolerance_left + gs_tolerance_right) / 2
		ac_upper_oversize	=  elevationOffset + unitDUpper + unitDLower + gs_tolerance_upper + gs_tolerance_lower + includeBoxHeight + includeVentilationHeight
		ac_lower_oversize	= -elevationOffset
	endif
	if gs_leaf_nominal then
		ac_left_oversize	= -leafDLeft  - (leafDRight - leafDLeft)/2 + (unitDLeft + unitDRight) / 2 + (gs_tolerance_left + gs_tolerance_right) / 2
		ac_right_oversize	= -leafDRight + (leafDRight - leafDLeft)/2 + (unitDLeft + unitDRight) / 2 + (gs_tolerance_left + gs_tolerance_right) / 2
		ac_upper_oversize	=  elevationOffset - leafDUpper + unitDUpper + unitDLower + gs_tolerance_upper + gs_tolerance_lower + includeBoxHeight + includeVentilationHeight
		ac_lower_oversize	= -elevationOffset - leafDLower
	endif
	if gs_baurichtmass_nominal then
		ac_left_oversize	= -(gs_baurichtmass_outer_left - gs_baurichtmass_outer_right) / 2
		ac_right_oversize	=  (gs_baurichtmass_outer_left - gs_baurichtmass_outer_right) / 2
		ac_upper_oversize	=  elevationOffset + gs_baurichtmass_outer_lower
		ac_lower_oversize	= -elevationOffset - gs_baurichtmass_outer_lower
	endif
endif

if bRightCornerFunction & abs(rightCornerAngle) > EPS then
	rx = 1 / tan(rightCornerAngle / 2)
	beta = atn((rightConnWallThk * sin(rightCornerAngle)) / (WALL_THICKNESS + rightConnWallThk * cos(rightCornerAngle)))

	if rightCornerAngle > 180 then
		ac_right_oversize = max (0, WALL_THICKNESS / tan(360 - rightCornerAngle + beta) + WIDO_SILL / tan(rightCornerAngle / 2)) - gs_right_oversize
	else
		ac_right_oversize = (WIDO_FRAME_THICKNESS + WIDO_SILL) * rx + max (0, WALL_THICKNESS * tan(rightCornerAngle - beta - 90)) - gs_right_oversize
	endif
	if not(bCornerWindow) then
		ac_right_oversize = ac_right_oversize + gs_reveal_nominal * (gs_reveal_left + gs_reveal_right)/2 + gs_unit_nominal * (gs_tolerance_left + gs_tolerance_right)/2
	endif
endif

if bLeftCornerFunction & abs(leftCornerAngle) > EPS then
	lx = 1 / tan(leftCornerAngle / 2)
	beta = atn((leftConnWallThk * sin(leftCornerAngle)) / (WALL_THICKNESS + leftConnWallThk * cos(leftCornerAngle)))

	if leftCornerAngle > 180 then
		ac_left_oversize = max (0, WALL_THICKNESS / tan(360 - leftCornerAngle + beta) + WIDO_SILL / tan(leftCornerAngle / 2))
	else
		ac_left_oversize = (WIDO_FRAME_THICKNESS + WIDO_SILL) * lx + max (0, WALL_THICKNESS * tan(leftCornerAngle - beta - 90))
	endif
	if not(bCornerWindow) then
		ac_left_oversize = ac_left_oversize + gs_reveal_nominal * (gs_reveal_left + gs_reveal_right)/2 + gs_unit_nominal * (gs_tolerance_left + gs_tolerance_right)/2
	else
		ac_left_oversize = ac_left_oversize + gs_reveal_nominal * (gs_reveal_left + gs_reveal_right) + gs_unit_nominal * (gs_tolerance_left + gs_tolerance_right)
	endif
endif

parameters 	ac_left_oversize	= ac_left_oversize,
			ac_right_oversize	= ac_right_oversize,
			ac_upper_oversize	= ac_upper_oversize,
			ac_lower_oversize	= ac_lower_oversize


! =============================================================================
! Masonry Arch Parameter Logic
! =============================================================================

if bEnableMasonryArch then
	call "MasonryArch_WMCC" parameters gs_macro_version = 12,
		isCurtainWallOpeningSWE			= isCurtainWallOpeningSWE,
		A								= ac_reveal_width,
		refWidth						= refWidth,
		leftWidth						= leftWidth,
		rightWidth						= rightWidth,
		iWindowShape					= iWindowShape,
		openingArchHeight				= openingArchHeight,
		bMasonryArch					= bMasonryArch,
		gs_masonry_arch_int				= gs_masonry_arch_int,
		gs_masonry_arch_structure		= gs_masonry_arch_structure,
		gs_masonry_arch_structure_int	= gs_masonry_arch_structure_int,
		gs_stack_top					= gs_stack_top,
		gs_stack_left					= gs_stack_left,
		gs_stack_right					= gs_stack_right,
	! --- Distance between Arch and Window ---
		gs_AutomaticArchHeight			= gs_AutomaticArchHeight,
		gs_NicheBelowArch				= gs_NicheBelowArch,
		gs_MasonryArch_height			= gs_MasonryArch_height,
		gs_masonry_arch_rise			= gs_masonry_arch_rise,
	! --- Frame Parameter
		gs_frame_style_m				= gs_frame_style_m,
	! --- Reveal Parameters
		iRevealType						= iRevealType,
		gs_wido_sill					= gs_wido_sill,
		gs_reveal_top					= gs_reveal_top,
		gs_reveal_left					= gs_reveal_left,
		gs_reveal_right					= gs_reveal_right,
		gs_reveal_top_angle				= gs_reveal_top_angle,
		gs_reveal_outer_jamb_depth		= gs_reveal_outer_jamb_depth,
	! --- String Resource ---
		stMasonryArchTypes				= stMasonryArchTypes,
		stMasonryArchStructure			= stMasonryArchStructure
endif

! This is necessary here to hide/lock these parameters also in those doors/windows who do not use masonry arch
if not(bEnableCustomMatNicheTop) then
	if bEnableMasonryArch  then
		lock			"bCustomMatNicheTop",
						"matNicheTop"
	
		hideparameter	"bCustomMatNicheTop",
						"matNicheTop"
	endif
else
	if not(bCustomMatNicheTop) then
		lock			"matNicheTop"

		hideparameter	"matNicheTop"
	endif
endif


! =============================================================================
! Ornamental Window Moldings Parameter Logic
! =============================================================================

if bEnableFaschen then
	call "Faschen_WMCC" parameters gs_macro_version = 12,
		A = A,
		B = B,
		gs_faschen_t 			= gs_faschen_t,
		iFaschenTyp				= iFaschenTyp,
		gs_faschen_type 		= gs_faschen_type,
		gs_faschen_left			= gs_faschen_left,
		gs_faschen_right		= gs_faschen_right,
		gs_faschen_top			= gs_faschen_top,
		gs_faschen_bottom		= gs_faschen_bottom,
		gs_faschen_R 			= gs_faschen_R,
		gs_faschen_L 			= gs_faschen_L,
		gs_faschen_R_height 	= gs_faschen_R_height,
		gs_faschen_L_height 	= gs_faschen_L_height,
		gs_faschen_brick_mat	= gs_faschen_brick_mat,
		gs_faschen_mort_mat		= gs_faschen_mort_mat,
		gs_faschen_plaster_mat	= gs_faschen_plaster_mat,
		iRevealType				= iRevealType,
		gs_reveal_left			= gs_reveal_left,
		gs_reveal_right			= gs_reveal_right,
		gs_reveal_top			= gs_reveal_top,
		gs_reveal_bottom		= gs_reveal_bottom
endif

! =============================================================================
! Turn Plaster Parameter Logic
! =============================================================================

call "TurnPlaster_WMCC" parameters gs_macro_version = 12,
	bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
	bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
	bEnablePlasterRightIn	= bEnablePlasterRightIn,
	bEnablePlasterRightOut	= bEnablePlasterRightOut,
	bEnablePlasterTopIn		= bEnablePlasterTopIn,
	bEnablePlasterTopOut	= bEnablePlasterTopOut,
	bEnablePlasterBottomIn	= bEnablePlasterBottomIn,
	bEnablePlasterBottomOut	= bEnablePlasterBottomOut,
	gs_useWallFinishSkin	= gs_useWallFinishSkin,
	gs_bAutoTurnIn			= gs_bAutoTurnIn,
	gs_bOverIn				= gs_bOverIn,
	gs_bAutoTurnOut			= gs_bAutoTurnOut,
	gs_bOverOut				= gs_bOverOut,
	gs_turn_plaster_dim_2D	= gs_turn_plaster_dim_2D


! =============================================================================
! Cavity Closure Parameter Logic
! =============================================================================

bCavityCloserLeft	= (not(gs_stack_left)  & ((iCavityClosureSide = CAVITY_SIDE_BOTH | iCavityClosureSide = CAVITY_SIDE_LEFT) |\
						iClosureType = CLOSURE_CUSTOM |\
						iClosureType = CLOSURE_PLASTER_REVEAL |\
						iClosureType = CLOSURE_INSULATED_REVEAL |\
						iClosureType = CLOSURE_INSULATED_FOR_RENOVATION))
bCavityCloserRight	= (not(gs_stack_right) & ((iCavityClosureSide = CAVITY_SIDE_BOTH | iCavityClosureSide = CAVITY_SIDE_RIGHT) |\
						iClosureType = CLOSURE_CUSTOM |\
						iClosureType = CLOSURE_PLASTER_REVEAL |\
						iClosureType = CLOSURE_INSULATED_REVEAL |\
						iClosureType = CLOSURE_INSULATED_FOR_RENOVATION))

call "CavityClosure_WMCC" parameters gs_macro_version = 12,
	iWindowShape			= iWindowShape,
! --- Ganging
	gs_stack_left			= gs_stack_left,
	gs_stack_right			= gs_stack_right,
	gs_stack_top			= gs_stack_top,
	gs_stack_bottom			= gs_stack_bottom,
! --- Corner Window
	bLeftCornerFunction			= bLeftCornerFunction,
	bRightCornerFunction		= bRightCornerFunction,
! --- Cavity Closure ---
	gs_ClosureTypeEnable	= gs_ClosureTypeEnable,
	gs_useWallFinishSkin	= gs_useWallFinishSkin,
	gs_cavity_side			= gs_cavity_side,
	iCavityClosureSide		= iCavityClosureSide,
	gs_bAutoTurnIn			= gs_bAutoTurnIn,
	gs_bAutoTurnOut			= gs_bAutoTurnOut,
	gs_bOverIn				= gs_bOverIn,
	gs_bOverOut				= gs_bOverOut,
	gs_maxPlasterThk		= gs_maxPlasterThk,
	gs_closure_type			= gs_closure_type,
	gs_closure_type_int		= gs_closure_type_int,
	iClosureType			= iClosureType,
	bCavityCloserLeft		= bCavityCloserLeft,
	bCavityCloserRight		= bCavityCloserRight,
	gs_nTurnDir				= gs_nTurnDir,
	iCavityClosureTurnDir	= iCavityClosureTurnDir,
	gs_nTurn				= gs_nTurn,
	gs_bJoint				= gs_bJoint,
! --- Variable Closure (Spouwlat) ---
	gs_cc_dutch_ShowLeft			= gs_cc_dutch_ShowLeft,
	gs_cc_dutch_ShowRight			= gs_cc_dutch_ShowRight,
	gs_cc_dutch_ShowTop				= gs_cc_dutch_ShowTop,
	gs_cc_dutch_ShowBottom			= gs_cc_dutch_ShowBottom,
	gs_cc_dutch_ClosureToSkin		= gs_cc_dutch_ClosureToSkin,
	gs_cc_dutch_ClosureToSide_str	= gs_cc_dutch_ClosureToSide_str,
	gs_cc_dutch_ClosureToSide		= gs_cc_dutch_ClosureToSide,
	gs_cc_dutch_GapAtOutsideSkin	= gs_cc_dutch_GapAtOutsideSkin,
	gs_cc_dutch_TurnToClosure		= gs_cc_dutch_TurnToClosure,
	gs_cc_dutch_matJointCustom		= gs_cc_dutch_matJointCustom,
	gs_cc_dutch_matJoint			= gs_cc_dutch_matJoint,
! --- Custom Cavity Closure ---
	gs_custom_cc_turn_in		= gs_custom_cc_turn_in,
	iCustomCCThicknessType = iCustomCCThicknessType,
	iCustomCCOrientation = iCustomCCOrientation,
	gs_custom_cc_separator		= gs_custom_cc_separator,
	iCustomCCEditJambSide = iCustomCCEditJambSide,
	iCustomCCEditWallSide = iCustomCCEditWallSide,
	iCustomCCEditSkin = iCustomCCEditSkin,
	gs_custom_cc_array_left		= gs_custom_cc_array_left,
	gs_custom_cc_array_right	= gs_custom_cc_array_right,
	gs_custom_cc_thickness		= gs_custom_cc_thickness,
	gs_custom_cc_overhang		= gs_custom_cc_overhang,
	gs_custom_cc_separator_pen	= gs_custom_cc_separator_pen,
	gs_custom_cc_last_sel_side	= gs_custom_cc_last_sel_side,
	gs_custom_cc_plaster		= gs_custom_cc_plaster,
	gs_turn_plaster_show_3D		= gs_turn_plaster_show_3D,
! --- String Resource ---
	stClosureTypes					= stClosureTypes,
	stCavityClosureSide				= stCavityClosureSide,
	stCavityClosureTurnDir			= stCavityClosureTurnDir,
	stDutchClosureToSide			= stDutchClosureToSide,
	stCavityClosureEditedJambSide	= stCavityClosureEditedJambSide,
	stCavityClosureEditedWallSide	= stCavityClosureEditedWallSide,
	stCavityClosureEditedSkinNumber	= stCavityClosureEditedSkinNumber,
	stCavityClosureTurnInThickness	= stCavityClosureTurnInThickness,
	stCavityClosureHatchOrientation	= stCavityClosureHatchOrientation


! =============================================================================
! Do Wallhole Cut Parameter Logic
! =============================================================================

call "WallholeCut_WMCC" parameters gs_macro_version = 12,
	AC_WallType						= AC_WallType,
	ac_wall_crosssection_type		= ac_wall_crosssection_type,
	bEnableParapetInset				= bEnableParapetInset,
	bEnableMountingFrameForReveal	= bEnableMountingFrameForReveal,
	leftWidth						= leftWidth,
	rightWidth						= rightWidth,
	bForceUniformBottomReveal		= _bForceUniformBottomReveal,
	gs_RevealTypeEnable				= gs_RevealTypeEnable,
	gs_reveal_type_new				= gs_reveal_type_new,
	gs_reveal_type_int				= gs_reveal_type_int,
	gs_reveal_type_bottom			= gs_reveal_type_bottom,
	gs_reveal_type_bottom_int		= gs_reveal_type_bottom_int,
	iRevealType						= iRevealType,
	iSillRevealType					= iSillRevealType,
	iBoardRevealType				= iBoardRevealType,
	gs_reveal_type					= gs_reveal_type,
	gs_reveal_doubleOuterTypeInt	= gs_reveal_doubleOuterTypeInt,
	gs_reveal_double_innerType		= gs_reveal_double_innerType,
	gs_reveal_doubleInnerTypeInt	= gs_reveal_doubleInnerTypeInt,
!!!	AC_wido_sill 					= AC_wido_sill,
	gs_parapet_wall_inset			= gs_parapet_wall_inset,
	gs_parapet_width				= gs_parapet_width,
	gs_parapet_height				= gs_parapet_height,
	gs_parapet_2D					= gs_parapet_2D,
	gs_parapet_line					= gs_parapet_line,
	gs_reveal_uniform				= gs_reveal_uniform,
	gs_reveal_left					= gs_reveal_left,
	gs_reveal_right					= gs_reveal_right,
	gs_reveal_top					= gs_reveal_top,
	gs_reveal_bottom				= gs_reveal_bottom,
	gs_reveal_left_angle			= gs_reveal_left_angle,
	gs_reveal_right_angle			= gs_reveal_right_angle,
	gs_reveal_top_angle				= gs_reveal_top_angle,
	gs_reveal_bottom_angle			= gs_reveal_bottom_angle,
	gs_reveal_outerLeft_angle		= gs_reveal_outerLeft_angle,
	gs_reveal_outerRight_angle		= gs_reveal_outerRight_angle,
	gs_reveal_outerTop_angle		= gs_reveal_outerTop_angle,
	gs_reveal_outerBottom_angle		= gs_reveal_outerBottom_angle,
	gs_reveal_outer_jamb_depth		= gs_reveal_outer_jamb_depth,
	gs_reveal_angle_edit_by			= gs_reveal_angle_edit_by,
	gs_reveal_angle_edit_by_int 	= gs_reveal_angle_edit_by_int,
	gs_reveal_innerLeft_width		= gs_reveal_innerLeft_width,
	gs_reveal_innerRight_width		= gs_reveal_innerRight_width,
	gs_reveal_innerTop_width		= gs_reveal_innerTop_width,
	gs_reveal_innerBottom_width 	= gs_reveal_innerBottom_width,
	gs_reveal_outerLeft_width		= gs_reveal_outerLeft_width,
	gs_reveal_outerRight_width		= gs_reveal_outerRight_width,
	gs_reveal_outerTop_width		= gs_reveal_outerTop_width,
	gs_reveal_outerBottom_width 	= gs_reveal_outerBottom_width,
	gs_mountingFrame				= gs_mountingFrame,
	gs_mountingFrame_width_left 	= gs_mountingFrame_width_left,
	gs_mountingFrame_width_right	= gs_mountingFrame_width_right,
	gs_mountingFrame_width_top		= gs_mountingFrame_width_top,
	gs_mountingFrame_width_bottom	= gs_mountingFrame_width_bottom,
	gs_head_symbol					= gs_head_symbol,
	gs_head_symbol_line				= gs_head_symbol_line,
	gs_head_symbol_pen				= gs_head_symbol_pen,
	iWindowShape					= iWindowShape,
	isWindow						= isWindow,
	stRevealTypes					= stRevealTypes,
	stRevealTypesBottom				= stRevealTypesBottom,
	stRevealAngleEditBy				= stRevealAngleEditBy,
	iClosureType					= iClosureType,
! --- Sidelight
	gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
	gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
! --- Threshold CHE
	bDoorCHE						= bDoorCHE

! =============================================================================
end
! =============================================================================



]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["WallholeCut_WMCC"]]></MName>
		<MainGUID>83EA284F-5B98-46D3-BC8A-B6CF826AE017</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["TurnPlaster_WMCC"]]></MName>
		<MainGUID>32008F42-7720-4281-B1C8-33158723B5D0</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["CavityClosure_WMCC"]]></MName>
		<MainGUID>D4F2097D-F2C9-4E7B-A212-DD82B2D1A5A0</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["WallholeCut_WMCC"]]></MName>
		<MainGUID>83EA284F-5B98-46D3-BC8A-B6CF826AE017</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["CavityClosure_WMCC"]]></MName>
		<MainGUID>D4F2097D-F2C9-4E7B-A212-DD82B2D1A5A0</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["MasonryArch_WMCC"]]></MName>
		<MainGUID>5129AEE8-30F9-46B7-A821-1A0BA97D38A6</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Faschen_WMCC"]]></MName>
		<MainGUID>B1C37462-266A-4585-955A-747AAECF9378</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabIDlist_m_WMCC"]]></MName>
		<MainGUID>CF00FD16-07A3-4337-B0CA-C5F002B696AF</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabIDlistHierarchy_m_WMCC"]]></MName>
		<MainGUID>3DA571A9-4757-4D4B-9643-801FB12E3037</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["MasonryArch_WMCC"]]></MName>
		<MainGUID>5129AEE8-30F9-46B7-A821-1A0BA97D38A6</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Faschen_WMCC"]]></MName>
		<MainGUID>B1C37462-266A-4585-955A-747AAECF9378</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["WallholeCut_WMCC"]]></MName>
		<MainGUID>83EA284F-5B98-46D3-BC8A-B6CF826AE017</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Brick Veneer_WMCC"]]></MName>
		<MainGUID>CAEDF4F1-85B5-4E15-A29B-7DE6BC773257</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["CavityClosure_WMCC"]]></MName>
		<MainGUID>D4F2097D-F2C9-4E7B-A212-DD82B2D1A5A0</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["TurnPlaster_WMCC"]]></MName>
		<MainGUID>32008F42-7720-4281-B1C8-33158723B5D0</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["MasonryArch_WMCC"]]></MName>
		<MainGUID>5129AEE8-30F9-46B7-A821-1A0BA97D38A6</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Faschen_WMCC"]]></MName>
		<MainGUID>B1C37462-266A-4585-955A-747AAECF9378</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["TurnPlaster_WMCC"]]></MName>
		<MainGUID>32008F42-7720-4281-B1C8-33158723B5D0</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["CavityClosure_WMCC"]]></MName>
		<MainGUID>D4F2097D-F2C9-4E7B-A212-DD82B2D1A5A0</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["WallholeCut_WMCC"]]></MName>
		<MainGUID>83EA284F-5B98-46D3-BC8A-B6CF826AE017</MainGUID>
	</Macro>
</CalledMacros>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="8" path="uipicts/WallholeStructure/ui_w2_ts_left_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="9" path="uipicts/WallholeStructure/ui_w2_ts_right_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="10" path="uipicts/WallholeStructure/ui_w_ts_middle_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="11" path="uipicts/WallholeStructure/ui_w2_t_left_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="12" path="uipicts/WallholeStructure/ui_w2_t_right_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="13" path="uipicts/WallholeStructure/ui_w_t_middle_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="14" path="uipicts/WallholeStructure/ui_w2_s_left_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="15" path="uipicts/WallholeStructure/ui_w2_s_right_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="16" path="uipicts/WallholeStructure/ui_w_s_middle_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="17" path="uipicts/WallholeStructure/ui_w2_left_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="18" path="uipicts/WallholeStructure/ui_w2_right_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="19" path="uipicts/WallholeStructure/ui_w_middle_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="20" path="uipicts/WallholeStructure/ui_w2_tb_left_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="21" path="uipicts/WallholeStructure/ui_w2_tb_right_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="22" path="uipicts/WallholeStructure/ui_w_tb_middle_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="23" path="uipicts/WallholeStructure/ui_w2_t_left_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="24" path="uipicts/WallholeStructure/ui_w2_t_right_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="25" path="uipicts/WallholeStructure/ui_w_t_middle_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="26" path="uipicts/WallholeStructure/ui_w2_b_left_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="27" path="uipicts/WallholeStructure/ui_w2_b_right_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="28" path="uipicts/WallholeStructure/ui_w_b_middle_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="29" path="uipicts/WallholeStructure/ui_w2_left_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="30" path="uipicts/WallholeStructure/ui_w2_right_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="31" path="uipicts/WallholeStructure/ui_w_middle_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="32" path="uipicts/WallholeStructure/ui_w2_ts_left_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="33" path="uipicts/WallholeStructure/ui_w_ts_right_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="34" path="uipicts/WallholeStructure/ui_w2_t_left_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="35" path="uipicts/WallholeStructure/ui_w_t_right_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="36" path="uipicts/WallholeStructure/ui_w_s_left_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="37" path="uipicts/WallholeStructure/ui_w_s_right_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="38" path="uipicts/WallholeStructure/ui_w_left_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="39" path="uipicts/WallholeStructure/ui_w_right_outside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="40" path="uipicts/WallholeStructure/ui_w_tb_left_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="41" path="uipicts/WallholeStructure/ui_w_tb_right_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="42" path="uipicts/WallholeStructure/ui_w_t_left_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="43" path="uipicts/WallholeStructure/ui_w_t_right_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="44" path="uipicts/WallholeStructure/ui_w_b_left_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="45" path="uipicts/WallholeStructure/ui_w_b_right_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="46" path="uipicts/WallholeStructure/ui_w_left_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="47" path="uipicts/WallholeStructure/ui_w_right_inside.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="48" path="uipicts/DW UI Macros/ui_FixturesFittings_m/ui_window_shape_0.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="49" path="uipicts/DW UI Macros/ui_FixturesFittings_m/ui_window_shape_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="50" path="uipicts/WallholeStructure/ui_cavityclosure_type.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="51" path="uipicts/WallholeCut/ui_reveal_type.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="52" path="uipicts/WallholeStructure/ui_w0_middle.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="53" path="uipicts/WallholeStructure/ui_w1_middle_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="54" path="uipicts/WallholeStructure/ui_w1_middle_0.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="55" path="uipicts/WallholeStructure/ui_w2_middle_1.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="56" path="uipicts/WallholeStructure/ui_w2_middle_0.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="57" path="uipicts/WallholeStructure/ui_w3_middle.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="58" path="_ui_picts_/opening/ui_wcont_line.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="59" path="_ui_picts_/opening/ui_wcont_line_in.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="60" path="_ui_picts_/opening/ui_wcont_line_in_lock.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="61" path="_ui_picts_/opening/ui_wcont_line_out.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="62" path="_ui_picts_/opening/ui_wcont_line_out_lock.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="65" path="_ui_picts_/opening/ui_frame_pen.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="66" path="_ui_picts_/attributes/ui_fill_type.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="67" path="_ui_picts_/attributes/ui_fill_type_lock.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="68" path="_ui_picts_/attributes/ui_fill_pen.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="69" path="_ui_picts_/attributes/ui_fill_pen_lock.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="70" path="_ui_picts_/attributes/ui_back_pen.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="71" path="_ui_picts_/attributes/ui_back_pen_lock.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="72" length_in_bytes="445" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000001240000
	00520203000000809B41170000000C504C5445FF0000000000FFFFFFD2D2D2A6
	8BD9790000000174524E530040E6D8660000015549444154785EEDD8B16AC330
	1485E123B07779705EA72AB8BB0BBE4B97EE7D89BE44C8E0BD86EAFDBAB5B8C1
	B9848648425791A969F58F193E0EB2B208E71AA4D4E1AAEAB183BCE6415F498A
	7AC8ABC9E4DFB4C639A1823C0D8D5C6D7E93A25303A4B574CAE4975EECD21ED2
	7676E9FD429AEC94208D7664E93F6CA250037FA3508BE4009EE79F7D02B89B2F
	FB7068676940CD076F2324CB47DDA35D419AB96469E67E592AD29BE08E3F4549
	AF814D5F7112AF0E4A7C0A374B45A2632C056F014B742C2009360524BB472D90
	7AECECCD529104FFE03829789FA22451EB49452A52916A934BD25A2A4D1E095E
	69F448078FA48C4F3A7824A2A1730468D5B86A89849BB4966E9ABCDFCE78A471
	EB3793B86489B8FC126BA258E10040A54B2BBF17244A234B7F79D3565F8DF257
	C19F813F1DF513A78C6840D5FBE706A4DAF5EE3B74EE00A31A4F2D19C926C836
	4127491544DD23A26F57F54738746F68CA0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="73" length_in_bytes="431" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000580000
	00CC02030000008A0C8CF20000000C504C5445FF0000000000D2D2D2FFFFFF23
	D080EE0000000174524E530040E6D8660000014749444154785EEDD7416AC330
	1086D111E8000E24F7D1C207E8C2D3AC8AF7BD444F510ADD77A3FB84AE824F62
	D4BA32F92346B21089A001CDF2F1619C20CC88FEE6D95EE6CB78AAC68D99AF99
	D96CF2385FF338DF8D1B33863779B7EB427E39F77D4F7AA90D6196BAA3438C07
	62235971EA21E07C3D6C3C24FADE991F3FBA6526E7591331BFFD82E7A3C38905
	CFBCB0AF49A19EDC936FA38C9AD7412D19B5AF3AC208BEB1A65BEA13339BA006
	CBFADBB959D4E0BBD6AD663ECA7A65595BFB216AF003D6EFE20C8265FD695FAD
	A8C1B5EBF2D1210C2BEF03556AE59E428F3F640FCED7EAC25DE003B282D1A9FF
	04FC7F6B79AA082C6A796209FC78B5FC9E68B0A8E5B74A832BD4AD3E8933084E
	2F0BA8C199BADEDA52BA40952F67F10D8FE2FBA016DB6372A3F675C1469DDF7A
	F31B756AFF3E946CD4899B40C175A2D6C5A671D9E5BADA35BFF10FB80C07F76E
	BE10850000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="74" path="_ui_picts_/attributes/ui_wcont_pen.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="75" path="_ui_picts_/attributes/ui_wcont_pen_lock.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="76" path="uipicts/WallholeStructure/ui_reveal_selection.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="77" path="uipicts/WallholeStructure/ui_closure_selection.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="78" path="uipicts/WallholeStructure/ui_closure_selection_2.png">
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="79" path="uipicts/ui_warningsign.png">
</GDLPict>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

]]>
</Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>BIMobject</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>22</Version>
		<AutoHotspots>no</AutoHotspots>
		<HoleBits>
			<WDBit_3DFrame/>
		</HoleBits>
		<StatBits>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_Sill_To_Curr_Story">
			<Description><![CDATA["Sill Height to Current Story"]]></Description>
			<Value>0</Value>
		</Length>
		<Integer Name="AC_WallContours">
			<Description><![CDATA["Wall Contours (0-None,1-Full,2-Side,3-Length)"]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_Hole_Hotspot_Control">
			<Description><![CDATA["Hotspots 0-None,1-2D,2-3D,3-All"]]></Description>
			<Value>3</Value>
		</Integer>
		<Integer Name="AC_Hole_Display_Option">
			<Description><![CDATA["Floor Plan Display Option"]]></Description>
			<Value>3</Value>
		</Integer>
		<Angle Name="AC_Hole_Position_Angle">
			<Description><![CDATA["Hole Position Angle"]]></Description>
			<Value>0</Value>
		</Angle>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Hole has Wall's Side Surface"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_HoleMaterialCurved">
			<Description><![CDATA["Hole Surface's Split is Curved in Curved Walls"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="AC_WallType">
			<Description><![CDATA["Wall Type"]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_WindowInWallContour">
			<Description><![CDATA["Window in Wall Contour"]]></Description>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<Length Name="AC_WallContourPolygon">
			<Description><![CDATA["Wall Contour Polygon"]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="AC_Wall_Direction_Type">
			<Description><![CDATA["Wall Direction Type"]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="ac_revealAnchorPos">
			<Description><![CDATA["Reveal Anchor Position"]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="ac_wall_crosssection_type">
			<Description><![CDATA["Wall Cross Section Type"]]></Description>
			<Value>0</Value>
		</Integer>

		<!-- iTypeDemolitionFill: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Integer Name="iTypeDemolitionFill">
			<Description><![CDATA["Demolition / New construction"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<FillPattern Name="gs_new_symb_fill">
			<Description><![CDATA["New Wall Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</FillPattern>
		<PenColor Name="gs_new_symb_pen_Fg">
			<Description><![CDATA["New Wall Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_new_symb_pen_bg">
			<Description><![CDATA["New Wall Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<Length Name="gs_new_symb_width_r">
			<Description><![CDATA["New Wall Fill Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="gs_new_symb_width_l">
			<Description><![CDATA["New Wall Fill Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="gs_bShowNewOnCC">
			<Description><![CDATA["Show new construction on Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_wallhole_geometry: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_wallhole_geometry">
			<Description><![CDATA["Wallhole Geometry"]]></Description>
		</Title>
		<Length Name="refWidth">
			<Description><![CDATA["Curved Wall - Reference Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="leftWidth">
			<Description><![CDATA["Left Offset from the Origo"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="rightWidth">
			<Description><![CDATA["Right Offset from the Origo"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingHeight">
			<Description><![CDATA["Opening Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="elevationOffset">
			<Description><![CDATA["Elevation Offset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="includeBoxHeight">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="includeVentilationHeight">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- iRevealType: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Integer Name="iRevealType">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iSillRevealType">
			<Description><![CDATA["Outer Reveal Type - Custom Reveal"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="iBoardRevealType">
			<Description><![CDATA["Inner Reveal Type - Custom Reveal"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="leftWallholeRevealPnts">
			<Description><![CDATA["Left Reveal Points"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="rightWallholeRevealPnts">
			<Description><![CDATA["Right Reveal Points"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="iRevealPointsIdx">
			<Description><![CDATA["Reveal Points Index"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="20" SecondDimension="0">
				<AVal Row="1">1</AVal>
				<AVal Row="2">1</AVal>
				<AVal Row="3">1</AVal>
				<AVal Row="4">1</AVal>
				<AVal Row="5">1</AVal>
				<AVal Row="6">1</AVal>
				<AVal Row="7">1</AVal>
				<AVal Row="8">1</AVal>
				<AVal Row="9">1</AVal>
				<AVal Row="10">1</AVal>
				<AVal Row="11">1</AVal>
				<AVal Row="12">1</AVal>
				<AVal Row="13">1</AVal>
				<AVal Row="14">1</AVal>
				<AVal Row="15">1</AVal>
				<AVal Row="16">1</AVal>
				<AVal Row="17">1</AVal>
				<AVal Row="18">1</AVal>
				<AVal Row="19">1</AVal>
				<AVal Row="20">1</AVal>
			</ArrayValues>
		</Integer>
		<Boolean Name="bAddPoint">
			<Description><![CDATA["Additional Plaster Points"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Boolean>
		<Length Name="radSill">
			<Description><![CDATA["Curved Wall - Sill Radius"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="radBoard">
			<Description><![CDATA["Curved Wall - Board Radius"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="WOD">
			<Description><![CDATA["Curved Wall - Wall Center Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="overSizeLeft">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="overSizeRight">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="overSizeUpper">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="overSizeLower">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="lineSections">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="7">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
				<AVal Column="5" Row="1">0</AVal>
				<AVal Column="6" Row="1">0</AVal>
				<AVal Column="7" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="possibleSkinTurnIn">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="possibleSkinTurnOut">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="maxSkinTurnIn">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="maxSkinTurnOut">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="nSkinTurnIn">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="nSkinTurnOut">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>

		<!-- gs_door_frame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_frame">
			<Description><![CDATA["Door Frame"]]></Description>
		</Title>
		<Integer Name="gs_frame_style_m">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_frame_width">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_uniform_framewidth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_frame_width_left">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_width_right">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_function_control_parameters: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_function_control_parameters">
			<Description><![CDATA["Function Control Parameters"]]></Description>
		</Title>
		<Boolean Name="bEnablePlasterLeftIn">
			<Description><![CDATA["Enable/Disable Left Inner Plaster Turn"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnablePlasterLeftOut">
			<Description><![CDATA["Enable/Disable Left Outer Plaster Turn"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnablePlasterRightIn">
			<Description><![CDATA["Enable/Disable Right Inner Plaster Turn"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnablePlasterRightOut">
			<Description><![CDATA["Enable/Disable Right Outer Plaster Turn"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnablePlasterTopIn">
			<Description><![CDATA["Enable/Disable Top Inner Plaster Turn"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnablePlasterTopOut">
			<Description><![CDATA["Enable/Disable Top Outer Plaster Turn"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnablePlasterBottomIn">
			<Description><![CDATA["Enable/Disable Bottom Inner Plaster Turn"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnablePlasterBottomOut">
			<Description><![CDATA["Enable/Disable Bottom Out Plaster Turn"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableParapetInset">
			<Description><![CDATA["Enable/Disable Wall Inset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableMasonryArch">
			<Description><![CDATA["Enable/Disable Masonry Arch Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableFaschen">
			<Description><![CDATA["Enable/Disable Ornamental Window Moldings"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableMountingFrameForReveal">
			<Description><![CDATA["Enable/Disable Mounting Frame (For Reveal)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isEmptyOpening">
			<Description><![CDATA["Enable/Disable Window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_RevealTypeEnable">
			<Description><![CDATA["Reveal Type Enable Mask"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_ClosureTypeEnable">
			<Description><![CDATA["Closure Type Enable Mask"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="bDisableTradDutchClosure">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bDWSymbolAtMiddle">
			<Description><![CDATA["Symbol at Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableWallContourHiddenLine">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bWallContHiddenLineIn">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bWallContHiddenLineOut">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bWallContHiddenLineInLeftSl">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bWallContHiddenLineOutLeftSl">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bWallContHiddenLineInRightSl">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bWallContHiddenLineOutRightSl">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_macro_control_parameters: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_macro_control_parameters">
			<Description><![CDATA["Macro Control Parameters"]]></Description>
		</Title>
		<Boolean Name="bTabFlatList">
			<Description><![CDATA["Use Flat tabID List"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_macro_version">
			<Description><![CDATA["Macro Version"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Integer Name="iWindowShape">
			<Description><![CDATA["Window Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="openingArchHeight">
			<Description><![CDATA["Arch Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_lowerArchHeight">
			<Description><![CDATA["Bottom Arch Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Boolean Name="bMirroredOpening">
			<Description><![CDATA["Mirrored Opening"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="nArchResolution">
			<Description><![CDATA["Arch Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>32</Value>
		</Integer>
		<Length Name="smallRadiusEllips">
			<Description><![CDATA["smaller radius of ellips arch"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_numOfSides">
			<Description><![CDATA["Num of Sides in multiside openings"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_posTopEdge_triangle">
			<Description><![CDATA["Top Edge from Center"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="holeBottomOffset">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="holeSideOffset">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="isWindow">
			<Description><![CDATA["Window or Door Type Object"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_IsCurved">
			<Description><![CDATA["Curved Window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bParalellInCurvedWalls">
			<Description><![CDATA["Parallel Opening in Curved Walls"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="lod3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="lod2D_MountingFrame">
			<Description><![CDATA["2D Detail Level - Mounting Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="lod3D_MountingFrame">
			<Description><![CDATA["3D Detail Level - Mounting Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bForceContinousMode">
			<Description><![CDATA["Force Continuous Mode"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDrawSillFill">
			<Description><![CDATA["Draw Wallhole Fill at Sill Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDrawBoardFill">
			<Description><![CDATA["Draw Wallhole Fill at Board Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="defaultSillDepth">
			<Description><![CDATA["Default Sill Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Length>
		<Boolean Name="bCut3DWallhole">
			<Description><![CDATA["Cut 3D Wallhole"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bForceShowWContParamsOutside">
			<Description><![CDATA["Force to Show Wall Contour Parameters Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bForceShowWContParamsInside">
			<Description><![CDATA["Force to Show Wall Contour Parameters Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="wallContourLineOffsetLeftIn">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="wallContourLineOffsetRightIn">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="wallContourLineOffsetLeftOut">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="wallContourLineOffsetRightOut">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="ac_cw_debug">
			<Description><![CDATA["Corner Window Debug Function"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="ac_cw_function">
			<Description><![CDATA["Placement Type (1=CW,0=W)"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- ac_corner_window: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="ac_corner_window">
			<Description><![CDATA["Corner Window Function"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bLeftCornerFunction">
			<Description><![CDATA["Left Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="leftCornerAngle">
			<Description><![CDATA["Left Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>180</Value>
		</Angle>
		<Length Name="leftConnWallThk">
			<Description><![CDATA["Left Connected Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bRightCornerFunction">
			<Description><![CDATA["Right Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="rightCornerAngle">
			<Description><![CDATA["Right Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>180</Value>
		</Angle>
		<Length Name="rightConnWallThk">
			<Description><![CDATA["Right Connected Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="ac_corner_angle">
			<Description><![CDATA["Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Boolean Name="ac_diff_con_wall_thk">
			<Description><![CDATA["Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_con_wall_thk">
			<Description><![CDATA["Connecting Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_window_sizes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sizes">
			<Description><![CDATA["Window Sizes"]]></Description>
		</Title>
		<Length Name="gs_tolerance_left">
			<Description><![CDATA["Tolerance Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_right">
			<Description><![CDATA["Tolerance Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_upper">
			<Description><![CDATA["Tolerance Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_lower">
			<Description><![CDATA["Tolerance Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_baurichtmass_outer_left">
			<Description><![CDATA["Building Code Gap Outside Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_baurichtmass_outer_right">
			<Description><![CDATA["Building Code Gap Outside Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_baurichtmass_outer_lower">
			<Description><![CDATA["Building Code Gap Outside Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_wallhole_width">
			<Description><![CDATA["Wallhole Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_wallhole_height">
			<Description><![CDATA["Wallhole Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_wallhole_height_original">
			<Description><![CDATA["Wallhole Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_reveal_width">
			<Description><![CDATA["Reveal Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.12</Value>
		</Length>
		<Length Name="ac_reveal_height">
			<Description><![CDATA["Reveal Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.56</Value>
		</Length>
		<Length Name="ac_unit_width">
			<Description><![CDATA["Unit Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_unit_height">
			<Description><![CDATA["Unit Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Boolean Name="gs_wallhole_nominal">
			<Description><![CDATA["Set Wallhole Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_reveal_nominal">
			<Description><![CDATA["Set Reveal Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_unit_nominal">
			<Description><![CDATA["Set Unit Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_leaf_nominal">
			<Description><![CDATA["Set Leaf Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_egress_nominal">
			<Description><![CDATA["Set Egress Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_baurichtmass_nominal">
			<Description><![CDATA["et Building Code Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_wallhole_hotspots">
			<Description><![CDATA["Show Wallhole Hotspots"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_reveal_hotspots">
			<Description><![CDATA["Show Reveal Hotspots"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- bMasonryArch: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bMasonryArch">
			<Description><![CDATA["Masonry Arch"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_masonry_arch_int">
			<Description><![CDATA["Masonry Arch"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<String Name="gs_masonry_arch_structure">
			<Description><![CDATA["Masonry Arch Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Stucco Arch"]]></Value>
		</String>
		<Integer Name="gs_masonry_arch_structure_int">
			<Description><![CDATA["Masonry Arch Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_AutomaticArchHeight">
			<Description><![CDATA["Arch on Header"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_MasonryArch_height">
			<Description><![CDATA["Distance between Arch and Window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_NicheBelowArch">
			<Description><![CDATA["Niche below Arch"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_masonry_arch_ovhg_left">
			<Description><![CDATA["Masonry Arch Overhang Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_masonry_arch_ovhg_right">
			<Description><![CDATA["Masonry Arch Overhang Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_masonry_arch_rise">
			<Description><![CDATA["Masonry Arch Rise"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Angle Name="gs_masonry_arch_skewback_angle">
			<Description><![CDATA["Skewback Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>75</Value>
		</Angle>
		<Length Name="gs_masonry_arch_proj">
			<Description><![CDATA["Masonry Arch Projection"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_masonry_arch_height">
			<Description><![CDATA["Masonry Arch Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Length Name="gs_masonry_arch_depth">
			<Description><![CDATA["Masonry Arch Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.12</Value>
		</Length>
		<Length Name="gs_masonry_arch_rearHoleDepth">
			<Description><![CDATA["Rear Hole Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_masonry_arch_brick_thk">
			<Description><![CDATA["Brick Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_masonry_arch_mort_thk">
			<Description><![CDATA["Mortar Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_masonry_arch_keystone_width">
			<Description><![CDATA["Keystone Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_masonry_arch_keystone_osize">
			<Description><![CDATA["Keystone Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_masonry_arch_keystone_proj">
			<Description><![CDATA["Keystone Projection"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Boolean Name="bCustomMatNicheTop">
			<Description><![CDATA["Custom Niche Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Material Name="gs_masonry_arch_brick_mat">
			<Description><![CDATA["Brick Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Material>
		<Material Name="gs_masonry_arch_mort_mat">
			<Description><![CDATA["Mortar Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Material>
		<Material Name="gs_masonry_arch_keystone_mat">
			<Description><![CDATA["Masonry Arch Keystone Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>37</Value>
		</Material>
		<Material Name="matNicheTop">
			<Description><![CDATA["Niche Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>101</Value>
		</Material>

		<!-- gs_reveal_type_new: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_reveal_type_new">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["No Reveal - Edge"]]></Value>
		</String>
		<Integer Name="gs_reveal_type_int">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_reveal_type_bottom">
			<Description><![CDATA["Bottom Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Uniform"]]></Value>
		</String>
		<Integer Name="gs_reveal_type_bottom_int">
			<Description><![CDATA["Bottom Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_wido_sill">
			<Description><![CDATA["Reveal Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_wido_sill">
			<Description><![CDATA["Reveal Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_reveal_set_side">
			<Description><![CDATA["Set Jamb Depth on Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_reveal_uniform">
			<Description><![CDATA["Uniform Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_reveal_type">
			<Description><![CDATA["Outer Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["No Reveal"]]></Value>
		</String>
		<Integer Name="gs_reveal_doubleOuterTypeInt">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_reveal_double_innerType">
			<Description><![CDATA["Inner Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["No Reveal"]]></Value>
		</String>
		<Integer Name="gs_reveal_doubleInnerTypeInt">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_reveal_left">
			<Description><![CDATA["Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_right">
			<Description><![CDATA["Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_left_sL">
			<Description><![CDATA["Lower Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_right_sR">
			<Description><![CDATA["Lower Jamb Depth Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_reveal_double_innerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_reveal_double_innerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="revealInnerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="revealInnerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_double_innerLeft_sL">
			<Description><![CDATA["Inner Lower Jamb Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerRight_sR">
			<Description><![CDATA["Inner Lower Jamb Depth Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_top">
			<Description><![CDATA["Head Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_bottom">
			<Description><![CDATA["Sill Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Boolean Name="bShowRevealSE">
			<Description><![CDATA["Show reveal on Section/Elevation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="original_gs_reveal_bottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_bottom_sL">
			<Description><![CDATA["Sill Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_bottom_sR">
			<Description><![CDATA["Sill Depth Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerTop">
			<Description><![CDATA["Inner Head Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerBottom">
			<Description><![CDATA["Inner Sill Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_reveal_double_innerTop">
			<Description><![CDATA["Inner Head Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_double_innerBottom">
			<Description><![CDATA["Inner Sill Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_double_innerBottom_sL">
			<Description><![CDATA["Inner Sill Depth Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_double_innerBottom_sR">
			<Description><![CDATA["Inner Sill Depth Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_outer_jamb_depth">
			<Description><![CDATA["Outer Jamb Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<String Name="gs_reveal_angle_edit_by">
			<Description><![CDATA["Edit Jamb by"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Angle and Depth"]]></Value>
		</String>
		<Integer Name="gs_reveal_angle_edit_by_int">
			<Description><![CDATA["Edit Jamb by"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Angle Name="gs_reveal_left_angle">
			<Description><![CDATA["Angle Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_right_angle">
			<Description><![CDATA["Angle Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_top_angle">
			<Description><![CDATA["Upper Side Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_bottom_angle">
			<Description><![CDATA["Bottom Side Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Length Name="gs_reveal_innerLeft_width">
			<Description><![CDATA["Splay Width Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Length Name="gs_reveal_innerRight_width">
			<Description><![CDATA["Splay Width Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Length Name="gs_reveal_innerTop_width">
			<Description><![CDATA["Upper Side Splay Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Length Name="gs_reveal_innerBottom_width">
			<Description><![CDATA["Bottom Side Splay Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Angle Name="gs_reveal_outerLeft_angle">
			<Description><![CDATA["Outer Angle Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_outerRight_angle">
			<Description><![CDATA["Outer Angle Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_outerTop_angle">
			<Description><![CDATA["Outer Angle Upper Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_outerBottom_angle">
			<Description><![CDATA["Outer Angle Bottom Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Length Name="gs_reveal_outerLeft_width">
			<Description><![CDATA["Outer Splay Width Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Length Name="gs_reveal_outerRight_width">
			<Description><![CDATA["Outer Splay Width Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Length Name="gs_reveal_outerTop_width">
			<Description><![CDATA["Outer Splay Width Upper Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Length Name="gs_reveal_outerBottom_width">
			<Description><![CDATA["Outer Splay Width Bottom Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Boolean Name="gs_reveal_auto_changed_by_cc">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_mountingFrame">
			<Description><![CDATA["Mounting Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_mountingFrame_depth">
			<Description><![CDATA["Mounting Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_left">
			<Description><![CDATA["Mounting Frame Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_right">
			<Description><![CDATA["Mounting Frame Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_top">
			<Description><![CDATA["Mounting Frame Width Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_bottom">
			<Description><![CDATA["Mounting Frame Width Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<PenColor Name="gs_mountingFrame_pen_view">
			<Description><![CDATA["Mounting Frame Uncut Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<PenColor Name="gs_mountingFrame_pen_cont">
			<Description><![CDATA["Mounting Frame Contour Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_mountingFrame_fill">
			<Description><![CDATA["Mounting Frame Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</FillPattern>
		<PenColor Name="gs_mountingFrame_pen_fg">
			<Description><![CDATA["Mounting Frame Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<PenColor Name="gs_mountingFrame_pen_bg">
			<Description><![CDATA["ounting Frame Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<Material Name="gs_mountingFrame_mat">
			<Description><![CDATA["Mounting Frame Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Material>

		<!-- gs_turn_plaster: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_turn_plaster">
			<Description><![CDATA["Turn Plaster"]]></Description>
		</Title>
		<Boolean Name="gs_useWallFinishSkin">
			<Description><![CDATA["Use Wall Finish Component"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_maxPlasterThk">
			<Description><![CDATA["Plaster Thickness Limit"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Boolean Name="gs_bAutoTurnOut">
			<Description><![CDATA["Auto Turn Inside Face Plaster"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_bOverOut">
			<Description><![CDATA["Turn Inside Face Plaster"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_bAutoTurnIn">
			<Description><![CDATA["Auto Turn Outside Face Plaster"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_bOverIn">
			<Description><![CDATA["Turn Outside Face Plaster"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_turn_plaster_dim_2D">
			<Description><![CDATA["Dimensionable on 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_turn_plaster_show_3D">
			<Description><![CDATA["Show in 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="thkPlasterAtSillLeft">
			<Description><![CDATA["Plaster Thickness at Sill - Left Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtSillRight">
			<Description><![CDATA["Plaster Thickness at Sill - Right Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtSillTop">
			<Description><![CDATA["Plaster Thickness at Sill - Top Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtSillBottom">
			<Description><![CDATA["Plaster Thickness at Sill - Bottom Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtSillSlLeft">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtSillSlLeftBottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtSillSlRight">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtSillSlRightBottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardLeft">
			<Description><![CDATA["Plaster Thickness at Board - Left Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardRight">
			<Description><![CDATA["Plaster Thickness at Board - Right Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardTop">
			<Description><![CDATA["Plaster Thickness at Board - Top Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardBottom">
			<Description><![CDATA["Plaster Thickness at Board - Bottom Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardSlLeft">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardSlLeftBottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardSlRight">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="thkPlasterAtBoardSlRightBottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="iClosureType">
			<Description><![CDATA["Closure Type"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_closure_type">
			<Description><![CDATA["Closure Type"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["No Closure"]]></Value>
		</String>

		<!-- gs_closure_type_int: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Integer Name="gs_closure_type_int">
			<Description><![CDATA["Closure Type"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_cavity_side">
			<Description><![CDATA["Turn Skin on Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iCavityClosureSide">
			<Description><![CDATA["Turn Skin on Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_nTurn">
			<Description><![CDATA["Number of Skins to Turn"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_nTurnDir">
			<Description><![CDATA["Number from"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Outside Face"]]></Value>
		</String>
		<Integer Name="iCavityClosureTurnDir">
			<Description><![CDATA["Number from"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_cc_dutch_ShowLeft">
			<Description><![CDATA["Place Closer on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowRight">
			<Description><![CDATA["Place Closer on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowTop">
			<Description><![CDATA["Place Closer on Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowBottom">
			<Description><![CDATA["Place Closer on Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_cc_dutch_ClosureToSkin">
			<Description><![CDATA["Place Closer to Skin"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cc_dutch_ClosureToSide_str">
			<Description><![CDATA["Place Closer from Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_cc_dutch_ClosureToSide">
			<Description><![CDATA["Place Closer from Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_cc_dutch_GapAtOutsideSkin">
			<Description><![CDATA["Gap at Outside Skin"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_TurnToClosure">
			<Description><![CDATA["Turn Skin to Closer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_cc_dutch_TurnToClosureOffs">
			<Description><![CDATA["Distance of Skin from Closer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_cc_dutch_widthJoint">
			<Description><![CDATA["Closer Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.038</Value>
		</Length>
		<Length Name="gs_cc_dutch_thkJoint">
			<Description><![CDATA["Closer Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Boolean Name="gs_bJoint">
			<Description><![CDATA["Insert Insulation Strip"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_showJoint">
			<Description><![CDATA["Show Insulation Strip"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_thkJoint">
			<Description><![CDATA["Strip Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<PenColor Name="gs_penJoint">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</PenColor>
		<LineType Name="gs_ltJoint">
			<Description><![CDATA["Contour Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<FillPattern Name="gs_fillJoint">
			<Description><![CDATA["Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</FillPattern>
		<PenColor Name="gs_penJointFg">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_penJointBg">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>93</Value>
		</PenColor>
		<Boolean Name="gs_cc_dutch_matJointCustom">
			<Description><![CDATA["Custom Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Material Name="gs_cc_dutch_matJoint">
			<Description><![CDATA["Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Length Name="gs_widthPlug">
			<Description><![CDATA["Profile Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.075</Value>
		</Length>
		<PenColor Name="gs_penPlug">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</PenColor>
		<LineType Name="gs_ltPlug">
			<Description><![CDATA["Contour Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<FillPattern Name="gs_fillPlug">
			<Description><![CDATA["Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</FillPattern>
		<PenColor Name="gs_penPlugFg">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_penPlugBg">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>93</Value>
		</PenColor>
		<Length Name="gs_custom_cc_array_left">
			<Description><![CDATA["Left Side Skin Data"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="8" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0.015</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0.015</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">1</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0.015</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">1</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0.015</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">1</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0.015</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="4" Row="5">1</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0.015</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="4" Row="6">1</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0.015</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="4" Row="7">1</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0.015</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="4" Row="8">1</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_custom_cc_array_right">
			<Description><![CDATA["Right Side Skin Data"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="8" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0.015</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0.015</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">1</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0.015</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">1</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0.015</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">1</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0.015</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="4" Row="5">1</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0.015</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="4" Row="6">1</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0.015</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="4" Row="7">1</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0.015</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="4" Row="8">1</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="iCustomCCEditJambSide">
			<Description><![CDATA["Edited Jamb Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-9999</Value>
		</Integer>
		<Integer Name="iCustomCCEditWallSide">
			<Description><![CDATA["Edited Wall Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-9999</Value>
		</Integer>
		<Integer Name="iCustomCCEditSkin">
			<Description><![CDATA["Edited Skin Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-9999</Value>
		</Integer>
		<Boolean Name="gs_custom_cc_turn_in">
			<Description><![CDATA["Turn-in Skin"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_custom_cc_plaster">
			<Description><![CDATA["Consider Skin as Plaster"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iCustomCCThicknessType">
			<Description><![CDATA["Turn-in Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_custom_cc_thickness">
			<Description><![CDATA["Custom Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.015</Value>
		</Length>
		<Integer Name="iCustomCCOrientation">
			<Description><![CDATA["Hatch Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_custom_cc_separator">
			<Description><![CDATA["Separating Line at Turn-in"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_custom_cc_separator_pen">
			<Description><![CDATA["Separating Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<Length Name="gs_custom_cc_overhang">
			<Description><![CDATA["Skin Overhang to Frame Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_custom_cc_last_sel_side">
			<Description><![CDATA["Last Selected Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_closure_auto_changed">
			<Description><![CDATA["Closure Method Changed Automatically"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_window_oversize: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_oversize">
			<Description><![CDATA["Oversize"]]></Description>
		</Title>
		<Length Name="gs_left_oversize">
			<Description><![CDATA["Left Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_right_oversize">
			<Description><![CDATA["Right Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_upper_oversize">
			<Description><![CDATA["Upper Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_lower_oversize">
			<Description><![CDATA["Lower Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_window_stack: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_stack">
			<Description><![CDATA["Ganging"]]></Description>
		</Title>
		<Boolean Name="gs_stack_left">
			<Description><![CDATA["Connection on the Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_right">
			<Description><![CDATA["Connection on the Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_top">
			<Description><![CDATA["Connection on the Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_bottom">
			<Description><![CDATA["Connection on the Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_parapet_wall_inset: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_parapet_wall_inset">
			<Description><![CDATA["Wall Inset"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_parapet_inset_thk">
			<Description><![CDATA["Depth of Inset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Integer Name="iParapetSize">
			<Description><![CDATA["Wall Inset Sizes"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_parapet_width">
			<Description><![CDATA["Parapet Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="gs_parapet_right">
			<Description><![CDATA["Overhang Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_parapet_left">
			<Description><![CDATA["Overhang Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_parapet_height">
			<Description><![CDATA["Parapet Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Boolean Name="gs_parapet_2D">
			<Description><![CDATA["Show Hidden Parapet"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iParapetBottom">
			<Description><![CDATA["Wall Inset Bottom at"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_parapet_botelev">
			<Description><![CDATA["Bottom Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<LineType Name="gs_parapet_line">
			<Description><![CDATA["Hidden Parapet Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D and Section Representation"]]></Description>
		</Title>
		<String Name="gs_wcont_line">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Off"]]></Value>
		</String>
		<Integer Name="iWallContourLine">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<LineType Name="gs_wcont_line_in">
			<Description><![CDATA["Wall Contour Line Type Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_line_out">
			<Description><![CDATA["Wall Contour Line Type Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_hidden_line_in">
			<Description><![CDATA["Hidden Wall Contour Line Type Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<LineType Name="gs_wcont_hidden_line_out">
			<Description><![CDATA["Hidden Wall Contour Line Type Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<String Name="gs_wcont_line_sl">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Off"]]></Value>
		</String>
		<Integer Name="iWallContourLineSl">
			<Description><![CDATA["Sidelight Wall Contour Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<LineType Name="gs_wcont_line_sl_in">
			<Description><![CDATA["Wall Contour Line Type Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_line_sl_out">
			<Description><![CDATA["Wall Contour Line Type Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_hidden_line_sl_in">
			<Description><![CDATA["Sidelight Hidden Wall Contour Line Type Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<LineType Name="gs_wcont_hidden_line_sl_out">
			<Description><![CDATA["Sidelight Hidden Wall Contour Line Type Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<PenColor Name="gs_wcont_line_pen">
			<Description><![CDATA["Wall Contour Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Boolean Name="gs_bFills">
			<Description><![CDATA["Use Fills"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<FillPattern Name="gs_wallhole_fill">
			<Description><![CDATA["Plan Symbol Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_wallhole_pen_fg">
			<Description><![CDATA["Plan Symbol Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_wallhole_pen_bg">
			<Description><![CDATA["Plan Symbol Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_wallhole_fill_sl">
			<Description><![CDATA["Plan Symbol Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_wallhole_pen_sl_fg">
			<Description><![CDATA["Plan Symbol Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_wallhole_pen_sl_bg">
			<Description><![CDATA["Plan Symbol Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_masonry_arch_fill">
			<Description><![CDATA["Arch Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_masonry_arch_pen_fg">
			<Description><![CDATA["Arch Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_masonry_arch_pen_bg">
			<Description><![CDATA["Arch Section Fill Bkg. Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<PenColor Name="gs_masonry_arch_pen">
			<Description><![CDATA["3D Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<Integer Name="res">
			<Description><![CDATA["Curve Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>

		<!-- ac_details: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="ac_details">
			<Description><![CDATA["Computed Oversize Values"]]></Description>
		</Title>
		<Length Name="ac_left_oversize">
			<Description><![CDATA["AC Left Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_right_oversize">
			<Description><![CDATA["AC Right Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_upper_oversize">
			<Description><![CDATA["AC Upper Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_lower_oversize">
			<Description><![CDATA["AC Lower Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_ui_sub_tabpage">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_ui_sub_tabpage_closure">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="uiUsedPageIDs">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<String Name="uiUsedPageNames">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1"><![CDATA[""]]></AVal>
				<AVal Column="2" Row="1"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Boolean Name="bStorefrontClassic">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>

		<!-- gs_string_resources: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_string_resources">
			<Description><![CDATA["String Resources"]]></Description>
		</Title>
		<String Name="stRevealTypes">
			<Description><![CDATA["gs_reveal_type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="0">
				<AVal Row="1"><![CDATA["No Reveal - Edge"]]></AVal>
				<AVal Row="2"><![CDATA["No Reveal"]]></AVal>
				<AVal Row="3"><![CDATA["Reveal"]]></AVal>
				<AVal Row="4"><![CDATA["Negative Reveal"]]></AVal>
				<AVal Row="5"><![CDATA["Slanted Reveal"]]></AVal>
				<AVal Row="6"><![CDATA["Splayed Reveal"]]></AVal>
				<AVal Row="7"><![CDATA["Historic Reveal"]]></AVal>
				<AVal Row="8"><![CDATA["Custom Reveal"]]></AVal>
				<AVal Row="9"><![CDATA["Double Splayed Reveal"]]></AVal>
				<AVal Row="10"><![CDATA["Outside Splayed Reveal"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stRevealTypesBottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1"><![CDATA["Uniform"]]></AVal>
				<AVal Row="2"><![CDATA["No Reveal"]]></AVal>
				<AVal Row="3"><![CDATA["Reveal"]]></AVal>
				<AVal Row="4"><![CDATA["Negative Reveal"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSetRevealSide">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Inside"]]></AVal>
				<AVal Row="2"><![CDATA["Outside"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stRevealAngleEditBy">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Angle and Depth"]]></AVal>
				<AVal Row="2"><![CDATA["Width and Depth"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stClosureTypes">
			<Description><![CDATA["gs_closure_type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="9" SecondDimension="0">
				<AVal Row="1"><![CDATA["No Closure"]]></AVal>
				<AVal Row="2"><![CDATA["Traditional Cavity Closure"]]></AVal>
				<AVal Row="3"><![CDATA["Prefabricated Cavity Closure"]]></AVal>
				<AVal Row="4"><![CDATA["Custom Closure"]]></AVal>
				<AVal Row="5"><![CDATA["Solid Wall"]]></AVal>
				<AVal Row="6"><![CDATA["Stud Wall"]]></AVal>
				<AVal Row="7"><![CDATA["Stud Wall with Siding"]]></AVal>
				<AVal Row="8"><![CDATA["Brick Veneer"]]></AVal>
				<AVal Row="9"><![CDATA["Variable Closure"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stWallContourLine">
			<Description><![CDATA["gs_wcont_line"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1"><![CDATA["Off"]]></AVal>
				<AVal Row="2"><![CDATA["Inside"]]></AVal>
				<AVal Row="3"><![CDATA["Outside"]]></AVal>
				<AVal Row="4"><![CDATA["Both Insides"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stCavityClosureSide">
			<Description><![CDATA["gs_cavity_side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
				<AVal Row="2"><![CDATA[""]]></AVal>
				<AVal Row="3"><![CDATA[""]]></AVal>
				<AVal Row="4"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stCavityClosureTurnDir">
			<Description><![CDATA["gs_nTurnDir"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Outside Face"]]></AVal>
				<AVal Row="2"><![CDATA["Inside Face"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stDutchClosureToSide">
			<Description><![CDATA["gs_cc_dutch_ClosureToSide_str"]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Outside Face"]]></AVal>
				<AVal Row="2"><![CDATA["Inside Face"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stCavityClosureEditedJambSide">
			<Description><![CDATA["gs_custom_cc_edit_jamb_side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["Edit Both Jambs"]]></AVal>
				<AVal Row="2"><![CDATA["Edit Left Jamb"]]></AVal>
				<AVal Row="3"><![CDATA["Edit Right Jamb"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stCavityClosureEditedWallSide">
			<Description><![CDATA["gs_custom_cc_edit_wall_side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Outside Face"]]></AVal>
				<AVal Row="2"><![CDATA["Inside Face"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stCavityClosureEditedSkinNumber">
			<Description><![CDATA["gs_custom_cc_edit_skin"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1"><![CDATA["1. Skin"]]></AVal>
				<AVal Row="2"><![CDATA["2. Skin"]]></AVal>
				<AVal Row="3"><![CDATA["3. Skin"]]></AVal>
				<AVal Row="4"><![CDATA["4. Skin"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stCavityClosureTurnInThickness">
			<Description><![CDATA["gs_custom_cc_thickness_type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Original"]]></AVal>
				<AVal Row="2"><![CDATA["Custom"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stCavityClosureHatchOrientation">
			<Description><![CDATA["gs_custom_cc_orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Original"]]></AVal>
				<AVal Row="2"><![CDATA["Turned in"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stMasonryArchTypes">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="7" SecondDimension="0">
				<AVal Row="1"><![CDATA["Off"]]></AVal>
				<AVal Row="2"><![CDATA["Masonry Straight Arch"]]></AVal>
				<AVal Row="3"><![CDATA["Masonry Jack Arch"]]></AVal>
				<AVal Row="4"><![CDATA["Masonry Jack Arch with Keystone"]]></AVal>
				<AVal Row="5"><![CDATA["Masonry Segmental Arch"]]></AVal>
				<AVal Row="6"><![CDATA["Masonry Segmental Arch with Keystone"]]></AVal>
				<AVal Row="7"><![CDATA["Masonry Bullseye Arch"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stMasonryArchStructure">
			<Description><![CDATA["gs_masonry_arch_structure"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Stucco Arch"]]></AVal>
				<AVal Row="2"><![CDATA["Brick Arch"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="gs_faschen_type">
			<Description><![CDATA["gs_faschen_typ"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Plaster"]]></AVal>
				<AVal Row="2"><![CDATA["Brickwork"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stWallholeCutUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="6" SecondDimension="0">
				<AVal Row="1"><![CDATA["Custom Reveal"]]></AVal>
				<AVal Row="2"><![CDATA["Custom Reveal Sizes"]]></AVal>
				<AVal Row="3"><![CDATA["Wall Inset"]]></AVal>
				<AVal Row="4"><![CDATA["Depth"]]></AVal>
				<AVal Row="5"><![CDATA["Custom Reveal"]]></AVal>
				<AVal Row="6"><![CDATA["Reveal Type"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stCavityClosureUI">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="53" SecondDimension="0">
				<AVal Row="1"><![CDATA["Cavity Closure"]]></AVal>
				<AVal Row="2"><![CDATA["Closure Method"]]></AVal>
				<AVal Row="3"><![CDATA["Turn Skin on Side"]]></AVal>
				<AVal Row="4"><![CDATA["Number of Outside Skins"]]></AVal>
				<AVal Row="5"><![CDATA["Number of Skins to Turn"]]></AVal>
				<AVal Row="6"><![CDATA["Number from"]]></AVal>
				<AVal Row="7"><![CDATA["Turn at Reveal"]]></AVal>
				<AVal Row="8"><![CDATA["Insulation Strip"]]></AVal>
				<AVal Row="9"><![CDATA["Thickness"]]></AVal>
				<AVal Row="10"><![CDATA["Contour Pen"]]></AVal>
				<AVal Row="11"><![CDATA["Line Type"]]></AVal>
				<AVal Row="12"><![CDATA["Fill Type"]]></AVal>
				<AVal Row="13"><![CDATA["Fill Pen"]]></AVal>
				<AVal Row="14"><![CDATA["Fill Background Pen"]]></AVal>
				<AVal Row="15"><![CDATA["Profile"]]></AVal>
				<AVal Row="16"><![CDATA["Width"]]></AVal>
				<AVal Row="17"><![CDATA["Turn Plaster"]]></AVal>
				<AVal Row="18"><![CDATA["Outside Face"]]></AVal>
				<AVal Row="19"><![CDATA["Inside Face"]]></AVal>
				<AVal Row="20"><![CDATA["Automatically"]]></AVal>
				<AVal Row="21"><![CDATA["Number of Skins to Turn"]]></AVal>
				<AVal Row="22"><![CDATA["Plaster Thickness Limit"]]></AVal>
				<AVal Row="23"><![CDATA["Use Wall Finish Component"]]></AVal>
				<AVal Row="24"><![CDATA["Select Skin to Edit"]]></AVal>
				<AVal Row="25"><![CDATA["Turn Skin"]]></AVal>
				<AVal Row="26"><![CDATA["1. Turn-In Thickness"]]></AVal>
				<AVal Row="27"><![CDATA["Custom Thickness"]]></AVal>
				<AVal Row="28"><![CDATA["Hatch Orientation"]]></AVal>
				<AVal Row="29"><![CDATA["Separating Line at Turn-in"]]></AVal>
				<AVal Row="30"><![CDATA["Separating Line Pen"]]></AVal>
				<AVal Row="31"><![CDATA["2. Skin Overhang to Frame Depth"]]></AVal>
				<AVal Row="32"><![CDATA["Consider Skin as Plaster if Thinner Than or Equal To"]]></AVal>
				<AVal Row="33"><![CDATA["Plaster Skin Definition"]]></AVal>
				<AVal Row="34"><![CDATA["Show in 3D"]]></AVal>
				<AVal Row="35"><![CDATA["Note: Plaster is turned outside the wall contour defined in the reveal settings"]]></AVal>
				<AVal Row="36"><![CDATA["Insulation Strip Attributes"]]></AVal>
				<AVal Row="37"><![CDATA["Attributes"]]></AVal>
				<AVal Row="38"><![CDATA[""]]></AVal>
				<AVal Row="39"><![CDATA[""]]></AVal>
				<AVal Row="40"><![CDATA["1. Consider Skin as Plaster"]]></AVal>
				<AVal Row="41"><![CDATA["Plaster skin is turned outside the wall contour defined in the reveal settings."]]></AVal>
				<AVal Row="42"><![CDATA["Core skins cannot be turned as plaster."]]></AVal>
				<AVal Row="43"><![CDATA[""]]></AVal>
				<AVal Row="44"><![CDATA[""]]></AVal>
				<AVal Row="45"><![CDATA["Place Closer to"]]></AVal>
				<AVal Row="46"><![CDATA["from"]]></AVal>
				<AVal Row="47"><![CDATA["Closer Side"]]></AVal>
				<AVal Row="48"><![CDATA["Turn Skin on Side"]]></AVal>
				<AVal Row="49"><![CDATA["Turn Skin to Closer"]]></AVal>
				<AVal Row="50"><![CDATA["1. Skin"]]></AVal>
				<AVal Row="51"><![CDATA["2. Skin"]]></AVal>
				<AVal Row="52"><![CDATA["3. Skin"]]></AVal>
				<AVal Row="53"><![CDATA["4. Skin"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stWallholeStructureUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1"><![CDATA["Plaster Skin Definition"]]></AVal>
				<AVal Row="2"><![CDATA["Go to Plaster Skin Settings..."]]></AVal>
				<AVal Row="3"><![CDATA["Wall Closure Settings"]]></AVal>
				<AVal Row="4"><![CDATA["Go Back to Closure Settings..."]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stMasonryArchUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="27" SecondDimension="0">
				<AVal Row="1"><![CDATA["Arch Style"]]></AVal>
				<AVal Row="2"><![CDATA["Rise"]]></AVal>
				<AVal Row="3"><![CDATA["Skewback Angle"]]></AVal>
				<AVal Row="4"><![CDATA["Type"]]></AVal>
				<AVal Row="5"><![CDATA["Brick Thickness"]]></AVal>
				<AVal Row="6"><![CDATA["Mortar Thickness"]]></AVal>
				<AVal Row="7"><![CDATA["Keystone"]]></AVal>
				<AVal Row="8"><![CDATA["Width"]]></AVal>
				<AVal Row="9"><![CDATA["Oversize"]]></AVal>
				<AVal Row="10"><![CDATA["Projection"]]></AVal>
				<AVal Row="11"><![CDATA["Arch on Header"]]></AVal>
				<AVal Row="12"><![CDATA["Niche below Arch"]]></AVal>
				<AVal Row="13"><![CDATA["Surfaces"]]></AVal>
				<AVal Row="14"><![CDATA["Brick"]]></AVal>
				<AVal Row="15"><![CDATA["Mortar"]]></AVal>
				<AVal Row="16"><![CDATA["Keystone"]]></AVal>
				<AVal Row="17"><![CDATA["Section Fill"]]></AVal>
				<AVal Row="18"><![CDATA["Fill Type"]]></AVal>
				<AVal Row="19"><![CDATA["Fill Pen"]]></AVal>
				<AVal Row="20"><![CDATA["Background Pen"]]></AVal>
				<AVal Row="21"><![CDATA["Masonry Arch Height"]]></AVal>
				<AVal Row="22"><![CDATA["Masonry Arch Depth"]]></AVal>
				<AVal Row="23"><![CDATA["Rear Hole Depth"]]></AVal>
				<AVal Row="24"><![CDATA["Masonry Arch Projection"]]></AVal>
				<AVal Row="25"><![CDATA["Masonry Arch Overhang Left"]]></AVal>
				<AVal Row="26"><![CDATA["Masonry Arch Overhang Right"]]></AVal>
				<AVal Row="27"><![CDATA["Distance between Arch and Window"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stRevealClusureUITips">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="43" SecondDimension="0">
				<AVal Row="1"><![CDATA["Reveal Depth"]]></AVal>
				<AVal Row="2"><![CDATA["Jamb Depth Side 2"]]></AVal>
				<AVal Row="3"><![CDATA["Jamb Depth Side 1"]]></AVal>
				<AVal Row="4"><![CDATA["Inner Jamb Depth Side 2"]]></AVal>
				<AVal Row="5"><![CDATA["Inner Jamb Depth Side 1"]]></AVal>
				<AVal Row="6"><![CDATA["Head Depth"]]></AVal>
				<AVal Row="7"><![CDATA["Sill Depth"]]></AVal>
				<AVal Row="8"><![CDATA["Inner Head Depth"]]></AVal>
				<AVal Row="9"><![CDATA["Inner Sill Depth"]]></AVal>
				<AVal Row="10"><![CDATA["Angle Side 2"]]></AVal>
				<AVal Row="11"><![CDATA["Angle Side"]]></AVal>
				<AVal Row="12"><![CDATA["Upper Side Angle"]]></AVal>
				<AVal Row="13"><![CDATA["Bottom Side Angle"]]></AVal>
				<AVal Row="14"><![CDATA["Outer Angle Left Side"]]></AVal>
				<AVal Row="15"><![CDATA["Outer Angle Right Side"]]></AVal>
				<AVal Row="16"><![CDATA["Outer Angle Upper Side"]]></AVal>
				<AVal Row="17"><![CDATA["Outer Angle Bottom Side"]]></AVal>
				<AVal Row="18"><![CDATA["Outer Jamb Depth"]]></AVal>
				<AVal Row="19"><![CDATA["Mounting Frame Width Left"]]></AVal>
				<AVal Row="20"><![CDATA["Mounting Frame Width Right"]]></AVal>
				<AVal Row="21"><![CDATA["Mounting Frame Width Upper"]]></AVal>
				<AVal Row="22"><![CDATA["Mounting Frame Width Bottom"]]></AVal>
				<AVal Row="23"><![CDATA["Mounting Frame Thickness"]]></AVal>
				<AVal Row="24"><![CDATA["Left Side Splay Width"]]></AVal>
				<AVal Row="25"><![CDATA["Right Side Splay Width"]]></AVal>
				<AVal Row="26"><![CDATA["Upper Side Splay Width"]]></AVal>
				<AVal Row="27"><![CDATA["Bottom Side Splay Width"]]></AVal>
				<AVal Row="28"><![CDATA["Outer Splay Width Left Side"]]></AVal>
				<AVal Row="29"><![CDATA["Outer Splay Width Right Side"]]></AVal>
				<AVal Row="30"><![CDATA["Outer Splay Width Upper Side"]]></AVal>
				<AVal Row="31"><![CDATA["Outer Splay Width Bottom Side"]]></AVal>
				<AVal Row="32"><![CDATA["Lower Jamb Depth Side 2"]]></AVal>
				<AVal Row="33"><![CDATA["Lower Jamb Depth Side 1"]]></AVal>
				<AVal Row="34"><![CDATA["Sill Depth Side 2"]]></AVal>
				<AVal Row="35"><![CDATA["Sill Depth Side 1"]]></AVal>
				<AVal Row="36"><![CDATA["Inner Lower Jamb Depth Side 2"]]></AVal>
				<AVal Row="37"><![CDATA["Inner Lower Jamb Depth Side 1"]]></AVal>
				<AVal Row="38"><![CDATA["Inner Sill Depth Side 2"]]></AVal>
				<AVal Row="39"><![CDATA["Inner Sill Depth Side 1"]]></AVal>
				<AVal Row="40"><![CDATA["Jamb Depth"]]></AVal>
				<AVal Row="41"><![CDATA["Inner Jamb Depth"]]></AVal>
				<AVal Row="42"><![CDATA["Jamb / Head Depth"]]></AVal>
				<AVal Row="43"><![CDATA["Inner Jamb / Head Depth"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stFasschenUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSubTabpageToolTip">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Sub Tab Page Selection: General Settings, Attributes"]]></Value>
		</String>
		<String Name="stRevealUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1"><![CDATA["Reveal Type"]]></AVal>
				<AVal Row="2"><![CDATA["The previously selected wall closure type is not available for this reveal."]]></AVal>
				<AVal Row="3"><![CDATA["The wall closure was changed."]]></AVal>
				<AVal Row="4"><![CDATA["Uniform Jamb Depth"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stClosureType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="stParapetSize">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["Automatic"]]></AVal>
				<AVal Row="2"><![CDATA["Symmetric"]]></AVal>
				<AVal Row="3"><![CDATA["Asymmetric"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stParapetBottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Current Story"]]></AVal>
				<AVal Row="2"><![CDATA["Wall Base"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSillUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="42" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
				<AVal Row="2"><![CDATA[""]]></AVal>
				<AVal Row="3"><![CDATA[""]]></AVal>
				<AVal Row="4"><![CDATA[""]]></AVal>
				<AVal Row="5"><![CDATA[""]]></AVal>
				<AVal Row="6"><![CDATA[""]]></AVal>
				<AVal Row="7"><![CDATA[""]]></AVal>
				<AVal Row="8"><![CDATA[""]]></AVal>
				<AVal Row="9"><![CDATA[""]]></AVal>
				<AVal Row="10"><![CDATA[""]]></AVal>
				<AVal Row="11"><![CDATA[""]]></AVal>
				<AVal Row="12"><![CDATA[""]]></AVal>
				<AVal Row="13"><![CDATA[""]]></AVal>
				<AVal Row="14"><![CDATA[""]]></AVal>
				<AVal Row="15"><![CDATA[""]]></AVal>
				<AVal Row="16"><![CDATA[""]]></AVal>
				<AVal Row="17"><![CDATA[""]]></AVal>
				<AVal Row="18"><![CDATA[""]]></AVal>
				<AVal Row="19"><![CDATA[""]]></AVal>
				<AVal Row="20"><![CDATA[""]]></AVal>
				<AVal Row="21"><![CDATA[""]]></AVal>
				<AVal Row="22"><![CDATA[""]]></AVal>
				<AVal Row="23"><![CDATA[""]]></AVal>
				<AVal Row="24"><![CDATA[""]]></AVal>
				<AVal Row="25"><![CDATA[""]]></AVal>
				<AVal Row="26"><![CDATA[""]]></AVal>
				<AVal Row="27"><![CDATA[""]]></AVal>
				<AVal Row="28"><![CDATA[""]]></AVal>
				<AVal Row="29"><![CDATA[""]]></AVal>
				<AVal Row="30"><![CDATA[""]]></AVal>
				<AVal Row="31"><![CDATA[""]]></AVal>
				<AVal Row="32"><![CDATA[""]]></AVal>
				<AVal Row="33"><![CDATA[""]]></AVal>
				<AVal Row="34"><![CDATA[""]]></AVal>
				<AVal Row="35"><![CDATA[""]]></AVal>
				<AVal Row="36"><![CDATA[""]]></AVal>
				<AVal Row="37"><![CDATA[""]]></AVal>
				<AVal Row="38"><![CDATA[""]]></AVal>
				<AVal Row="39"><![CDATA[""]]></AVal>
				<AVal Row="40"><![CDATA[""]]></AVal>
				<AVal Row="41"><![CDATA[""]]></AVal>
				<AVal Row="42"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>

		<!-- gs_transom_display: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_transom_display">
			<Description><![CDATA["Display as Transom"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_transom_display_pen">
			<Description><![CDATA["Wall End Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<LineType Name="gs_transom_display_linetype">
			<Description><![CDATA["Wall End Line Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</LineType>

		<!-- Faschen: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="Faschen">
			<Description><![CDATA["Ornamental Window Moldings"]]></Description>
		</Title>
		<Boolean Name="gs_faschen_left">
			<Description><![CDATA["Ornamental Window Molding Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_faschen_right">
			<Description><![CDATA["Ornamental Window Molding Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_faschen_top">
			<Description><![CDATA["Ornamental Window Molding Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_faschen_bottom">
			<Description><![CDATA["Ornamental Window Molding Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iFaschenTyp">
			<Description><![CDATA["Ornamental Window Molding Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_faschen_A">
			<Description><![CDATA["Width Left/Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.12</Value>
		</Length>
		<Length Name="gs_faschen_C">
			<Description><![CDATA["Height of Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Length Name="gs_faschen_B">
			<Description><![CDATA["Height of Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Boolean Name="gs_faschen_R">
			<Description><![CDATA["Default Right Side Ornamental Window Molding"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_faschen_R_height">
			<Description><![CDATA["Height of the Right Side Ornamental Window Molding"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.38</Value>
		</Length>
		<Boolean Name="gs_faschen_L">
			<Description><![CDATA["Default Left Side Ornamental Window Molding"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_faschen_L_height">
			<Description><![CDATA["Height of the Left Side Ornamental Window Moldings"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.38</Value>
		</Length>
		<Boolean Name="gs_faschen_t">
			<Description><![CDATA["Ornamental Window Molding Depth >= Reveal Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_faschen_width">
			<Description><![CDATA["Depth of Ornamental Window Molding"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_faschen_brick_thk">
			<Description><![CDATA["Brick Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.065</Value>
		</Length>
		<Length Name="gs_faschen_mort_thk">
			<Description><![CDATA["Mortar Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<FillPattern Name="gs_faschen_fill">
			<Description><![CDATA["Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</FillPattern>
		<PenColor Name="gs_faschen_fg">
			<Description><![CDATA["Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<PenColor Name="gs_faschen_bg">
			<Description><![CDATA["Section Fill Bkg. Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_faschen_pen">
			<Description><![CDATA["3D Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Material Name="gs_faschen_plaster_mat">
			<Description><![CDATA["Plaster Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="gs_faschen_brick_mat">
			<Description><![CDATA["Brick Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</Material>
		<Material Name="gs_faschen_mort_mat">
			<Description><![CDATA["Mortar Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>66</Value>
		</Material>

		<!-- gs_head_symbol: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_head_symbol">
			<Description><![CDATA["Head Depth on Symbol"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_head_symbol_line">
			<Description><![CDATA["Head Depth Symbol Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>21</Value>
		</LineType>
		<PenColor Name="gs_head_symbol_pen">
			<Description><![CDATA["Head Depth Symbol Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</PenColor>

		<!-- gs_sidelight_left: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_sidelight_left">
			<Description><![CDATA["Left Sidelight"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_sidelight_width_left">
			<Description><![CDATA["Left Sidelight Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sidelight_parapet_hgt_left">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sidelight_WHole_width_left">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_sidelight_right: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_sidelight_right">
			<Description><![CDATA["Right Sidelight"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_sidelight_width_right">
			<Description><![CDATA["Right Sidelight Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sidelight_parapet_hgt_right">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sidelight_WHole_width_right">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_door_transom: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_door_transom">
			<Description><![CDATA["Transom"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_transom_height">
			<Description><![CDATA["Transom Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_usa_parameters: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_usa_parameters">
			<Description><![CDATA["USA Parameters"]]></Description>
		</Title>
		<Boolean Name="bSillUSA">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_fsill">
			<Description><![CDATA["Bottom Frame at Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDrawOutsideTrim">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDrawInsideTrim">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDrawSill">
			<Description><![CDATA["Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDrawBoard">
			<Description><![CDATA["Stool"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iBrickVeneerRevealDepth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="stBrickVeneerRevealDepth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Wall Skins Number"]]></AVal>
				<AVal Row="2"><![CDATA["Reveal Depth"]]></AVal>
			</ArrayValues>
		</String>
		<Boolean Name="gs_brick_sill">
			<Description><![CDATA["Brick Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_brick_sill_detlev_m">
			<Description><![CDATA["Brick Sill Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="iBrickSilldetlevel">
			<Description><![CDATA["Brick Sill Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="stBrickVeneerTextUSA">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="11" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
				<AVal Row="2"><![CDATA[""]]></AVal>
				<AVal Row="3"><![CDATA[""]]></AVal>
				<AVal Row="4"><![CDATA[""]]></AVal>
				<AVal Row="5"><![CDATA[""]]></AVal>
				<AVal Row="6"><![CDATA[""]]></AVal>
				<AVal Row="7"><![CDATA[""]]></AVal>
				<AVal Row="8"><![CDATA[""]]></AVal>
				<AVal Row="9"><![CDATA[""]]></AVal>
				<AVal Row="10"><![CDATA[""]]></AVal>
				<AVal Row="11"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Boolean Name="gs_metal">
			<Description><![CDATA["Metal Window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="bBoardElevUsa">
			<Description><![CDATA["bBoardElevUsa"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bBrickSillUI">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_dimension_link_parameters: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_dimension_link_parameters">
			<Description><![CDATA["Dimension Link Parameters"]]></Description>
		</Title>
		<Length Name="unitDLeft">
			<Description><![CDATA["Egress to Unit Size Difference - Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="unitDRight">
			<Description><![CDATA["Egress to Unit Size Difference - Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="unitDUpper">
			<Description><![CDATA["Egress to Unit Size Difference - Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="unitDLower">
			<Description><![CDATA["Egress to Unit Size Difference - Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="leafDLeft">
			<Description><![CDATA["Egress to Leaf Size Difference - Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="leafDRight">
			<Description><![CDATA["Egress to Leaf Size Difference - Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="leafDUpper">
			<Description><![CDATA["Egress to Leaf Size Difference - Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="leafDLower">
			<Description><![CDATA["Egress to Leaf Size Difference - Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bUseRevealDParams">
			<Description><![CDATA["Use RevealD Parameters"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="revealDLeft">
			<Description><![CDATA["Reveal to Wallhole Size Difference - Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="revealDRight">
			<Description><![CDATA["Reveal to Wallhole Size Difference - Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="revealDUpper">
			<Description><![CDATA["Reveal to Wallhole Size Difference - Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="revealDLower">
			<Description><![CDATA["Reveal to Wallhole Size Difference - Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bShowAddHotspotsForIS">
			<Description><![CDATA["Show Additional Hotspots For IS"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isCurtainWallOpeningSWE">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isSunshadeObjectDA">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="bDoorCHE">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bForceUniformBottomReveal">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
	</Parameters>
</ParamSection>

</Symbol>

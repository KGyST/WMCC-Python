<Symbol IsArchivable="no" IsPlaceable="yes" MainGUID="D21E2D56-B516-43CA-ADCB-8106DD074EFD" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="34">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="no">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>C76BC373-89AE-4368-A490-BB2485825242</MainGUID>
	<MainGUID>3FCE1BC2-9644-44D4-9D5F-4DBF6C762CA4</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["Resize_A_B_ZZYZX"]]></MName>
		<MainGUID>33A17ABE-882E-11D6-95A3-00039318F8B6</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["LibraryGlobals13"]]></MName>
		<MainGUID>063CD85B-5902-43F6-840A-66E88F707D13</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_minimalspace"]]></MName>
		<MainGUID>DFA90ED8-737C-49BB-AE78-036B478908DF</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Resize_A_B_ZZYZX"]]></MName>
		<MainGUID>33A17ABE-882E-11D6-95A3-00039318F8B6</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_cabinet_credenza"]]></MName>
		<MainGUID>384333BB-8E48-4286-B8B8-A273CD9ED639</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_cornicetyp"]]></MName>
		<MainGUID>65AACBD6-5F33-43D6-A221-F7803082C990</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_cabinet_legtyp"]]></MName>
		<MainGUID>D8AC092B-0B7F-4FF8-BCD5-30B306AC7D04</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_warddoortyp"]]></MName>
		<MainGUID>525D1544-74FD-4C01-8E9A-8D252A936981</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabcontrol"]]></MName>
		<MainGUID>D512885C-336A-4161-B8CB-EE5DC5D09FFE</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>30C7F5D1-460B-49BD-AC57-9CE6D6A61C1D</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabcontrol"]]></MName>
		<MainGUID>D512885C-336A-4161-B8CB-EE5DC5D09FFE</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_warddoortyp"]]></MName>
		<MainGUID>525D1544-74FD-4C01-8E9A-8D252A936981</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[
if not(gs_shadow) then shadow off
if gs_detlevel_3D_m = 2 then	! Detailed
	resol gs_resol
else
	if gs_detlevel_3D_m = 1 then ! Simple
		resol 3
		gs_resol = 6
	else
		END	! Off
	endif
endif

pen gs_cont_pen


!-----Definitions-----
unID = 1

if gs_knob_type_m=0 then knob_d=0
if gs_knob_type_m=1 then knob_d=0.025
if gs_knob_type_m=2 then knob_d=0.025
if gs_knob_type_m=3 then knob_d=0.03
if gs_knob_type_m=4 then knob_d=0.024
if gs_knob_type_m=5 then knob_d=0.025
if gs_knob_type_m=6 then knob_d=0.025
if gs_knob_type_m=7 then knob_d=0.03
if gs_knob_type_m=8 then knob_d=0.03


! ==============================================================================
! Hotspots
! ==============================================================================
if iCabinetForm = SHAPE_SQUARE then
	call "Resize_A_B_ZZYZX" parameters ALL

	hotspot a/2, b, ZZYZX, unID : unID = unID + 1
	hotspot a/2, b, 0, unID 	: unID = unID + 1

	!-----Leg Height-----
	if gs_leg_type_m <> 0 then
		hotspot  0, 0,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  0, 0, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  0, 0, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  0, b,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  0, b, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  0, b, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  a, b,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  a, b, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  a, b, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  a, 0,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  a, 0, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  a, 0, leg_h, unID, leg_h, 2					: unID=unID+1
	endif

	!-----divisionHeight-----
	hotspot  0, 0,  0,    unID, divisionHeight, 1+128				: unID=unID+1
	hotspot  0, 0, -1, 	  unID, divisionHeight, 3					: unID=unID+1
	hotspot  0, 0, divisionHeight, unID, divisionHeight, 2			: unID=unID+1

	hotspot  0, b,  0,    unID, divisionHeight, 1+128				: unID=unID+1
	hotspot  0, b, -1, 	  unID, divisionHeight, 3					: unID=unID+1
	hotspot  0, b, divisionHeight, unID, divisionHeight, 2			: unID=unID+1

	hotspot  a, b,  0,    unID, divisionHeight, 1+128				: unID=unID+1
	hotspot  a, b, -1, 	  unID, divisionHeight, 3					: unID=unID+1
	hotspot  a, b, divisionHeight, unID, divisionHeight, 2			: unID=unID+1

	hotspot  a, 0,  0,    unID, divisionHeight, 1+128				: unID=unID+1
	hotspot  a, 0, -1, 	  unID, divisionHeight, 3					: unID=unID+1
	hotspot  a, 0, divisionHeight, unID, divisionHeight, 2			: unID=unID+1

else
	!-----Plan-----

	hotspot  0, B, 0, unID, A, 1+256					: unID=unID+1
	hotspot -1, B, 0, unID, A, 3						: unID=unID+1
	hotspot  A, B, 0, unID, A, 2						: unID=unID+1

	hotspot  0,  0, 0, unID, B, 1+256					: unID=unID+1
	hotspot  0, -1, 0, unID, B, 3						: unID=unID+1
	hotspot  0,  B, 0, unID, B, 2						: unID=unID+1

	hotspot  0,  0, 0, unID, sideDepth1, 1+128			: unID=unID+1
	hotspot -1,  0, 0, unID, sideDepth1, 3				: unID=unID+1
	hotspot  sideDepth1,  0, 0, unID, sideDepth1, 2		: unID=unID+1

	hotspot  A,  B, 0, unID, sideDepth2, 1+128			: unID=unID+1
	hotspot  A,  B+1, 0, unID, sideDepth2, 3			: unID=unID+1
	hotspot  A,  B-sideDepth2, 0, unID, sideDepth2, 2	: unID=unID+1

	if iCabinetForm = SHAPE_CORNER_L then
		!hotspot  sideDepth1,  B-sideDepth2, 0, unID	: unID=unID+1

		hotspot  0,  B-sideDepth2, 0, unID, sideDepth1, 1+128		: unID=unID+1
		hotspot -1,  B-sideDepth2, 0, unID, sideDepth1, 3			: unID=unID+1
		hotspot  sideDepth1,  B-sideDepth2, 0, unID, sideDepth1, 2	: unID=unID+1

		hotspot  sideDepth1,  B, 0, unID, sideDepth2, 1+128			: unID=unID+1
		hotspot  sideDepth1,  B+1, 0, unID, sideDepth2, 3			: unID=unID+1
		hotspot  sideDepth1,  B-sideDepth2, 0, unID, sideDepth2, 2	: unID=unID+1
	endif

	!-----ZZYZX-----
	hotspot  0, 0,  0,    unID, ZZYZX, 1+128				: unID=unID+1
	hotspot  0, 0, -1, 	  unID, ZZYZX, 3					: unID=unID+1
	hotspot  0, 0, ZZYZX, unID, ZZYZX, 2					: unID=unID+1

	hotspot  0, b,  0,    unID, ZZYZX, 1+128				: unID=unID+1
	hotspot  0, b, -1, 	  unID, ZZYZX, 3					: unID=unID+1
	hotspot  0, b, ZZYZX, unID, ZZYZX, 2					: unID=unID+1

	hotspot  a, b,  0,    unID, ZZYZX, 1+128				: unID=unID+1
	hotspot  a, b, -1, 	  unID, ZZYZX, 3					: unID=unID+1
	hotspot  a, b, ZZYZX, unID, ZZYZX, 2					: unID=unID+1

	hotspot  sideDepth1, 0,  0,    unID, ZZYZX, 1+128		: unID=unID+1
	hotspot  sideDepth1, 0, -1, unID, ZZYZX, 3				: unID=unID+1
	hotspot  sideDepth1, 0, ZZYZX, unID, ZZYZX, 2			: unID=unID+1

	hotspot  a, B-sideDepth2,  0,    unID, ZZYZX, 1+128		: unID=unID+1
	hotspot  a, B-sideDepth2, -1,    unID, ZZYZX, 3			: unID=unID+1
	hotspot  a, B-sideDepth2, ZZYZX, unID, ZZYZX, 2			: unID=unID+1

	if iCabinetForm = SHAPE_CORNER_L then
		hotspot  sideDepth1, B-sideDepth2,  0,    unID, ZZYZX, 1+128	: unID=unID+1
		hotspot  sideDepth1, B-sideDepth2, -1,    unID, ZZYZX, 3		: unID=unID+1
		hotspot  sideDepth1, B-sideDepth2, ZZYZX, unID, ZZYZX, 2		: unID=unID+1
	endif


	!-----Leg Height-----
	if gs_leg_type_m <> 0 then
		hotspot  0, 0,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  0, 0, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  0, 0, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  0, b,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  0, b, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  0, b, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  a, b,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  a, b, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  a, b, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  sideDepth1, 0,  0,    unID, leg_h, 1+128		: unID=unID+1
		hotspot  sideDepth1, 0, -1, unID, leg_h, 3				: unID=unID+1
		hotspot  sideDepth1, 0, leg_h, unID, leg_h, 2			: unID=unID+1

		hotspot  a, B-sideDepth2,  0,    unID, leg_h, 1+128		: unID=unID+1
		hotspot  a, B-sideDepth2, -1,    unID, leg_h, 3			: unID=unID+1
		hotspot  a, B-sideDepth2, leg_h, unID, leg_h, 2			: unID=unID+1

		if iCabinetForm = SHAPE_CORNER_L then
			hotspot  sideDepth1, B-sideDepth2,  0,    unID, leg_h, 1+128	: unID=unID+1
			hotspot  sideDepth1, B-sideDepth2, -1,    unID, leg_h, 3		: unID=unID+1
			hotspot  sideDepth1, B-sideDepth2, leg_h, unID, leg_h, 2		: unID=unID+1
		endif
	endif

	!-----divisionHeight-----
	hotspot  0, 0,  0,    unID, divisionHeight, 1+128				: unID=unID+1
	hotspot  0, 0, -1, 	  unID, divisionHeight, 3					: unID=unID+1
	hotspot  0, 0, divisionHeight, unID, divisionHeight, 2			: unID=unID+1

	hotspot  0, b,  0,    unID, divisionHeight, 1+128				: unID=unID+1
	hotspot  0, b, -1, 	  unID, divisionHeight, 3					: unID=unID+1
	hotspot  0, b, divisionHeight, unID, divisionHeight, 2			: unID=unID+1

	hotspot  a, b,  0,    unID, divisionHeight, 1+128				: unID=unID+1
	hotspot  a, b, -1, 	  unID, divisionHeight, 3					: unID=unID+1
	hotspot  a, b, divisionHeight, unID, divisionHeight, 2			: unID=unID+1

	hotspot  sideDepth1, 0,  0,    unID, divisionHeight, 1+128		: unID=unID+1
	hotspot  sideDepth1, 0, -1, unID, divisionHeight, 3				: unID=unID+1
	hotspot  sideDepth1, 0, divisionHeight, unID, divisionHeight, 2	: unID=unID+1

	hotspot  a, B-sideDepth2,  0,    unID, divisionHeight, 1+128		: unID=unID+1
	hotspot  a, B-sideDepth2, -1,    unID, divisionHeight, 3			: unID=unID+1
	hotspot  a, B-sideDepth2, divisionHeight, unID, divisionHeight, 2	: unID=unID+1

	if iCabinetForm = SHAPE_CORNER_L then
		hotspot  sideDepth1, B-sideDepth2,  0,    unID, divisionHeight, 1+128			: unID=unID+1
		hotspot  sideDepth1, B-sideDepth2, -1,    unID, divisionHeight, 3				: unID=unID+1
		hotspot  sideDepth1, B-sideDepth2, divisionHeight, unID, divisionHeight, 2		: unID=unID+1
	endif
endif


! ==============================================================================
! Base
! ==============================================================================
bUnder = 0
bAbove = 0
if iCabinetForm = SHAPE_SQUARE then
	add a/2, b, 0

	! ----- Credenza -----
	if bUnderDrawerOrDoor < bAboveDrawerOrDoor then
		bUnder = 1
	else
		bAbove = 1
	endif
	cutpolya 4, 1, divisionHeight+thickness*bUnder,
		-a/2, -b, 15,
		-a/2,  0, 15,
		 a/2,  0, 15,
		 a/2, -b, 15,
		 0, 0, divisionHeight+thickness*bUnder

	CALL "fa_cabinet_credenza" PARAMETERS ALL B=B-doorThickness*bUnderDrawerOrDoor,
											ZZYZX = divisionHeight+eps+thickness,
											cot = 0
	cutend

	cutpolya 4, 1, -divisionHeight-thickness*bUnder,
		-a/2, -b, 15,
		-a/2,  0, 15,
		 a/2,  0, 15,
		 a/2, -b, 15,
		 0, 0, -divisionHeight-thickness*bUnder
	addz divisionHeight-eps-thickness*bUnder
	CALL "fa_cabinet_credenza" PARAMETERS ALL B=B-doorThickness*bAboveDrawerOrDoor,
												ZZYZX = ZZYZX-divisionHeight+eps+thickness*bUnder,
												leg_h = 0
	del 1
	cutend

	lin_ -A/2+corOverhangL, -B+cooh+doorThickness*bUnderDrawerOrDoor, divisionHeight+thickness*bUnder, -A/2+corOverhangL, -B+cooh+doorThickness*bAboveDrawerOrDoor, divisionHeight+thickness*bUnder
	lin_ A/2-corOverhangR, -B+cooh+doorThickness*bUnderDrawerOrDoor, divisionHeight+thickness*bUnder, A/2-corOverhangR, -B+cooh+doorThickness*bAboveDrawerOrDoor, divisionHeight+thickness*bUnder

	! ----- Cornices -----
	mulx -1
	addz zzyzx-cot
	CALL "fa_cornicetyp" PARAMETERS ALL
	del 2

	! ----- Legs -----
	CALL "fa_cabinet_legtyp" PARAMETERS A=A,B=B-doorThickness*bUnderDrawerOrDoor, iCabinetForm=iCabinetForm,
										gs_detlevel_3D_m=gs_detlevel_3D_m,
										gs_leg_type_m=gs_leg_type_m,leg_h=leg_h,leg_w=leg_w,
										cooh=cooh,gs_resol=gs_resol,gs_leg_mat=gs_leg_mat,
										gs_cont_pen=gs_cont_pen,gs_lining_m=gs_lining_m

	del 1
else
	add 0, b, 0
	! ----- Cornices -----
	addz zzyzx-cot
	CALL "fa_cornicetyp" PARAMETERS ALL
	del 1

	! ----- Credenza -----
	if bUnderDrawerOrDoor < bAboveDrawerOrDoor then
		bUnder = 1
	else
		bAbove = 1
	endif
	cutpolya 4, 1, divisionHeight+thickness*bUnder,
		0, 0, 15,
		0, -b, 15,
		a, -b, 15,
		a, 0, 15,
		0, 0, divisionHeight+thickness*bUnder
	CALL "fa_cabinet_credenza" PARAMETERS ALL sideDepth1=sideDepth1-doorThickness*bUnderDrawerOrDoor,
											  sideDepth2=sideDepth2-doorThickness*bUnderDrawerOrDoor,
											  ZZYZX = divisionHeight+eps+thickness,
											  cot = 0
	cutend

	cutpolya 4, 1, -divisionHeight-thickness*bUnder,
		0, 0, 15,
		0, -b, 15,
		a, -b, 15,
		a, 0, 15,
		 0, 0, -divisionHeight-thickness*bUnder
	addz divisionHeight-eps-thickness*bUnder
	CALL "fa_cabinet_credenza" PARAMETERS ALL sideDepth1=sideDepth1-doorThickness*bAboveDrawerOrDoor,
											  sideDepth2=sideDepth2-doorThickness*bAboveDrawerOrDoor,
											  ZZYZX = ZZYZX-divisionHeight+eps+thickness*bUnder,
											  leg_h = 0
	del 1
	cutend

	lin_ A-corOverhangR, -sideDepth2+cooh+doorThickness*bUnderDrawerOrDoor, divisionHeight+thickness*bUnder, A-corOverhangR, -sideDepth2+cooh+doorThickness*bAboveDrawerOrDoor, divisionHeight+thickness*bUnder
	lin_ sideDepth1-cooh-doorThickness*bAboveDrawerOrDoor, -B+corOverhangR, divisionHeight+thickness*bUnder, sideDepth1-cooh-doorThickness*bUnderDrawerOrDoor, -B+corOverhangR, divisionHeight+thickness*bUnder


	! ----- Legs -----
	CALL "fa_cabinet_legtyp" PARAMETERS A=A,B=B, iCabinetForm=iCabinetForm,
										sideDepth1=sideDepth1-doorThickness*bUnderDrawerOrDoor,
										sideDepth2=sideDepth2-doorThickness*bUnderDrawerOrDoor,
										gs_detlevel_3D_m=gs_detlevel_3D_m,
										gs_leg_type_m=gs_leg_type_m,leg_h=leg_h,leg_w=leg_w,
										cooh=cooh,gs_resol=gs_resol,gs_leg_mat=gs_leg_mat,
										gs_cont_pen=gs_cont_pen,gs_lining_m=gs_lining_m
	del 1
endif


! ==============================================================================
! Interior Fittings
! ==============================================================================
if iFunctions <> INTERIOR_NONE and iFrontAbove <> FRONT_DRAWER then
	addz divisionHeight

	tempInteriorHeight = zzyzx-cot-divisionHeight-2*thickness
	nTempShelves = nShelves
	shelvesDistance=(tempInteriorHeight+thickness)/(nTempShelves+1)
	nTempHangers = nHangers
	hangerDistance=(tempInteriorHeight-0.1)/(nHangers)

	front = 1
	iTempDoorType = iFrontAbove
	tempFunctions = iFunctions
	bDrawerOrDoor = bAboveDrawerOrDoor
	tempSideDepth1 = sideDepth1 - cooh - doorThickness*bDrawerOrDoor
	tempSideDepth2 = sideDepth2 - cooh - doorThickness*bDrawerOrDoor

	gosub "Interior"

	del 1
endif

if iInteriorUnder <> INTERIOR_NONE and iFrontUnder <> FRONT_DRAWER then
	addz leg_h

	tempInteriorHeight = divisionHeight-leg_h-thickness
	nTempShelves = nShelvesUnder
	shelvesDistance=(tempInteriorHeight+thickness)/(nTempShelves+1)
	nTempHangers = nHangersUnder
	hangerDistance=(tempInteriorHeight-0.1)/(nHangers)

	front = 2
	iTempDoorType = iFrontUnder
	tempFunctions = iInteriorUnder
	bDrawerOrDoor = bUnderDrawerOrDoor
	tempSideDepth1 = sideDepth1 - cooh - doorThickness*bDrawerOrDoor
	tempSideDepth2 = sideDepth2 - cooh - doorThickness*bDrawerOrDoor

	gosub "Interior"

	del 1
endif


! ==============================================================================
! Door Settings
! ==============================================================================
if iFrontAbove = FRONT_SLIDING or iFrontAbove = FRONT_DOOR then
	addz divisionHeight + thickness/2*not(bUnderDrawerOrDoor)*(iFrontAbove = FRONT_DOOR)

	front = 1
	iTempDoorType = iFrontAbove
	bDrawerOrDoor = bAboveDrawerOrDoor
	gosub "Doors"

	del 1
endif

if iFrontUnder = FRONT_SLIDING or iFrontUnder = FRONT_DOOR then
	addz leg_h

	front = 2
	iTempDoorType = iFrontUnder
	bDrawerOrDoor = bUnderDrawerOrDoor
	gosub "Doors"

	del 1
endif

! ==============================================================================
! Drawer Settings
! ==============================================================================
if iFrontAbove = FRONT_DRAWER then
	addz divisionHeight + thickness/2*not(bUnderDrawerOrDoor)

	front = 1
	iTempDoorType = iFrontAbove
	bDrawerOrDoor = bAboveDrawerOrDoor
	gosub "Drawers"

	del 1
endif

if iFrontUnder = FRONT_DRAWER  then
	addz leg_h

	front = 2
	iTempDoorType = iFrontUnder
	bDrawerOrDoor = bUnderDrawerOrDoor
	gosub "Drawers"

	del 1
endif




! ======================================================================
! END
! ======================================================================

END

! ======================================================================
! SubRoutines
! ======================================================================
"Drawers":
	bMirrored = 0
	gs_full_edit = 1
	bFormMirror = 0
	bSliding = 0
	bAngleEdit = 0

	if iCabinetForm = SHAPE_SQUARE then

		nDrawerTempX = nDrawerHor
		nDrawerTempY = nDrawerVert
		tempDepth = B-cooh
		doorFullWidthTemp = doorFullWidth[front]
		doorStartX = 0
		doorStartY = doorThickness+cooh
		doorStartX = cabinetStartX+thickness/2
		gosub "doorCall"

	else

		if iCabinetForm = SHAPE_CORNER_L then
			tempSideDepth1 = sideDepth1 - cooh
			tempSideDepth2 = sideDepth2 - cooh
			nDrawerTempX = nDrawerHor
			nDrawerTempY = nDrawerVert
			tempDepth = tempSideDepth1
			doorFullWidthTemp = doorWidthB[front]-cornelLMin
			doorStartY = doorThickness+cooh
			doorStartX = cabinetStartX+thickness/2
			rotz 90
			mulx -1
			add	-doorStartX*2-doorWidthB[front]+cornelLMin , -sideDepth1, 0
			gosub "doorCall"
			del 3

			tempDepth = tempSideDepth2
			doorFullWidthTemp = doorWidthA[front]-cornelLMin
			doorStartX = sideDepth1-cooh+cornelLMin
			addy B-sideDepth2
			gosub "doorCall"
			del 1

			add sideDepth1-cooh, B-sideDepth2+cooh, thickness/2
			cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
				6, doorHeight[front],
				-doorThickness, doorThickness, 15,
				cornelLMin, doorThickness, 15,
				cornelLMin, 0, 15,
				0, 0, 15,
				0, -cornelLMin, 15,
				-doorThickness, -cornelLMin, 15
			gosub "textureVertical_01"
			del 1

		else
			tempSideDepth1 = sideDepth1 - cooh - doorThickness*bDrawerOrDoor
			tempSideDepth2 = sideDepth2 - cooh - doorThickness*bDrawerOrDoor
			tempDethL = tempSideDepth1/cos(90-beta)
			tempDethR = tempSideDepth2/cos(beta)
			nDrawerTempX = nDrawerHor
			nDrawerTempY = nDrawerVert
			tempDepth = min(tempDethL, tempDethR)-thickness
			doorFullWidthTemp = doorFullWidth[front]
			doorStartX = 0
			doorStartY = 0
			tempSideDepth1 = sideDepth1 - cooh - doorThickness*bDrawerOrDoor
			add tempSideDepth1,  cooh*(gs_lining_m=1 or gs_lining_m=3), 0
			rotz beta
			addx doorThickness/tan(beta)
			gosub "doorCall"
			del 3
		endif
	endif
return


"Doors":
	bMirrored = 0
	gs_full_edit = 1
	bFormMirror = 0
	bSliding = 0
	bAngleEdit = 1
	bDividedDoorWithMirror = 0

	if iCabinetForm = SHAPE_SQUARE then

		nDoorTemp = nDoor
		doorFullWidthTemp = doorFullWidth[front]
		doorStartX = 0
		doorStartY = doorThickness+cooh
		if iTempDoorType = FRONT_DOOR then doorStartX = cabinetStartX+thickness/2
		if iTempDoorType = FRONT_SLIDING  then doorStartX  = cabinetStartX+thickness
		gosub "doorCall"

	else

		if iCabinetForm = SHAPE_CORNER_L then
			bSliding = 1
			tempDoorAngle3D = doorAngle3D
			temp_gs_knob_type_m = gs_knob_type_m

			! For Hotspot
			if gs_knob_type_m=0 then knob_d=0
			if gs_knob_type_m=1 then knob_d=0.025
			if gs_knob_type_m=2 then knob_d=0.025
			if gs_knob_type_m=3 then knob_d=0.03
			if gs_knob_type_m=4 then knob_d=0.024
			if gs_knob_type_m=5 then knob_d=0.025
			if gs_knob_type_m=6 then knob_d=0.025
			if gs_knob_type_m=7 then knob_d=0.03
			if gs_knob_type_m=8 then knob_d=0.03

			! Door with Knob ------------------------------------------
			doorFullWidthTemp	= doorWidthB[front]
			nDoorTemp			= nDoor
			bAngleEdit			= 0
			doorStartX			= 0
			doorStartY			= 0
			rotz 90
			mulx -1

			! angle type editing, base hotspot
			hotspot -thickness/2 - knob_pl_x, -sideDepth1 + cooh - knob_d + 0.001, knob_pl_y + thickness/2, unID, doorAngle3D, 4+128 : unID=unID+1

			add	-B + sideDepth2 - cooh - doorThickness , -A + thickness/2, 0

			! angle type editing, center of angle
			! angle type editing, reference hotspot
			hotspot 0,					0,	knob_pl_y + thickness/2, unID, doorAngle3D, 6+512	: unID=unID+1
			hotspot 0,					0,	knob_pl_y + thickness/2, unID, doorAngle3D, 7		: unID=unID+1


			rotz -doorAngle3D
			add doorThickness, doorWidthA[front] + doorThickness,0
			doorAngle3D = 0

			gosub "doorCall"

			! angle type editing, moving hotspot
			hotspot doorFullWidthTemp - knob_pl_x,	-doorThickness -knob_d,	knob_pl_y + thickness/2, unID, doorAngle3D, 5 : unID=unID+1

			del 5

			! Door without Knob ------------------------------------------
			doorAngle3D			= tempDoorAngle3D
			bAngleEdit			= 0
			gs_full_edit		= 0
			gs_knob_type_m		= 0
			doorFullWidthTemp	= doorWidthA[front]
			doorStartX			= 0
			doorStartY			= 0
			if iDoorStyle = 15 then
				bDividedDoorWithMirror = 1		!one door with 2 different sides
			endif

			mulx -1
			add	-A + thickness/2, B-sideDepth2 + doorThickness + cooh, 0

			gosub "doorCall"
			del 2

			doorAngle3D = tempDoorAngle3D
			gs_knob_type_m = temp_gs_knob_type_m

		else

			nDoorTemp = nDoor
			doorFullWidthTemp = doorFullWidth[front]
			doorStartX = 0
			doorStartY = 0
			tempSideDepth1 = sideDepth1 - cooh - doorThickness*bDrawerOrDoor
			add tempSideDepth1,  cooh*(gs_lining_m=1 or gs_lining_m=3), 0
			rotz beta
			addx doorThickness/tan(beta)
			gosub "doorCall"
			del 3
		endif
	endif
return


"Interior":
	if iCabinetForm = SHAPE_SQUARE then
		insideA = A - corOverhangR  - corOverhangL - 2*thickness

		! ----- Vertical Panels -----
		nVerticalPanel=ceil(nDoor/2)-1
		material gs_cabinet_mat

		add corOverhangL+(doorFullWidth[front]/nDoor)+(ceil(nDoor/2)=nDoor/2)*(doorFullWidth[front]/nDoor)+thickness/2*bDrawerOrDoor+thickness*not(bDrawerOrDoor), B-thickness, thickness

		for i=1 to nVerticalPanel
			prism_ 4, tempInteriorHeight,
					thickness/2,0,15,
					-thickness/2,0,15,
					-thickness/2,-b+doorThickness*(iTempDoorType > FRONT_NONE)+cooh+thickness+doorThickness*(iTempDoorType = FRONT_DOOR),15,
					thickness/2,-b+doorThickness*(iTempDoorType > FRONT_NONE)+cooh+thickness+doorThickness*(iTempDoorType = FRONT_DOOR),15
			gosub "textureVertical_01"
			addx (doorFullWidth[front]/nDoor)*2
		next i
		del nVerticalPanel

		! ----- Cut -----
		for i=1 to nVerticalPanel
			cutpolya 4, 1, 0,
					thickness/2,0,15,
					-thickness/2,0,15,
					-thickness/2,-b+doorThickness*(iTempDoorType > FRONT_NONE)+cooh+thickness+doorThickness*(iTempDoorType = FRONT_DOOR),15,
					thickness/2,-b+doorThickness*(iTempDoorType > FRONT_NONE)+cooh+thickness+doorThickness*(iTempDoorType = FRONT_DOOR),15
			addx (doorFullWidth[front]/nDoor)*2
		next i
		del nVerticalPanel
		del 1

		! ----- Interior -----
		if tempFunctions = INTERIOR_COMBINED then
			insideT = insideA
			if nDoor >= 3 then
				if iTempDoorType = FRONT_DOOR then
					insideA = ((insideA-thickness*(nDoor-1))/nDoor)*(nDoor-2)+thickness*(nDoor-3)
				else
					insideA = ((insideA)/nDoor)*(nDoor-2)-thickness/2
				endif
			else
				insideA = (insideA-thickness)/2
			endif
		endif

		if tempFunctions = INTERIOR_SHELVES or tempFunctions = INTERIOR_COMBINED then
			add thickness+corOverhangL, B-thickness,thickness
			gosub "shelves"
			del 1
		endif

		if tempFunctions = INTERIOR_COMBINED and nDoor < 3 then
			add thickness+corOverhangL, B-thickness,thickness
			addx insideA
			material gs_cabinet_mat
			prism_ 4, tempInteriorHeight,
					thickness,0,15,
					thickness,-b+doorThickness+cooh+thickness,15,
					0,-b+doorThickness+cooh+thickness,15,
					0,0,15
			gosub "textureVertical_01"
			del 2
		endif

		if tempFunctions = INTERIOR_HANGER or tempFunctions = INTERIOR_COMBINED then
			if tempFunctions = INTERIOR_HANGER then
				insideTemp = insideA
				addx thickness+corOverhangL
				gosub "hangers"
				del 1
			else
				insideTemp = insideT - insideA -thickness
				addx thickness+corOverhangL+insideA+thickness
				gosub "hangers"
				del 1
			endif
		endif

		for i=1 to nVerticalPanel
			cutend
		next i

	else

		if tempFunctions = INTERIOR_SHELVES then
			gosub "shelves"
		endif
		if tempFunctions = INTERIOR_HANGER then
			gosub "hangers"
		endif
	endif

return


"shelves":
	material gs_shelf_mat
	addz -thickness
	for i=1 to nTempShelves
		addz shelvesDistance
		if iCabinetForm = SHAPE_SQUARE then
			prism_ 4, thickness,
					insideA,0,15,
					insideA,-b+doorThickness+cooh+thickness+doorThickness*(iTempDoorType = FRONT_DOOR or iTempDoorType = FRONT_SLIDING),15,
					0,-b+doorThickness+cooh+thickness+doorThickness*(iTempDoorType = FRONT_DOOR or iTempDoorType = FRONT_SLIDING),15,
					0,0,15
		else
			if iCabinetForm = SHAPE_CORNER_L then
				tempSideDepth1 = sideDepth1 - cooh - doorThickness
				tempSideDepth2 = sideDepth2 - cooh - doorThickness
				prism_ 4, thickness,
					thickness, b-thickness, 15,
					a-thickness-corOverhangR, b-thickness, 15,
					a-thickness-corOverhangR, b-tempSideDepth2, 15,
					tempSideDepth1, b-tempSideDepth2, 8
				gosub "textureHorizontal_02"

				prism_ 4, thickness,
					thickness, b-thickness, 8,
					tempSideDepth1, b-tempSideDepth2, 15,
					tempSideDepth1, thickness+corOverhangL, 15,
					thickness, thickness+corOverhangL, 15
				gosub "textureVertical_02"

			else
				prism_ 5, thickness,
					thickness, b-thickness, 15,
					a-thickness-corOverhangR, b-thickness, 15,
					a-thickness-corOverhangR, b-tempSideDepth2-thickness*tan(beta)+doorThickness/cos(beta), 15,
					tempSideDepth1+thickness/tan(beta)-doorThickness/sin(beta), thickness+corOverhangL, 15,
					thickness, thickness+corOverhangL, 15
				gosub "textureAlha"
			endif
		endif
	next i
	del nTempShelves+1
return


"hangers":
	material gs_hanger_mat
	hangerWidth = 0.03

	if iCabinetForm = SHAPE_CORNER_C then
		cutpolya 4, 1, 0,
				-1, -1, 15,
				-1, b+1, 15,
				thickness, b+1, 15,
				thickness, -1, 15

		cutpolya 4, 1, 0,
				-1, thickness+corOverhangL, 15,
				-1, -1, 15,
				a+1, -1, 15,
				a+1, thickness+corOverhangL, 15

		cutpolya 4, 1, 0,
				-1, b-thickness, 15,
				-1, b+1, 15,
				a+1, b+1, 15,
				a+1, b-thickness, 15

		cutpolya 4, 1, 0,
				a-thickness-corOverhangR, b+1, 15,
				a-thickness-corOverhangR, -1, 15,
				a+1, -1, 15,
				a+1, b+1, 15
	endif

	for i=1 to nTempHangers
		tempSideDepth1 = sideDepth1 - cooh - doorThickness
		tempSideDepth2 = sideDepth2 - cooh - doorThickness
		addz hangerDistance
		if iCabinetForm = SHAPE_SQUARE then
			tube 6,4,1+2+16+32,
					-hangerWidth/2,-hangerWidth/2,1,
					0,-hangerWidth/2,900,
					hangerWidth/2,-hangerWidth/2,3001,
					hangerWidth/2,-hangerWidth*1.5,1,
					0,-hangerWidth*1.5,900,
					0,-180,4001,

					-1, b-tempSideDepth2/2, 0, 0,
					0, b-tempSideDepth2/2, 0, 0,
					insideTemp, b-tempSideDepth2/2, 0, 0,
					insideTemp+1, b-tempSideDepth2/2, 0, 0
			gosub "textureHorizontal_02"
		else
			if iCabinetForm = SHAPE_CORNER_L then
				tube 6,4,1+2+16+32,
						-hangerWidth/2,-hangerWidth/2,1,
						0,-hangerWidth/2,900,
						hangerWidth/2,-hangerWidth/2,3001,
						hangerWidth/2,-hangerWidth*1.5,1,
						0,-hangerWidth*1.5,900,
						0,-180,4001,

						tempSideDepth1/2, thickness+corOverhangL-1, 0, 0,
						tempSideDepth1/2, thickness+corOverhangL, 0, 0,
						tempSideDepth1/2, b-thickness, 0, 0,
						tempSideDepth1/2, b-thickness+1, 0, 0
				gosub "textureVertical_02"

				tube 6,4,1+2+16+32,
						-hangerWidth/2,-hangerWidth/2,1,
						0,-hangerWidth/2,900,
						hangerWidth/2,-hangerWidth/2,3001,
						hangerWidth/2,-hangerWidth*1.5,1,
						0,-hangerWidth*1.5,900,
						0,-180,4001,

						thickness-1, b-tempSideDepth2/2, 0, 0,
						tempSideDepth1/2, b-tempSideDepth2/2, 0, 0,
						a-thickness-corOverhangR, b-tempSideDepth2/2, 0, 0,
						a-thickness-corOverhangR+1, b-tempSideDepth2/2, 0, 0
				gosub "textureHorizontal_02"
			else
				tube 6,4,1+2+16+32,
						-hangerWidth/2,-hangerWidth/2,1,
						0,-hangerWidth/2,900,
						hangerWidth/2,-hangerWidth/2,3001,
						hangerWidth/2,-hangerWidth*1.5,1,
						0,-hangerWidth*1.5,900,
						0,-180,4001,

						0, corOverhangL, 0, 0,
						thickness, thickness+corOverhangL, 0, 0,
						B/tan(beta), B, 0, 0,
						B/tan(beta)+cos(beta), B+sin(beta), 0, 0
				gosub "textureAlha"
			endif
		endif
	next i
	del nTempHangers

	if iCabinetForm = SHAPE_CORNER_C then
		cutend
		cutend
		cutend
		cutend
	endif
return


"doorCall":
	if iTempDoorType = FRONT_DOOR then
		add doorStartX, doorStartY,thickness/2
		for i=1 to nDoorTemp
			if ceil(nDoorTemp/2)=nDoorTemp/2 then
				if ceil(i/2)<>i/2  then
					bMirrored = 0
					bFormMirror = 0
				else
					bMirrored = 1
					if iDoorStyle = 18 and nDoorTemp = 2 then
						bFormMirror = 0
					else
						bFormMirror = 1
					endif
				endif
			else
				if ceil(i/2)<>i/2 and i > 1 then
					bMirrored = 1
					bFormMirror = 0
				else
					bMirrored = 0
					bFormMirror = 1
					if i = 1 then bFormMirror = 0
					if 	bDividedDoorWithMirror = 1 then bFormMirror = 1
				endif
			endif
			if iDoorStyle = 16 then bFormMirror = 0
			call "fa_warddoortyp" parameters all bNotMacro = 0,
												gs_full_edit = gs_full_edit,
												bAngleEdit = bAngleEdit,
												bMirrored = bMirrored,
												bFormMirror = bFormMirror,
												bSliding = bSliding,
												cabdoortyp_unID = unID,
												doorWidth = doorFullWidthTemp/nDoorTemp,
												doorHeight = doorHeight[front],
												returned_parameters cabdoortyp_unID
			unID = cabdoortyp_unID
			addx doorFullWidthTemp/nDoorTemp
		next i
		del nDoorTemp+1
	endif

	if iTempDoorType = FRONT_SLIDING then
		bSliding = 1
		add doorStartX, doorStartY,thickness
		for i=1 to nDoorTemp
			if ceil(nDoorTemp/2)=nDoorTemp/2 then
				if ceil(i/2)<>i/2 then
					bMirrored = 1
					bFormMirror = 0
					slidingOffset =  doorThickness
					knobOffset = -knob_d
				else
					bMirrored = 0
					if iDoorStyle = 18 and nDoorTemp = 2 then
						bFormMirror = 0
					else
						bFormMirror = 1
					endif
					slidingOffset = 0
					knobOffset = -knob_d - doorThickness
				endif
			else
				if ceil(i/2)<>i/2 then
					bMirrored = 0
					if i = 1 then bMirrored = 1
					bFormMirror = 0
					slidingOffset =  doorThickness
					knobOffset = -knob_d
				else
					bMirrored = 1
					bFormMirror = 1
					slidingOffset = 0
					knobOffset = -knob_d - doorThickness
				endif
			endif
			if iDoorStyle = 16 then bFormMirror = 0

			doorTempWidth = doorFullWidthTemp/nDoorTemp

			doordirection = 0
			if not(bMirrored) then
				hostspotStart = doorTempWidth-knob_pl_x
				doordirection = -1
			else
				hostspotStart = knob_pl_x
				doordirection = 1
			endif
			openingoffset = doorTempWidth * (openingDoor[front][i]/100) * doordirection

			hotspot  hostspotStart, knobOffset, knob_pl_y,   			 unID, openingDoorLength[front][i], 1+128						: unID=unID+1
			hotspot  hostspotStart-doordirection, knobOffset, knob_pl_y, unID, openingDoorLength[front][i], 3							: unID=unID+1
			hotspot  hostspotStart+openingoffset, knobOffset, knob_pl_y, unID, openingDoorLength[front][i], 2, openingDoor[front][i]	: unID=unID+1

			add openingoffset, slidingOffset, 0
			call "fa_warddoortyp" parameters all bNotMacro = 0,
												gs_full_edit = gs_full_edit,
												bAngleEdit = 0,
												doorAngle3D = 0,
												bMirrored = bMirrored,
												bFormMirror = bFormMirror,
												bSliding = bSliding,
												cabdoortyp_unID = unID,
												doorWidth = doorFullWidthTemp/nDoorTemp,
												doorHeight = doorHeight[front],
												returned_parameters cabdoortyp_unID
			unID = cabdoortyp_unID
			del 1
			addx doorFullWidthTemp/nDoorTemp
		next i
		del nDoorTemp+1
	endif

	if iTempDoorType = FRONT_DRAWER then
		add doorStartX, doorStartY,thickness/2
		for i=1 to nDrawerTempX
			for ii=1 to nDrawerTempY
				call "fa_warddoortyp" parameters all bNotMacro = 0,
													gs_full_edit = gs_full_edit,
													!bAngleEdit = 0,
													doorAngle3D = 0,
													bDrawer = 1,
													iDrawerKnobPos = 1,
													drawerDepth = tempDepth,
													iDoorStyle = iDrawerStyle,
													matDoorDecor1 = gs_drawer_mat,
													matDoorFrame = gs_drawer_mat,
													doorFrameWidth = drawerFrameWidth,
													nVerticalMullion = 0,
													nHorizontalMullion = 0,
													bMirrored = bMirrored,
													bFormMirror = bFormMirror,
													bSliding = bSliding,
													cabdoortyp_unID = unID,
													doorWidth = doorFullWidthTemp/nDrawerTempX,
													doorHeight = doorHeight[front]/nDrawerTempY,
													returned_parameters cabdoortyp_unID
				unID = cabdoortyp_unID
				addz doorHeight[front]/nDrawerTempY
			next ii
			del nDrawerTempY
			addx doorFullWidthTemp/nDrawerTempX
		next i
		del nDrawerTempX+1
	endif
return


! ======================================================================
! Textures
! ======================================================================
"textureVertical_01":
	roty 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureVertical_02":
	roty 90
	rotz 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 2

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureHorizontal_01":
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureHorizontal_02":
	rotx 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureAlha":
	rotz beta+90
	roty 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 2

	coor 2, -1, -2, -3, -4

	base

	body -1
return

]]></Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[
unID = 1
pen gs_cont_pen
fill gs_fill_type
drawindex 20

if iFunctions = INTERIOR_NONE | iFunctions = INTERIOR_SHELVES | iSymbolType = 2 | iSymbolType = 3 then
	bHangers = 0
endif
hangerStartX = 0.05

! ======================================================================
! HOTSPOTS
! ======================================================================
if iCabinetForm = SHAPE_SQUARE then
	CALL "Resize_A_B_ZZYZX" Parameters ALL
	hotspot2  A/2, B, unID				: unID=unID+1
	hotspot2  A/2, B/2, unID			: unID=unID+1
else
	hotspot2  0, B, unID, A, 1+256		: unID=unID+1
	hotspot2 -1, B, unID, A, 3			: unID=unID+1
	hotspot2  A, B, unID, A, 2			: unID=unID+1

	hotspot2  0,  0, unID, B, 1+256		: unID=unID+1
	hotspot2  0, -1, unID, B, 3			: unID=unID+1
	hotspot2  0,  B, unID, B, 2			: unID=unID+1

	hotspot2  0,  0, unID, sideDepth1, 1+128		: unID=unID+1
	hotspot2 -1,  0, unID, sideDepth1, 3			: unID=unID+1
	hotspot2  sideDepth1,  0, unID, sideDepth1, 2	: unID=unID+1

	hotspot2  A,  B, unID, sideDepth2, 1+128		: unID=unID+1
	hotspot2  A,  B+1, unID, sideDepth2, 3			: unID=unID+1
	hotspot2  A,  B-sideDepth2, unID, sideDepth2, 2	: unID=unID+1

	if iCabinetForm = SHAPE_CORNER_L then
		!hotspot2  sideDepth1,  B-sideDepth2, unID	: unID=unID+1

		hotspot2  0,  B-sideDepth2, unID, sideDepth1, 1+128			: unID=unID+1
		hotspot2 -1,  B-sideDepth2, unID, sideDepth1, 3				: unID=unID+1
		hotspot2  sideDepth1,  B-sideDepth2, unID, sideDepth1, 2	: unID=unID+1

		hotspot2  sideDepth1,  B, unID, sideDepth2, 1+128			: unID=unID+1
		hotspot2  sideDepth1,  B+1, unID, sideDepth2, 3				: unID=unID+1
		hotspot2  sideDepth1,  B-sideDepth2, unID, sideDepth2, 2	: unID=unID+1
	endif
endif


! ======================================================================
! BODY
! ======================================================================
if iCabinetForm = SHAPE_SQUARE then
	! ----- Base Polygon -----
	poly2_b 5,3,gs_fill_pen,gs_back_pen,
		0,0,1,
		A,0,1,
		A,B,1,
		0,B,1,
		0,0,-1

	! ----- 2D Symbol Type -----
	if iSymbolType = 4 or iSymbolType = 5 then
		line2 0, doorThickness, a, doorThickness
	endif

	if iSymbolType > 0 and  iSymbolType < 4 then		! Draw Cabinet
		add2 -a/nDoor*2,0
			for i=1 to ceil(nDoor/2-1)
				line2 a,0,a,b
				add2 -a/nDoor*2,0
			next i
			del ceil(nDoor/2-1)
		del 1
	else
		if iSymbolType <> 6 then		! Draw Door number
			add2 -a/nDoor,0
				for i=1 TO nDoor
					line2 a,0,a,doorThickness
					add2 -a/nDoor,0
				next i
				del nDoor
			del 1
		endif
	endif

	if iSymbolType = 2 then			!Draw X
		for i=1 to int(nDoor/2)
			line2 a,0,a-a/nDoor*2,b
			line2 a-a/nDoor*2,0,a,b
			add2 -a/nDoor*2,0
		next i
		del int(nDoor/2)

		if int(nDoor/2)<>nDoor/2 then
			line2 0,0,a/nDoor,b
			line2 a/nDoor,0,0,b
		endif
	endif

	if iSymbolType = 3 then			! Draw V
		for i=1 to int(nDoor/2)
			line2 a,b,a-a/nDoor,0
			line2 a-a/nDoor,0,a-a/nDoor*2,b
			add2 -a/nDoor*2,0
		next i
		del int(nDoor/2)

		if int(nDoor/2)<>nDoor/2 then
			line2 0,0,a/nDoor,b
		endif
	endif

	if iSymbolType = 5 or iSymbolType = 6 then			!Draw Door Open
		if int(nDoor/2)<>nDoor/2 then   nn=1
		if int(nDoor/2)=nDoor/2  then	nn=0

		add2 a/nDoor*nn,0
		for i=1 to int(nDoor/2)
			arc2 0,0,a/nDoor,360-openingAngle2D,0
			line2 0,0,cos(openingAngle2D)*a/nDoor,0-sin(openingAngle2D)*a/nDoor

			arc2 2*a/nDoor,0,a/nDoor,180,180+openingAngle2D
			line2 2*a/nDoor,0,2*a/nDoor-cos(openingAngle2D)*a/nDoor,0-sin(openingAngle2D)*a/nDoor

			add2 a/nDoor*2,0
		next i
		del int(nDoor/2)
		del 1

		if int(nDoor/2)<>nDoor/2 then
				arc2 0,0,a/nDoor,360-openingAngle2D,0
				line2 0,0,cos(openingAngle2D)*a/nDoor,0-sin(openingAngle2D)*a/nDoor
		endif
	endif

	! ----- Hangers -----
	if bHangers then
		if iFunctions = INTERIOR_HANGER then
			line2 0,b/2,a,b/2
			hangerLength = a
			hangerWidth = b
			add2 0,(b-doorThickness)/2
			gosub "hangers"
			del 1
		endif

		if iFunctions = INTERIOR_COMBINED then
			if nDoor >= 3 then
				insideA = (A/nDoor)*(nDoor-2)
			else
				insideA = A/2
				line2 a/2,0,a/2,b
			endif

			line2 insideA,b/2,A,b/2
			line2 insideA,0,insideA,b
			add2 insideA,(b-doorThickness)/2
			hangerLength = a-insideA
			hangerWidth = b
			gosub "hangers"
			del 1
		endif
	endif
else
	! ----- Base Polygon -----
	put 0, 0, 1
	put 0, B, 1
	put A, B, 1
	put A, B-sideDepth2, 1
	if iCabinetForm = SHAPE_CORNER_L then put sideDepth1, B-sideDepth2, 1
	put sideDepth1, 0, 1
	put 0, 0, -1

	poly2_b nsp/3,3,gs_fill_pen,gs_back_pen,
		get(nsp)

	if iCabinetForm = SHAPE_CORNER_C then
		if abs(sideDepth1-A)< EPS or abs(sideDepth2-B) < EPS then
			beta2d = 90
		else
			beta2d = atn((B-sideDepth2)/(A-sideDepth1))
		endif
	endif

	if iSymbolType = 4 | iSymbolType = 5 then
		if iCabinetForm = SHAPE_CORNER_L then
			line2 sideDepth1-doorThickness, 0, sideDepth1-doorThickness, B-sideDepth2+doorThickness
			line2 sideDepth1-doorThickness, B-sideDepth2+doorThickness, A, B-sideDepth2+doorThickness
		else
			line2 sideDepth1-doorThickness/sin(beta2d), 0, A, B-sideDepth2+doorThickness/cos(beta2d)
		endif
	endif

	if iSymbolType = 5 or iSymbolType = 6 then			!Draw Door Open
		if iCabinetForm = SHAPE_CORNER_L then
			add2 A, B-sideDepth2
			rot2 openingAngle2D
			line2 0,0, -A+sideDepth1, 0
			line2 -A+sideDepth1, 0, -A+sideDepth1, -B+sideDepth2
			del 2
			line2 sideDepth1, 0, A-(A-sideDepth1)*cos(openingAngle2D)+(B-sideDepth2)*sin(openingAngle2D), B-sideDepth2-(A-sideDepth1)*sin(openingAngle2D)-(B-sideDepth2)*cos(openingAngle2D)
		else
			doorSize2D = sqr((B-sideDepth2)**2 + (A-sideDepth1)**2)
			arc2 sideDepth1, 0, doorSize2D, beta2d-openingAngle2D, beta2d
			add2 sideDepth1, 0
			rot2 beta2d-openingAngle2D
			line2 0, 0, doorSize2D, 0
			del 2
		endif
	endif

	! ----- Hangers -----
	if bHangers then
		line2 sideDepth1/2, 0, sideDepth1/2, B-sideDepth2+sideDepth2/2
		line2 sideDepth1/2, B-sideDepth2+sideDepth2/2, A, B-sideDepth2+sideDepth2/2

		add2 sideDepth1/2-hangerStartX, B-sideDepth2+sideDepth2/2
		hangerLength = A-sideDepth1/2+hangerStartX
		hangerWidth = sideDepth2
		gosub "hangers"
		del 1

		add2 sideDepth1/2, 0
		rot2 90
		hangerLength = B-sideDepth2+hangerStartX
		hangerWidth = sideDepth1
		gosub "hangers"
		del 2

	endif
endif


! ======================================================================
! Minimal Space
! ======================================================================
if MSFront> EPS then
	reqBMinSpace = 0
	drawindex 10
	success = LIBRARYGLOBAL ("LibraryGlobals13", "showBMinSpace", reqBMinSpace)
	if success > 0 and reqBMinSpace then
		if iCabinetForm = SHAPE_SQUARE then
			call "fa_minimalspace" parameters all 	MSType 	= 1,
													unID 	= 3000
		else
			if iCabinetForm = SHAPE_CORNER_L then
				call "fa_minimalspace" parameters all 	MSType 	= 30,
														unID 	= 3000,
														diff = sideDepth2,
														diff2 = sideDepth1,
														dob_face_type = 1
			else
				call "fa_minimalspace" parameters all 	MSType 	= 0,
														unID 	= 3000,
									returned_parameters reqBMinSpace,
														MSFillType,
														MSFillPen,
														MSFillBackPen,
														MSContLineType,
														MSContLinePen
			endif
		endif
	endif
	if reqBMinSpace <> 0 and iCabinetForm <> SHAPE_SQUARE and iCabinetForm <> SHAPE_CORNER_L then
		fill MSFillType
		line_type MSContLineType
		pen MSContLinePen
		unID = 3050

		if abs(sideDepth1-a)< EPS or abs(sideDepth2-b) < EPS then
			alpha = 90
		else
			alpha = atn((b-sideDepth2)/(a-sideDepth1))
		endif

		poly2_b 5, 2+4,MSFillPen,MSFillBackPen,
				sideDepth1,      0,      1,
				a,      b-sideDepth2,      1,
				a+MSFront*sin(alpha), b-sideDepth2-MSFront*cos(alpha),    1,
				sideDepth1+MSFront*sin(alpha),      -MSFront*cos(alpha),    1,
				sideDepth1,      0,      1

		hotspot2  sideDepth1+MSFront*sin(alpha), -MSFront*cos(alpha),	unID : unID = unID + 1
		hotspot2  a+MSFront*sin(alpha), b-sideDepth2-MSFront*cos(alpha),	unID : unID = unID + 1

		line2 sideDepth1, 0, sideDepth1+MSFront*sin(alpha),-MSFront*cos(alpha)
		line2 sideDepth1+MSFront*sin(alpha),  -MSFront*cos(alpha), a+MSFront*sin(alpha), b-sideDepth2-MSFront*cos(alpha)
		line2 a, b-sideDepth2, a+MSFront*sin(alpha), b-sideDepth2-MSFront*cos(alpha)
	endif
endif

END

! ======================================================================
! SubRoutines
! ======================================================================

"hangers":
	hangerDistance = 0.1
	add2 hangerDistance+hangerStartX, 0
	hn = hangerLength - hangerDistance -hangerStartX
	cn=int(hn/hangerDistance)
	tempHangerWidth = hangerWidth/2 - 0.05 - doorThickness
	for ii=1 TO cn
		ff=rnd(.2)
		rot2 ff*100
		line2 -doorThickness, -tempHangerWidth, doorThickness, tempHangerWidth
		del 1
		add2 hangerDistance, 0
	next ii
	del cn+1
return
]]></Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[
EPS=0.0001

dim stDetlevel3D[3]
	stDetlevel3D[1] = `Detailed`
	stDetlevel3D[2] = `Simple`
	stDetlevel3D[3] = `Off`

DIM stSymbolTypes[6]
	stSymbolTypes[1]=`Style 1`
	stSymbolTypes[2]=`Style 2`
	stSymbolTypes[3]=`Style 3`
	stSymbolTypes[4]=`Style 4`
	stSymbolTypes[5]=`Style 5`
	stSymbolTypes[6]=`Style 6`

dim stCabinetForm[3]
	stCabinetForm[1] = `Square`
	stCabinetForm[2] = `Corner-L`
	stCabinetForm[3] = `Corner-C`

SHAPE_SQUARE   = 1
SHAPE_CORNER_L = 2
SHAPE_CORNER_C = 3

dim stDoorStyle[12]
	stDoorStyle[1] = `Style 1`
	stDoorStyle[2] = `Style 2`
	stDoorStyle[3] = `Style 3`
	stDoorStyle[4] = `Style 4`
	stDoorStyle[5] = `Style 5`
	stDoorStyle[6] = `Style 6`
	stDoorStyle[7] = `Style 7`
	stDoorStyle[8] = `Style 8`
	stDoorStyle[9] = `Style 9`
	stDoorStyle[10] = `Style 10`
	stDoorStyle[11] = `Style 11`
	stDoorStyle[12] = `Custom Panel`

dim stKnobTypes[9]
	stKnobTypes[1]=`None`
	stKnobTypes[2]=`Style 1`
	stKnobTypes[3]=`Style 2`
	stKnobTypes[4]=`Style 3`
	stKnobTypes[5]=`Style 4`
	stKnobTypes[6]=`Style 5`
	stKnobTypes[7]=`Style 6`
	stKnobTypes[8]=`Style 7`
	stKnobTypes[9]=`Style 8`

dim stKnobPlacing[2]
	stKnobPlacing[1]=`Vertical`
	stKnobPlacing[2]=`Horizontal`

dim stInteriorType[4]
	stInteriorType[1]=`Shelf`
	stInteriorType[2]=`Hanger`
	stInteriorType[3]=`Combined`
	stInteriorType[4]=`None`

INTERIOR_NONE		= 0
INTERIOR_COMBINED	= 1
INTERIOR_HANGER		= 2
INTERIOR_SHELVES	= 3

dim stCorniceTypes[5]
	stCorniceTypes[1]=`None`
	stCorniceTypes[2]=`Style 1`
	stCorniceTypes[3]=`Style 2`
	stCorniceTypes[4]=`Style 3`
	stCorniceTypes[5]=`Style 4`

dim stCorniceOverhang[4]
	stCorniceOverhang[1]=`Front`
	stCorniceOverhang[2]=`Front and Left Side`
	stCorniceOverhang[3]=`Front and Right Side`
	stCorniceOverhang[4]=`Front and Both Side`

dim stLegTypes[7]
	stLegTypes[1]=`None`
	stLegTypes[2]=`Style 1`
	stLegTypes[3]=`Style 2`
	stLegTypes[4]=`Style 3`
	stLegTypes[5]=`Style 4`
	stLegTypes[6]=`Style 5`
	stLegTypes[7]=`Style 6`

dim stFrontTypes[4]
	stFrontTypes[1]=`Door`
	stFrontTypes[2]=`Sliding Door`
	stFrontTypes[3]=`Drawer`
	stFrontTypes[4]=`None`

FRONT_NONE		= 0
FRONT_DRAWER	= 1
FRONT_SLIDING	= 2
FRONT_DOOR		= 3

dim stDrawerTypes[4]
	stDrawerTypes[1]=`Style 1`
	stDrawerTypes[2]=`Style 2`
	stDrawerTypes[3]=`Style 3`
	stDrawerTypes[4]=`Style 4`


!-----Definitions-----
thickness = 0.02


!-----Need Parameter Script and 3D-----
corOverhang  = 0
corOverhangL = 0
corOverhangR = 0
cabinetStartX = 0
cornelLMin = 0.03
if gs_cornice_type_m=0 then
	cot=0
	cooh=0
else
	if gs_lining_m=1 then
		corOverhangL = cooh
		corOverhangR = cooh
		cabinetStartX = cooh
	endif
	if gs_lining_m=2 then
		corOverhangR = cooh
		corOverhangL = 0
		cabinetStartX = 0
	endif
	if gs_lining_m=3 then
		corOverhangR = 0
		corOverhangL = cooh
		cabinetStartX = cooh
	endif
endif
corOverhang = corOverhangL+corOverhangR
if gs_leg_type_m=0 then leg_h=0
if cot=0 then cooh=0


bAboveDrawerOrDoor = (iFrontAbove =FRONT_DRAWER or iFrontAbove = FRONT_DOOR )
bUnderDrawerOrDoor = (iFrontUnder =FRONT_DRAWER or iFrontUnder = FRONT_DOOR )

dim doorHeight[2]
dim doorFullWidth[2]
dim doorWidthA[2]
dim doorWidthB[2]

doorHeight[1] = ZZYZX - cot - divisionHeight -2*thickness * not(bAboveDrawerOrDoor) - thickness * bAboveDrawerOrDoor - thickness/2*not(bUnderDrawerOrDoor) + thickness/2*not(bUnderDrawerOrDoor)*(iFrontAbove = FRONT_SLIDING)
doorHeight[2] = divisionHeight - leg_h - thickness * not(bUnderDrawerOrDoor) - thickness/2 * bUnderDrawerOrDoor

if iCabinetForm = SHAPE_SQUARE then
	doorFullWidth[1]=A-corOverhang-2*thickness*not(bAboveDrawerOrDoor)-thickness*bAboveDrawerOrDoor
	doorFullWidth[2]=A-corOverhang-2*thickness*not(bUnderDrawerOrDoor)-thickness*bUnderDrawerOrDoor
else
	if iCabinetForm = SHAPE_CORNER_L then
		doorWidthA[1] = A-sideDepth1+cooh*(gs_cornice_type_m <> 0)-corOverhangR-thickness*not(bAboveDrawerOrDoor)+thickness/2*bAboveDrawerOrDoor-doorThickness
		doorWidthB[1] = B-sideDepth2+cooh*(gs_cornice_type_m <> 0)-corOverhangL-thickness*not(bAboveDrawerOrDoor)+thickness/2*bAboveDrawerOrDoor-doorThickness
		doorWidthA[2] = A-sideDepth1+cooh*(gs_cornice_type_m <> 0)-corOverhangR-thickness*not(bUnderDrawerOrDoor)+thickness/2*bUnderDrawerOrDoor-doorThickness
		doorWidthB[2] = B-sideDepth2+cooh*(gs_cornice_type_m <> 0)-corOverhangL-thickness*not(bUnderDrawerOrDoor)+thickness/2*bUnderDrawerOrDoor-doorThickness
		doorFullWidth[1] = doorWidthB[1]
		doorFullWidth[2] = doorWidthB[2]
	else
		tempSideDepth1Above = sideDepth1 - cooh - doorThickness*bAboveDrawerOrDoor
		tempSideDepth2Above = sideDepth2 - cooh - doorThickness*bAboveDrawerOrDoor
		tempSideDepth1Under = sideDepth1 - cooh - doorThickness*bUnderDrawerOrDoor
		tempSideDepth2Under = sideDepth2 - cooh - doorThickness*bUnderDrawerOrDoor
		tempB = B
		tempA = A
		if gs_lining_m=3 or gs_lining_m=1 then tempB = b - cooh
		if gs_lining_m=2 or gs_lining_m=1 then tempA = a - cooh

		if abs(tempSideDepth1Above-tempA)< EPS or abs(tempSideDepth2Above-tempB) < EPS then
			beta = 90
		else
			beta = atn((tempB-tempSideDepth2Above)/(tempA-tempSideDepth1Above))
		endif

		doorFullWidth[1]=sqr((tempB-tempSideDepth2Above-doorThickness/cos(beta))**2 + (tempA-tempSideDepth1Above-doorThickness/sin(beta))**2)
		doorFullWidth[2]=sqr((tempB-tempSideDepth2Under-doorThickness/cos(beta))**2 + (tempA-tempSideDepth1Under-doorThickness/sin(beta))**2)
	endif
endif

bDoor = (iFrontAbove = FRONT_DOOR or iFrontAbove = FRONT_SLIDING or iFrontUnder = FRONT_DOOR or iFrontUnder = FRONT_SLIDING)

if GLOB_SCRIPT_TYPE # 2 & GLOB_SCRIPT_TYPE # 3 then 
    _bLockKnob = 0
    _bLockDrawer = 0
    _bLockShelf = 0
    _bLockHanger = 0
    
    if iFrontAbove = FRONT_DRAWER and iFrontUnder = FRONT_DRAWER then
	    _bLockShelf = 1
	    _bLockHanger = 1
    else
	    if gs_knob_type_m=0 or (iFrontAbove = FRONT_NONE and iFrontUnder = FRONT_NONE) then
		    _bLockKnob = 1
	    endif
	    if iFrontAbove = FRONT_DRAWER then
	    ! Upper part with drawer 										
		    if iInteriorUnder = INTERIOR_NONE then 
			    _bLockShelf = 1
			    _bLockHanger = 1
		    endif
		    if iInteriorUnder = INTERIOR_HANGER then
			    _bLockShelf = 1
		    endif
		    if iInteriorUnder = INTERIOR_SHELVES then 
			    _bLockHanger = 1
		    endif
	    else
		    if iFrontUnder = FRONT_DRAWER then
		    ! Lower part with drawer
			    if iFunctions = INTERIOR_NONE then 
				    _bLockShelf = 1
				    _bLockHanger = 1
			    endif
			    if iFunctions = INTERIOR_HANGER then 
				    _bLockShelf = 1
			    endif
			    if iFunctions = INTERIOR_SHELVES then 
				    _bLockHanger = 1
			    endif
		    else
		    ! Neither part has drawer
			    _bLockDrawer = 1
			    if iFunctions = INTERIOR_NONE and iInteriorUnder = INTERIOR_NONE then
				    _bLockShelf = 1
				    _bLockHanger = 1
			    else
				    if (iFunctions = INTERIOR_NONE and iInteriorUnder = INTERIOR_HANGER) or \
					    (iFunctions = INTERIOR_HANGER and iInteriorUnder = INTERIOR_NONE) or \
					    (iFunctions = INTERIOR_HANGER and iInteriorUnder = INTERIOR_HANGER) then
						    _bLockShelf = 1
				    else
					    if (iFunctions = INTERIOR_NONE and iInteriorUnder = INTERIOR_SHELVES) or \
						    (iFunctions = INTERIOR_SHELVES and iInteriorUnder = INTERIOR_NONE) or \
						    (iFunctions = INTERIOR_SHELVES and iInteriorUnder = INTERIOR_SHELVES) then
							    _bLockHanger = 1
					    endif
				    endif
			    endif			
		    endif		
	    endif		
    endif
endif



]]></Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

]]></Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[
ui_dialog `Wardrobe Settings`,444,266
ui_current_page gs_ui_current_page
ui_page gs_ui_current_page

dim tabTitles[7]
	tabTitles[1] = `Cabinet Dimensions and Shape`
	tabTitles[2] = `Cabinet Options`
	tabTitles[3] = `Door`
	tabTitles[4] = `Accessories`
	tabTitles[5] = `Appearance`
	tabTitles[6] = `3D Representation`
	tabTitles[7] = `Minimal Space`

dim tabIcons[7]
	tabIcons[1] = "ui_tab_furniture_cabinet(1)"
	tabIcons[2] = "ui_tab_furniture_cabinet(2)"
	tabIcons[3] = "ui_tab_furniture_door(1)"
	tabIcons[4] = "ui_tab_furniture_leg(1)"
	tabIcons[5] = "ui_tab_furniture_appearance(1)"
	tabIcons[6] = "ui_tab_furniture_materials(1)"
	tabIcons[7] = "ui_tab_minimalspace(1)"

FILE_DEPENDENCE "ui_tab_furniture_cabinet(1)"
FILE_DEPENDENCE "ui_tab_furniture_cabinet(2)"
FILE_DEPENDENCE "ui_tab_furniture_door(1)"
FILE_DEPENDENCE "ui_tab_furniture_leg(1)"
FILE_DEPENDENCE "ui_tab_furniture_appearance(1)"
FILE_DEPENDENCE "ui_tab_furniture_materials(1)"
FILE_DEPENDENCE "ui_tab_minimalspace(1)"

dim stWardrobeSettingsUI[55]
	stWardrobeSettingsUI[1] = `Drawer Style`
	stWardrobeSettingsUI[2] = `3D`
	stWardrobeSettingsUI[3] = `Resolution`
	stWardrobeSettingsUI[4] = `Shadow`
	stWardrobeSettingsUI[5] = `Cabinet`
	stWardrobeSettingsUI[6] = `Door Frame`
	stWardrobeSettingsUI[7] = `Door Glass`
	stWardrobeSettingsUI[8] = `Door Mirror`
	stWardrobeSettingsUI[9] = `Door Decor 1`
	stWardrobeSettingsUI[10] = `Door Decor 2`
	stWardrobeSettingsUI[11] = `Knob`
	stWardrobeSettingsUI[12] = `Shelf`
	stWardrobeSettingsUI[13] = `Hanger`
	stWardrobeSettingsUI[14] = `Cornice`
	stWardrobeSettingsUI[15] = `Leg`
	stWardrobeSettingsUI[16] = `2D Representation`
	stWardrobeSettingsUI[17] = `2D Symbol Type`
	stWardrobeSettingsUI[18] = `Show Hanger in 2D`
	stWardrobeSettingsUI[19] = `Contour Pen`
	stWardrobeSettingsUI[20] = `Fill Type`
	stWardrobeSettingsUI[21] = `Fill Pen`
	stWardrobeSettingsUI[22] = `Background Pen`
	stWardrobeSettingsUI[23] = `Shape`
	stWardrobeSettingsUI[24] = `Plan`
	stWardrobeSettingsUI[25] = `Section`
	stWardrobeSettingsUI[26] = `Door Style`
	stWardrobeSettingsUI[27] = `Horizontal Division Height`
	stWardrobeSettingsUI[28] = `No. of Doors`
	stWardrobeSettingsUI[29] = `Door Frame Width`
	stWardrobeSettingsUI[30] = `Mullion Width`
	stWardrobeSettingsUI[31] = `Nr. of Vert. Mullions`
	stWardrobeSettingsUI[32] = `Nr. of Hor. Mullions`
	stWardrobeSettingsUI[33] = `Knob Style`
	stWardrobeSettingsUI[34] = `Horizontal Position`
	stWardrobeSettingsUI[35] = `Vertical Position`
	stWardrobeSettingsUI[36] = `Placing`
	stWardrobeSettingsUI[37] = `Size`
	stWardrobeSettingsUI[38] = `Cornice Style`
	stWardrobeSettingsUI[39] = `Side Overhang`
	stWardrobeSettingsUI[40] = `Leg Style`
	stWardrobeSettingsUI[41] = `Width`
	stWardrobeSettingsUI[42] = `Interior Fitting`
	stWardrobeSettingsUI[43] = `Thickness`
	stWardrobeSettingsUI[44] = `Nr. of Shelves`
	stWardrobeSettingsUI[45] = `Nr. of Hangers`
	stWardrobeSettingsUI[46] = `Custom Panel Name`
	stWardrobeSettingsUI[47] = `Drawer`
	stWardrobeSettingsUI[48] = `Functions`
	stWardrobeSettingsUI[49] = `Above Division`
	stWardrobeSettingsUI[50] = `Front`
	stWardrobeSettingsUI[51] = `Under Division`
	stWardrobeSettingsUI[52] = `Nr. of Drawers Vert.`
	stWardrobeSettingsUI[53] = `Nr. of Drawers Hor.`
	stWardrobeSettingsUI[54] = `Nr. of Knobs by Drawer`
	stWardrobeSettingsUI[55] = `Drawer Frame Width`

dim stToolTips[10]
	stToolTips[1] = `Width`
	stToolTips[2] = `Depth`
	stToolTips[3] = `Side Depth 1`
	stToolTips[4] = `Side Depth 2`
	stToolTips[5] = `Minimal Space in Front`
	stToolTips[6] = `Height`
	stToolTips[7] = `Leg Height`
	stToolTips[8] = `Cornice Height`
	stToolTips[9] = `Cornice Overhang`
	stToolTips[10] = `Door Thickness`

call "ui_tabcontrol" parameters	controlType = 1,
								nTabs = 7,
								gs_ui_current_page = gs_ui_current_page,
								tabTitles = tabTitles,
								tabIcons = tabIcons


! ======================================================================
! Page 1
! ======================================================================

ui_page 1

x1			= 10
yStart		= 40
xHalfLevel 	= 225
xEndLevel	= 440
yHalfLevel 	= 115

hRow		= 18
lineSpace	= 30

wDescript1	= 80
wBox1		= 65

ui_separator xHalfLevel, 32, xHalfLevel, 266
ui_separator x1, yHalfLevel, xHalfLevel-2, yHalfLevel

ui_style 0, 1
ui_outfield stWardrobeSettingsUI[23],	x1,		yStart,	wDescript1,	hRow								! Shape
ui_outfield stWardrobeSettingsUI[25],	xHalfLevel+10,		yStart,	wDescript1,	hRow					! Section
ui_outfield stWardrobeSettingsUI[24],	x1,	 yHalfLevel+10,	wDescript1,	hRow							! Plan
ui_style 0, 0
y1 = yStart + 20

ui_infield{3} "iCabinetForm", 55,	y1,	150, 45,
		4, 20, 3, 1, 35, 34, 35, 34,																	! ui_wardrobe_floor.png
			1, stCabinetForm[1], 1,
			2, stCabinetForm[2], 2,
			3, stCabinetForm[3], 3 ui_tooltip stWardrobeSettingsUI[23]

if iCabinetForm = SHAPE_SQUARE then
	PictStartX = 75
	PictStartY  = 167
	ui_pict 21, PictStartX, PictStartY, 66, 40 , 1														! ui_wardrobe_plan_square.png
	ui_infield "A", PictStartX+7,	PictStartY-hRow-4,	wBox1,	hRow  ui_tooltip stToolTips[1]			! Width
	ui_infield "B", PictStartX-wBox1-2,	PictStartY+15,	wBox1,	hRow  ui_tooltip stToolTips[2]			! Depth
else
	PictStartX = 75
	PictStartY  = 167
	if iCabinetForm = SHAPE_CORNER_L then
		ui_pict 22, PictStartX, PictStartY, 74, 74 , 1													! ui_wardrobe_plan_L.png
	else
		ui_pict 23, PictStartX, PictStartY, 74, 74 , 1													! ui_wardrobe_plan_C.png
	endif
	ui_infield "A", PictStartX+7,	PictStartY-hRow-4,	wBox1,	hRow  ui_tooltip stToolTips[1]			! Width
	ui_infield "B", PictStartX-wBox1-2,	PictStartY+30,	wBox1,	hRow  ui_tooltip stToolTips[2]			! Depth
	ui_infield "sideDepth1", PictStartX+7, PictStartY+77,	wBox1,	hRow  ui_tooltip stToolTips[3]		! Side Depth 1
	ui_infield "sideDepth2", PictStartX+76, PictStartY+15,	wBox1,	hRow  ui_tooltip stToolTips[4]		! Side Depth 2
endif


! ------ 2. Column - Section -------
PictStartX = xHalfLevel +85
PictStartY  = 70
ui_pict 24, PictStartX, PictStartY, 68, 165 , 1															! ui_wardrobe_sect_02.png
ui_infield "cot", PictStartX-wBox1-2, PictStartY-5,	wBox1,	hRow  ui_tooltip stToolTips[8]				! Cornice Height
ui_infield "cooh", PictStartX-wBox1-2, PictStartY+17,	wBox1,	hRow  ui_tooltip stToolTips[9]			! Cornice Overhang
ui_infield "leg_h", PictStartX-wBox1-2, PictStartY+140,	wBox1,	hRow  ui_tooltip stToolTips[7]			! Leg Height
ui_infield "doorThickness", PictStartX+13, PictStartY+167,	wBox1,	hRow  ui_tooltip stToolTips[10]		! Door Thickness
ui_infield "ZZYZX", PictStartX+70, PictStartY+70,	wBox1,	hRow  ui_tooltip stToolTips[6]		! Height


! ======================================================================
! Page 2
! ======================================================================

ui_page 2

x1			= 20
yStart		= 40
xHalfLevel 	= 225
xEndLevel	= 440
yHalfLevel 	= 115

hRow		= 18
lineSpace	= 22

wDescript1	= 180
wDescript2	= 98
wBox1		= 65

ui_separator xHalfLevel, 32, xHalfLevel, 266

ui_style 0, 1
ui_outfield stWardrobeSettingsUI[27],	x1,		yStart,	wDescript1,	hRow								! Horizontal Division Height
ui_style 0, 0
y1 = yStart + lineSpace + 10

ui_pict 25, x1, y1, 97, 168 , 1																			! ui_wardrobe_elev_02.png
ui_infield "divisionHeight", x1+99,	y1+125,	wBox1,	hRow  ui_tooltip stWardrobeSettingsUI[27]			! Horizontal Division Height

! ------ 2. Column - Functions -------
ui_style 0, 1
ui_outfield stWardrobeSettingsUI[48],	xHalfLevel +10,		yStart,	wDescript1,	hRow					! Functions
y1 = yStart + lineSpace + 10
ui_outfield stWardrobeSettingsUI[49],	xHalfLevel +10,		y1,	wDescript1,	hRow						! Above Division
y1 = y1 + lineSpace
ui_style 0, 0

ui_outfield stWardrobeSettingsUI[50], xHalfLevel + 10 , y1, xHalfLevel-x1-22-wDescript2, hRow			! Front
ui_infield{3} "iFrontAbove", xEndLevel - wDescript2-10, y1-2,	wDescript2, hRow,
		8, "", 4, 1, 0, 0, 0, 0,
		1, stFrontTypes[1], 3,
		2, stFrontTypes[2], 2,
		3, stFrontTypes[3], 1,
		4, stFrontTypes[4], 0   ui_tooltip stWardrobeSettingsUI[50]
y1 = y1 + lineSpace

flag = 4 * (iFrontAbove = FRONT_DRAWER)
ui_outfield stWardrobeSettingsUI[42], xHalfLevel + 10 , y1, xHalfLevel-x1-22-wDescript2, hRow, flag		! Interior Fitting
ui_infield{3} "iFunctions", xEndLevel - wDescript2-10, y1-2,	wDescript2, hRow,
		8, "", 4, 1, 0, 0, 0, 0,
		1, stInteriorType[1], 3,
		2, stInteriorType[2], 2,
		3, stInteriorType[3], 1,
		4, stInteriorType[4], 0   ui_tooltip stWardrobeSettingsUI[42]
y1 = y1 + lineSpace

if iFunctions = INTERIOR_SHELVES or iFunctions = INTERIOR_COMBINED then
	ui_outfield stWardrobeSettingsUI[44], xHalfLevel + 10 , y1, xHalfLevel-x1-22-wBox1, hRow, flag		! Nr. of Shelves
	ui_infield "nShelves", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[44]
endif

if iFunctions = INTERIOR_HANGER then
	ui_outfield stWardrobeSettingsUI[45], xHalfLevel + 10 , y1, xHalfLevel-x1-22-wBox1, hRow, flag		! Nr. of Hangers
	ui_infield "nHangers", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[45]
endif

y1 = y1 + lineSpace + 10
ui_style 0, 1
ui_outfield stWardrobeSettingsUI[51],	xHalfLevel +10,		y1,	wDescript1,	hRow						! Under Division
y1 = y1 + lineSpace
ui_style 0, 0

ui_outfield stWardrobeSettingsUI[50], xHalfLevel + 10 , y1, xHalfLevel-x1-22-wDescript2, hRow			! Front
ui_infield{3} "iFrontUnder", xEndLevel - wDescript2-10, y1-2,	wDescript2, hRow,
		8, "", 4, 1, 0, 0, 0, 0,
		1, stFrontTypes[1], 3,
		2, stFrontTypes[2], 2,
		3, stFrontTypes[3], 1,
		4, stFrontTypes[4], 0   ui_tooltip stWardrobeSettingsUI[50]
y1 = y1 + lineSpace

flag = 4 * (iFrontUnder = FRONT_DRAWER)
ui_outfield stWardrobeSettingsUI[42], xHalfLevel + 10 , y1, xHalfLevel-x1-22-wDescript2, hRow, flag		! Interior Fitting
ui_infield{3} "iInteriorUnder", xEndLevel - wDescript2-10, y1-2,	wDescript2, hRow,
		8, "", 4, 1, 0, 0, 0, 0,
		1, stInteriorType[1], 3,
		2, stInteriorType[2], 2,
		3, stInteriorType[3], 1,
		4, stInteriorType[4], 0   ui_tooltip stWardrobeSettingsUI[42]
y1 = y1 + lineSpace

if iInteriorUnder = INTERIOR_SHELVES or iInteriorUnder = INTERIOR_COMBINED then
	ui_outfield stWardrobeSettingsUI[44], xHalfLevel + 10 , y1, xHalfLevel-x1-22-wBox1, hRow, flag		! Nr. of Shelves
	ui_infield "nShelvesUnder", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[44]
endif

if iInteriorUnder = INTERIOR_HANGER then
	ui_outfield stWardrobeSettingsUI[45], xHalfLevel + 10 , y1, xHalfLevel-x1-22-wBox1, hRow, flag		! Nr. of Hangers
	ui_infield "nHangersUnder", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[45]
endif


! ======================================================================
! Page 3
! ======================================================================

ui_page 3

x1			= 10
yStart		= 37
xHalfLevel 	= 225
xEndLevel	= 440

hRow		= 18
hPict		= 85
lineSpace	= 24

wDescript1	= 100
wDescript2	= 80
wBox1		= 75
wBox2		= 100
wPict		= 120

ui_separator xHalfLevel, 32, xHalfLevel, 266


! ------ 1. Column - Door -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[26],	x1,	y1,	xHalfLevel-x1-12-wPict , hRow						! Door Style
ui_infield{3} "iDoorStyle", xHalfLevel - wPict - 10, y1-4, wPict, hPict,
	2, "ui_WardDoorTyp(1)", 20, 5,																		! ui_WardDoorTyp(1).png
	65,hPict,60,80,
	2, stDoorStyle[1], 1,
	14, stDoorStyle[2], 13,
	4, stDoorStyle[3], 3,
	10, stDoorStyle[4], 9,
	5, stDoorStyle[5], 4,
	6, stDoorStyle[6], 5,
	15, stDoorStyle[7], 14,
	16, stDoorStyle[8], 15,
	17, stDoorStyle[9], 16,
	18, stDoorStyle[10], 17,
	19, stDoorStyle[11], 18,
	11, stDoorStyle[12], 10 ui_tooltip  stWardrobeSettingsUI[26]
y1 = y1 + hPict +5

ui_outfield stWardrobeSettingsUI[28], x1 , y1, xHalfLevel-x1-12-wBox1, hRow								! No. Of Doors
ui_infield "nDoor", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[28]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[43], x1 , y1, xHalfLevel-x1-12-wBox1, hRow								! Thickness
ui_infield "doorThickness", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[43]
y1 = y1 + lineSpace

if iDoorStyle <> 10 then
	ui_outfield stWardrobeSettingsUI[29], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Door Frame Width
	ui_infield "doorFrameWidth", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[29]
	y1 = y1 + lineSpace

	ui_outfield stWardrobeSettingsUI[30], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Mullion Width
	ui_infield "mullionWidth", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[30]
	y1 = y1 + lineSpace

	ui_outfield stWardrobeSettingsUI[31], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Nr. of Vert. Mullions
	ui_infield "nVerticalMullion", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[31]
	y1 = y1 + lineSpace

	ui_outfield stWardrobeSettingsUI[32], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Nr. of Hor. Mullions
	ui_infield "nHorizontalMullion", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[32]
	y1 = y1 + lineSpace
else
	ui_outfield stWardrobeSettingsUI[46], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Custom Panel Name
	y1 = y1 + lineSpace
	ui_infield "doorCustomPanelName", x1+10, y1-2,	xHalfLevel-x1-20, hRow		ui_tooltip stWardrobeSettingsUI[46]
endif

! ------ 2. Column - Drawer -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[1],	xHalfLevel +10,	y1,	xEndlevel-xHalfLevel-22-wPict , hRow			! Drawer Style
ui_infield{3} "iDrawerStyle", xEndLevel - wPict - 10, y1-4, wPict, hPict,
	2, "ui_WardDrawerTyp(1)", 20, 5,																			! ui_WardDrawerTyp(1).png
	65,hPict,60,40,
	2, stDrawerTypes[1], 1,
	3, stDrawerTypes[2], 2,
	4, stDrawerTypes[3], 3,
	9, stDrawerTypes[4], 8 ui_tooltip  stWardrobeSettingsUI[1]
y1 = y1 + hPict +5

ui_outfield stWardrobeSettingsUI[52], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-x1-22-wBox1, hRow			! Nr. of Drawers Vert.
ui_infield "nDrawerVert", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[52]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[53], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-x1-22-wBox1, hRow			! Nr. of Drawers Hor.
ui_infield "nDrawerHor", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[53]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[55], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-x1-22-wBox1, hRow			! Drawer Frame Width
ui_infield "drawerFrameWidth", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[29]



! ======================================================================
! Page 4
! ======================================================================

ui_page 4

x1			= 10
yStart		= 40
xHalfLevel 	= 225
xEndLevel	= 440

hRow		= 18
hPict1		= 85
hPict2		= 65
lineSpace	= 24

wDescript1	= 100
wDescript2	= 80
wBox1		= 75
wBox2		= 100
wBox3		= 40
wPict		= 120

ui_separator xHalfLevel, 32, xHalfLevel, 266


! ------ 1. Column - Knob -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[33],	x1,	y1,	xHalfLevel-22-wPict , hRow	! Knob Style
ui_infield{3} "gs_knob_type_m", xHalfLevel - wPict - 10, y1-4, wPict, hPict1,
	2, "Knob_Types_N(13)",12,4,
	65,hPict1,60,80,
	1, stKnobTypes[2], 1,
	2, stKnobTypes[3], 2,
	3, stKnobTypes[4], 3,
	4, stKnobTypes[5], 4,
	5, stKnobTypes[6], 5,
	6, stKnobTypes[7], 6,
	7, stKnobTypes[8], 7,
	8, stKnobTypes[9], 8,
	9, stKnobTypes[1], 0 ui_tooltip  stWardrobeSettingsUI[33]
y1 = y1 + hPict1 +5

ui_outfield stWardrobeSettingsUI[34], x1 , y1, xHalfLevel-x1-22-wBox1, hRow									! Horizontal Position
ui_infield "knob_pl_x", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[34]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[35], x1 , y1, xHalfLevel-x1-22-wBox1, hRow									! Vertical Position
ui_infield "knob_pl_y", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[35]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[36], x1 , y1, xHalfLevel-x1-22-wBox1, hRow									! Placing
ui_infield "gs_knob_p", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[36]
!		8, "", 2, 1, 0, 0, 0, 0,
!		1, stKnobPlacing[1], 0,
!		2, stKnobPlacing[2], 1   ui_tooltip stWardrobeSettingsUI[36]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[37], x1 , y1, xHalfLevel-x1-22-wBox1, hRow									! Size
ui_infield "knob_size", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[37]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[54], x1 , y1, xHalfLevel-x1-22-wBox3, hRow									! Nr. of Knobs by Drawer
ui_infield{3} "nKnobDrawers", xHalfLevel - wBox3-10, y1-2,	wBox3, hRow	,
		8, "", 2, 1, 0, 0, 0, 0,
		1, `1`, 1,
		2, `2`, 2   ui_tooltip stWardrobeSettingsUI[54]

! ------ 1. Column - Cornice -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[38],	xHalfLevel + 10,	y1,	xEndlevel-xHalfLevel-x1-12-wPict , hRow		! Cornice Style
ui_infield{3} "gs_cornice_type_m", xEndlevel- wPict - 10, y1-4, wPict, hPict2,
	2, "ui_CabCorniceTyp(2)", 6,2,																				! ui_CabCorniceTyp(2).png
	65,hPict2,60,20,
	1, stCorniceTypes[2], 1,
	2, stCorniceTypes[3], 2,
	3, stCorniceTypes[4], 3,
	4, stCorniceTypes[5], 4,
	5, stCorniceTypes[1], 0 ui_tooltip  stWardrobeSettingsUI[38]
y1 = y1 + hPict2 + linespace/2

ui_outfield stWardrobeSettingsUI[39], xHalfLevel + 10, y1, xEndlevel-xHalfLevel-x1-74, hRow					! Side Overhang
ui_infield{3} "gs_lining_m", xEndlevel-64, y1-10, 54, 34,
		3, "ui_CorniceOverhang(13)", 4, 1, 54, 34, 50, 30,
		1, stCorniceOverhang[1], 4,
		2, stCorniceOverhang[2], 3,
		3, stCorniceOverhang[3], 2,
		4, stCorniceOverhang[4], 1   ui_tooltip stWardrobeSettingsUI[39]
y1 = y1 + linespace+6

ui_separator xHalfLevel+3, y1, xEndLevel, y1

! ------ 3. Column - Leg -------
y1 = y1 + 18
ui_outfield stWardrobeSettingsUI[40],	xHalfLevel +10,	y1,	xEndlevel-xHalfLevel-22-wPict , hRow			! Leg Style
ui_infield{3} "gs_leg_type_m", xEndLevel - wPict - 10, y1-4, wPict, hPict2,
	2, "ui_CabLegTyp(1)", 8,2,																					! ui_CabLegTyp(1).png
	65,hPict2,60,60,
	1, stLegTypes[2], 1,
	2, stLegTypes[3], 2,
	3, stLegTypes[4], 3,
	4, stLegTypes[5], 4,
	5, stLegTypes[6], 5,
	6, stLegTypes[7], 6,
	7, stLegTypes[1], 0 ui_tooltip  stWardrobeSettingsUI[40]
y1 = y1 + hPict2 + linespace/2

ui_outfield stWardrobeSettingsUI[41], xHalfLevel + 10 , y1, xHalfLevel-x1-22-wBox1, hRow					! Width
ui_infield "leg_w", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[41]
y1 = y1 + lineSpace




! ======================================================================
! Page 5
! ======================================================================

ui_page 5

x1			= 10
yStart		= 45
xHalfLevel 	= 230
xEndLevel	= 440

hRow		= 18
hPenBox		= 22
hFillBox	= 24
hMatBox		= 24
lineSpace	= 34

wDescript1	= 150
wDescript2	= 80
wBox1		= 90
wPenBox		= 35
wFillBox	= 80
wMatBox		= 130

ui_style 0, 1
ui_outfield stWardrobeSettingsUI[16],	x1,		yStart,	wDescript1,	hRow								! 2D Representation
ui_style 0, 0
y1 = yStart + lineSpace


x1 = x1 +5
ui_outfield stWardrobeSettingsUI[17],	x1,	y1,	wDescript1,	hRow										! 2D Symbol Type
y1 = y1 + lineSpace

ui_infield{3} "iSymbolType", 30, y1-10, 79, 64,
	3,"2Dstypcab(13)",8,2,
	79,64,75,60,
	1, stSymbolTypes[1], 1,
	5, stSymbolTypes[2], 2,
	6, stSymbolTypes[3], 3,
	2, stSymbolTypes[4], 4,
	4, stSymbolTypes[5], 5,
	3, stSymbolTypes[6], 6 ui_tooltip  stWardrobeSettingsUI[17]
y1 = y1 + 2*lineSpace

ui_infield{3} "bHangers", x1, y1-2, xHalfLevel-x1, hRow,													! Show Hanger in 2D
	7, "",
	2,
	1, 20, 20, 20, 20,
	0, stWardrobeSettingsUI[18], 0,
	1, stWardrobeSettingsUI[18], 1	ui_tooltip stWardrobeSettingsUI[18]


! ------ 2. Column - 2D Representation -------

y1 =  yStart + lineSpace
ui_outfield stWardrobeSettingsUI[19], xHalfLevel + 10 , y1, wDescript2, hRow							! Contour Pen
ui_infield "gs_cont_pen",	xEndLevel - wPenBox - 10, y1-4, wPenBox, hPenBox  ui_tooltip stWardrobeSettingsUI[19]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[20], xHalfLevel + 10, y1, wDescript2,	hRow							! Fill Type
ui_infield "gs_fill_type",	xEndLevel - wFillBox - 10, y1-5, wFillBox, hFillBox  ui_tooltip stWardrobeSettingsUI[20]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[22], xHalfLevel + 10, y1, wDescript1,	hRow							! Fill Pen
ui_infield "gs_fill_pen",	xEndLevel - wPenBox - 10, y1-4, wPenBox, hPenBox  ui_tooltip stWardrobeSettingsUI[21]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[22], xHalfLevel + 10, y1, wDescript1,	hRow							! Fill Background Pen
ui_infield "gs_back_pen",	xEndLevel - wPenBox -10 , y1-4, wPenBox, hPenBox  ui_tooltip stWardrobeSettingsUI[22]



! ======================================================================
! Page 6
! ======================================================================

ui_page 6

x1			= 10
yStart		= 40
xHalfLevel 	= 240
xEndLevel	= 440

hRow		= 18
hMatBox		= 24
lineSpace1	= 28
lineSpace2	= 24

wDescript1	= 115
wDescript2	= 80
wBox1		= 80
wMatBox		= 100
wPictBox	= 15


! ------ 1. Column - 3D -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[2], x1 , y1, wDescript1, hRow		  											! 3D
ui_infield{3} "gs_detlevel_3D_m", x1+wDescript1+2, y1-4, wBox1, hRow,
		8, "", 3, 1, 0, 0, 0, 0,
		1, stDetlevel3D[1], 2,
		2, stDetlevel3D[2], 1,
		3, stDetlevel3D[3], 0   ui_tooltip stWardrobeSettingsUI[2]
y1 = y1 + lineSpace2

ui_outfield stWardrobeSettingsUI[3], x1 , y1, wDescript1, hRow		  											! Resolution
ui_infield "gs_resol", x1+wDescript1+2, y1-4, wBox1, hRow  ui_tooltip stWardrobeSettingsUI[3]
y1 = y1 + lineSpace2

y1 = yStart
ui_infield{3} "gs_shadow", xHalfLevel, y1-2, 440-xHalfLevel, hRow,													! Shadow
	7, "",
	2,
	1, 20, 20, 20, 20,
	0, stWardrobeSettingsUI[4], 0,
	1, stWardrobeSettingsUI[4], 1	ui_tooltip stWardrobeSettingsUI[4]
y1 = y1 + lineSpace2*2 - 2


ui_separator 0, y1, 444, y1
yStart = y1 + lineSpace2*0.5

! ------ 1. Column - Materials -------
y1 = yStart
ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[5]												! ui_mat(1).png
ui_outfield stWardrobeSettingsUI[5], x1 + wPictBox, y1, wDescript2,	hRow		  								! Cabinet
ui_infield "gs_cabinet_mat", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[5]
y1 = y1 + lineSpace1

flag = 4 * (iDoorStyle = 1 or iDoorStyle = 8 or iDoorStyle = 10 or not(bDoor))
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[6]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[6]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[6], x1 + wPictBox, y1, wDescript2,	hRow, flag	  								! Door Frame
ui_infield "matDoorFrame", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[6]
y1 = y1 + lineSpace1

flag = 4 * (iDoorStyle <> 3 and iDoorStyle <> 5 and iDoorStyle <> 7 and iDoorStyle <> 9 and iDoorStyle <> 12 or not(bDoor))
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[7]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[7]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[7], x1 + wPictBox, y1, wDescript2,	hRow, flag  								! Door Glass
ui_infield "matDoorGlass", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[7]
y1 = y1 + lineSpace1

flag = 4 * (iDoorStyle <> 14 and iDoorStyle <> 15 or not(bDoor))
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[8]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[8]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[8], x1 + wPictBox, y1, wDescript2,	hRow, flag  								! Door Mirror
ui_infield "matDoorMirror", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[8]
y1 = y1 + lineSpace1

flag = 4 * (iDoorStyle = 3 or iDoorStyle = 5 or iDoorStyle = 7 or iDoorStyle = 9 or iDoorStyle = 10 or iDoorStyle = 12 or not(bDoor))
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[9]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[9]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[9], x1 + wPictBox, y1, wDescript2,	hRow, flag  								! Door Decor 1
ui_infield "matDoorDecor1", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[9]
y1 = y1 + lineSpace1

flag = 4 * (iDoorStyle < 16 or not(bDoor))
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[10]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[10]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[10], x1 + wPictBox, y1, wDescript2,	hRow, flag  							! Door Decor 2
ui_infield "matDoorDecor2", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[10]
y1 = y1 + lineSpace1


! ------ 2. Column - Materials -------
y1 = yStart
if not(_bLockDrawer) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[47]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[47]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[47], xHalfLevel + wPictBox, y1, wDescript2,	hRow, _bLockDrawer * 4					! Drawer
ui_infield "gs_drawer_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[47]
y1 = y1 + lineSpace1

!flag = 4 * not(iFunctions=INTERIOR_SHELVES or iFunctions=INTERIOR_COMBINED or iInteriorUnder=INTERIOR_SHELVES or iInteriorUnder=INTERIOR_COMBINED and iCabinetForm = SHAPE_SQUARE )
if not(_bLockShelf) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[12]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[12]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[12], xHalfLevel + wPictBox, y1, wDescript2,	hRow, _bLockShelf * 4					! Shelf
ui_infield "gs_shelf_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[12]
y1 = y1 + lineSpace1

!flag = 4 * not(iFunctions=INTERIOR_HANGER or iFunctions=INTERIOR_COMBINED or iInteriorUnder=INTERIOR_HANGER or iInteriorUnder=INTERIOR_COMBINED and iCabinetForm = SHAPE_SQUARE )
if not(_bLockHanger) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[13]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[13]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[13], xHalfLevel + wPictBox, y1, wDescript2,	hRow, _bLockHanger * 4					! Hanger
ui_infield "gs_hanger_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[13]
y1 = y1 + lineSpace1

if not (_bLockKnob) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[11]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[11]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[11], xHalfLevel + wPictBox, y1, wDescript2,	hRow, _bLockKnob * 4				! Knob
ui_infield "gs_knob_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[11]
y1 = y1 + lineSpace1

flag = 4 * (gs_cornice_type_m=0)
if not(flag) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[14]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[14]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[14], xHalfLevel + wPictBox, y1, wDescript2,	hRow, flag  					! Cornice
ui_infield "gs_cornice_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[14]
y1 = y1 + lineSpace1

flag = 4 * (gs_leg_type_m=0)
if not(flag) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[15]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[15]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[15], xHalfLevel + wPictBox, y1, wDescript2,	hRow, flag  					! Leg
ui_infield "gs_leg_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[15]
y1 = y1 + lineSpace1



! ======================================================================
! Page 7
! ======================================================================

ui_page 7

hRow		= 18
wBox1		= 75


ui_style 0, 0

if iCabinetForm = SHAPE_SQUARE then
	PictStartX = 150
	PictStartY  = 95
	ui_pict 10, PictStartX, PictStartY, 113, 127 , 1													! ui_minimal_square.png
	ui_infield "A", PictStartX+20,	PictStartY-hRow-2,	wBox1,	hRow  ui_tooltip stToolTips[1]			! Width
	ui_infield "B", PictStartX+115,	PictStartY+27,	wBox1,	hRow  ui_tooltip stToolTips[2]				! Depth
	ui_infield "MSFront", PictStartX+115, PictStartY+84,	wBox1,	hRow  ui_tooltip stToolTips[5]		! Minimal Space in Front
endif

if iCabinetForm = SHAPE_CORNER_L then
	PictStartX = 135
	PictStartY  = 65
	ui_pict 11, PictStartX, PictStartY, 164, 166 , 1													! ui_minimal_L.png
	ui_infield "A", PictStartX+55,	PictStartY-hRow-2,	wBox1,	hRow  ui_tooltip stToolTips[1]			! Width
	ui_infield "B", PictStartX-wBox1-2,	PictStartY+70,	wBox1,	hRow  ui_tooltip stToolTips[2]			! Depth
	ui_infield "sideDepth1", PictStartX-10, PictStartY+169,	wBox1,	hRow  ui_tooltip stToolTips[3]		! Side Depth 1
	ui_infield "sideDepth2", PictStartX+170, PictStartY+30,	wBox1,	hRow  ui_tooltip stToolTips[4]		! Side Depth 2
	ui_infield "MSFront", PictStartX+70, PictStartY+169,	wBox1,	hRow  ui_tooltip stToolTips[5]		! Minimal Space in Front
	ui_infield "MSFront", PictStartX+170, PictStartY+80,	wBox1,	hRow  ui_tooltip stToolTips[5]		! Minimal Space in Front
endif

if iCabinetForm = SHAPE_CORNER_C then
	PictStartX = 160
	PictStartY  = 65
	ui_pict 12, PictStartX, PictStartY, 164, 190 , 1													! ui_minimal_C.png
	ui_infield "A", PictStartX+30,	PictStartY-hRow-2,	wBox1,	hRow  ui_tooltip stToolTips[1]			! Width
	ui_infield "B", PictStartX-wBox1-2,	PictStartY+50,	wBox1,	hRow  ui_tooltip stToolTips[2]			! Depth
	ui_infield "sideDepth1", PictStartX-10, PictStartY+147,	wBox1,	hRow  ui_tooltip stToolTips[3]		! Side Depth 1
	ui_infield "sideDepth2", PictStartX+130, PictStartY+30,	wBox1,	hRow  ui_tooltip stToolTips[4]		! Side Depth 2
	ui_infield "MSFront", PictStartX+120, PictStartY+180,	wBox1,	hRow  ui_tooltip stToolTips[5]		! Minimal Space in Front
endif




]]></Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

call "FM_types" parameters all

if gs_ui_current_page > 7 then
	gs_ui_current_page = 7
	parameters gs_ui_current_page = gs_ui_current_page
endif

call "ui_tabcontrol" parameters	controlType = 1,
								nTabs = 7,
								gs_ui_current_page = gs_ui_current_page


minDist = 0.3
values "a" range [minDist, ]
values "b" range [minDist, ]
values "zzyzx" range [divisionHeight+0.1+(gs_cornice_type_m>0)*cot, ]
values "divisionHeight" range [leg_h+0.1, ZZYZX-(gs_cornice_type_m>0)*cot-0.1]


! ==============================================================================
! Cabinet Shape
! ==============================================================================
! ----- Cabinet Shape -----
values "cabinetForm" stCabinetForm		! Square(1), Corner-L(2), Corner-C(3)
values "iCabinetForm"  SHAPE_SQUARE, SHAPE_CORNER_L, SHAPE_CORNER_C
if GLOB_MODPAR_NAME = "cabinetForm" then
	iCabinetForm = 1
	for i = 1 to vardim1(stCabinetForm)
		if cabinetForm= stCabinetForm[i] then	iCabinetForm = i
	next i
	parameters iCabinetForm = iCabinetForm
else
	iCabinetForm = max(min(iCabinetForm,3),1)
	parameters cabinetForm = stCabinetForm[iCabinetForm]
endif

if iTempForm <> iCabinetForm then
	if iCabinetForm = SHAPE_SQUARE then
		B = sideDepth2
		parameters B = B
	else
		if iTempForm = SHAPE_SQUARE then
			B = A
			parameters B = B
		endif
	endif

	iTempForm = iCabinetForm
	parameters iTempForm = iTempForm
endif

if iCabinetForm = SHAPE_SQUARE then
	hideparameter "sideDepth1", "sideDepth2"
	lock "sideDepth1", "sideDepth2"
endif

if iCabinetForm = SHAPE_CORNER_L then
	values "sideDepth1" range [0.1, A]
	values "sideDepth2" range [0.1, B]
endif

if iCabinetForm = SHAPE_CORNER_C then
	values "sideDepth1" range [0.1, A-0.1]
	values "sideDepth2" range [0.1, B-0.1]
endif


! ==============================================================================
! Function Above
! ==============================================================================
! ----- Function Above -----
if iCabinetForm = SHAPE_SQUARE then
	values "frontAbove" stFrontTypes
	values "iFrontAbove"  FRONT_NONE, FRONT_DRAWER, FRONT_SLIDING, FRONT_DOOR
else
	values "frontAbove" stFrontTypes[1], stFrontTypes[3], stFrontTypes[4]
	values "iFrontAbove"  FRONT_NONE, FRONT_DRAWER, FRONT_DOOR
endif
if GLOB_MODPAR_NAME = "frontAbove" then
	iFrontAbove = 0
	for i = 1 to vardim1(stFrontTypes)
		if frontAbove= stFrontTypes[i] then	iFrontAbove = 4-i
	next i
	parameters iFrontAbove = iFrontAbove
else
	iFrontAbove = max(min(iFrontAbove,3),0)
	parameters frontAbove = stFrontTypes[4-iFrontAbove]
endif

! ----- Interior Above -----
if iCabinetForm = SHAPE_SQUARE then
	values "iFunctions" 0,1,2,3
	values "gs_functions" stInteriorType
else
	values "iFunctions" 0,2,3
	values "gs_functions" stInteriorType[1], stInteriorType[2], stInteriorType[4]
endif
if GLOB_MODPAR_NAME = "gs_functions" then
	gs_knob_type_m = 0
	for i = 1 to vardim1(stInteriorType)
		if gs_functions = stInteriorType[i] then iFunctions = 4 - i
	next i
	parameters iFunctions = iFunctions
else
	iFunctions = max(min(iFunctions,3),0)
	parameters gs_functions = stInteriorType[4-iFunctions]
endif

! ----- Shelves and Hangers and Drawers-----
values "nShelves" range [1, ]
values "nHangers" 1
if iFrontAbove = FRONT_DRAWER then
	lock "gs_functions", "iFunctions", "nHangers", "nShelves"
	hideparameter  "gs_functions", "iFunctions", "nHangers", "nShelves"
else
	if iFunctions = INTERIOR_NONE then
		lock "nHangers", "nShelves"
		hideparameter "nHangers", "nShelves"
	else
		if iFunctions = INTERIOR_SHELVES then
			lock "nHangers"
			hideparameter "nHangers"
		endif
		if iFunctions = INTERIOR_HANGER then
			lock "nShelves"
			hideparameter "nShelves"
		endif
	endif
endif


! ==============================================================================
! Function Under
! ==============================================================================
! ----- Function Under -----
if iCabinetForm = SHAPE_SQUARE then
	values "frontUnder" stFrontTypes
	values "iFrontUnder"  FRONT_NONE, FRONT_DRAWER, FRONT_SLIDING, FRONT_DOOR
else
	values "frontUnder" stFrontTypes[1], stFrontTypes[3], stFrontTypes[4]
	values "iFrontUnder"  FRONT_NONE, FRONT_DRAWER, FRONT_DOOR
endif
if GLOB_MODPAR_NAME = "frontUnder" then
	iFrontUnder = 0
	for i = 1 to vardim1(stFrontTypes)
		if frontUnder= stFrontTypes[i] then	iFrontUnder = 4-i
	next i
	parameters iFrontUnder = iFrontUnder
else
	iFrontUnder = max(min(iFrontUnder,3),0)
	parameters frontUnder = stFrontTypes[4-iFrontUnder]
endif


! ----- Interior Under -----
if iCabinetForm = SHAPE_SQUARE then
	values "iInteriorUnder" 0,1,2,3
	values "interiorUnder" stInteriorType
else
	values "iInteriorUnder" 0,2,3
	values "interiorUnder" stInteriorType[1], stInteriorType[2], stInteriorType[4]
endif
if GLOB_MODPAR_NAME = "interiorUnder" then
	iInteriorUnder = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorUnder= stInteriorType[i] then	iInteriorUnder = 4-i
	next i
	parameters iInteriorUnder = iInteriorUnder
else
	iInteriorUnder = max(min(iInteriorUnder,3),0)
	parameters interiorUnder =stInteriorType[4-iInteriorUnder]
endif

! ----- Shelves and Hangers and Drawers-----
values "nShelvesUnder" range [1, ]
values "nHangersUnder" 1
if iFrontUnder = FRONT_DRAWER then
	lock "interiorUnder", "iInteriorUnder", "nHangersUnder", "nShelvesUnder"
	hideparameter  "interiorUnder", "iInteriorUnder", "nHangersUnder", "nShelvesUnder"
else
	if iInteriorUnder = INTERIOR_NONE then
		lock "nHangersUnder", "nShelvesUnder"
		hideparameter "nHangersUnder", "nShelvesUnder"
	else
		if iInteriorUnder= INTERIOR_SHELVES then
			lock "nHangersUnder"
			hideparameter "nHangersUnder"
		endif
		if iInteriorUnder = INTERIOR_HANGER then
			lock "nShelvesUnder"
			hideparameter "nShelvesUnder"
		endif
	endif
endif
! ==============================================================================
! Shelf and Hanger and Knob and Drawer
! ==============================================================================

if _bLockKnob then
	hideparameter "gs_knob_mat"
	lock "gs_knob_mat"
endif

if _bLockShelf then
	hideparameter "gs_shelf_mat"
	lock "gs_shelf_mat"
endif

if _bLockHanger then
	hideparameter "gs_hanger_mat"
	lock "gs_hanger_mat"
endif

if _bLockDrawer then
	hideparameter "gs_drawer_mat"
	lock "gs_drawer_mat"
endif

! ==============================================================================
! Drawers
! ==============================================================================
! ----- Drawers -----
dim drawerStyleNumber[4]
	drawerStyleNumber[1] = 1
	drawerStyleNumber[2] = 2
	drawerStyleNumber[3] = 3
	drawerStyleNumber[4] = 8

values "drawerStyle" stDrawerTypes
values "iDrawerStyle"  drawerStyleNumber
if GLOB_MODPAR_NAME = "drawerStyle" then
	iDrawerStyle = 1
	for i = 1 to vardim1(stDrawerTypes)
		if drawerStyle= stDrawerTypes[i] then	iDrawerStyle = drawerStyleNumber[i]
	next i
	parameters iDrawerStyle = iDrawerStyle
else
	for i = 1 to vardim1(stDrawerTypes)
		if iDrawerStyle = drawerStyleNumber[i] then drawerStyle = stDrawerTypes[i]
	next i
	parameters drawerStyle = drawerStyle
endif

values "drawerFrameWidth" range [0.03,]
values "nDrawerHor" range [1,]
values "nDrawerVert" range [1,]

if iDrawerStyle = 1 | iDrawerStyle = 8 then
	hideparameter "drawerFrameWidth"
	lock "drawerFrameWidth"
endif

bDrawers = (iFrontUnder = FRONT_DRAWER or iFrontAbove = FRONT_DRAWER)

if not(bDrawers) then
	hideparameter "drawer", "drawerFrameWidth", "nDrawerHor", "nDrawerVert", "iDrawerStyle", "drawerStyle"
	lock "drawer", "drawerFrameWidth", "nDrawerHor", "nDrawerVert", "iDrawerStyle", "drawerStyle"
endif


! ==============================================================================
! Drawer Knob Parameters
! ==============================================================================
values "nKnobDrawers" 1, 2

if gs_knob_type_m = 1 then _knob_size = 0.012
if gs_knob_type_m = 2 then _knob_size = 0.011
if gs_knob_type_m = 3 then _knob_size = 0.020
if gs_knob_type_m  >= 4 & gs_knob_p_m = 1 then _knob_size = knob_size/2

drawerWidth = (min (doorFullWidth[1], doorFullWidth[2])-cornelLMin*(iCabinetForm = SHAPE_CORNER_L) )/nDrawerHor
drawerHeight = (min (doorHeight[1], doorHeight[2]))/nDrawerVert

if nKnobDrawers = 1 then
	values "xDrawerKnobPos" range [-drawerWidth/2 + 0.02 + _knob_size, drawerWidth/2 - 0.02 - _knob_size]
else
	values "xDrawerKnobPos" range [0.02 + _knob_size, drawerWidth/2 - 0.02 - _knob_size]
endif
!if gs_knob_type_m = 4 & gs_knob_p_m = 0 then yKnobPosMod = knob_size! * 128/100/2
if gs_knob_type_m > 3 & gs_knob_p_m = 0 then yKnobPosMod = knob_size/2
!values "zDrawerKnobPos" range [-(drawerHeight/2 - 0.02 - yKnobPosMod), drawerHeight/2 - 0.02 - yKnobPosMod]
values "zDrawerKnobPos" range [-(drawerHeight/2 - 0.02), drawerHeight/2 - 0.02]

if GLOB_MODPAR_NAME = "nKnobDrawers" then
	if nKnobDrawers = 1 then
		xDrawerKnobPos = 0
	else
		xDrawerKnobPos = 0.1
	endif
	parameters xDrawerKnobPos = xDrawerKnobPos
endif


! ==============================================================================
! Door Settings
! ==============================================================================
! ----- Door Style -----
dim doorStyleNumber[12]
	doorStyleNumber[1] = 1
	doorStyleNumber[2] = 13
	doorStyleNumber[3] = 3
	doorStyleNumber[4] = 9
	doorStyleNumber[5] = 4
	doorStyleNumber[6] = 5
	doorStyleNumber[7] = 14
	doorStyleNumber[8] = 15
	doorStyleNumber[9] = 16
	doorStyleNumber[10] = 17
	doorStyleNumber[11] = 18
	doorStyleNumber[12] = 10

values "iDoorStyle" doorStyleNumber
values "doorStyle" stDoorStyle
if GLOB_MODPAR_NAME = "doorStyle" then
	iDoorStyle = 1
	for i = 1 to vardim1(stDoorStyle)
		if doorStyle = stDoorStyle[i] then iDoorStyle = doorStyleNumber[i]
	next i
	parameters iDoorStyle = iDoorStyle
else
	for i = 1 to vardim1(stDoorStyle)
		if iDoorStyle = doorStyleNumber[i] then doorStyle = stDoorStyle[i]
	next i
	parameters doorStyle = doorStyle
endif

if not(bDoor) then
	hideparameter "gs_door", "doorCustomPanelName", "iTempDoorStyle"
	lock "gs_door", "doorCustomPanelName", "iTempDoorStyle"

	hideparameter "nDoor", "doorStyle", "iDoorStyle", "doorThickness", "doorFrameWidth", "mullionWidth", "nVerticalMullion", "nHorizontalMullion", "bBevel", "doorAngle3D"
	lock "nDoor", "doorStyle", "iDoorStyle", "doorThickness", "doorFrameWidth", "mullionWidth", "nVerticalMullion", "nHorizontalMullion", "bBevel", "doorAngle3D"

	hideparameter "matDoorFrame", "matDoorGlass", "matDoorMirror", "matDoorDecor1", "matDoorDecor2"
	lock "matDoorFrame", "matDoorGlass", "matDoorMirror", "matDoorDecor1", "matDoorDecor2"
endif

! ----- Door Number -----
if iCabinetForm = SHAPE_SQUARE then
	tempDoorNumber = 1
	if iFrontUnder = FRONT_SLIDING or iFrontAbove = FRONT_SLIDING then tempDoorNumber = 2
	values "nDoor" range [tempDoorNumber, ]
else
	if iCabinetForm = SHAPE_CORNER_C then
		values "nDoor" range [1, 2]
	else
		values "nDoor" 1
		lock "nDoor"
		hideparameter "nDoor"
	endif
endif

if GLOB_MODPAR_NAME = "frontAbove" | GLOB_MODPAR_NAME = "iFrontAbove" | \
	GLOB_MODPAR_NAME = "frontUnder" | GLOB_MODPAR_NAME = "iFrontUnder " then
	if nDoor = 1 & (iFrontAbove = FRONT_SLIDING | iFrontUnder = FRONT_SLIDING) then
		nDoor = 2
		parameters nDoor = nDoor
	endif
endif

! ----- Door and Knob Parameters Macro -----
call "fa_warddoortyp" parameters all bNotMacro = 0,
									gs_full_edit = 1,
									doorWidth=(min (doorFullWidth[1], doorFullWidth[2]))/nDoor,
									doorHeight=min (doorHeight[1], doorHeight[2])


! ==============================================================================
! Door Opening
! ==============================================================================
openingRange = 0.9
doorTempWidth = (min (doorFullWidth[1], doorFullWidth[2]))/nDoor

knob_w = 0
if gs_knob_type_m >=1 & gs_knob_type_m <=3 then knob_w= 0.02
if gs_knob_type_m >=4 & gs_knob_type_m <=8 then
	if gs_knob_p_m = 1 then	! Horizontal
		knob_w= 0.1
	else
		knob_w= 0.012
	endif
endif

minLengthKnob = knob_pl_x + knob_w
slidingRange = 1 - (minLengthKnob/doorTempWidth)

if GLOB_MODPAR_NAME = "nDoor" then
	for gg = 1 to 2
		for kk = 1 to nDoor
			openingDoor[gg][kk] = 0
			openingDoorLength[gg][kk] = 0
			parameters openingDoorLength[gg][kk] = openingDoorLength[gg][kk], openingDoor[gg][kk] = openingDoor[gg][kk]
		next kk
	next gg
endif

if GLOB_MODPAR_NAME = "openingDoor" then
	for kk = 1 to nDoor
		if (ceil(nDoor/2)<>nDoor/2)  and (kk = 2 and nDoor>2) then
			if openingDoor[1][kk] > openingRange*100 then
				openingDoor[1][kk] = openingRange*100
				parameters openingDoor[1][kk] = openingDoor[1][kk]
			endif

			if openingDoor[1][kk] < -openingRange*100 then
				openingDoor[1][kk] = -openingRange*100
				parameters openingDoor[1][kk] = openingDoor[1][kk]
			endif

			if openingDoor[2][kk] > openingRange*100 then
				openingDoor[2][kk] = openingRange*100
				parameters openingDoor[2][kk] = openingDoor[2][kk]
			endif

			if openingDoor[2][kk] < -openingRange*100 then
				openingDoor[2][kk] = -openingRange*100
				parameters openingDoor[2][kk] = openingDoor[2][kk]
			endif
		else
			if openingDoor[1][kk] > openingRange*100 then
				openingDoor[1][kk] = openingRange*100
				parameters openingDoor[1][kk] = openingDoor[1][kk]
			endif

			if openingDoor[1][kk] < 0 then
				openingDoor[1][kk] = 0
				parameters openingDoor[1][kk] = openingDoor[1][kk]
			endif

			if openingDoor[2][kk] > openingRange*100 then
				openingDoor[2][kk] = openingRange*100
				parameters openingDoor[2][kk] = openingDoor[2][kk]
			endif

			if openingDoor[2][kk] < 0 then
				openingDoor[2][kk] = 0
				parameters openingDoor[2][kk] = openingDoor[2][kk]
			endif
		endif

		openingDoorLength[1][kk] = doorTempWidth * (openingDoor[1][kk]/100)
		openingDoorLength[2][kk] = doorTempWidth * (openingDoor[2][kk]/100)
		parameters openingDoorLength[1][kk] = openingDoorLength[1][kk], openingDoorLength[2][kk] = openingDoorLength[2][kk]
	next kk
else
	! Comment:
	! odd Door Number 	- 1, 2, 3, A, B, A, B ...
	! even Door Number	- A, B, A, B, A, B, A ...

	for iPos = 1 to 2
		for kk = 1 to nDoor
			if (iPos = 1 & iFrontAbove = FRONT_SLIDING) | (iPos = 2 & iFrontUnder = FRONT_SLIDING) then
				if (ceil(nDoor/2)<>nDoor/2)  & nDoor > 2 & (kk >= 1 & kk <= 3) then
					! Maximum Range
					if kk = 1 then	! (1)
						if openingDoorLength[iPos][kk] > (doorTempWidth * slidingRange + openingDoorLength[iPos][kk+1]) then
							openingDoorLength[iPos][kk] = (doorTempWidth * slidingRange + openingDoorLength[iPos][kk+1])
							parameters openingDoorLength[iPos][kk] = openingDoorLength[iPos][kk]
						endif
					endif
					if kk = 2 then	! (2)
						if openingDoorLength[iPos][kk] > (doorTempWidth * slidingRange - openingDoorLength[iPos][kk+1]) then
							openingDoorLength[iPos][kk] = (doorTempWidth * slidingRange - openingDoorLength[iPos][kk+1])
							parameters openingDoorLength[iPos][kk] = openingDoorLength[iPos][kk]
						endif
					endif
					if kk = 3 then	! (3)
						if openingDoorLength[iPos][kk] > (doorTempWidth * slidingRange - openingDoorLength[iPos][kk-1]) then
							openingDoorLength[iPos][kk] = (doorTempWidth * slidingRange - openingDoorLength[iPos][kk-1])
							parameters openingDoorLength[iPos][kk] = openingDoorLength[iPos][kk]
						endif
					endif
					! Minimum Range
					if kk = 2 then	! (2)
						if openingDoorLength[iPos][kk] < -(doorTempWidth * slidingRange - openingDoorLength[iPos][kk-1]) then
							openingDoorLength[iPos][kk] = -(doorTempWidth * slidingRange - openingDoorLength[iPos][kk-1])
							parameters openingDoorLength[iPos][kk] = openingDoorLength[iPos][kk]
						endif
					else	! (1), (3)
						if openingDoorLength[iPos][kk] < eps then
							openingDoorLength[iPos][kk] = 0
							parameters openingDoorLength[iPos][kk] = openingDoorLength[iPos][kk]
						endif
					endif
				else
					! Maximum Range
					if (ceil(kk/2)<>(kk/2)) exor (ceil(nDoor/2)<>(nDoor/2)) then ! (A)
						if openingDoorLength[iPos][kk] > (doorTempWidth * slidingRange - openingDoorLength[iPos][kk+1]) then
							openingDoorLength[iPos][kk] = (doorTempWidth * slidingRange - openingDoorLength[iPos][kk+1])
							parameters openingDoorLength[iPos][kk] = openingDoorLength[iPos][kk]
						endif
					else	! (B)
						if openingDoorLength[iPos][kk] > (doorTempWidth * slidingRange - openingDoorLength[iPos][kk-1]) then
							openingDoorLength[iPos][kk] = (doorTempWidth * slidingRange - openingDoorLength[iPos][kk-1])
							parameters openingDoorLength[iPos][kk] = openingDoorLength[iPos][kk]
						endif
					endif
					! Minimum Range (A), (B)
					if openingDoorLength[iPos][kk] < eps then
						openingDoorLength[iPos][kk] = 0
						parameters openingDoorLength[iPos][kk] = openingDoorLength[iPos][kk]
					endif
				endif
			else
				if (ceil(nDoor/2)<>nDoor/2)  and (kk = 2 and nDoor>2) then
					if openingDoorLength[iPos][kk] > doorTempWidth*slidingRange then
						openingDoorLength[iPos][kk] = doorTempWidth*slidingRange
						parameters openingDoorLength[iPos][kk] = openingDoorLength[iPos][kk]
					endif

					if openingDoorLength[iPos][kk] < -doorTempWidth*slidingRange then
						openingDoorLength[iPos][kk] = -doorTempWidth*slidingRange
						parameters openingDoorLength[iPos][kk] = openingDoorLength[iPos][kk]
					endif
				else
					if openingDoorLength[iPos][kk] > doorTempWidth*slidingRange then
						openingDoorLength[iPos][kk] = doorTempWidth*slidingRange
						parameters openingDoorLength[iPos][kk] = openingDoorLength[iPos][kk]
					endif

					if openingDoorLength[iPos][kk] < 0 then
						openingDoorLength[iPos][kk] = 0
						parameters openingDoorLength[iPos][kk] = openingDoorLength[iPos][kk]
					endif
				endif
			endif

			openingDoor[iPos][kk] = (openingDoorLength[iPos][kk]/doorTempWidth)*100
			parameters openingDoor[iPos][kk] = openingDoor[iPos][kk]
		next kk
	next iPos
endif

! ==============================================================================
! Knob
! ==============================================================================
! ----- Knob Style-----
values "gs_knob_type_m" 0,1,2,3,4,5,6,7,8
values "gs_knob_type" stKnobTypes
if GLOB_MODPAR_NAME = "gs_knob_type" then
	gs_knob_type_m = 1
	for i = 1 to vardim1(stKnobTypes)
		if gs_knob_type = stKnobTypes[i] then gs_knob_type_m = i-1
	next i
	parameters gs_knob_type_m = gs_knob_type_m
else
	gs_knob_type_m = max(min(gs_knob_type_m,8),0)
	parameters gs_knob_type = stKnobTypes[gs_knob_type_m+1]
endif

! ----- Knob Placing-----
values "gs_knob_p_m" 0,1
values "gs_knob_p" stKnobPlacing
if GLOB_MODPAR_NAME = "gs_knob_p" then
	gs_knob_type_m = 1
	for i = 1 to vardim1(stKnobPlacing)
		if gs_knob_p = stKnobPlacing[i] then gs_knob_p_m = i-1
	next i
	parameters gs_knob_p_m = gs_knob_p_m
else
	gs_knob_p_m = max(min(gs_knob_p_m,1),0)
	parameters gs_knob_p = stKnobPlacing[gs_knob_p_m+1]
endif

if not(bDrawers) and not(bDoor) then
	hideparameter "gs_knob_type", "gs_knob_type_m", "knob_pl_x", "knob_pl_y", "gs_knob_p", "gs_knob_p_m", "knob_size"
	lock "gs_knob_type", "gs_knob_type_m", "knob_pl_x", "knob_pl_y", "gs_knob_p", "gs_knob_p_m", "knob_size"
endif

values "nKnobDrawers" 1,2

if not(bDrawers) then
	hideparameter "nKnobDrawers", "xDrawerKnobPos", "zDrawerKnobPos"
	lock "nKnobDrawers", "xDrawerKnobPos", "zDrawerKnobPos"
endif


! ==============================================================================
! Cornice
! ==============================================================================
! ----- Cornice Style -----
values "gs_cornice_type" stCorniceTypes[2], stCorniceTypes[3], stCorniceTypes[4], stCorniceTypes[5], stCorniceTypes[1]
values "gs_cornice_type_m" 0,1,2,3,4
if GLOB_MODPAR_NAME = "gs_cornice_type" then
	gs_cornice_type_m= 0
	for i = 1 to vardim1(stCorniceTypes)
		if gs_cornice_type = stCorniceTypes[i] then gs_cornice_type_m = i -1
	next i
	parameters gs_cornice_type_m = gs_cornice_type_m
else
	gs_cornice_type_m = max(min(gs_cornice_type_m,4),0)
	parameters gs_cornice_type = stCorniceTypes[gs_cornice_type_m+1]
endif

! ----- Cornice Overhang-----
values "gs_lining" stCorniceOverhang
values "gs_lining_m" 1,2,3,4
if GLOB_MODPAR_NAME = "gs_lining" then
	gs_lining_m = 0
	for i = 1 to vardim1(stCorniceOverhang)
		if gs_lining = stCorniceOverhang[i] then gs_lining_m= 5-i
	next i
	parameters gs_lining_m = gs_lining_m
else
	gs_lining_m = max(min(gs_lining_m,4),1)
	parameters gs_lining = stCorniceOverhang[5-gs_lining_m]
endif


if gs_cornice_type_m = 0 then
	hideparameter "gs_lining", "gs_lining_m", "cot", "cooh", "gs_cornice_mat"
	lock "gs_lining", "gs_lining_m", "cot", "cooh", "gs_cornice_mat"
endif

values "cot" range (0,)
if gs_cornice_type_m=1  then values "cooh" range [0,)
if gs_cornice_type_m=2 or gs_cornice_type_m=3  then values "cooh" range [1/2*cot,)
if gs_cornice_type_m=4 then values "cooh" range [3/4*cot,)


! ==============================================================================
! Leg
! ==============================================================================
! ----- Leg Style-----
values "gs_leg_type_m" 0,1,2,3,4,5,6
values "gs_leg_type" stLegTypes
if GLOB_MODPAR_NAME = "gs_leg_type" then
	gs_leg_type_m = 1
	for i = 1 to vardim1(stLegTypes)
		if gs_leg_type = stLegTypes[i] then gs_leg_type_m = i-1
	next i
	parameters gs_leg_type_m = gs_leg_type_m
else
	gs_leg_type_m = max(min(gs_leg_type_m,6),0)
	parameters gs_leg_type = stLegTypes[gs_leg_type_m+1]
endif

!values "leg_h" range [0, min (ZZYZX-2*thickness-(gs_cornice_type_m>0)*cot, ZZYZX-mindist)]
!values "leg_h" range [0, ZZYZX-mindist-(gs_cornice_type_m>0)*cot]
values "leg_h" range [0, mindist]
values "leg_w" range (0, min(a/2, b/2))

if gs_leg_type_m=0 then
	hideparameter "gs_leg_mat", "leg_h", "leg_w"
	lock "gs_leg_mat", "leg_h", "leg_w"
endif


! ==============================================================================
! 2D Style
! ==============================================================================
! ----- 2D Symbol Type -----
if iFrontAbove = FRONT_DOOR then
	if iCabinetForm = SHAPE_SQUARE then
		values "symbolType" stSymbolTypes		! Type 1(1),Type 2(2),Type 3(3),Type 4(4), Type 5(5), Type 6(6)
		values "iSymbolType" 1, 2, 3, 4, 5, 6
	else
		values "symbolType" stSymbolTypes[1], stSymbolTypes[4], stSymbolTypes[5], stSymbolTypes[6]
		values "iSymbolType" 1, 4, 5, 6
	endif
else
	if iCabinetForm = SHAPE_SQUARE then
		values "symbolType" stSymbolTypes[1], stSymbolTypes[2], stSymbolTypes[3], stSymbolTypes[4]
		values "iSymbolType" 1, 2, 3, 4
	else
		values "symbolType" stSymbolTypes[1], stSymbolTypes[4]
		values "iSymbolType" 1, 4
	endif
endif

if GLOB_MODPAR_NAME = "symbolType" then
	iSymbolType = 1
	for i = 1 to vardim1(stSymbolTypes)
		if symbolType = stSymbolTypes[i] then	iSymbolType = i
	next i
	parameters iSymbolType = iSymbolType
else
	iSymbolType = max(min(iSymbolType,6),1)
	parameters symbolType= stSymbolTypes[iSymbolType]
endif

lock "openingAngle2D"
hideparameter "openingAngle2D"

if (iFrontAbove = FRONT_DRAWER |\
	iFunctions = INTERIOR_NONE |\ 
	iFunctions = INTERIOR_SHELVES) |\
 	iSymbolType = 2 | iSymbolType = 3 then

	hideparameter "bHangers"
	lock "bHangers"
endif

if gs_cont_pen=0 then parameters gs_cont_pen=4
if gs_fill_pen=0 then parameters gs_fill_pen=19


! ==============================================================================
! Minimal Space
! ==============================================================================
values "MSFront" range [0, ]


! ==============================================================================
! 3D Representation
! ==============================================================================
! ----- 3D Representation -----
values "gs_detlevel_3D" stDetlevel3D		! Off(0), Simple(1), Detailed(2)
values "gs_detlevel_3D_m" 0, 1, 2
if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = 2
	for i = 1 to vardim1(stDetlevel3D)
		if gs_detlevel_3D = stDetlevel3D[i] then	gs_detlevel_3D_m = 3-i
	next i
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D_m = max(min(gs_detlevel_3D_m,2),0)
	parameters gs_detlevel_3D = stDetlevel3D[3-gs_detlevel_3D_m]
endif

values "gs_resol" range [3, )
if gs_resol<3 then parameters gs_resol=3

]]></Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[Variable wardrobe freestanding or modular unit with corner option.]]>
</Comment>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[Different layouts above and under division, shape, side hung or sliding doors, drawer, door, knob, cornice or leg styles, shelf, hanger, 2D symbols, minimal space]]>
</Keywords>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="20541" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	008008020000004C5CF69C000000097048597300002E2300002E230178A53F76
	00000A396943435050686F746F73686F70204943432070726F66696C65000078
	DA9D96775454D71687CFBD777AA1CD30025286DEBBC000D27B935E4561981960
	28030E3334B121A2021145449A224850C480D150245644B1101454B007240828
	311845542C6F46D68BAEACBCF7F2F2FBE3AC6FEDB3F7B9FBECBDCF5A170092A7
	2F9797064B0190CA13F0833C9CE911915174EC0080011E608029004C5646BA5F
	B07B0810C9CBCD859E2172025F0401F07A58BC0270D3D033804E07FF9FA459E9
	7C81E89800119BB339192C11178838254B902EB6CF8A981A972C66182566BE28
	4111CB893961910D3EFB2CB2A398D9A93CB688C539A7B353D962EE15F1B64C21
	47C488AF880B33B99C2C11DF12B1468A30952BE237E2D8540E33030014496C17
	70588922361131891F12E422E2E500E048095F71DC572CE0640BC49772494BCF
	E173131205741D962EDDD4DA9A41F7E464A5700402C300262B99C967D35DD252
	D399BC1C0016EFFC5932E2DAD24545B634B5B6B434343332FDAA50FF75F36F4A
	DCDB457A19F8B96710ADFF8BEDAFFCD21A0060CC896AB3F38B2DAE0A80CE2D00
	C8DDFB62D3380080A4A86F1DD7BFBA0F4D3C2F890241BA8DB1715656961197C3
	321217F40FFD4F87BFA1AFBE67243EEE8FF2D05D39F14C618A802EAE1B2B2D25
	4DC8A767A433591CBAE19F87F81F07FE751E06419C780E9FC313458489A68CCB
	4B10B59BC7E60AB8693C3A97F79F9AF80FC3FEA4C5B91689D2F81150638C80D4
	752A407EED07280A1120D1FBC55DFFA36FBEF830207E79E12A938B73FFEF37FD
	67C1A5E225839BF039CE252884CE12F23317F7C4CF12A0010148022A9007CA40
	1DE800436006AC802D70046EC01BF8831010095603164804A9800FB2401ED804
	0A4131D809F6806A50071A41336805C741273805CE834BE01AB8016E83FB6014
	4C80676016BC060B10046121324481E421154813D287CC2006640FB941BE5010
	1409C54209100F124279D066A8182A83AAA17AA819FA1E3A099D87AE4083D05D
	680C9A867E87DEC1084C82A9B012AC051BC30CD809F68143E0557002BC06CE85
	0BE01D7025DC001F853BE0F3F035F8363C0A3F83E7108010111AA28A18220CC4
	05F147A29078848FAC478A900AA4016945BA913EE426328ACC206F5118140545
	4719A26C519EA850140BB506B51E5582AA461D4675A07A51375163A859D44734
	19AD88D647DBA0BDD011E8047416BA105D816E42B7A32FA26FA327D0AF31180C
	0DA38DB1C2786222314998B59812CC3E4C1BE61C6610338E99C362B1F2587DAC
	1DD61FCBC40AB085D82AEC51EC59EC107602FB0647C4A9E0CC70EEB8281C0F97
	8FABC01DC19DC10DE126710B7829BC26DE06EF8F67E373F0A5F8467C37FE3A7E
	02BF4090266813EC08218424C2264225A1957091F080F0924824AA11AD898144
	2E7123B192788C789938467C4B9221E9915C48D124216907E910E91CE92EE925
	994CD6223B92A3C802F20E7233F902F911F98D0445C248C24B822DB141A246A2
	436248E2B9245E5253D24972B564AE6485E409C9EB92335278292D291729A6D4
	7AA91AA99352235273D2146953697FE954E912E923D257A4A764B0325A326E32
	6C99029983321764C62908459DE242615136531A29172913540C559BEA454DA2
	1653BFA30E506765656497C986C966CBD6C89E961DA521342D9A172D85564A3B
	4E1BA6BD5BA2B4C4690967C9F625AD4B8696CCCB2D957394E3C815C9B5C9DD96
	7B274F9777934F96DF25DF29FF5001A5A0A710A890A5B05FE1A2C2CC52EA52DB
	A5ACA5454B8F2FBDA7082BEA290629AE553CA8D8AF38A7A4ACE4A194AE54A574
	41694699A6ECA89CA45CAE7C46795A85A262AFC255295739ABF2942E4B77A2A7
	D02BE9BDF4595545554F55A16ABDEA80EA829AB65AA85ABE5A9BDA4375823A43
	3D5EBD5CBD477D564345C34F234FA345E39E265E93A199A8B957B34F735E4B5B
	2B5C6BAB56A7D694B69CB69776AE768BF6031DB28E83CE1A9D069D5BBA185D86
	6EB2EE3EDD1B7AB09E855EA25E8DDE757D58DF529FABBF4F7FD0006D606DC033
	6830183124193A19661AB6188E19D18C7C8DF28D3A8D9E1B6B184719EF32EE33
	FE6862619262D26872DF54C6D4DB34DFB4DBF477333D3396598DD92D73B2B9BB
	F906F32EF317CBF4977196ED5F76C78262E167B1D5A2C7E283A59525DFB2D572
	DA4AC32AD6AAD66A84416504304A1897ADD1D6CED61BAC4F59BFB5B1B411D81C
	B7F9CDD6D036D9F688EDD472EDE59CE58DCBC7EDD4EC9876F576A3F674FB58FB
	03F6A30EAA0E4C870687C78EEA8E6CC726C749275DA724A7A34ECF9D4D9CF9CE
	EDCEF32E362EEB5CCEB922AE1EAE45AE036E326EA16ED56E8FDCD5DC13DC5BDC
	673D2C3CD67A9CF3447BFA78EEF21CF152F26279357BCD7A5B79AFF3EEF521F9
	04FB54FB3CF6D5F3E5FB76FBC17EDE7EBBFD1EACD05CC15BD1E90FFCBDFC77FB
	3F0CD00E5813F06320263020B026F0499069505E505F30253826F848F0EB10E7
	90D290FBA13AA1C2D09E30C9B0E8B0E6B0F970D7F0B2F0D108E3887511D72215
	22B9915D51D8A8B0A8A6A8B9956E2BF7AC9C88B6882E8C1E5EA5BD2A7BD595D5
	0AAB53569F8E918C61C69C8845C786C71E897DCFF4673630E7E2BCE26AE36659
	2EACBDAC676C4776397B9A63C729E34CC6DBC597C54F25D825EC4E984E7448AC
	489CE1BA70ABB92F923C93EA92E693FD930F257F4A094F694BC5A5C6A69EE4C9
	F09279BD69CA69D96983E9FAE985E9A36B6CD6EC5933CBF7E137654019AB32BA
	0454D1CF54BF5047B8453896699F5993F9262B2CEB44B674362FBB3F472F677B
	CE64AE7BEEB76B516B596B7BF254F336E58DAD735A57BF1E5A1FB7BE6783FA86
	820D131B3D361EDE44D894BCE9A77C93FCB2FC579BC337771728156C2C18DFE2
	B1A5A550A2905F38B2D5766BDD36D436EEB681EDE6DBABB67F2C62175D2D3629
	AE287E5FC22AB9FA8DE93795DF7CDA11BF63A0D4B274FF4ECC4EDECEE15D0EBB
	0E974997E5968DEFF6DBDD514E2F2F2A7FB52766CF958A6515757B097B857B47
	2B7D2BBBAA34AA7656BDAF4EACBE5DE35CD356AB58BBBD767E1F7BDFD07EC7FD
	AD754A75C575EF0E700FDCA9F7A8EF68D06AA83888399879F049635863DFB78C
	6F9B9B149A8A9B3E1CE21D1A3D1C74B8B7D9AAB9F988E291D216B845D8327D34
	FAE88DEF5CBFEB6A356CAD6FA3B5151F03C784C79E7E1FFBFDF0719FE33D2718
	275A7FD0FCA1B69DD25ED40175E474CC7626768E7645760D9EF43ED9D36DDBDD
	FEA3D18F874EA99EAA392D7BBAF40CE14CC1994F6773CFCE9D4B3F37733EE1FC
	784F4CCFFD0B11176EF506F60E5CF4B978F992FBA50B7D4E7D672FDB5D3E75C5
	E6CAC9AB8CAB9DD72CAF75F45BF4B7FF64F153FB80E540C775ABEB5D37AC6F74
	0F2E1F3C33E43074FEA6EBCD4BB7BC6E5DBBBDE2F6E070E8F09D91E891D13BEC
	3B537753EEBEB897796FE1FEC607E807450FA51E563C527CD4F0B3EECF6DA396
	A3A7C75CC7FA1F073FBE3FCE1A7FF64BC62FEF270A9E909F544CAA4C364F994D
	9D9A769FBEF174E5D38967E9CF16660A7F95FEB5F6B9CEF31F7E73FCAD7F3662
	76E205FFC5A7DF4B5ECABF3CF46AD9AB9EB980B947AF535F2FCC17BD917F73F8
	2DE36DDFBBF077930B59EFB1EF2B3FE87EE8FEE8F3F1C1A7D44F9FFE050398F3
	FC91C05ADB0000000467414D410000B18E7CFB5193000000206348524D00007A
	25000080830000F9FF000080E9000075300000EA6000003A980000176F925FC5
	46000045644944415478DA62FCFFFF3FC32818380010404CA341403CF8F7EF1F
	D5CD04082096911CA0C0DCFFFBF7EF5FBF7EFD8681BF7FFFFEF9F30718D04006
	84FC03068C8C8C4C4C4C5FBF7EBD7EFDBAA6A6A689890907070755DC0010408C
	C3A9080286D76F54000947485042D8900085C7C03FB0F78181009402E2DF6059
	78B843A207087EFCF80124212600831E28A5A0A0606C6C2C252545A19B010268
	F04600722800C11F18003A18280509B2BF60459030062652482901F11128327E
	FDFAF3F72FDC1C504A07E3EFDF7FFCFCF91318A8C094FF0B66323CAA40C5020B
	0B30BDB382011B1B1B840149F2AF5FBF96909080580434848F8FCFD0D0505757
	976C6F0204E09D8C72000441303CD3C5BC8477F2E41E276B6BF5FD516EBDF610
	0FCA04013FE4A70690E546F01687E84C5D7116AA4C531FBC3A99F8BC62B41383
	9EA00BE2B6F6CECAB67034E2E3868B878D8F38CD748999B93E9BA518818B8288
	B4E8E33EA9A32168460E1589858CADB59C336573773C0A6BADB594F281CC2900
	67E58E03200C82E1F88A26D56BB9BA7AFF0B386803A8517FC4D25D8686BEE907
	94FF3580882C30BD75A08ED5D3DF7C60722581E91ED796ECF2CAC75149E7DFC0
	C3D3687EF8DE56C9B65DE81BA3899E52ACA156608A69DD559657BA1BEB7160DC
	56640B4EC7E07D1E9169D9E510D6C7EC0253A0AB25C2703A318FD31C86C11E92
	E3B728E00FD406FC51FF303E0288CC0878FBF6ED993367B8B9B98159151234B0
	40FC090C7F20E3C78FEFE090040525248A80210B09E93FB08A8E09062041890C
	802643F23E347CD9D820E10E34848B8B0BC8408E5D500A8518FA17642CD0F2AF
	9F7F0019CAAAEA2F5F3CBB7BFD1A0328F7FC04BA09A89D8D83D3C527F0D1A3C7
	FBD72FE5E26401259A3F5F7E7FFFC9C4FC979901181AFF999881091F88FF33C2
	82989191F91FC37F9014386B8045A025075004A286151CCD640080009C96310B
	C2301085D3360595B6A2197473B0141184FE6FBB8BE0D2DD3F2114549CA436AD
	369778C981E0DA1B929B12F8DEBB970C14400891E779511455552154844EDEA4
	DF42F85F68CC38492C44079AA0E2843B937217DD8CA6841A6D0F7471A3ACA24D
	FD6CE56B3C89B2CD16AF68A52C4F470FDE1A907E0F4E60A53A8361201B6C74DF
	A98F5AA4BB759ADD6FD7F3612FE691668091C4804F972BDC8D56F5E3C2C5CCA9
	1F8EE2D0E381019F791AB906162AF35104E775046F4063261171B2CE2F27E9ED
	A175407D05E0A4DC751006A130CCAD37EDD034ED43A8D1E833B8F9CE0E0E3E82
	A39B938B346D5A8142FD91E80394811C184EC2C777FEF91154D7755555D841F8
	3BEE3C881922C80BE26B0CF8549465D3C846BE205A27A531AAEFDAF5EED02B75
	BD9C39410068E2C0C7019C35C3A8DEA351DA34E3A0B9358E89A1B5FBE369B5D9
	82169A3FEE37279F0C79C3B83710EA3241054B621AA71123A9D5264D32E81A89
	6851089EE7D459288AC88BB334704C96046AF892823025CE023AF7E4C904D8DE
	28C728C3019F07D8B8987E33113AE08DB3B9FFD74700D2CB2607411888C22D05
	41A4897A0813E35DBC803BEFE505BC056B77248670098D464D8052FDA6ACDC6A
	374DD3DF79F366DEF47707F0026B6DD3D48FDBC5F7BE73D415ADF0716855474A
	A0270F3D8BF972BBDB9FABAA3C1EEC221723B47E5DFBD57A43F9529FCA623240
	431511F2B1A099C43A58CA70324D23AF3C93E69E652937EA1062793EEB1C39CA
	E0E448100BA78295D49506201D68198945D1718F903A1645CAE003E0460FF09C
	7E8BDAB2471B38308CBC976612F8CD6A35089FC01F2EF9C072F55DAF8CE1FEE7
	EFEC2300E9658F84400843E190651BD855C7FBDF477BAD1C0F61A933027E8FA5
	B2D4668B6C32F07E12E0AF8718CBDFAE97FBF9B43F8C084023B6030C5C3156C3
	2BE54C9C6B46DEA5BC1CD92CE3D3ED0109D1C2BAAC690ED50BD0BC4D748F50B6
	096BF19BA034717B42D4E8F4AE8179ECC44F83FD16E15529D42891DAD8E5D23C
	F7366B3F554AA0B4A408FABE4D3A59313128E9B1B4E9042852BD528864AE239A
	9CB60192EB37EF7F8D9D9F5BE12300E96590C3200C034139812AB772E0FFDFEC
	01683AE350C4B9052922CA82CC7AD771FE4A0021C1EC738DD69631CFFF8F2114
	C76DA7A91EEA7198FA03FE81BD7A5852C98560FC1EE9710A714942E79CCE75B4
	1C48D83D31376C33E00B6A174C618324E990B4E3869E868030F0AC5112A36C07
	4B1CB22C27360019B6DFD42260ABDE394D142A5DACDE32BE3747B67E28095079
	7F2BFEC5F8FDF987EB230029E69203200C02D196F849E3FD6F5B5BE701E9C695
	D1B58A7D33C0C45F0228EF611AC31DD8DFF08A8506311F5104D6C24CB6D03C18
	42AE9B63F7CAFB7ACA6A2FB1F0383EB6CB86775D6AB27040E9359574D7CAABEA
	1B128B8A4C4806095FE8C0827AD9BAF419C9793F1B11BE90EF47FC0DD311D8B9
	992F29CE5CD237DFF12A953EDAA5BC30CB5C317465A177377CBA1E014831B31C
	00411888A6B8DDFFBAA8E8BCA910BF3591C440D86769F9F716041FA3D66BD9CC
	63849485F04D66F59CA7199CBDB0D68A15455C8EC4BF00BFA87583394921FFA5
	B044DBADCCDE5BCF22304D8D0BBE0BE2DDEFE4F1C3740F573A4ED59493D640D1
	EDCBEC99BDC4B91F40E0B2F6D091AC4511A8C33060303F340E7CA2C9A5D681F3
	1183BE1382CFF9EC2D002966AC043008C2500FF8FF1F6EAB2589E9D6A575D363
	40E05EA23F1184C10DD65A7A663D4CD0B2BB7016A582540A0296997216DBF1C9
	6B0343BADCC48C69E4AD78D8E70C579512E1223F11E8E7A21A4E021E32303658
	9A26344B17CEEA0823A48F4AFD6BAB961B93B4408B3A93436904E2F040F027C7
	6B293EAD5B0056CC20094010868105E4FF1F56309B4E1DEF7A477042BB49F9FC
	1A6ACB43144CD5E38A7EFA52F7AAD0F669D993457398EE1D61B89E85EADB7A69
	1AADBDC291105A80F379B56D6F90BBB65E4DA09D17B46960A78A1E87C81C433D
	C3BBA8881ED6D29859619341480F2183B8390F615EC7F179E65AAFEF798366D7
	7815FED38EBF98F02D00296692043008024151FCFF8B31E901B39C932A4F6AB9
	74E130E8FFF94B65A78FE7004866CBD2911730ACB25B4A7C1A36E49A42A151EF
	1B86AF5974991E055BB51DDAA9F1862F521A9C5A22A75C148AE396A715E08BEC
	630FD02F967CFFE33368627DC8D4F4CCC2220F439C11F0BD9EA64F9DBBC6F21E
	A148A0AE51B6E8B68DFFCDFAADFE9F25E81480F432480210846120B5FCFFC18A
	6036D58B572E1E9D694893ED6E04C9DE50674704DB50E3A75DEB5ECD9235580F
	9E48139BF0B260D0CE6DB0C7B29E471503DC24140F8420CDDA384D81C737F91C
	6F63B3799DAF7D3AC37B774B38CE5ED735E107D558D975F552D047833ABC224E
	8E58C2671D840DAE6F262D502AF8AFE64AB75AD421F2D37AB3841F014831632C
	004118864A71F0FEE7956AF3D38915577D8896A4BF399D031A805234E703B9C8
	D835C7872D6666C70CF4C176EE1BF22840BC9ED1E8C1235E0CD5A4CEA72D8C05
	F5F19D587C66F7F9D237C2431435A852D7468252F09F43B7D3BE279A0483B555
	8DCECD3DBC32974555CD5BDEA6FCA7953B089F2DCC4D04E7D72F0069D6960330
	08C2828FECFEF71DB83ECCB27D7B02B5B4D0E2A902AE097B30DAE829BACBD1E5
	722B967293C0847A32C84AA9A3A9F081223FA329101A327B37F7116D7B50916F
	AC6EAFC2FE4109C0C76BC8B2F4C86200A97E5F8686CFE76FA4CAF61455D14EAD
	85277F54BE1C8EE231B8F772D2CB98720DE55C517C15C5C960ADC9F01D0087BB
	A04700D2CC6007601084A132DDFF7FEFE690959683E7ED6E6222D0BEE2CF09E8
	F5A3E4F952A4848438A127735398B6875AAEC894452E840EA70E1C4F0351B611
	5215210A4A075503C2E3E4C458E9A935EFB94B40D7A31AD4B56C709092978F66
	4898D6CA847182AAD2AF1B6C608F97294D62734A66F8589441EACBB281B4D291
	B591E3169D0B05387577EC4BD0FDA3F8B307BC02906A063900C22010D48AFDFF
	8705D9018DF1DA83DE8C36946177ED62010843A251887A0B6FB1D3C24674029D
	F3CC6B6B5E1D4520CD0F2D6DEECF110193A54DEFCA6E1C85845720F652F52E55
	1C60915412F41821660DEFFEDF48A2E6E6556A1C1C377591A9F5B2805254430E
	C578DC2F664D683BA9C9A0697ED6888FEFFDF9801522DD029062455900C220C8
	E9EAFE079E2B013F7AAFBFDA091C2222FF24080CB7535AEB3C2E4DC957644326
	F75E9EEFB86055F0C3F67ADACE94EF4DA0F9893A1C4A1084A1B7DA633EA6B8C6
	7D1EA0ADE9EE2DF4916462652E1FC2BF7B40DD41B22906A0BF29ABC0A5939DFD
	A380B0260C7A5192C39C843C9AA86B636AC27D3C8287B713FDF66E0148B38E1C
	004120080BF8FFFF8A650A12E2CDC8154C805DA6F9DB884150A2F91840CB9371
	3F9BA2CDF3110F82ECC292989BD5CE354BD684F50F5682185A9EA4B818BD282D
	D52E1BA7D4DBB374DAC29A1A0754E4B83E716651557893AE7F7453BCA3884823
	D071F7EE441B3C82CBDA53A48FE2E8F320B1653BF31890BB9E7DFE887E81D2A7
	710B409AB92401088330B45094FB9FB74ED524E8E8562FD03F2479FD77015A30
	F6B6C8CAB8CB3394A1E9E173E0CFCF006158D17BA55849299E9C0CD15ACA7DF5
	222B8FC764B091D7B8BE893B8101F0DB54BCF64A028C6BAC0D1BA82F96232937
	84485EF7466AE7B4115020050FCA144683F102A76DD005507226606AB3B7378F
	7EF6A2CCFC76868700A4994112C0200C026BB5FDFF83551A2099E9DDAB074723
	1A588F0E60103D3F2295F2898E4BE496CDEF4F6C7F52435BC1360282B4A6CB2D
	ED18A55B8EADEA8EA202D03748D8F3B53450410006D1B624899E5EFA5F3AA0EB
	169300DB3672AA0D4663AED28459CE52C60D6A4F5A7DBCF803796758EEDD3361
	D36B75A9E69FB950CCF130077C029062063B0083200C0DC8FF7FB1C26CCBCC92
	9D9679F06C42A57DFDBD82AC1469E887CDB106DEAA08EB3E133F17F1639A2A48
	ABB6493AC246535F5A4D792F927C68CD62C4ACE8B12A5201FD9C94A178E428A3
	29F1B44E5A4CA3B249757F7803039B0C61B1434287CA7A64E333143FA8F34CA6
	56025EF6CC9DA672847FEE379A7D3A9700AC99510EC0200C4267EBFD0FBCA432
	01F502CE6FA3B1510ACF6B16244020D38351699CA09EC722238E66CFA3255575
	BA0C725E213959F257578C15EB8E3D58607A05B392C554D59BA992635B1832D8
	7D41F97BF55DED167C799070F0CFF1118D00573B773981EDD52860C1D955A373
	2DE580B0E80CFBD6B631ED1F04E28C4F00D2AC1C07601086B589F8FF8723521F
	80BAB3B154A01A5FE40E001D22553635B33863532D71ADCBEC785DCF1A7AC459
	600F7D3929AD107FE0A1D454022F97F8AF584474A0F8B963AE1D34FC171F5D54
	742AB911623B3641CE493D8A4E0716107184ACB565DD4B5940502460DA07ED21
	1C809AB187950F365E36E420B27AAB30E13709FEC3C89B6EFC0940AAB9E5500C
	82401424DDFF82EB95CEC3BA805BFF3518090E67F88A226C9520CAE49C929325
	623B785278156567040F7439A3F256911966C8541DCCC01669EE9906C23D6DAD
	409797ECADB1AFC9575AD697EABEA5A3D23CBC7450FBC728A9E414E11F133215
	8DF43B608B43D07833287A9566B06484A6438BEA2A045B1782FBC9C7C8BDF794
	9D331B717E823FD62300A9E68E03200CC3D04285C4FD8F8B28C5CF0E1B5B4718
	A848A338FE2C5D0043706A4413E9B080EE5F2DFD24566385EFF4A8264FE6402F
	D856A84FAFBD3BE91AB0CF82DA8DF833E2FA1A0B3D6FB64FFD53317573EA4AC1
	E9D0D90607D722A6C4EC1635A22BECD7D34EBEB697690120D0C9031A8FDE041E
	6765155971720C226E2321BA39C01EBE7DF4F647C756D8C02B0069667404200C
	C2D016D0FD17E61012E4FAAD23148E3479F9B58074E539878A636FD3D5C2CC3C
	5C9451578366F5E23902BF1D83FF6FBB2C67A12E31D63607B1780CDBC78093F8
	F74B210EA4198ABA80A2D25BE249C630258439CE740A79D40C51DF3F54288A48
	09DAEA14300542EDAE61239E5B75A8F91C3F0DCFC9A53F5FC02300A9E6760330
	08C34064F69FB82D697DA63000DF20200A0FE7CC590214258F01B5F464CB3E76
	583DE8DDA10DA1297CCD5282C684AF1C08F7A091A7E3BBC545AE3CAAF6779C5A
	19C2CD01B63EB8F26AB78F02CF702AB4AB4F39056388D62C5634818EC1A8C68F
	3B3A5160BE6852F38C95190BA63762FBA4045B5F830E51C42B00EBD69602200C
	C36275DEFFBE83AA49BAE2B7F83D18AC6CCDABFBE17F80B47E4751B98674D821
	B18EAEE81C71D490DFC9D61D8A1E47C8384B7A667065C28BB2527DF1E7832357
	79414640BD1021B0BD6836A28154E24871BB55EA6964490B356E4A7284A2CE7E
	B01582D15F4A335DEC9291D99259944DA0F2865C8FC835307CABDE2D00A9E6AE
	052008C350ADF8FF1FAC0724372D83A33A334948F3E85F1F00628EF058A4895D
	FA056F7A975849401960BCF131F57D3B835C522904F5496A4F439460DE27B74B
	D5D8DA4A5047266983599BD780F510C069ED43DCEE1D192610391D1191067CD6
	98B217D17A40E5DD7657F9F3205FC9D49018B52873BC08C7FBA97B7DDFFEE123
	00A9E692032008C45064B8FF793584603FC31C40976C4C20C2B47DFD3984F91B
	2C094E3FC4BD9D2649937AC798B89CA1400B0E6CD85D5ADBDA8C73155893E318
	8AB1A4B28FA14BC783CFCDE7B6673DE4DF0C2681100D38A3A1EC0B851E2C5103
	123AE9E485B1BF234B413215B2EC74CD12415C0C8D01667AE14E5D57394E68AC
	1A897509B097C2039FCFF015805433C601108661602045F4FFCF45A8A1BEB430
	B0C1CE8040B56B9F7F9A302DCE5A364964BE8B21B3A385B716F3EAAC8F750AB8
	A426386767E939A10B5568FBA1C0853FA8B06CC40A959004D7748449D9ED71EC
	C43A688B33F391F601B7140155970B4E3041D43347D8BDED612F46CB9C486E54
	21C389740C4490C321F965AFFC397B03E1BC8F7E1E285E02B06E763900C2200C
	CE6634DEFFB8260CCB571EF66CBCC1C24F29A5FB6106880DAA03024961A041D4
	E353A0A4E6386E3336EE1AABD7E2AEE32485787608457B631DDE814A1C798133
	0FD8E57658C6EF0287B93071926BABAC1AF6D956AB68FD086996C3F33CD113AA
	A68B5CAA6AC20A96FB268B16357E4661CB74AEB596D5058802F38F8F7D13B213
	F93304BD02906E6E3B0083200CF532F6FF1FBCB8D11EE792BDFA8E9A08D25270
	D3019948A31860C3B849AC23D0F71AA6A734EB136D8FD3089166FE02A4BB495F
	4525505783C9E32A837D8C854AE5BDA16EDEB04F14B3340C888E025B68A0DA4A
	4B3CCCC983482A7C353B664E537E01ECD6BC0F1C948EC88A14D81EA0903E515E
	F2B9E489BF1ABAC3821E0148B5B61C00411816A7F7BFB0B2D997F100F88D2161
	AC2DEDF613B113257058B12240D90A522C7D6988C7B67340FFF0E4BD44BD52F2
	8A8B96E44B229CA8AB4A7DBE411976736ECB10FFE86E0FD9354FBEF653AC6D62
	532C9145590D0FA2A03CA267EE752B416DD576F423998824B270FE9073C5C5A0
	26768991B4E797FF6E854D270EDF2B00AB6670053008C2D04ADD7F6348210417
	B0774F3E89E427D7BD20233C6862450401AD0B359D47BA116896086DF6BB5D11
	0A91526F5497089B775AD6FA9521CBB5DE9F93FFE5DC05D2B5EA5E2AD00CFEAE
	70529DCA83968A6C6B22687E16542F66CE0C8386AE1996CE70849AFC31D12E7D
	DDAE96CD492BC4827EA1A19F00A49A410E80200C048B5EF8FF6BD544D09D2D84
	B35EE14042299D76F7B72D25720A63ADCB32004657A955C3E2A4DDA3DDD570DF
	537977DB89834D8B2E8649DD587E20DA1DB52DCAB4AED0BA8131D02A49A7D70A
	0265725DDDD0FE5ED419A5EA83DA28D53A088E25121984D12A5BCB54CDDE62B0
	1C624D2BCB8476CA006B53F639068F00A49B4B0E80200C4453F4FE27D6A9CC6B
	216E8DAC591412A69F79FCC5D3EBF5CF6B4A586221F777F97F4E64F360676B2B
	F8B2A7C491AD46C0D248B7DD29817209BA33BB6CC791615C30F7F68FB2D89D13
	BA31DAC20CF01E35B41E76E11699488926464D44413C970E157311508DB68B87
	2BD18507D9AC4BF8F504653F707BEA47F16A057617F6CECC9FD62300E9669403
	200CC2509973F1FEB7352A485BF4C34FDD01966C90D195C7CF00485187715605
	FD58FD2D33F9F9E840447A856315349587DF6555E000CB5C12047CCA19352940
	58B9138CE383D0A7B6A9C94E657F570BED564829674258000CF67414DC0BBF34
	E40F7268C0D4A336E50E3ED25E5BB64E3F88D5CB585CA0A449601F2EDAECF182
	5E8062AE31C6B73BBC0420D54A920006411820F6FFFF754A6B08F801EFDECC24
	64B96FC474AA330653B64B55D264D41E55FEF2AD737E3EE519ECABA0DEF3C579
	F801E9E09248203B6361E963260DAA761664C67B6BA43C67DC6072986A7FE602
	EAA3570EE2B083B95687A8785BAA6C92ACE2BB6A23B5A603B175063B0B38815A
	7235F9D0FD1EC85F0E237E014837A32C004110080A59DEFFBE21B90B9AFF5EA1
	D7636576380DE1F68C976440CBCE94EB2E4B890D36490B6749C75EB69F08BA16
	567DA3AA1E922EC59259794158C04E112D9BE40C025DA0114442A9B327D61847
	9D4B6A99F581E14EC72EC2687B91067FAF92895FBD2418F51C50CA5DF176FA95
	2A35CF56C939C6A7C729D556089FD0D04F00D2AD240960108415D3FFFFB7332E
	850499F6DA7AF780222498FCBD003FEF982DB0BA66F9DE600624FB89070DC3D0
	67B8AF3C8CAB4B3C6EDE1ABBEF3A034B527125ED6D4B69A38C718C9C48318D1B
	A87EFD9A8A687873D00A026955C33E0673DA41AEE6696BD414D9D65C4C8ED9A6
	A05634636602D6102A6A7A80FC4F238E5DC5038A013CC5291FD62D0029E79205
	3008C2C0AABDFF8D959649E8EBEBB21EC00D7E086470AF170495D88BA9D78490
	4E2FB5A94BB2F6C239D2B5B9AFC339BBC909020BF8990089A428F2541A6B09CE
	AA780FFE109861ACAB5104BAF76751BC106261F33218993A3C2582ED5B784BF2
	2A363805B5E73348EA2227C363B14880AF52CD673AEC71C47EEFC12500E96690
	04200CC2C016FEFF631565D3E6E449BFD02901C2E6DF184A17464CA74346BA55
	4F728D0D7DCE7DBE8D82621FF85B241833D566AB19D06B475A62EFA8F28E8D5C
	596D9563A7C0D6832FADD764CB2069B1E3F3520ED9AB9B469C2E288347318E76
	2F94DC2F9020E32ECFDF38D9C60A0B64BC90100B01FEEA05DD02906EEE3800C3
	200C9542EE7FE3A2CACF26EDDCEE994820C69FBF8A58887722252357F5D0B7E0
	BA64F5282FDAB6806125BF2272A60120B08EAEBE00F90A3BE39B60078D2BD6FD
	B6CEA3B385488B2B28A0C2683FF63AEC01CC7EFEE10B1099FE9128AAA3B56DE3
	7268A13174272B287FC5B6C4D7E346794FA1F32D7FABE12D00E9D6B2033008C2
	14B7FDFFFF2EC1D1876677AF86131128B43D74493E9270EE1BD66CD6B0F1A3A5
	061EE0DEA5AD08FE4F07B131C10401B447EB290F06B06524B780BE406DBDDC1A
	006E37C1040399A301BA6EC26212DEF4DB129113CF77F2F49569F0CC838C800B
	8B56A98A7F53EE1CB119121C89BD0CAF63DB6B6B22EC3F814F72F80940BA95DC
	000CC2B03694FDF785188A6D81D47737E081E23BFE9EA050DB4966A35F5C8C9C
	8E596389B106647D2A83B342C15558FDBE7A6B3EC04E70874C31DF1DA5220B98
	F99BB9C0BE5548A118B2F6DD0B0ECDC560D54157BB43BBDE9C89B31D336EB3C2
	1DFAA733360512EAE722700DA9E4C543A4B011285D3220E69FD078E33B4D3D6E
	C44F26FA0A40BA95E40008C2409186FFBF9798A2B3D0C4AB7E81A4C3ACBFAD08
	207D97B0E71A7789AEA9F3946B1CD7A4F487B3433A6FA9E5B1A347362B482215
	30AACCD86572A0F3035DD636C1C23CF581ACA975914E2F1D8366850F694ECFC2
	30FBFEC80588D4C2C456281531AC2BF84168FA776AD3AC53A1656A2FF08D3FA5
	0C3EBFE12D0029579204200CC22CD3F1FFFF55A866C18B37ED03BAB74048F80B
	474369D21325EF20080597E3E44D426AEC69D170E6495279382730DAB9D65ABA
	4BB2799684ACAC1F81FC0AAE1C0BE3A4149687F38616BE4E590F7D0B881104E9
	046A6C09C95F910269CBC0DB8C5D2F8A07C938D0CC60A610301C716958F5F178
	C96F66EE676AF4DD2E0148398324804110065AEAB4FEFFBD164B12CAF4AE27CF
	328259035B0170C6BEF78FC41D26CA650E34214D052AC0443081E951D2BC2536
	5056BDCE263F3E713FD9D06F2E491C012819BF0EF5107A967A2801E45C4A8422
	95F398105A3648FA3D064B94AABE15B871E065DD8D489E53C6D595866DF98460
	58C77C026E52D1B311B00250F7605304C47A0520E5DA8E00064158A1BAFFC215
	952478FD7702EF440379E875304BEEBB629AA2F538CB7B97C7ACABE0CAAD048C
	118E14F8592B519BCFEA81FD39747F34E869EC838FA58859C6534B7546CEA691
	672320566AB7CD02782EFDBAC805E28A6275BBE2DD1E893F6CB7FAA689950FEF
	EC198862606E3ADEEA1F85EED5D02500296792034008024197F9FF93D1502566
	EE7EC08331D834D53CE603B49D07FE5BD86739D91870A1745852CAE16E93A57D
	531568E9B99F64643F04A67708243D99EBE7FF315C12A1104DBDCECB5D05E2E9
	1B7B8E7474AB406A7293CCD95B7CB99FA9F4EB0485091A60A45B45FD6F3852AD
	8AC2A5BCCE7EB7AEFD7FE3172A620B40CAB92C0108825054F2FFBF3885E21EAC
	A95D935B378E228FE3955F07401DD85BC1482929B5ECA8D275A0B4611FACFAC2
	6C60642B9490A9A92A002971A4B499CAF5938E19571F81E385FF801DBA7878A4
	FB450DFCD1DBFA532CC79DBF9CAC28E154983D0D7FC4DC09E3B29884104EC38F
	901AC073118EB7D24490BEBEFB43C4B338F83A0E014839B72380411008266AFF
	1D4733EC22E37752828EC8710FFE66C4FA18CCFDD716C244248D733EE42895BD
	59E343982503D9E15BD62EB834EDDCF974259448AAE8EC01A3D4064509B3057F
	1CFD19F43877A680AF7CF3734A5C910BD7D4D57DD7EE08154439B765130D0913
	2D7E46E909C5A8C296E0FAA0DE6A0EA8B1E0DB1DBE0290726D390083206CC3ED
	FE0746D86C8B71D9AF37D0A0813EE86E5A0AD02C874918494286DC14F219DFDD
	C7D3BB4A066CC5CF6BA7CEC4D5DC1CEE81347B9C65AD95A0262688959DE2982E
	8F9CC378165FCD06CE52150F9BB5C82DF3DAC115A8A6A38620B499BB03C4CD29
	334AF557305632A843B92118637BC2BCFAE5A27F72FC4E1F7E0520E55C720084
	41205AC41AEF7F593F51A9CC40A3EB2E7A807E02E9306F46C538CB23C0322400
	F95FE6A11D7F82CB2FD822046618099A50906F46AD5E5099836E44A690128F2E
	E7B6EBBAA0ADFBF63D19D11997F7BE0E2F65754EE81154112D9B25CCF0ECFA42
	EE11641247C690F2CD145AC387D74CCF4089A7201D2B945AE9B1FF159F3E161E
	11E39A00A45CC10DC2300C74122ACA330FDEE1CF0E5DA0FBCF012AAD5030499B
	B3E58A77D920726CF9CE67DFBF4CD8494AAB65927429AFF13E391DC7855D8B0F
	DECC514CA001CAD6493FD9711119D693F3B04641EFC37889B7C7EBC96C6E312B
	E5FCE963EAAF699A973757FE36124C8C7E1A5651BC3439C4D6B27D15EEE9418F
	61AA25681645000305C157280975C0046828E8B9053586975459A9403A75671F
	6C4E6134987EB6540E4B929B00A45CBB0E80200C4C097E80A331D1C1C1C481C5
	C5FFFF221830868868AF747125E10B781C776DEF4C1B02314F64B10E0283521A
	15F98225AC41B230546D59824505D54A39898E33E67889B749B2ABEA6562F830
	6E3FFA710A31A69C547C94789DC3B2CDABF3C1979C1E60079A904CE433E29CEA
	EE103CF81CFF61B9F1023FB7A958A7888557FB41E68D692CB5CCCB745C2D6C8B
	4286BF8A7E83118D3DE1570052CE6007601084A13A75FBFFFF9D30DBA266676F
	26DE4CC052E01DD3523C8D42FE0E0203453B42A26F9140FD92A33D32273639EE
	A0431BEF82A551C483CB914357ED7AB3D00FC626ADEC687DE75C0104331426CD
	B87C0042CC910FC928F2DFD840DA10BB4EA66015A0D56B933633166356CA3436
	E491C0405771180A638DC5AD9C736E457C0290726D3900C23028ABDEFFC40A46
	0A9BF153AFB0652DE3F57307B0E4CAB7FFA07D0AB2336BC4139B33622E4169EC
	C9C505E1C68547CA4CDA7222A80FF5279E9E48EAF48CD420DA18FD0BC7D48985
	749C914245B1D123152F542D41275635A94DD291DAB147A42C8B7344B438C460
	319E4BF8750DDFCEF01280B433CA02100481A0E8FD2F5C8A0103D577DD4091A7
	BC851DFF7DE060F9DB078E0604AEEA0D54240B4403A7CFF637ADDED149DC62DD
	DE818F3E4AD88AC370BFF679F8B8BEDCB7D1A81A4730E73B477227742F0F137D
	A8E22A8994F05C0028AAA90F5602889340EC5950B08C4DD0EFA87C18E0EEBC72
	C284514B03E8434B79330B3E87F01280942BC90118048120EDFF3FACD030A368
	7A6C2FDED504988DDF21BD36733F4849379F1C1CB704647B30E710C4FC452781
	902CEF7A2DD4954B4687348611266BC870085EBC259A44814EDB1A27019DC652
	7004FF2C609E84BA0B5C313ACD0245976ADC462051C1427ACAE4D8CC87131ABD
	D1C015F2DA5A7682E16F6FF80840DA19E3000CC2309054FDFF8FA1D5D90E95BA
	B2B39140E2E0E3F45D90111152AB1C699569AEDC289FC455568C6E2704A8EBC4
	23FDA7FC7A97284E2D3EAB140799BAD63694F516EC1A8C6804BC8281C37D3710
	0E916E577841CC5C263D9CB5A8395A4C3064345215AB34711FFDA943F8A5953B
	4CCEE6C7C7DACF277C9801AF00A49CC10AC0200C43B5F8FF3F3C5DB7242D961D
	1D781E5E5C20C9CB5F334EBA8B295B36FF488BF5B0B182C0566179274ABD1CE4
	C2A265B016B380B84CD93BE89D2FD1AE99B5592C97ABEA63BEB378454123398F
	F7BB53BE518BCD3EAAB1DFA5E3EFD47253AACC47EC96B45E4B44DE2F5C1EB621
	FF401F1FA20E881EEBF0230029678C033008C3C088FF7FB89528957D6EC45C56
	3640A0D889EFB4276C4B11CDF4003F753E342BD3498C94F9E2784F4C8B82E63A
	CCCCA84B338089722C3AEEE2BFD6DDBF54FCA66FFFA21D8EE0339A7799A27255
	E7685A37F8A93219476165BDA657038C2F8AD9B359F2E610F67D771E539255C4
	41EFA1B0FD17FA7786AF00A49CC10DC0200C03A1DD7F6204A97C76D401F8F340
	082501DB77DD0372FB524F86ED404EAD9C849686390384C9C804977FAC813D11
	2AC285628C68783616514E8B6BCD808BCA484F6612972B202F091B589E0C9DF3
	CF826803DBDEA5A8753AEAB5911E2AE30295A7804714F3BE96BF7E2F9A7CD0A4
	0A8573FB0BFA1E21F709C0CAB9E54008C3301027DCFFC2680364621EFFCB111A
	556A6A8FFDB714E19A14C39EF822C9CE5E61A8D6CD11E7CEBDCA0CE0B00FCC2E
	9C6CEDA3E7E4A17F78263DF3ECB209C544BD75E7138BA71DF2BFEFEEB4908539
	8051C2ABDC43CCDF6243946DA739FD1199FD0C535EFB132AB6BC04FA85EE4360
	5817B5AEE59D46FAA4B0E91080B433D801108461284C9CE8FFFFA531F1241181
	9951F0E0951BE785D0257D2DA37D417A4D74B824DD9A35D5FF35AD6C102F81D4
	345C865FDC96B9CA30337B8AA1E2D0305D31743D2CD63DD99CC71EC3B5AD5E3F
	27009662697654D25D26E799C1F0C01528E878D36047EFF15551360971FCA28C
	223619087807E4D47A6C16347A5A05AC1C35601450AED85F44FB0B2D8D88F02B
	0029578C03200803898D082B71F0EFBEC12FF8013FE0EA3BC422EDD5C8CE4C60
	20855E7B77ED4CC2120C77E1A044EBF0B958807018EE22E43D67EC6E71FFD203
	C7B4AA6515986802D5AFD6281B72FBB6D6085E52F29ED090AB678518AFF3209A
	529A2B98A41126317B0732A138634C814153E92F8B40232B79CDEABC288DB1D3
	5864000466D39562A78859AC662FAD1FAFADC27AEEF015809433C701188481A0
	6C22E7FFCF4522382CBB90F4D4144850F81ACFB9AE06BFD0D4FDD1548488AB31
	1314B3E86A482739A22E642BD37D2D9D8A39F4473823E2C478E51288E0C5BEFD
	50BC60AD19BDCC6EE8D4FECF65A365D3CD25331EB7DC00222E54161E6ECD24C0
	8570A2CBC1888803749A9517BD5AC6034A5F989BE61E02FF8730875CD02B0029
	D796032008C364C418EF7F5DB30A6D19FF7A031E612BEBE3BF3817F42EF84F70
	38A8DED9AD038377F6374217ED5CD46340EFA7596D601E52091B61515CDBE2AA
	DC7CEC0CB98D7E8DD339857EAAE279BEF1008EE2A5C138715B843B3587A902C8
	E0F6660F32C40C111F05979E724772D64B0F6C75EF35F99149B87C329FAFE115
	80B473B901000461A846F79FD888E907BC787304138CA53CEAEFA2B65FBB24F9
	D57525AA4CD07847F913C393F93004812343B8C31C933AC5724522439D3910CC
	10584C92B9F01DBBBFC9903FB124969ACB1F9164245713275A968B06D761CA88
	2580302026B3E80302695804A340FF631EDD497644597A8F92FFB9044700D2AE
	200760180455D3FFBF78ADCB00D90EBB2CEB1B0C1551F82949C6E8B8A7620DD9
	90905DBBAEE2B14E7260EFFCEA8E625BDD051EAD2DEE2F4EAAEC86EC181DF2E4
	966451C2F3C1E646D9795EA105B0E2D006D66A7F2081D26DBA94441BCE206A36
	74127E7C7A1F9ABAF3337B859DB48FCBF7770A40DAD9E5000CC220D8C5FB1FB9
	B2F0515DF6EC1534FDA340AFC0B810CD7A9AA79373CBA108E118742DFDF20016
	19D6E45CC84A5CDB41A39A792F344AAC709F881CE9A0CC3E119E8BC077C60F78
	C0E64879ED368E38E72BEF8CD463BBCF571CB1F2494DB1DD35787654912D955C
	1FD192D1D63205AC4869BE81A51F1FEB78165CA2A1AF00A45DC111C0200883A6
	FB2FAC9416023CFA7504CF931012E22911B38719E332CCB143FC948684EF146B
	AF1BEC61C6E6EABD3F5AA4898E65312FD920EA984572CA9563A1800505CB7602
	0DBC2CECC2986F3A6AF3E780913FC993029FF212959BAF280DDDF26B443E8B12
	2EC064BEEC0C505C3A268CBAD13E971F089F13B15700D2CE2807601084A10377
	FF032F192E6D01FD769E81A0D2BEF23F31EBF2824BB37368BE4ED081655E346E
	F40C4B0D35346A975C23589B72B27CEAA4BBE10FF16A20B33DCABD4D43B15873
	4DA0A9B00B13491C15D2EF8D2F1BC4ADE7258A9D74C6405A141FA656E928BA42
	DCA216B1C0DEA1E0C4614BE7D9CB5FB54F91E7E47C02907606470084200C1475
	AEFF8275B8218B52807F5F2A822124AFAC08F7F2CED95E5E5BA81E45F0E7344A
	EB8749186BD6CA7DD707E2B6F33A2296C05CBACC8A94389E79E4FB99C5F094E4
	CE27004ED0066BC88AD1F15C02E11924D1494EA64FD03EA5652075930C72B8B5
	26A80EEB4855ABC9C7CAAE986CD172DF5B92BF00A49DC10EC020084321DBFEFF
	875196D2C22EBBE9C99B898909D2D772EA13F6C6087BA202419ACA6F459C19E2
	AF5828ADB13E73B48038060733CD0C886CE5895E474A5575A9117BEDEFD082D1
	6D864F594ECB4D1EB1FE5EE93DDEB30B3AE855660524464FB114A0091EF42A3A
	7B0EA24D35442EE84EF6175676BE5E01483B97148041188836D04DEF7FD14269
	8B49D076321ADC7B0311A2F9CCBCACE26A8AEA75DE6186A6AB0D45BBD2491ADF
	83A13F8F959BFA143B5E863905FC02DA89579271A11E8C678AE6A4DABA827087
	D0A86F77DC726C829A36494A5CF315C2DC749A8E28085A96715559582E092E6E
	3EFA862DB336F2CA04133A6605FF9938E84461E0325DFD2C095D04887E029076
	063908834014A50C454CF402EEBD804B1337AE8CF7BF09418101DA7EA676E1B6
	1B2E3021CCCCFFFCB7AB00CB857DBEDEE1FEC006B108C597ABA06853E21C9733
	8440C65AE72ED7DBF9E43036337F8297385D638FA60E205983C019F5C6529A7A
	6806E405742CC9C794A35A37EF534E4CEC87F1D0242F54EBEE2241C73212349F
	26699F7DD2365BF5F01E017E223AD7B7545B8AE0963411B4C9C6423EEB3F5357
	D390F87CAB32EA27A3FE6DFF77CEC3B300A49D3B0EC2300C868B120C1248294B
	37C61EAB178011EECD9B24B683B01D3A152694298E2C45CA4BB69CFFF35FDED5
	C9F9FA95F653F82F1558ADDD88A45516B5C289BC51BE5C2D6996E986B6EDF787
	8A0D374B8185E6D786DDF1C3C72E4ABA4522E30927AD7860E96A13734C31844D
	DDF0E2D56D7B9388B2B894B0BCA8A078881766CE98F179BE2EBBBB8C22F1E9F2
	187559257C95554E8A92674EB7080EB484C9FB99C9BD3055709095685053214B
	2656D13898AB30DAE477C6FF97D25B00B1E0E9D7219B8E7509D8A74F9F6EDFBA
	050CA27FE01B5421173A83BCFDEB17F28A25F80DE12CB05B572122907B8341E2
	6C6CACA0A39B58D8B9D8D9B97941FD2CF079572C3080BC18444C5C3C263517B4
	B01D749F2DF4E668F0025C90237E832E660586FB2FC80230350D6DFEF40A60AA
	06DFC3FDEBE7B7AF2C1C9C40A304058554CC9C38D8D880590274C5CD7FE875C4
	FF41C42F20177429E99F9F3FBFFFF8F7FFC7DF9FBFD9F8BF835A44B053FAD0F6
	6753D2130608C0D9B9AC4008C350747CD418111776BE6350C4FAFF3FA4DDAB60
	1E1AEA7676854009F7A61002E929538953DDADC94D17332DA407EF7D08812420
	29B1412EFCE7DFB24308D9C27366B0BB207F0FA3301B843BC6A830732A7C8AF2
	8BDA77BA5C01DBE662E55C2E2BC294A3328A6D6D1E001011A006A8B41B29A9BB
	044AA6D8B6B5EDBAFE3B88E9F93D4C901C7EE334CECBE7CEE7E4598752A1D90F
	7EA6A74CD235C8A632ECC3656F59D272FCDB834B00B1201732983773E0BFB30F
	18EE3BB76FBB7AFE040F2F3F2B332B23B0B0E760075FDCCE0666B083EE6A6703
	DDD6CEC6CACECACEC6C1C901F40648013717B08802A67B264851050390120CDC
	47068DBEFDFDFB177E533AFCA66250BC01C57F81E2F517F8966E60547DFAF8F1
	2FF8766D201B72BDF75F58A6843B1872CA00A42D0BC982104B217911E848C8CD
	F2E04BD15921D7CD035DCC0CD3F61B7CB33AF2D01B72A224BB08020840D819A5
	200C034114C9EE2658C513E4FE67F2CB13F44308544B2DEECED8522A683F5342
	C8BC64DB90655676CAEE2CF2B74970DF90BD717C0CF7DB75BA141766F1B78DE0
	39E11810567A0784091833C78FCA2C7A3C69C949B2494E014B59861B3E948851
	6AE014B5B8CD3EBA14A7E74B1D447D048B4F8E9EBBCE3B386C49F0C084703CD9
	CE4048872D401CB9ED8807CF8BD9BE51B91EAF5B6BCFBE273CF25E772DCD217C
	CAB55667BCD5E76F56C4EF8BB3B7009C5DBB0EC3200C0CC6265132F5FFBF0DF1
	1791DA922677C653D42EDD90470EBF84EFACBF2EFD16F16FF660E7B0CF442193
	D7EDE1CCB653CB10860C01D431162DAE4D48318E81621ADF5268B476E97B7F72
	86E77D388DE2E3A2B5B1BB6E1A6B18FC44D9D0D7C1C9E87342AA5874D9E0426A
	33E0120256B2913E99BC9A0716C58AF8A67A83F3C101891C5EF90CBC71A01650
	368087C8C51C13F0D1C2FE58738A551B123D3ADCB1F75A6B6BEDAB3EC4DF33D2
	9700645D490E80201043817834FA1E63E2FF9FE3413D284E5B5C0237CE4C666F
	A7C155DD5D3163AAB9E19F6D59E963D91B09686E0493D33D1375C064491314F5
	EA57634C7366E987D6E3A23A7B1E0CDF7428F48137E4FA3CF3F924292C75059D
	C4C463BB8E35ED8E10376E3913AB2361211319825E80B1AE85D236DA6B0BF696
	B2CC0529C1189B10A94E139C401960285BA6E91C4211AC663EDD0FE3342F1254
	AFD50C8B34597F66115DFE76BA05A0EB0A72200481988E46DFE0574CFCFF6FBC
	9935228C690B1B9578E70401A69D69DB374FD5595D0EBD1EA2AA4C6267FC946D
	98407C8280B12D3427A91BCB0D2D3922451202881F37F33CC6D001FFC0884359
	7940409804D1E139BD1F22EF4E2B8F08FAACBA9F368C440D83E59C8B12E19903
	039007A6F616C461C55D8B65A5C2A1138179A42ED52508C03458009E4C1BB88A
	3D84DF3A1DF3F2DF81FB0DF8D26ABFFE897A7A450B2E01F8BAB61C0041182608
	8924DCFFA4C690F840688B1F881E80AF8DB0B5B475C33FCF5D52DCD773CFAA5B
	A05A50F5584C9060B366B1A8D3C5180B0508C348BE46742AB20E2618A659901D
	67B6CDFE92000FE39A535AB754B6684F76378458EE93A9582CD9FC665784935C
	C91DEA24499444D6B42695C95D16BBE989F4C9460BB8A07BE860484A96633721
	B2853A85CC7B12FD69E2E150730B40D819E30008024150407C8A8FF011FEDDC2
	DA0F58DB10417617894A6129890D39E0D83D6EFA76A5B4DBCEE704AE9FA57B1A
	F85C240843C0EF4F51D7C9A8C3F318122415E8A954A8250337ABE38F829ADF80
	006AD0D40B4A3935FAE83A374E73CE03F3D55A39CFB62EC3B1E74CCBDC0299DC
	7C29A234E371A040FD43E66AE880D910430E0BF4C989C96396D133CEFAA49976
	1548A5A269DCACA926CADBB026BE69014FB87C1BBEBF1B781DBF04A0EB8A9100
	84415805073DCFFFFFCDC5CDC9D93BAF52254097AA4B47274C694848DFA401FD
	4A10BFDE0AC1CA9AAC992ED7C05E25A65AE2F9E42977B1E5D6F57FC5E09F3C4A
	2CC2C4992A8B8A1AE49B5D7E664D14A269E10C1EA781E7497B4305EB6D5D8EFD
	4C7AF17238A34CC3437033C2CE62FB7451ECC2C516A290854E828515805E0FD6
	227B3283766918CBE897248224A56A2093BBE8CD60EED3EC8AF5CD7FF0470ABD
	8BBBE962F47C0460EC4C6E00846120184338044848F45F060DD0029520C10712
	AEB51D1E1C1205E491E3117BD7B3F67951AFA5C0E7D78ACC384C499E2E268B91
	C9125900E06232616403E4E173632B278E28558C1B03DC93A03D88808A8024E3
	14D783CD23A67E9B7DDFB5E7F347ADC4EDFCA2ACABB209813DC473F44A1DDED5
	222C1338562C13E10CC8B302E31C0C1810CA480015E05CE2038CBE107BF5489D
	F522616E7E49A04AAF1795E0369771AB067E069ECBAA4300BECE2505621008A2
	B463660821903B6497FB1F6BB642149474BF3620CC672B2E44A5DAD2AA32FE27
	722319FEECA323989775DB0F3DE7293F3A73CA3995776AAD9821489058D909DF
	285A7892241626F2621EA0747F00B0DB97DBC28A781DCFA2AB77F9950F62F0EA
	2A367F94AFF5562F7749649351F90BD4B07575E9DD26C5FC7A6169C1FF7B0217
	AB9040A7055D7ABA0E1159A648178CAA3AC4082DA840EE985A36A2B1DD7DFD40
	A4AF40E48D97006C5D410E8320108CCAA1F1457AA6FF7F4C352E480B9D9D5552
	A527B890982CAC33B03BE3DA23F31BC6BFF0B62EC12779FF9CA6998405544C69
	0EF0B25EA789489028B2610C21611E4176B69CF64CE2F301FE07BA9035C6F096
	25EDAFC10AA4E87EDE53D3D851E04D73B43676A95F9F3EDEAA0FB73395E36A54
	635DA9B55F06FFA4CC28B2F132111015DBCE266D4ABAC61AAD4345B974D46CB2
	2C648E8CFD59FB8BD08C0FA56BDDB52EFAF62C738343EDDE6D1311265F01E8BA
	762C004118F6506677EF7FC6560A8AA68DB8A84E0C3A05A449FAC9EF0BF63384
	FA0449045BDEA8C690B183CDCC2377CC770C3DF594C0661F8D880F3EECA11151
	546B00AD1655A0B5A96A052C589B162D80AA37C3BB1DC09980BA5A3160B657F1
	ABF67063CB83A589416DE6B1729727BA95455B14168B4521540E4BD2A2CADCD3
	06EE342CFCFAD23D5D60746A3AD9393F1D4DA66575D3713080F7E08C472EFC9B
	35FF47AD2E01F83AB71D8060208812C5FF7FA9B75E2D66769B46145E54D288B4
	36993DDD8B7BD5B0FFDD8ADB2396DEF2D69C9B2BE692A33A6896BDBDD74C156C
	D5BDD98401354C5BD4111D6A5C2DADA7FD503CB055E10AF33248679728C6DB85
	D48CA288F81AC696630A89B79830085E30B184A308C44F4EB944CF2DF51BDEC5
	D6430C215EF1D5F4C0F4B4CB0AA1316D8FC294EB39918E9C2C30981974AF0634
	F66DE51F8CF2EC6A0A7D31661B5F0288A2091960477FC7B6AD174E1EE1171062
	E7E4E2E0E4E2E2E6868E4D7281F8ACA0417F26703F9F053CB0C3061EDB0131A0
	4B13C0032FD0F6DC7FE86569A0F17AD0B80DB4DE030D028387CF8000683874FA
	FBFF7FD871EC500F81C688C0C74E00B3DD9FDFA0713CF0D40268141A5C7A8347
	98C1C33BC082F127501218553F7EFC0211DF7FFDFC018C45602E04AAFEFBFBD7
	FF3FBF803450E6F7AF6F7FBE7EFEFCE10583A014F2E94098618DB96411ADDF8B
	39970061030410A507367DFBFAE5C5C553DFC439C17B549961EBED99FFFEF9F5
	EFF71F665666362E7E360E1E36762E604B89858D03B4859B15D83965070D3682
	C7D780910624811103640185402334A0321A341CC7CECE061E34050DE2400F8D
	0786E3AFDFFF204BE3A07E839E71F5F5DB37488284F6A5C1B53130B21938D821
	27A4C0532E4401641014B6170C7C052B681EEF272457FD850C5283469F8039E8
	17B0370349344C18F7F8C08315F9D0083C031268790220006957B48330080315
	4AA1ECC1C4FFFF4CB3BD4CF1AE9DD338DF7C6F426853AEDC41FBE728439EA97A
	C9365DF3465DE1283627B0D6D3DEFE963B9C1FCB6D5D7C64B59339A1CEC315C4
	6E02B8F7681B77B1AEA58B4D09705254524D12F1680A24A98DA47673EED83A13
	0236D43C158B6A21115E3D62AFDF2C5B8303913CDEEF1FCFF1CB1585C2AEAE7C
	FA11791C7250908951DE84C2017BE1D4D571C4C59FB5FBF13EFB1592A700A45D
	311280200CD37A88E8FF9FEAE929826D521DD44D2616A65EB9364D9ABFBCA03E
	C5C6A4772D7B16DBCB56772942A184EB563B54304EB991E03B85E46274C25190
	E521A05F0CE597BCCE45FF709BE4E64AC27EA1492D445BA6236EF27684A4B935
	C590240E6D07A7A0DE08D1FAD519623D24844A536D24A0AD8925004F7C32C113
	ED49751564255A0D6A5361B81E14C47765786BB83F6DDEDEEDC27D3F0520ED5C
	72000461202A0462544EA0F73FA2BAF233AF80315157262C6103A59F81CEFC25
	6CB2CCC31ADBF642D8AD7C4F662DD7CFF5CC7A84265967EAC8D0F22078BE5555
	48DAF200A0CD8FFAA6720443371CCAF7E6A380D4F533F6D5800DB064A489AC9C
	9B65E6FCA8FB88FC6B168B217375592B63634FBD6FBB183B1D8C6292532D1D4C
	045A26006ACD0816A5A22C4BD7AC4F3831E7D290C669E2B1E101AEDD79B35E05
	87BF90853CE11480B433C601100482207016D47EC03FD9DBFAFF8E4404CCEEDD
	2586C4CAD68E48805C7666FF224AB4EE4B57257080033A4156AE950089F87937
	860916FA414A667818BDE904070320EC37FA6368F048ECD470E08E8F7D622AAC
	E220B6DD597164A9424147AE58847D911CC0040497C6DA585C3F6961302EF258
	452ADD80703342C35862A5DBA98078402EE0BA6E2C218EBC6EFB712208D21ADE
	6F2F71747087F1B4F7BF8EFEE94F3C029076063B0082300C0D9860F4FFFFD418
	1161BAB6245E3898E895ABC0E8BAD7BFE8626CD813272343386BAC5E3E369A35
	F5A629725B62FA10EA9040C7B47A9822DA3BDC0362F14DC0130B22CED4B17940
	296D3FAE2D6720AE9055D2D679F19B955D2F9914A79E17207A3AD1D52DF442DE
	FF892988C085743093080EA19AC35FDCBD7ED9188DA8F1359F44B207896A6CA5
	A6C416A77D69140E4BF9E1927F8F00A45DB90D80301013884F80988E92861D91
	28D98415A8F843E0EC0B14B4D92052924BEC3BDBFE2AC9603DECB65BBA6B48A1
	27890FA133524A39981CB185A271777714BF061A9C4AFFFCED8D8A6A689AA8EC
	E505852BD89F34AFEAA64DB242101AF0D9B20C7D374F6356942E39F776693034
	00144C6B350CDDF0F2012FA3C50272560E35DCF6511F01C164B121F61D89B5AC
	543ADACA178DD93D787C4EA3B6D11A9DF1FBFEFB1BB73E0290766D390082300C
	91E89F89DEFF42C64F6F62488CF2D0B543C3AF91130C08A38CAEFD6BE88CB0F6
	60E4C1851FDD84663701F094D73088FFD28E4467652290CE4E4739126A654A0A
	BB2946EF6523E495E4249F909A06B81FFDB62EF3304E92B8F573B8EF1A1F48AB
	A215D6036F4862545B7B8054EC3DABACAD0D1942E1BC151044CC684446F231EE
	B4EA65A6DA76A848B11A8272682EBAB472E583AA47F9E87AD15F0C5AE79FAFE3
	1680B42BC8411886610B69419590B870E7C0FFC50BF6011E83904068EBD20DC7
	61474EFB4223276912DBDB6A00409DF2E9724503F0FE3C87D763AE86A65072B8
	9AF2DC7209C987E25E327BD7079214D676E48935DF78858A9C7295C33555254B
	359C57F11AE3BDBF7956EE2A3EC08852399EF3A10CA329958655BAF5603A34C4
	239C80D644036D721CEDE7ED2AD59C52A5C8960E5F4BB398ABABED94A631E6A3
	0734496D99A4AD133B947A1E1DFD1BBA6D41C05700D2CE2407611886A2C140A9
	E026E500C0FDEF038B367633A8C1FE2EA26B5016D9649548763CBDFF2F35F176
	7F0CC3B52266D11029C68939EAB2349C6ECC1247FB3F9754679199659CE4F50C
	A96254C6D4A00F36B4EE7231ADA3D3820EFE1DF506595A11DF81BA8B7AD6231E
	C49AFCD5F3E482EEDA05A68CBE6095F0E14E120242676862CAA62528EC5AE264
	15E5B62245B17A41A10C8BEA4938C7D7BBD4D51E60EBDC9F710C3D4B6D13EE6D
	2996BFDDE15B00D2AE2007421088A1209BF5B22FF0FF4FF32E0883B06A6746F7
	B05721211C0993496843DBA722BD1002CEF9F623F642374C126FD60B3170794A
	5161DC8F01A48909885F32AA01101D018512564A710928E0B7512D5BA6B5A6BC
	A435C779A7E6580BEC5477E4AFFFB4AF63B0928CC46D2679BABDC6D2AA79BD84
	CA190DC46622DAF36BA1898D8865A06BBA9F5F9C289C2D5FBA137F3526B1B74E
	75DD1A74655AA5E1730034DC5E82FF84E81385CC29006B679383400843E171B0
	6C18755871FFB370197663CC80FC8C897D6DF402CA82053B68784D9BAFED6FED
	EB89349EE4178E31A694F82484E0BD77CE592BA1AB426B20422C07B4CB65B9AD
	ABE250DF5DAFA429525975281BDA075BAAF2B7CA1989ED7D2FCF326A6103227B
	DA6AAFB995FCB86F13E0B5C310DB48280B20BD6749F69A19A8156B0E111AB8D2
	4B7C92F90C8C40FDCB3C7538A0432B5E21443AA61A68A8CC486CFD2A2A7F1266
	4025E82F1E98D75B00D2AE5D876110068A0A354582FFFF3DF62C515A03E521D5
	67A32A99616361007CB2CD71B72A59C61BEDBD1FA38710628C44A46C3864B8D6
	3204FD6376AAC40808DCA870421B1582E8A683278EEB5B2959A76D8F51093111
	03E95D8F1C0D3B90E440EBE5F012C403F025A26FA6C2475595A49D5B2DE59DCE
	CF91D36E3A4C9F1FE80F219DD7AFC15C3618FB42105891C0793ABC27B7A642D4
	95971AF3D2AB89F3B59E5A34F3FC0940CA19A400080251140B52AA6D27E8FE07
	6B15D8A44151FDF167B5AE8D88CA203338239FA77FF1746E88C8265C8F9184AF
	B95A95354B88F3C84F819F38640586F021F211F5B5FDF99CF6301763A1A9980A
	28AC216655527B94BDB2B6699B14C48BDE6587720D8DABDEB96A93D86B95AEA3
	C6661199508FE620C88398C6123D6F31204146EFE338EC9B14A5C3B500356A15
	D3F5E1FD59E2FB7DC00DBC7EF3E12980288A00D01CCA8F1FE023C699206508A4
	76FA8F74D43B62F81032E308CC19E0531F90976CC22B316832FB0F191442A42F
	90C9FFFE01ED821CE40F5F3A08CD1990BBF0C033E9E0C56DA0456EA0228F0D94
	26400B1CD941852164401B74A113781131EC4666466041F70B9C577E8259A071
	70D09CCF0F605BE2FBB71FA09AEACB272E6E5E4CD7227768C98E008000222702
	20F60103E5D3A74F1F3E7C80B806581B038B2348A0FC024D91FCF8070E384819
	82BC910AEE01F85259E40D56F0893AE4E114588F1F32F28EC8469095D5B07802
	A982ACE664403A43035A52836678989920A79A3281CA1C2017B2FE14BC7C9115
	5C63B17372F2438A447805C5083DA1921152FE00CD479EFC825B44F61E318000
	A45DBB1280200C3B3D3D9DC08581FFFF3E26071D002D4DE8E9AA63371E6D8FB6
	21993E9CBE7D940D2138E780438E31C2BBB562AF720740B92A96B9A0CF6E26FC
	5AECEB31C7B04E216562554790DEDD9885D8709F492C3FE0027A367B896D92BF
	A8D7AB998339E298549BA41CA7983BA090B5F3F4E9CB69841A37224B16B379BF
	B629D322F1215B4E295968220FFF29C46E01C44246C50B4FBFC817284A4B4B23
	F7D1D18A48484AF90BAE317F80EACF5FC01A1434598F0DFC054F85C0D7A3231F
	17CF807AAB3BCA21DA8CD06BCC19900ED4465EC303EF3CFE474A46C807D183B8
	E0ED6AD02D0BE045604047027336272323B0E6E7E1E50506F7AB57AF18A0C7F2
	FE83E40960D303A81258ED911101000144852BCD71450FAE0CC48F3A248B5627
	43BC046992C2496400C94C7FA0D38BD0A5E490348EF55C61D8B5EFB0E3CFC043
	51E0434DC19D3A70A58D586C029EA9FE0F6E5E0301A425066CE60908084066B0
	DFBD7D0B7130C46A60F400431F280B2C8D8111C00C4B01C467088000A2720410
	134304BBEF680B9BE099E91F7C8A0B5CF8806BCD5F90C58AD0BD38602E84F11B
	32AD0C8B2BD0BDB9E0F30690EB06E8C663D81138C88521F27DCDD02C0276C91F
	684606053D30D0814D3E5D5D5D3535356001051481EC9223A93E0008207A4700
	F191048F21B42B723027F990AFF6FD870420F9095874C063051151600011876C
	DC8034A9E1B53AA432FF0D5AB9F41DD481FFF50BBE5AE02778EB275081AAAA2A
	30E881652F308BC0F786907AA10F40000DC60820290FA1ADCCC1CC43C0F2019E
	9390DB2DF018826C6C82C40B78BCE41764E80418F4C034FEFAF56BA024B0B107
	EE3632031B7B403630D035343464656581DD4F76C8160FA4EA8724EF000410A5
	77D20F5D8076062E3C33C1730F247F00133B30D02155115010C805063AB0C987
	1CF490661B79C312000134722380C8B881370DE0851E7CF21DB9E94CB65D0001
	341A01030C00020C00C2ED4855F54CDA2B0000000049454E44AE426082
	]]>
</Picture>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" length_in_bytes="142" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000000C0000
	001102030000009453A53100000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D866000000294944415408D76360000151209684D2
	4898353484816DD512380DC769290C9233A73084860680740300E7DA0A3F5360
	87700000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" length_in_bytes="148" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000000C0000
	001102030000009453A53100000009504C5445FF0000FFFFFF9D9DA1AA7CC3B0
	0000000174524E530040E6D8660000002F4944415408D7636000012D20567300
	D2A8986BD50A06CED04820BD124C73C2604727835A5A26C3AA554B1944434300
	1D930B4AC81F76170000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="10" length_in_bytes="347" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000710000
	007F04030000002A5A309300000018504C5445FF0000040404FAFAFAFBFBFBFC
	FCFCFDFDFDFEFEFEFFFFFF39AB6A180000000174524E530040E6D866000000E7
	49444154785EED97316E03310C04753FD015919E901FC44F489B22085B37315B
	C377D47E3FB095AB03AEBB60176039A0A8512196BA9464965227B0A6C90324F2
	6C4F7E4E3E9562E8F0777B4F69BEC390883BEA63C88E74462DCBCA92EB5A2992
	38ADC8BF2352A4489122458A1429D201921CF4FF7698CF3F75CB92EF789D56F8
	DDC1904CDC70E6ACD8B13B209BF0D399DD1D6CFA1CE99E3BAE4FBEBE34679F83
	ECB9D1733A3DA7E38B9C3362F6FC673EE5533EE5533EE5533EE5533EE5533E4F
	76C9D4B7FDFAC4055BAADE465CE78E141123537BE0D8CBDC7205FF785869BDB5
	9EA9D65FEA3D3FBECCEF1A08EBD7510000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="11" length_in_bytes="393" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000A40000
	00A60403000000A653397900000018504C5445FF00000404040808080C0C0C1C
	1C1C292929333333FFFFFF1903E4410000000174524E530040E6D86600000115
	49444154785EED9B416AC33010453537980F819EA7A09EA0D07D7A03A145AE5F
	258B7461A3C6F6284ECD7B2B81E1F134D816189CAEB8A5AD4C3CDAE89A6A14C6
	A0CAE8590EC4A344C32ABDA130AC71DBF5DB258872DBBB2956294F92472A4D1A
	B071941350A2448912254A942851A2448912254A94285FFDA38E7C9F8D97DC90
	94F3C7F977F9DD56EFD229E7AFD37DF9F9E067BCBA20F3C1CABA7096D1952685
	575A1A30CBC35496F8CA125F4925955452C95B9D4A4EC8FD2BA9A4D2A4F04AF9
	0BCDB2CC638DD595A9C3CACA4DCA1A5F598F5E49E5F8FBB21CB5924A2AA9E484
	A4921392679C4A2A258FAE34FD87597A23BAB2A13E658EF4746CF955DBA3D2BB
	FFAEF88A1F5AACA3D4DC55FD69D472C6568E9FE50F0961F660252F7219000000
	0049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="12" length_in_bytes="1128" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000A40000
	00BE040300000049D6B98F0000002A504C5445FF00000404040808080909090F
	0F0FF4F4F4F5F5F5F8F8F8FAFAFAFBFBFBFCFCFCFDFDFDFEFEFEFFFFFF2C217D
	3D0000000174524E530040E6D866000003E249444154785EED9AC16ADC301086
	E5D007902FBD34813C425FA50FD447D843EF3524E7D690DE57B07B6B1B0F58B7
	B535F32E651B939FC2EEAC2612252DFE8F82FDF83D7C8C58903BC637CE98C679
	A7666CCD48EFF4B42FC82566D59605B3FCDBF1957F533FDEDFFAF605F1C79CFF
	82EBC1169A98FCF97935AD733762CB4148BC6BDAB39A7B3352129177E775F7F6
	964C93E0C3AB2053A2DA48A140D5904845E48A5C912B7245AEC815B92257E48A
	5C91F4BF2357E48A5C916DEB6B239BF61F90E8984AC8C0030BC53D08A5C8243F
	9992BC135F0D29937C911025C47A48FA98586E48B6B7B590DC4FD245D9B0DC57
	43CE92E4E67B62A1875AC8C710BE0509F298F6D56639A5EB241264E6B1040927
	9348A4851ECB907092DFC912DE9522E1A42C8905483829472797241E0B907072
	2F1B9C7C2B42C2C9991620338F254838D93F1FF4F2A904092729C0AA34162003
	0F3273041F6E9A91707290740D18DCB423E1E4261229352D48ECC90416DC3423
	E1E4E7BD740134B86947C2C98181829B76249C9C770930B86947C24909810083
	9B0A32734F2A6E0269DB938A9B401AF6A45A1348E39E54DC04D2B82715378134
	ED49C54D206D7B52711348E39E54DC04D2E0A4E62690054EC24D05697212890A
	5277527713488393BA9B405A9C54DD04D2E0A4EE269016275537812C74126E02
	59E624320259E624720F6499934818812C72123944204B9C4438D00F204B9C44
	FA4304B2C049845964D49170323343E0A823054E6625F5734FA38A8493B94C9A
	39AA48389997390D5D7FA7BFDB809379E949F6A75F97F0F014829379A17E33EA
	124538999574907824BEF5BE3D1338999BEDE8F43414F2B5FC4A3373BCF082A9
	F124732E710E1305797097D250764B967074526F79E5BC4BD9AA73922EA0A456
	5372D30947A7B76C7E9F4FF94E76DDE87272952BD1BC4C5269D9FAA773C94D08
	974AB6796EC24989EE424BEF9773B8A93B19329C849B0627752FFD729EA4CF71
	72E79CA1A6C149BDA5F3CBF954CFC9066E1A9CD45AE23CD749D3347BF5EE4E1C
	F3DEB236CFC3747CE1EEA65DDE8BDBC6A3260DFADD9DFD2ED83FBB300B6977F7
	CE65B744CD40FADD9D3D4BC830E977B72598A676772BB1BB89BBDB5EF38D84D3
	7B32A1A4B5E644F3C93D49D893E669724FFA9EB4D74CA7F7E49D19A8B8893D69
	CEFB85C994B1278D35D53D59EE26F66459CD4E304FDCDD4535B9FBD349ECC902
	3703E94EDA6B4ACAB8BBAD6E6638699DA6EA64D1DED49DB4BB0927EBD49444D8
	93756AF642F88F53A9E69CE064A59A5BDAC2C93A353F309CAC5593E164B569C2
	C96A35039CAC5633A064AD9A8292D56ABA7AF1AE7A1A947CD53551F255D76C9A
	EACCB67E4B205F75FC5AB3246BCDB5A6F254F217B0FCDB74085994DC00000000
	49454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="20" length_in_bytes="211" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000690000
	00220403000000AE33EAA600000012504C5445FF00000404041313131C1C1CFB
	FBFBFFFFFF72C3B4590000000174524E530040E6D8660000006549444154785E
	EDD4B109C0300C44D17326B037D10A194188ECBF4AC08D6DAE51AE0818FCCB83
	A752F8B5D29668A9C0B50E5D3D734E4BA581D5BDAD3AEA28CFAAB69452DC50DE
	CF7C5663980A28CA14155094292AA02853544051A6A880A22CF3F979D8A61773
	181B85BFDFEC8A0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="21" length_in_bytes="173" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000420000
	002802030000003755C44700000009504C5445FF0000FFFFFF0404045E8126FB
	0000000174524E530040E6D866000000484944415428CF636060686240021C0A
	40820B5904CC59850216605583690E266840E16153D3D1816E1707C3D4506490
	C0A08521B2AA015D0453D7A8C86016C18C412D227461A41600D5E3C3AD1D8BE6
	C90000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="22" length_in_bytes="266" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000004A0000
	004A0403000000EEFEDF420000001E504C5445FF0000FFFFFF0404040808080B
	0B0B0C0C0C1C1C1C2929293333333434343022012C0000000174524E530040E6
	D8660000009049444154785EED964B0EC33008051137A8DBEEE91C2E3D4B6F5D
	27CBA0F853A2A80B6663598C786C6C212BA6E21157C20BBE428B895EFDB9E6B0
	8630D3CB2AB4D0CA16F7BA1D53B650A56B6102D6B114C612AFB4D24A2BADF8AB
	C57E4F2C2C2B50CFF7E7E867BA8BC75B8F13ADE7949556F9272B2DB0014B8924
	F6B70E0960BB5143BD746831C35F3CEC08F4EACFF505161475BA180795BA0000
	000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="23" length_in_bytes="274" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000004A0000
	004A020300000061BE2AE200000009504C5445FF0000FFFFFF0404045E8126FB
	0000000174524E530040E6D866000000AD49444154785EEDD4310AC3300C05D0
	4FA69053948EB94F85461D4564CA05B2874EC5A72C1453ECFC5FD2B9F42FC60F
	498B8D002C68325E5EC754A1BD942EBBAE93F374B2834F75EB5ABADCAF178CD8
	6E6D6200E6A34D8992079B77D5FBBBF637FDE6537ED5BBF05F3380EA5C58084B
	36039B0B0B61C966607361212CD90C6C2E2C84259B81CD8585B06433B0F9DB4A
	6E8771ED8E48EE35B1731EA0C81D36E0244B3DC4BADC5B2B3527753CEF098419
	37CFF3E9E4B50000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="24" length_in_bytes="327" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000440000
	00A50403000000172546A60000000F504C5445FF0000040404ADADADC2C2C2FF
	FFFFF8B9C7530000000174524E530040E6D866000000DC49444154785EEDD851
	0AC2301084E1EC0D66AC17107A01F1044AEE7F2693482C54B25308D497FDF171
	F858F1A1D24422898C4906BD287198959AB23C06DD53B2242784528C948AB9E7
	2EDB2DB5CBEB99F7F589B1ADAEEB6D3821219492526AFF5542B1A6DC3CC55015
	8E15809FB4C2A95BF437EA5DD7139550420925945042092514EEFB5546FFE07B
	24C5442AFA96F8A54309259450E279A49F246232A7A8976D5F05F56339A3819B
	9C9F5D3116CA9F90504A82540A718E4262A8185911A3A310076F418BE44EE9AF
	3A8F8722CE664D813B41DDF913D626147DCB1B9EDBFF4022030E840000000049
	454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="25" length_in_bytes="266" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000610000
	00A8040300000002CF9DEC00000015504C5445FF00000404041212123D3D3DFC
	FCFCFDFDFDFFFFFFB52F3E300000000174524E530040E6D86600000099494441
	54785EEDD8B109C3301046616983FB09A44E91058C561099C01E402EB4FF0809
	22296C8239195228BC570A3EEE6450E37049BB26BD4BFB2CB4AED5DD69217F47
	334AFDD63802B11E89FB92B73D3E3336A7CB9CF36D9C9B231008040281402010
	080402814020E4CF5ABD7F202D748AA85E21FD7A2B843784FCF17511AF10BC41
	0482375882A758EB1F09C93A45D499AD24455792B59E9D0E49ABB82ED16C0000
	000049454E44AE426082
	]]>
</GDLPict>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

actualGUID = FROM_GUID

! ==============================================================================
! Subroutines
! ==============================================================================

	_startID	= "F02ED6F9-B87A-49AF-B9E9-747FEDD29658"
	_endID		= "72ED65A6-AA21-4005-867B-C40D18916CF8"
gosub "fmtypes_fwm"

! ==============================================================================
! Set Migration GUID
! ==============================================================================

setmigrationguid actualGUID

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================

! ==============================================================================
! Change string parameter to integer
! ==============================================================================
"fmtypes_fwm":
	if actualGuid = _startID then
		bHas = DELETED_PAR_VALUE ("FM_Type", FM_Type)

	!INT
		iFMType = 999
		if FM_Type = `Default Objects` then iFMType = 1
		if FM_Type = `Default Lamps` then iFMType = 2
		if FM_Type = `People` then iFMType = 3
		if FM_Type = `Elevators` then iFMType = 4
		if FM_Type = `Security and Escapes` then iFMType = 5
		if FM_Type = `Stairs` then iFMType = 6
		if FM_Type = `Work Spaces` then iFMType = 7
		if FM_Type = `Electric Facilities` then iFMType = 8
		if FM_Type = `Distribution Panels` then iFMType = 9
		if FM_Type = `Measuring Places` then iFMType = 10
		if FM_Type = `Lamps` then iFMType = 11
		if FM_Type = `HVAC Equipment` then iFMType = 12
		if FM_Type = `Sanitation` then iFMType = 13
		if FM_Type = `Locks` then iFMType = 14
		if FM_Type = `Built-in Wardrobes` then iFMType = 15
		if FM_Type = `Furniture` then iFMType = 16
		if FM_Type = `Ceilings` then iFMType = 17
		if FM_Type = `Floors` then iFMType = 18
		if FM_Type = `Outdoor Objects` then iFMType = 19
		if FM_Type = `Computers` then iFMType = 20
		if FM_Type = `Monitors` then iFMType = 21
		if FM_Type = `Software` then iFMType = 22
		if FM_Type = `Phones` then iFMType = 23
		if FM_Type = `Containers` then iFMType = 24
		if FM_Type = `Others` then iFMType = 25

	!AUT
		if FM_Type = "Standard Objekte" then iFMType = 1
		if FM_Type = "Standard Leuchten" then iFMType = 2
		if FM_Type = "Standard Lampen" then iFMType = 2
		if FM_Type = "Menschen" then iFMType = 3
		if FM_Type = "Fahrstühle" then iFMType = 4
		if FM_Type = "Sicherheit und Fluchtwege" then iFMType = 5
		if FM_Type = "Treppen" then iFMType = 6
		if FM_Type = "Arbeitsplätze" then iFMType = 7
		if FM_Type = "Elektrische Ausstattung" then iFMType = 8
		if FM_Type = "Verteilung Paneele" then iFMType = 9
		if FM_Type = "Verteilerfeld" then iFMType = 9
		if FM_Type = "Vermessungsstandorte" then iFMType = 10
		if FM_Type = "Leuchten" then iFMType = 11
		if FM_Type = "Lampen" then iFMType = 11
		if FM_Type = "HKLSE Ausstattung" then iFMType = 12
		if FM_Type = "Sanitäre Anlagen" then iFMType = 13
		if FM_Type = "Schlösser" then iFMType = 14
		if FM_Type = "Einbaugarderoben" then iFMType = 15
		if FM_Type = "Einbaukleiderschränke" then iFMType = 15
		if FM_Type = "Möbel" then iFMType = 16
		if FM_Type = "Decken" then iFMType = 17
		if FM_Type = "Fußböden" then iFMType = 18
		if FM_Type = "Objekte im Freien" then iFMType = 19
		if FM_Type = "Computer" then iFMType = 20
		if FM_Type = "Monitore" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefone" then iFMType = 23
		if FM_Type = "Container" then iFMType = 24
		if FM_Type = "Andere" then iFMType = 25

	!BRA
		if FM_Type = "Objetos padrão" then iFMType = 1
		if FM_Type = "Lâmpadas padrão" then iFMType = 2
		if FM_Type = "Pessoas" then iFMType = 3
		if FM_Type = "Elevadores" then iFMType = 4
		if FM_Type = "Segurança e Fuga" then iFMType = 5
		if FM_Type = "Escadas" then iFMType = 6
		if FM_Type = "Espaços de trabalho" then iFMType = 7
		if FM_Type = "Equipamentos elétricos" then iFMType = 8
		if FM_Type = "Painéis de distribuição" then iFMType = 9
		if FM_Type = "Medição Lugares" then iFMType = 10
		if FM_Type = "Lâmpadas" then iFMType = 11
		if FM_Type = "Equipamento AVAC" then iFMType = 12
		if FM_Type = "Instalações Sanitárias" then iFMType = 13
		if FM_Type = "Fechamentos" then iFMType = 14
		if FM_Type = "Armários Embutidos" then iFMType = 15
		if FM_Type = "Mobiliário" then iFMType = 16
		if FM_Type = "Tetos" then iFMType = 17
		if FM_Type = "Pavimentos" then iFMType = 18
		if FM_Type = "Objetos Exteriores" then iFMType = 19
		if FM_Type = "Computadores" then iFMType = 20
		if FM_Type = "Monitores" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefones" then iFMType = 23
		if FM_Type = "Recipientes" then iFMType = 24
		if FM_Type = "Outros" then iFMType = 25

	!CHE
		if FM_Type = "Standard Objekte" then iFMType = 1
		if FM_Type = "Standard Leuchten" then iFMType = 2
		if FM_Type = "Standard Lampen" then iFMType = 2
		if FM_Type = "Menschen" then iFMType = 3
		if FM_Type = "Fahrstühle" then iFMType = 4
		if FM_Type = "Sicherheit und Fluchtwege" then iFMType = 5
		if FM_Type = "Treppen" then iFMType = 6
		if FM_Type = "Arbeitsplätze" then iFMType = 7
		if FM_Type = "Elektrische Ausstattung" then iFMType = 8
		if FM_Type = "Verteilung Paneele" then iFMType = 9
		if FM_Type = "Verteilerfeld" then iFMType = 9
		if FM_Type = "Vermessungsstandorte" then iFMType = 10
		if FM_Type = "Leuchten" then iFMType = 11
		if FM_Type = "Lampen" then iFMType = 11
		if FM_Type = "HKLSE Ausstattung" then iFMType = 12
		if FM_Type = "Sanitäre Anlagen" then iFMType = 13
		if FM_Type = "Schlösser" then iFMType = 14
		if FM_Type = "Einbaukleiderschränke" then iFMType = 15
		if FM_Type = "Möbel" then iFMType = 16
		if FM_Type = "Decken" then iFMType = 17
		if FM_Type = "Fußböden" then iFMType = 18
		if FM_Type = "Fussböden" then iFMType = 18
		if FM_Type = "Objekte im Freien" then iFMType = 19
		if FM_Type = "Computer" then iFMType = 20
		if FM_Type = "Monitore" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefone" then iFMType = 23
		if FM_Type = "Container" then iFMType = 24
		if FM_Type = "Andere" then iFMType = 25

	!CHI
		if FM_Type = "默认对象" then iFMType = 1
		if FM_Type = "默认灯" then iFMType = 2
		if FM_Type = "人" then iFMType = 3
		if FM_Type = "电梯" then iFMType = 4
		if FM_Type = "保安与逃生" then iFMType = 5
		if FM_Type = "楼梯" then iFMType = 6
		if FM_Type = "工作空间" then iFMType = 7
		if FM_Type = "电气设备" then iFMType = 8
		if FM_Type = "分布面板" then iFMType = 9
		if FM_Type = "测量地点" then iFMType = 10
		if FM_Type = "灯" then iFMType = 11
		if FM_Type = "HVAC设备" then iFMType = 12
		if FM_Type = "卫生设施" then iFMType = 13
		if FM_Type = "锁" then iFMType = 14
		if FM_Type = "内置衣橱" then iFMType = 15
		if FM_Type = "家具" then iFMType = 16
		if FM_Type = "天花板" then iFMType = 17
		if FM_Type = "地板" then iFMType = 18
		if FM_Type = "室外对象" then iFMType = 19
		if FM_Type = "计算机" then iFMType = 20
		if FM_Type = "监视器" then iFMType = 21
		if FM_Type = "软件" then iFMType = 22
		if FM_Type = "电话" then iFMType = 23
		if FM_Type = "容器" then iFMType = 24
		if FM_Type = "其它" then iFMType = 25

	!CZE
		if FM_Type = "Výchozí objekty" then iFMType = 1
		if FM_Type = "výchozí lampy" then iFMType = 2
		if FM_Type = "lidé" then iFMType = 3
		if FM_Type = "výtahy" then iFMType = 4
		if FM_Type = "bezpečnost a úniky" then iFMType = 5
		if FM_Type = "schodiště" then iFMType = 6
		if FM_Type = "pracovní prostory" then iFMType = 7
		if FM_Type = "Elektrická zařízení" then iFMType = 8
		if FM_Type = "rozvaděče" then iFMType = 9
		if FM_Type = "měřiče" then iFMType = 10
		if FM_Type = "Svítidla" then iFMType = 11
		if FM_Type = "lampy" then iFMType = 11
		if FM_Type = "Lampy" then iFMType = 11
		if FM_Type = "TZB vybavení" then iFMType = 12
		if FM_Type = "Sanitární vybavení" then iFMType = 13
		if FM_Type = "zámky" then iFMType = 14
		if FM_Type = "zabudované skříně" then iFMType = 15
		if FM_Type = "Nábytek" then iFMType = 16
		if FM_Type = "stropy" then iFMType = 17
		if FM_Type = "podlahy" then iFMType = 18
		if FM_Type = "Venkovní objekty" then iFMType = 19
		if FM_Type = "počítače" then iFMType = 20
		if FM_Type = "monitory" then iFMType = 21
		if FM_Type = "software" then iFMType = 22
		if FM_Type = "telefony" then iFMType = 23
		if FM_Type = "obaly" then iFMType = 24
		if FM_Type = "jiné" then iFMType = 25
		if FM_Type = "Jiné" then iFMType = 25

	!FIN
		if FM_Type = "Oletusobjektit" then iFMType = 1
		if FM_Type = "Oletuslamput" then iFMType = 2
		if FM_Type = "Ihminen" then iFMType = 3
		if FM_Type = "Hissit" then iFMType = 4
		if FM_Type = "Turvallisuus ja poistumistiet" then iFMType = 5
		if FM_Type = "Portaat" then iFMType = 6
		if FM_Type = "Työtilat" then iFMType = 7
		if FM_Type = "Sähkölaitteet" then iFMType = 8
		if FM_Type = "Jakelutaulut" then iFMType = 9
		if FM_Type = "Mittauspaikat" then iFMType = 10
		if FM_Type = "Lamput" then iFMType = 11
		if FM_Type = "LVI-laite" then iFMType = 12
		if FM_Type = "Saniteettikalusteet" then iFMType = 13
		if FM_Type = "Viemäröinti" then iFMType = 13
		if FM_Type = "Lukot" then iFMType = 14
		if FM_Type = "Kiinteät komerot" then iFMType = 15
		if FM_Type = "Kalustus" then iFMType = 16
		if FM_Type = "Sisäkattopinnat" then iFMType = 17
		if FM_Type = "Lattiat" then iFMType = 18
		if FM_Type = "Ulkotilan objektit" then iFMType = 19
		if FM_Type = "Ulkotilojen objektit" then iFMType = 19
		if FM_Type = "Tietokoneet" then iFMType = 20
		if FM_Type = "Näytöt" then iFMType = 21
		if FM_Type = "Ohjelmat" then iFMType = 22
		if FM_Type = "Puhelimet" then iFMType = 23
		if FM_Type = "Säilytys" then iFMType = 24
		if FM_Type = "Muut" then iFMType = 25

	!FLA

	!FRA
		if FM_Type = "Objets par défaut" then iFMType = 1
		if FM_Type = "Lampes par défaut" then iFMType = 2
		if FM_Type = "Personnages" then iFMType = 3
		if FM_Type = "Ascenseurs" then iFMType = 4
		if FM_Type = "Sécurité et sorties de secours" then iFMType = 5
		if FM_Type = "Escaliers" then iFMType = 6
		if FM_Type = "Espaces de travail" then iFMType = 7
		if FM_Type = "Services électriques" then iFMType = 8
		if FM_Type = "Panneaux de distribution" then iFMType = 9
		if FM_Type = "Armoires de contrôle" then iFMType = 10
		if FM_Type = "Lampes" then iFMType = 11
		if FM_Type = "Equipement CVCA" then iFMType = 12
		if FM_Type = "Sanitaires" then iFMType = 13
		if FM_Type = "Serrurerie" then iFMType = 14
		if FM_Type = "Penderies Encastrées" then iFMType = 15
		if FM_Type = "Ameublement" then iFMType = 16
		if FM_Type = "Plafonds" then iFMType = 17
		if FM_Type = "Planchers" then iFMType = 18
		if FM_Type = "Objets extérieurs" then iFMType = 19
		if FM_Type = "Ordinateurs" then iFMType = 20
		if FM_Type = "Ecrans" then iFMType = 21
		if FM_Type = "Logiciels" then iFMType = 22
		if FM_Type = "Téléphones" then iFMType = 23
		if FM_Type = "Conteneurs" then iFMType = 24
		if FM_Type = "Autres" then iFMType = 25

	!GER
		if FM_Type = "Standard Objekte" then iFMType = 1
		if FM_Type = "Standard Leuchten" then iFMType = 2
		if FM_Type = "Standard Lampen" then iFMType = 2
		if FM_Type = "Menschen" then iFMType = 3
		if FM_Type = "Fahrstühle" then iFMType = 4
		if FM_Type = "Sicherheit und Fluchtwege" then iFMType = 5
		if FM_Type = "Treppen" then iFMType = 6
		if FM_Type = "Arbeitsplätze" then iFMType = 7
		if FM_Type = "Elektrische Ausstattung" then iFMType = 8
		if FM_Type = "Verteilung Paneele" then iFMType = 9
		if FM_Type = "Verteilerfeld" then iFMType = 9
		if FM_Type = "Vermessungsstandorte" then iFMType = 10
		if FM_Type = "Leuchten" then iFMType = 11
		if FM_Type = "Lampen" then iFMType = 11
		if FM_Type = "HKLSE Ausstattung" then iFMType = 12
		if FM_Type = "Sanitäre Anlagen" then iFMType = 13
		if FM_Type = "Schlösser" then iFMType = 14
		if FM_Type = "Einbaukleiderschränke" then iFMType = 15
		if FM_Type = "Möbel" then iFMType = 16
		if FM_Type = "Decken" then iFMType = 17
		if FM_Type = "Fußböden" then iFMType = 18
		if FM_Type = "Objekte im Freien" then iFMType = 19
		if FM_Type = "Computer" then iFMType = 20
		if FM_Type = "Monitore" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefone" then iFMType = 23
		if FM_Type = "Container" then iFMType = 24
		if FM_Type = "Andere" then iFMType = 25

	!GRE
		if FM_Type = "Αρχικά Αντικείμενα" then iFMType = 1
		if FM_Type = "Αρχικά Φωτιστικά" then iFMType = 2
		if FM_Type = "Άνθρωποι" then iFMType = 3
		if FM_Type = "Ανελκυστήρες" then iFMType = 4
		if FM_Type = "Ασφάλεια και Διαφυγή" then iFMType = 5
		if FM_Type = "Σκάλες" then iFMType = 6
		if FM_Type = "Χώροι Εργασίας" then iFMType = 7
		if FM_Type = "Ηλεκτρολ. Εγκαταστάσεις" then iFMType = 8
		if FM_Type = "Πίνακες Διανομής" then iFMType = 9
		if FM_Type = "Θέσεις Μετρήσεων" then iFMType = 10
		if FM_Type = "Φωτιστικά" then iFMType = 11
		if FM_Type = "Λάμπα" then iFMType = 11
		if FM_Type = "Εξαρτήματα HVAC" then iFMType = 12
		if FM_Type = "Υγιεινή" then iFMType = 13
		if FM_Type = "Κλειδαριές" then iFMType = 14
		if FM_Type = "Εντοιχισμένες Ντουλάπες" then iFMType = 15
		if FM_Type = "Εντοιχισμένη Ντουλάπα" then iFMType = 15
		if FM_Type = "Επίπλωση" then iFMType = 16
		if FM_Type = "Οροφές" then iFMType = 17
		if FM_Type = "Δάπεδα" then iFMType = 18
		if FM_Type = "Υπαίθρια Αντικείμενα" then iFMType = 19
		if FM_Type = "Υπολογιστές" then iFMType = 20
		if FM_Type = "Οθόνες" then iFMType = 21
		if FM_Type = "Λογισμικό" then iFMType = 22
		if FM_Type = "Τηλέφωνα" then iFMType = 23
		if FM_Type = "Κιβώτια" then iFMType = 24
		if FM_Type = "Άλλα" then iFMType = 25

	!HUN
		if FM_Type = "Alapértelmezett tárgy" then iFMType = 1
		if FM_Type = "Alapértelmezett lámpa" then iFMType = 2
		if FM_Type = "Személy" then iFMType = 3
		if FM_Type = "Felvonó" then iFMType = 4
		if FM_Type = "Biztonság- és menekülésjelző" then iFMType = 5
		if FM_Type = "Lépcsők" then iFMType = 6
		if FM_Type = "Lépcső" then iFMType = 6
		if FM_Type = "Lépcsö" then iFMType = 6
		if FM_Type = "Munkaterület" then iFMType = 7
		if FM_Type = "Elektromos berendezés" then iFMType = 8
		if FM_Type = "Elosztó" then iFMType = 9
		if FM_Type = "Mérőhely" then iFMType = 10
		if FM_Type = "Lámpa" then iFMType = 11
		if FM_Type = "Légtechnikai berendezés" then iFMType = 12
		if FM_Type = "Szaniter berendezés" then iFMType = 13
		if FM_Type = "Zár" then iFMType = 14
		if FM_Type = "Beépített szekrény" then iFMType = 15
		if FM_Type = "Bútor" then iFMType = 16
		if FM_Type = "Mennyezet" then iFMType = 17
		if FM_Type = "Padló" then iFMType = 18
		if FM_Type = "Kültéri tárgy" then iFMType = 19
		if FM_Type = "Számítógép" then iFMType = 20
		if FM_Type = "Monitor" then iFMType = 21
		if FM_Type = "Szoftver" then iFMType = 22
		if FM_Type = "Telefon" then iFMType = 23
		if FM_Type = "Konténer" then iFMType = 24
		if FM_Type = "Egyéb" then iFMType = 25

	!ITA
		if FM_Type = "Oggetti predefiniti" then iFMType = 1
		if FM_Type = "Lampade predefinite" then iFMType = 2
		if FM_Type = "Persone" then iFMType = 3
		if FM_Type = "Ascensori" then iFMType = 4
		if FM_Type = "Sicurezza e Fughe" then iFMType = 5
		if FM_Type = "Scale" then iFMType = 6
		if FM_Type = "Spazi di Lavoro" then iFMType = 7
		if FM_Type = "Funzioni Elettriche" then iFMType = 8
		if FM_Type = "Pannelli di Distribuzione" then iFMType = 9
		if FM_Type = "Posti di Misurazione" then iFMType = 10
		if FM_Type = "Lampade" then iFMType = 11
		if FM_Type = "Apparecchiatura HVAC" then iFMType = 12
		if FM_Type = "Risanamento" then iFMType = 13
		if FM_Type = "Serrature" then iFMType = 14
		if FM_Type = "Armadi a muro" then iFMType = 15
		if FM_Type = "Armadi Incassati" then iFMType = 15
		if FM_Type = "Armadi Incorporati" then iFMType = 15
		if FM_Type = "Arredo" then iFMType = 16
		if FM_Type = "Soffitti" then iFMType = 17
		if FM_Type = "Pavimenti" then iFMType = 18
		if FM_Type = "Oggetti Esterni" then iFMType = 19
		if FM_Type = "Computers" then iFMType = 20
		if FM_Type = "Monitors" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefoni" then iFMType = 23
		if FM_Type = "Contenitori" then iFMType = 24
		if FM_Type = "Altri" then iFMType = 25

	!JPN
		if FM_Type = "ﾃﾞﾌｫﾙﾄｵﾌﾞｼﾞｪｸﾄ " then iFMType = 1
		if FM_Type = "ﾃﾞﾌｫﾙﾄｵﾌﾞｼﾞｪｸﾄ" then iFMType = 1
		if FM_Type = "ﾃﾞﾌｫﾙﾄﾗﾝﾌﾟ" then iFMType = 2
		if FM_Type = "人物" then iFMType = 3
		if FM_Type = "ｴﾚﾍﾞｰﾀ" then iFMType = 4
		if FM_Type = "防犯と非常用" then iFMType = 5
		if FM_Type = "階段" then iFMType = 6
		if FM_Type = "ﾜｰｸｽﾍﾟｰｽ" then iFMType = 7
		if FM_Type = "電気設備" then iFMType = 8
		if FM_Type = "配電盤" then iFMType = 9
		if FM_Type = "測定場所" then iFMType = 10
		if FM_Type = "ﾗﾝﾌﾟ" then iFMType = 11
		if FM_Type = "設備機器" then iFMType = 12
		if FM_Type = "HVAC機器" then iFMType = 12
		if FM_Type = "排水設備" then iFMType = 13
		if FM_Type = "下水設備" then iFMType = 13
		if FM_Type = "ﾛｯｸ" then iFMType = 14
		if FM_Type = "造り付けﾜｰﾄﾞﾛｰﾌﾞ" then iFMType = 15
		if FM_Type = "家具" then iFMType = 16
		if FM_Type = "天井" then iFMType = 17
		if FM_Type = "ﾌﾛｱ" then iFMType = 18
		if FM_Type = "屋外ｵﾌﾞｼﾞｪｸﾄ" then iFMType = 19
		if FM_Type = "ｺﾝﾋﾟｭｰﾀ" then iFMType = 20
		if FM_Type = "ﾓﾆﾀ" then iFMType = 21
		if FM_Type = "ｿﾌﾄｳｪｱ" then iFMType = 22
		if FM_Type = "電話" then iFMType = 23
		if FM_Type = "ｺﾝﾃﾅ" then iFMType = 24
		if FM_Type = "その他" then iFMType = 25

	!KOR
		if FM_Type = "기본 객체" then iFMType = 1
		if FM_Type = "기본값 객체" then iFMType = 1
		if FM_Type = "기본 조명" then iFMType = 2
		if FM_Type = "사람들" then iFMType = 3
		if FM_Type = "엘리베이터" then iFMType = 4
		if FM_Type = "보안과 피난" then iFMType = 5
		if FM_Type = "계단" then iFMType = 6
		if FM_Type = "작업 공간" then iFMType = 7
		if FM_Type = "전기 설비" then iFMType = 8
		if FM_Type = "분배 패널" then iFMType = 9
		if FM_Type = "측정 장소" then iFMType = 10
		if FM_Type = "조명" then iFMType = 11
		if FM_Type = "공조설비" then iFMType = 12
		if FM_Type = "위생설비" then iFMType = 13
		if FM_Type = "잠금장치" then iFMType = 14
		if FM_Type = "붙박이 장" then iFMType = 15
		if FM_Type = "가구" then iFMType = 16
		if FM_Type = "천장" then iFMType = 17
		if FM_Type = "바닥" then iFMType = 18
		if FM_Type = "실외 객체" then iFMType = 19
		if FM_Type = "컴퓨터" then iFMType = 20
		if FM_Type = "모니터" then iFMType = 21
		if FM_Type = "소프트웨어" then iFMType = 22
		if FM_Type = "전화기" then iFMType = 23
		if FM_Type = "콘테이너" then iFMType = 24
		if FM_Type = "기타" then iFMType = 25

	!NED
		if FM_Type = "Standaardobjecten" then iFMType = 1
		if FM_Type = "Standaardlampen" then iFMType = 2
		if FM_Type = "Mensen" then iFMType = 3
		if FM_Type = "Liften" then iFMType = 4
		if FM_Type = "Beveiliging en vluchtwegen" then iFMType = 5
		if FM_Type = "Trappen" then iFMType = 6
		if FM_Type = "Werkplekken" then iFMType = 7
		if FM_Type = "ET installatie" then iFMType = 8
		if FM_Type = "Schakelkasten" then iFMType = 9
		if FM_Type = "Meetgebieden" then iFMType = 10
		if FM_Type = "Lampen" then iFMType = 11
		if FM_Type = "W-installatie" then iFMType = 12
		if FM_Type = "Afvalverwerking" then iFMType = 13
		if FM_Type = "Sloten" then iFMType = 14
		if FM_Type = "Inbouwkasten" then iFMType = 15
		if FM_Type = "Meubilair" then iFMType = 16
		if FM_Type = "Plafonds" then iFMType = 17
		if FM_Type = "Vloeren" then iFMType = 18
		if FM_Type = "Buitenobjecten" then iFMType = 19
		if FM_Type = "Computers" then iFMType = 20
		if FM_Type = "Monitoren" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefoon" then iFMType = 23
		if FM_Type = "Containers" then iFMType = 24
		if FM_Type = "Anders" then iFMType = 25
		if FM_Type = "Overig" then iFMType = 25

	!NOR
		if FM_Type = "Standard objekter" then iFMType = 1
		if FM_Type = "Andre" then iFMType = 25

	!POL
		if FM_Type = "Obiekty domyślne" then iFMType = 1
		if FM_Type = "Domyślne lampy" then iFMType = 2
		if FM_Type = "Ludzie" then iFMType = 3
		if FM_Type = "Windy" then iFMType = 4
		if FM_Type = "Bezpieczeństwo i ewakuacja" then iFMType = 5
		if FM_Type = "Schody" then iFMType = 6
		if FM_Type = "Przestrzenie robocze" then iFMType = 7
		if FM_Type = "Urządzenia elektryczne" then iFMType = 8
		if FM_Type = "Panele rozdzielające" then iFMType = 9
		if FM_Type = "Stanowiska pomiarowe" then iFMType = 10
		if FM_Type = "Lampy" then iFMType = 11
		if FM_Type = "Wyposażenie grzewczo-klimatyzac." then iFMType = 12
		if FM_Type = "Sanitarne" then iFMType = 13
		if FM_Type = "Zamki" then iFMType = 14
		if FM_Type = "Garderoby" then iFMType = 15
		if FM_Type = "Umeblowanie" then iFMType = 16
		if FM_Type = "Sufity" then iFMType = 17
		if FM_Type = "Podłogi" then iFMType = 18
		if FM_Type = "Obiekty zewnętrzne" then iFMType = 19
		if FM_Type = "Komputery" then iFMType = 20
		if FM_Type = "Monitory" then iFMType = 21
		if FM_Type = "Oprogramowanie" then iFMType = 22
		if FM_Type = "Telefony" then iFMType = 23
		if FM_Type = "Pojemniki" then iFMType = 24
		if FM_Type = "Inne" then iFMType = 25

	!POR
		if FM_Type = "Objectos por defeito" then iFMType = 1
		if FM_Type = "Lâmpadas por defeito" then iFMType = 2
		if FM_Type = "Pessoas" then iFMType = 3
		if FM_Type = "Elevadores" then iFMType = 4
		if FM_Type = "Segurança e Fuga" then iFMType = 5
		if FM_Type = "Escadas" then iFMType = 6
		if FM_Type = "Espaços de trabalho" then iFMType = 7
		if FM_Type = "Equipamentos eléctricos" then iFMType = 8
		if FM_Type = "Painéis de distribuição" then iFMType = 9
		if FM_Type = "Medição Lugares" then iFMType = 10
		if FM_Type = "Lâmpadas" then iFMType = 11
		if FM_Type = "Equipamento AVAC" then iFMType = 12
		if FM_Type = "Instalações Sanitárias" then iFMType = 13
		if FM_Type = "Fechos" then iFMType = 14
		if FM_Type = "Armários Embutidos" then iFMType = 15
		if FM_Type = "Mobiliário" then iFMType = 16
		if FM_Type = "Tectos" then iFMType = 17
		if FM_Type = "Pavimentos" then iFMType = 18
		if FM_Type = "Objectos Exteriores" then iFMType = 19
		if FM_Type = "Computadores" then iFMType = 20
		if FM_Type = "Monitores" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefones" then iFMType = 23
		if FM_Type = "Recipientes" then iFMType = 24
		if FM_Type = "Outros" then iFMType = 25

	!RUS
		if FM_Type = "Объекты по умолчанию" then iFMType = 1
		if FM_Type = "Ист.света по умолчанию" then iFMType = 2
		if FM_Type = "Люди" then iFMType = 3
		if FM_Type = "Лифты" then iFMType = 4
		if FM_Type = "Безопасность и эвакуация" then iFMType = 5
		if FM_Type = "Лестницы" then iFMType = 6
		if FM_Type = "Рабочее пространство" then iFMType = 7
		if FM_Type = "Электрические устройства" then iFMType = 8
		if FM_Type = "Распределительные щиты" then iFMType = 9
		if FM_Type = "Измеряемые места" then iFMType = 10
		if FM_Type = "Лампы" then iFMType = 11
		if FM_Type = "Источники света" then iFMType = 11
		if FM_Type = "Механическое оборудование" then iFMType = 12
		if FM_Type = "Санитария" then iFMType = 13
		if FM_Type = "Замки" then iFMType = 14
		if FM_Type = "Встроенные гардеробы" then iFMType = 15
		if FM_Type = "Гардеробы встроенные" then iFMType = 15
		if FM_Type = "Мебель" then iFMType = 16
		if FM_Type = "Потолки" then iFMType = 17
		if FM_Type = "Полы" then iFMType = 18
		if FM_Type = "Объекты снаружи" then iFMType = 19
		if FM_Type = "Компьютеры" then iFMType = 20
		if FM_Type = "Мониторы" then iFMType = 21
		if FM_Type = "Программное обеспечение" then iFMType = 22
		if FM_Type = "Телефоны" then iFMType = 23
		if FM_Type = "Контейнеры" then iFMType = 24
		if FM_Type = "Другой" then iFMType = 25
		if FM_Type = "Другие" then iFMType = 25

	!SPA
		if FM_Type = "Objetos por Defecto" then iFMType = 1
		if FM_Type = "Lámparas por Defecto" then iFMType = 2
		if FM_Type = "Personas" then iFMType = 3
		if FM_Type = "Ascensores" then iFMType = 4
		if FM_Type = "Seguridad y Evacuaciones" then iFMType = 5
		if FM_Type = "Escaleras" then iFMType = 6
		if FM_Type = "Espacios de Trabajo" then iFMType = 7
		if FM_Type = "Cuartos Eléctricos" then iFMType = 8
		if FM_Type = "Paneles de División" then iFMType = 9
		if FM_Type = "Lugares de Medidas" then iFMType = 10
		if FM_Type = "Lámparas" then iFMType = 11
		if FM_Type = "Control de Atmósfera" then iFMType = 12
		if FM_Type = "Saneamiento" then iFMType = 13
		if FM_Type = "Cerraduras" then iFMType = 14
		if FM_Type = "Armarios Empotrados" then iFMType = 15
		if FM_Type = "Mobiliario" then iFMType = 16
		if FM_Type = "Falsos Techos" then iFMType = 17
		if FM_Type = "Suelos" then iFMType = 18
		if FM_Type = "Objetos de Exterior" then iFMType = 19
		if FM_Type = "Ordenadores" then iFMType = 20
		if FM_Type = "Monitores" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Teléfonos" then iFMType = 23
		if FM_Type = "Contenedores" then iFMType = 24
		if FM_Type = "Otros" then iFMType = 25

	!SWE
		if FM_Type = "Standardelement" then iFMType = 1
		if FM_Type = "Standardarmatur" then iFMType = 2
		if FM_Type = "Människor" then iFMType = 3
		if FM_Type = "Hissar" then iFMType = 4
		if FM_Type = "Säkerhet & Utrymning" then iFMType = 5
		if FM_Type = "Trappor" then iFMType = 6
		if FM_Type = "Arbetsutrymmen" then iFMType = 7
		if FM_Type = "Elektrisk Utrustning" then iFMType = 8
		if FM_Type = "Distributionspaneler" then iFMType = 9
		if FM_Type = "Måttenhetsuppgifter" then iFMType = 10
		if FM_Type = "Armatur" then iFMType = 11
		if FM_Type = "VVS-utrustning" then iFMType = 12
		if FM_Type = "Sanitärt" then iFMType = 13
		if FM_Type = "Lås" then iFMType = 14
		if FM_Type = "Inbyggda Utrymmen" then iFMType = 15
		if FM_Type = "Möbler" then iFMType = 16
		if FM_Type = "Innertak" then iFMType = 17
		if FM_Type = "Golv" then iFMType = 18
		if FM_Type = "Element för Utomhusbruk" then iFMType = 19
		if FM_Type = "Datorer" then iFMType = 20
		if FM_Type = "Bildskärmar" then iFMType = 21
		if FM_Type = "Mjukvaror" then iFMType = 22
		if FM_Type = "Telefoner" then iFMType = 23
		if FM_Type = "Behållare" then iFMType = 24
		if FM_Type = "Annat" then iFMType = 25

	!TAI
		if FM_Type = "默認對象" then iFMType = 1
		if FM_Type = "默認燈" then iFMType = 2
		if FM_Type = "人" then iFMType = 3
		if FM_Type = "電梯" then iFMType = 4
		if FM_Type = "保安與逃生" then iFMType = 5
		if FM_Type = "樓梯" then iFMType = 6
		if FM_Type = "工作空間" then iFMType = 7
		if FM_Type = "電氣設備" then iFMType = 8
		if FM_Type = "分佈面板" then iFMType = 9
		if FM_Type = "測量地點" then iFMType = 10
		if FM_Type = "燈" then iFMType = 11
		if FM_Type = "HVAC設備" then iFMType = 12
		if FM_Type = "衛生設施" then iFMType = 13
		if FM_Type = "鎖" then iFMType = 14
		if FM_Type = "內置衣櫥" then iFMType = 15
		if FM_Type = "傢具" then iFMType = 16
		if FM_Type = "天花板" then iFMType = 17
		if FM_Type = "地板" then iFMType = 18
		if FM_Type = "室外對象" then iFMType = 19
		if FM_Type = "計算機" then iFMType = 20
		if FM_Type = "監視器" then iFMType = 21
		if FM_Type = "軟件" then iFMType = 22
		if FM_Type = "電話" then iFMType = 23
		if FM_Type = "容器" then iFMType = 24
		if FM_Type = "其它" then iFMType = 25

	!TUR
		if FM_Type = "Geçerli Objeler" then iFMType = 1
		if FM_Type = "Geçerli Aydınlatma Elemanları" then iFMType = 2
		if FM_Type = "İnsanlar" then iFMType = 3
		if FM_Type = "Asansörler" then iFMType = 4
		if FM_Type = "Güvenlik ve Çıkışlar" then iFMType = 5
		if FM_Type = "Merdivenler" then iFMType = 6
		if FM_Type = "Çalışma Alanları" then iFMType = 7
		if FM_Type = "Elektrik Hizmetleri" then iFMType = 8
		if FM_Type = "Dağıtım Levhalleri" then iFMType = 9
		if FM_Type = "Dağıtım Panelleri" then iFMType = 9
		if FM_Type = "Mekan Ölçme" then iFMType = 10
		if FM_Type = "Aydınlatma Elemanları" then iFMType = 11
		if FM_Type = "HVAC Ekipmanı" then iFMType = 12
		if FM_Type = "Banyo-Wc" then iFMType = 13
		if FM_Type = "Kilitler" then iFMType = 14
		if FM_Type = "Ankastre Dolaplar" then iFMType = 15
		if FM_Type = "Mobilya" then iFMType = 16
		if FM_Type = "Tavanlar" then iFMType = 17
		if FM_Type = "Zeminler" then iFMType = 18
		if FM_Type = "Dış Mekan Objeleri" then iFMType = 19
		if FM_Type = "Bilgisayarlar" then iFMType = 20
		if FM_Type = "Monitörler" then iFMType = 21
		if FM_Type = "Yazılım" then iFMType = 22
		if FM_Type = "Telefonlar" then iFMType = 23
		if FM_Type = "Konteynerler" then iFMType = 24
		if FM_Type = "Diğerleri" then iFMType = 25
		if FM_Type = "Diğer" then iFMType = 25

		parameters iFMType = iFMType

		actualGuid = _endID
	endif
return


]]></Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

targetGUID = TO_GUID

! ==============================================================================
! Subroutines
! ==============================================================================

gosub "fmtypes_bwm"

! ==============================================================================
! Set Migration GUID
! ==============================================================================

setmigrationguid targetGUID

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================

! ==============================================================================
! Change string parameter to integer
! ==============================================================================
"fmtypes_bwm":
	if targetGUID # "" then
		if iFMType = 1 then FM_Type = `Default Objects`
		if iFMType = 2 then FM_Type = `Default Lamps`
		if iFMType = 3 then FM_Type = `People`
		if iFMType = 4 then FM_Type = `Elevators`
		if iFMType = 5 then FM_Type = `Security and Escapes`
		if iFMType = 6 then FM_Type = `Stairs`
		if iFMType = 7 then FM_Type = `Work Spaces`
		if iFMType = 8 then FM_Type = `Electric Facilities`
		if iFMType = 9 then FM_Type = `Distribution Panels`
		if iFMType = 10 then FM_Type = `Measuring Places`
		if iFMType = 11 then FM_Type = `Lamps`
		if iFMType = 12 then FM_Type = `HVAC Equipment`
		if iFMType = 13 then FM_Type = `Sanitation`
		if iFMType = 14 then FM_Type = `Locks`
		if iFMType = 15 then FM_Type = `Built-in Wardrobes`
		if iFMType = 16 then FM_Type = `Furniture`
		if iFMType = 17 then FM_Type = `Ceilings`
		if iFMType = 18 then FM_Type = `Floors`
		if iFMType = 19 then FM_Type = `Outdoor Objects`
		if iFMType = 20 then FM_Type = `Computers`
		if iFMType = 21 then FM_Type = `Monitors`
		if iFMType = 22 then FM_Type = `Software`
		if iFMType = 23 then FM_Type = `Phones`
		if iFMType = 24 then FM_Type = `Containers`
		if iFMType = 25 then FM_Type = `Others`
		parameters FM_Type = FM_Type

	endif
return


]]></Script_BWM>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>F02ED6F9-B87A-49AF-B9E9-747FEDD29658</MainGUID>
		<Version>17</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>no</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0"><Author>BIMobject</Author><License><Type>CC BY-ND</Type><Version>3.0</Version></License></Copyright><ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>22</Version>
		<AutoHotspots>no</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Width"]]></Description>
			<Value>0.9</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Depth"]]></Description>
			<Value>0.5</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Value>2.1</Value>
		</Length>
		<String Name="cabinetForm">
			<Description><![CDATA["Cabinet Shape"]]></Description>
			<Value><![CDATA["Square"]]></Value>
		</String>
		<Integer Name="iCabinetForm">
			<Description><![CDATA["Cabinet Shape"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iTempForm">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="sideDepth1">
			<Description><![CDATA["Side Depth 1"]]></Description>
			<Value>0.5</Value>
		</Length>
		<Length Name="sideDepth2">
			<Description><![CDATA["Side Depth 2"]]></Description>
			<Value>0.5</Value>
		</Length>
		<Length Name="divisionHeight">
			<Description><![CDATA["Horizontal Division Height"]]></Description>
			<Value>0.6</Value>
		</Length>

		<!-- functionAbove: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="functionAbove">
			<Description><![CDATA["Functions Above"]]></Description>
		</Title>
		<String Name="frontAbove">
			<Description><![CDATA["Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Door"]]></Value>
		</String>
		<Integer Name="iFrontAbove">
			<Description><![CDATA["Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<String Name="gs_functions">
			<Description><![CDATA["Interior Fitting"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Hanger"]]></Value>
		</String>
		<Integer Name="iFunctions">
			<Description><![CDATA["Interior Fitting"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="nShelves">
			<Description><![CDATA["No. of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="nHangers">
			<Description><![CDATA["No. of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- functionUnder: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="functionUnder">
			<Description><![CDATA["Functions Under"]]></Description>
		</Title>
		<String Name="frontUnder">
			<Description><![CDATA["Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Drawer"]]></Value>
		</String>
		<Integer Name="iFrontUnder">
			<Description><![CDATA["Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="interiorUnder">
			<Description><![CDATA["Interior Fitting"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["None"]]></Value>
		</String>
		<Integer Name="iInteriorUnder">
			<Description><![CDATA["Interior Fitting"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nShelvesUnder">
			<Description><![CDATA["No. of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="nHangersUnder">
			<Description><![CDATA["No. of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_door: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door">
			<Description><![CDATA["Door"]]></Description>
		</Title>
		<String Name="doorStyle">
			<Description><![CDATA["Door Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Style 8"]]></Value>
		</String>
		<Integer Name="iDoorStyle">
			<Description><![CDATA["Door Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Integer>
		<Integer Name="iTempDoorStyle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Integer>
		<Boolean Name="bBevel">
			<Description><![CDATA["Edge Bevel"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="nDoor">
			<Description><![CDATA["No. of Doors"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<String Name="doorCustomPanelName">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="doorThickness">
			<Description><![CDATA["Door Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="doorFrameWidth">
			<Description><![CDATA["Door Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="mullionWidth">
			<Description><![CDATA["Mullion Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Integer Name="nVerticalMullion">
			<Description><![CDATA["No. of Vert. Door Mullions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHorizontalMullion">
			<Description><![CDATA["No. of Hor. Door Mullions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Angle Name="doorAngle3D">
			<Description><![CDATA["Door Opening Angle 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<RealNum Name="openingDoor">
			<Description><![CDATA["Door Position %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
			</ArrayValues>
		</RealNum>
		<Length Name="openingDoorLength">
			<Description><![CDATA["Door Position %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
			</ArrayValues>
		</Length>

		<!-- drawer: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="drawer">
			<Description><![CDATA["Drawer"]]></Description>
		</Title>
		<Integer Name="nDrawerVert">
			<Description><![CDATA["No. of Drawers Vert."]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="nDrawerHor">
			<Description><![CDATA["No. of Drawers Hor."]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<String Name="drawerStyle">
			<Description><![CDATA["Drawer Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="iDrawerStyle">
			<Description><![CDATA["Drawer Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="drawerFrameWidth">
			<Description><![CDATA["Drawer Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>

		<!-- gs_knob_type: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_knob_type">
			<Description><![CDATA["Knob Style"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="gs_knob_type_m">
			<Description><![CDATA["Knob Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="knob_pl_x">
			<Description><![CDATA["Horizontal Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="knob_pl_y">
			<Description><![CDATA["Vertical Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.45</Value>
		</Length>
		<String Name="gs_knob_p">
			<Description><![CDATA["Placing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Horizontal"]]></Value>
		</String>
		<Integer Name="gs_knob_p_m">
			<Description><![CDATA["Placing"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="knob_size">
			<Description><![CDATA["Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="xDrawerKnobPos">
			<Description><![CDATA["Drawer Knob Position Hor."]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="zDrawerKnobPos">
			<Description><![CDATA["Drawer Knob Position Vert."]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="nKnobDrawers">
			<Description><![CDATA["No. of Knobs by Drawer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>

		<!-- gs_cornice_type: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_cornice_type">
			<Description><![CDATA["Cornice"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="gs_cornice_type_m">
			<Description><![CDATA["Cornice"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_lining">
			<Description><![CDATA["Side Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Front"]]></Value>
		</String>
		<Integer Name="gs_lining_m">
			<Description><![CDATA["Side Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Length Name="cot">
			<Description><![CDATA["Cornice Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="cooh">
			<Description><![CDATA["Cornice Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>

		<!-- gs_leg_type: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_leg_type">
			<Description><![CDATA["Leg"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="gs_leg_type_m">
			<Description><![CDATA["Leg"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="leg_h">
			<Description><![CDATA["Leg Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="leg_w">
			<Description><![CDATA["Leg Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D Representation"]]></Description>
		</Title>
		<String Name="symbolType">
			<Description><![CDATA["2D Symbol Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="iSymbolType">
			<Description><![CDATA["2D Symbol Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Angle Name="openingAngle2D">
			<Description><![CDATA["Opening Angle in 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Angle>
		<Boolean Name="bHangers">
			<Description><![CDATA["Show Hanger in 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_min_space: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_min_space">
			<Description><![CDATA["Minimal Space"]]></Description>
		</Title>
		<Length Name="MSFront">
			<Description><![CDATA["Minimal Space in Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Detailed"]]></Value>
		</String>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_resol">
			<Description><![CDATA["Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Showing 2D Hotspots in 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Material Name="gs_cabinet_mat">
			<Description><![CDATA["Cabinet"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matDoorFrame">
			<Description><![CDATA["Door Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>13</Value>
		</Material>
		<Material Name="matDoorGlass">
			<Description><![CDATA["Door (Glazing)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Material>
		<Material Name="matDoorMirror">
			<Description><![CDATA["Door (Mirror)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</Material>
		<Material Name="matDoorDecor1">
			<Description><![CDATA["Door 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matDoorDecor2">
			<Description><![CDATA["Door 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</Material>
		<Material Name="gs_knob_mat">
			<Description><![CDATA["Knob"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_shelf_mat">
			<Description><![CDATA["Shelf"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_hanger_mat">
			<Description><![CDATA["Hanger"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_drawer_mat">
			<Description><![CDATA["Drawer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_cornice_mat">
			<Description><![CDATA["Cornice"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_leg_mat">
			<Description><![CDATA["Leg"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["INT"]]></Value>
		</String>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Furniture"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>16</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["kg"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["User Defined 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["User Defined 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["User Defined 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["User Defined 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["User Defined 5"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>

		<!-- gs_onorm_Title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_onorm_Title">
			<Description><![CDATA["ONORM Listing Parameters"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<String Name="gs_onorm_dimensions">
			<Description><![CDATA["Width/Depth/Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_manufacturer">
			<Description><![CDATA["ONORM Manufacturer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_baseheight_value">
			<Description><![CDATA["Base Height Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_baseheight">
			<Description><![CDATA["Onorm Base Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_assemblydate">
			<Description><![CDATA["Assembly Date"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext1">
			<Description><![CDATA["Additional Information 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext2">
			<Description><![CDATA["Additional Information 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_aks">
			<Description><![CDATA["AKS Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_product">
			<Description><![CDATA["Product Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_leistungbuch">
			<Description><![CDATA["Collection of Specifications ID"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_description">
			<Description><![CDATA["ONORM Description"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_number">
			<Description><![CDATA["Onorm Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_id">
			<Description><![CDATA["ID Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_admission">
			<Description><![CDATA["Admission Date"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_modification">
			<Description><![CDATA["Modification Date"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_tozonenumber">
			<Description><![CDATA["To Zone Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>
</Symbol>

<Symbol IsArchivable="no" IsPlaceable="yes" MainGUID="FACCEA07-B02A-4310-B0D9-50D7A9B12C02" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="34">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="no">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>C76BC373-89AE-4368-A490-BB2485825242</MainGUID>
	<MainGUID>3FCE1BC2-9644-44D4-9D5F-4DBF6C762CA4</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["Resize_A_B_ZZYZX"]]></MName>
		<MainGUID>33A17ABE-882E-11D6-95A3-00039318F8B6</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["LibraryGlobals13"]]></MName>
		<MainGUID>063CD85B-5902-43F6-840A-66E88F707D13</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_minimalspace"]]></MName>
		<MainGUID>DFA90ED8-737C-49BB-AE78-036B478908DF</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Resize_A_B_ZZYZX"]]></MName>
		<MainGUID>33A17ABE-882E-11D6-95A3-00039318F8B6</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_cornicetyp"]]></MName>
		<MainGUID>65AACBD6-5F33-43D6-A221-F7803082C990</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_cabinet_legtyp"]]></MName>
		<MainGUID>D8AC092B-0B7F-4FF8-BCD5-30B306AC7D04</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_warddoortyp"]]></MName>
		<MainGUID>525D1544-74FD-4C01-8E9A-8D252A936981</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabcontrol"]]></MName>
		<MainGUID>D512885C-336A-4161-B8CB-EE5DC5D09FFE</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>30C7F5D1-460B-49BD-AC57-9CE6D6A61C1D</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabcontrol"]]></MName>
		<MainGUID>D512885C-336A-4161-B8CB-EE5DC5D09FFE</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Object_Panel_Collection"]]></MName>
		<MainGUID>F307F0DB-0093-4E48-8BAF-50E618AEDF30</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[


if not(gs_shadow) then shadow off
if gs_detlevel_3D_m = 2 then	! Detailed
	resol gs_resol
else
	if gs_detlevel_3D_m = 1 then ! Simple
		resol 3
		gs_resol = 6
	else
		END	! Off
	endif
endif

pen gs_cont_pen


!-----Definitions-----
unID = 1
thickness = 0.02
emptyDoorBack = 0.01
plateThicknes = 0.002
hangerWidth = 0.025
hangerOversize = 0.032
wireDiameter = 0.003/2
minWireAlpha = 85
wireMeshDivision = 0.04
wireHandle = 0.1
if iFrameType = FRAME_WIRE then gs_cabinet_mat = matSteelCabinet

if gs_knob_type_m=0 then knob_d=0
if gs_knob_type_m=1 then knob_d=0.025
if gs_knob_type_m=2 then knob_d=0.025
if gs_knob_type_m=3 then knob_d=0.03
if gs_knob_type_m=4 then knob_d=0.024
if gs_knob_type_m=5 then knob_d=0.025
if gs_knob_type_m=6 then knob_d=0.025
if gs_knob_type_m=7 then knob_d=0.03
if gs_knob_type_m=8 then knob_d=0.03

	! ======================================================================
	! Wire Basket Texture
	! ======================================================================

	DIM	tmp_C4D_ChCol_Color[3]
		tmp_C4D_ChCol_Color[1] = 0.642266824085
		tmp_C4D_ChCol_Color[2] = 0.6509023444088
		tmp_C4D_ChCol_Color[3] = 0.6530612244898
	DIM	tmp_C4D_GKRGB_Color_4[3]
		tmp_C4D_GKRGB_Color_4[1] =            1
		tmp_C4D_GKRGB_Color_4[2] =            1
		tmp_C4D_GKRGB_Color_4[3] =            1
	DIM	tmp_C4D_GKRGB_Color_5[3]
		tmp_C4D_GKRGB_Color_5[1] = 0.765306122449
		tmp_C4D_GKRGB_Color_5[2] = 0.765306122449
		tmp_C4D_GKRGB_Color_5[3] = 0.765306122449
	DIM	tmp_C4D_ShNoise_Color1_6[3]
		tmp_C4D_ShNoise_Color1_6[1] = 0.6428571428571
		tmp_C4D_ShNoise_Color1_6[2] = 0.6428571428571
		tmp_C4D_ShNoise_Color1_6[3] = 0.6428571428571
	DIM	tmp_C4D_ShNoise_Color2_6[3]
		tmp_C4D_ShNoise_Color2_6[1] =            1
		tmp_C4D_ShNoise_Color2_6[2] =            1
		tmp_C4D_ShNoise_Color2_6[3] =            1
	DIM	tmp_C4D_ShNoise_RelativeScale_6[3]
		tmp_C4D_ShNoise_RelativeScale_6[1] =            1
		tmp_C4D_ShNoise_RelativeScale_6[2] =            1
		tmp_C4D_ShNoise_RelativeScale_6[3] =            1
	DIM	tmp_C4D_ChLum_Color[3]
		tmp_C4D_ChLum_Color[1] =            1
		tmp_C4D_ChLum_Color[2] =            1
		tmp_C4D_ChLum_Color[3] =            1
	DIM	tmp_C4D_ChTra_Color[3]
		tmp_C4D_ChTra_Color[1] =            1
		tmp_C4D_ChTra_Color[2] =            1
		tmp_C4D_ChTra_Color[3] =            1
	DIM	tmp_C4D_ChTra_AbsorptionColor[3]
		tmp_C4D_ChTra_AbsorptionColor[1] =            1
		tmp_C4D_ChTra_AbsorptionColor[2] =            1
		tmp_C4D_ChTra_AbsorptionColor[3] =            1
	DIM	tmp_C4D_ChRef_Color[3]
		tmp_C4D_ChRef_Color[1] =            1
		tmp_C4D_ChRef_Color[2] =            1
		tmp_C4D_ChRef_Color[3] =            1
	DIM	tmp_C4D_GKRGB_Color_9[3]
		tmp_C4D_GKRGB_Color_9[1] =            1
		tmp_C4D_GKRGB_Color_9[2] =            1
		tmp_C4D_GKRGB_Color_9[3] =            1
	DIM	tmp_C4D_GKRGB_Color_10[3]
		tmp_C4D_GKRGB_Color_10[1] =            0
		tmp_C4D_GKRGB_Color_10[2] =            0
		tmp_C4D_GKRGB_Color_10[3] =            0
	DIM	tmp_C4D_ChEnv_Color[3]
		tmp_C4D_ChEnv_Color[1] =            1
		tmp_C4D_ChEnv_Color[2] =            1
		tmp_C4D_ChEnv_Color[3] =            1
	DIM	tmp_C4D_ChFog_Color[3]
		tmp_C4D_ChFog_Color[1] =            1
		tmp_C4D_ChFog_Color[2] =            1
		tmp_C4D_ChFog_Color[3] =            1
	DIM	tmp_C4D_ShNoise_Color1_12[3]
		tmp_C4D_ShNoise_Color1_12[1] =         0.98
		tmp_C4D_ShNoise_Color1_12[2] =         0.98
		tmp_C4D_ShNoise_Color1_12[3] =         0.98
	DIM	tmp_C4D_ShNoise_Color2_12[3]
		tmp_C4D_ShNoise_Color2_12[1] =            1
		tmp_C4D_ShNoise_Color2_12[2] =            1
		tmp_C4D_ShNoise_Color2_12[3] =            1
	DIM	tmp_C4D_ShNoise_RelativeScale_12[3]
		tmp_C4D_ShNoise_RelativeScale_12[1] =            1
		tmp_C4D_ShNoise_RelativeScale_12[2] =            1
		tmp_C4D_ShNoise_RelativeScale_12[3] =            1
	DIM	tmp_C4D_ShNoise_Color1_13[3]
		tmp_C4D_ShNoise_Color1_13[1] =            0
		tmp_C4D_ShNoise_Color1_13[2] =            0
		tmp_C4D_ShNoise_Color1_13[3] =            0
	DIM	tmp_C4D_ShNoise_Color2_13[3]
		tmp_C4D_ShNoise_Color2_13[1] =            1
		tmp_C4D_ShNoise_Color2_13[2] =            1
		tmp_C4D_ShNoise_Color2_13[3] =            1
	DIM	tmp_C4D_ShNoise_RelativeScale_13[3]
		tmp_C4D_ShNoise_RelativeScale_13[1] =            1
		tmp_C4D_ShNoise_RelativeScale_13[2] =            1
		tmp_C4D_ShNoise_RelativeScale_13[3] =            1
	DIM	tmp_C4D_ChAlp_Color[3]
		tmp_C4D_ChAlp_Color[1] =            1
		tmp_C4D_ChAlp_Color[2] =            1
		tmp_C4D_ChAlp_Color[3] =            1
	DIM	tmp_C4D_ChAlp_Delta[3]
		tmp_C4D_ChAlp_Delta[1] = 0.1000000014901
		tmp_C4D_ChAlp_Delta[2] = 0.1000000014901
		tmp_C4D_ChAlp_Delta[3] = 0.1000000014901
	DIM	tmp_C4D_ChSpe_Color[3]
		tmp_C4D_ChSpe_Color[1] =            1
		tmp_C4D_ChSpe_Color[2] =            1
		tmp_C4D_ChSpe_Color[3] =            1
	DIM	tmp_C4D_ChGlo_Color[3]
		tmp_C4D_ChGlo_Color[1] =            1
		tmp_C4D_ChGlo_Color[2] =            1
		tmp_C4D_ChGlo_Color[3] =            1
	DIM	tmp_C4D_GKRGB_Color_15[3]
		tmp_C4D_GKRGB_Color_15[1] =            0
		tmp_C4D_GKRGB_Color_15[2] =            0
		tmp_C4D_GKRGB_Color_15[3] =            0
	DIM	tmp_C4D_GKRGB_Color_16[3]
		tmp_C4D_GKRGB_Color_16[1] =            1
		tmp_C4D_GKRGB_Color_16[2] =            1
		tmp_C4D_GKRGB_Color_16[3] =            1
	define material	"builtInMatWireBasket" 0,
	  0.642252,   0.650889,   0.653056,
	 0.65,  0.65,   0.9,     0,     11,     0,
	         1,          1,          1,
	         0,          0,          0,     0,
	ADDITIONAL_DATA		C4D_VER_MAIN= 1,
	C4D_VER_SUB =            0,
	C4D_ChCol_State =            1,
	C4D_ChCol_Color = tmp_C4D_ChCol_Color,
	C4D_ChCol_Brightness =          0.5,
	C4D_ChCol_Texture = "1",
	C4D_ShLayer_BlendMode_1 = "Normal",
	C4D_ShLayer_BlendStre_1 =            1,
	C4D_ShLayer_BlurOffset_1 =            0,
	C4D_ShLayer_BlurScale_1 =            0,
	C4D_ShLayer_Shaders_1 = "2,6",
	C4D_ShFresnel_BlendMode_2 = "Multiply",
	C4D_ShFresnel_BlendStre_2 =            1,
	C4D_ShFresnel_BlurOffset_2 =            0,
	C4D_ShFresnel_BlurScale_2 =            0,
	C4D_ShFresnel_UseBump_2 =            1,
	C4D_ShFresnel_Render_2 = "FrontAndBack",
	C4D_ShFresnel_Gradient_2 = "3",
	C4D_GradientRGB_Interpol_3 = "SmoothKnot",
	C4D_GradientRGB_Knots_3 = "4,5",
	C4D_GKRGB_Color_4 = tmp_C4D_GKRGB_Color_4,
	C4D_GKRGB_Intensity_4 =            1,
	C4D_GKRGB_Position_4 =            1,
	C4D_GKRGB_Bias_4 =          0.5,
	C4D_GKRGB_Color_5 = tmp_C4D_GKRGB_Color_5,
	C4D_GKRGB_Intensity_5 =            1,
	C4D_GKRGB_Position_5 =       0.0022,
	C4D_GKRGB_Bias_5 =          0.5,
	C4D_ShFresnel_Physical_2 =            0,
	C4D_ShFresnel_IOR_2 =      1.33283,
	C4D_ShFresnel_Preset_2 = "Water",
	C4D_ShFresnel_Invert_2 =            0,
	C4D_ShNoise_BlendMode_6 = "Normal",
	C4D_ShNoise_BlendStre_6 =            1,
	C4D_ShNoise_BlurOffset_6 =            0,
	C4D_ShNoise_BlurScale_6 =            0,
	C4D_ShNoise_Color1_6 = tmp_C4D_ShNoise_Color1_6,
	C4D_ShNoise_Color2_6 = tmp_C4D_ShNoise_Color2_6,
	C4D_ShNoise_Seed_6 =          610,
	C4D_ShNoise_Noise_6 = "Turbulence",
	C4D_ShNoise_Octaves_6 =            5,
	C4D_ShNoise_Space_6 = "Texture",
	C4D_ShNoise_GlobalScale_6 = 0.002000000094995,
	C4D_ShNoise_RelativeScale_6 = tmp_C4D_ShNoise_RelativeScale_6,
	C4D_ShNoise_Absolute_6 =            0,
	C4D_ShNoise_Cycles_6 =            0,
	C4D_ShNoise_LowClip_6 =            0,
	C4D_ShNoise_HighClip_6 =            1,
	C4D_ShNoise_Brightness_6 =            0,
	C4D_ShNoise_Contrast_6 =            0,
	C4D_ChCol_MixMode = "Multiply",
	C4D_ChCol_MixStrength =            1,
	C4D_ChDif_State =            0,
	C4D_ChDif_Brightness =            1,
	C4D_ChDif_Luminance =            0,
	C4D_ChDif_Specular =            1,
	C4D_ChDif_Reflection =            0,
	C4D_ChDif_MixMode = "Normal",
	C4D_ChDif_MixStrength =            1,
	C4D_ChLum_State =            0,
	C4D_ChLum_Color = tmp_C4D_ChLum_Color,
	C4D_ChLum_Brightness =            1,
	C4D_ChLum_MixMode = "Normal",
	C4D_ChLum_MixStrength =            1,
	C4D_ChTra_State =            0,
	C4D_ChTra_Color = tmp_C4D_ChTra_Color,
	C4D_ChTra_Brightness =            1,
	C4D_ChTra_Refraction =            1,
	C4D_ChTra_InternalReflections =            0,
	C4D_ChTra_ExitReflection =            1,
	C4D_ChTra_FresnelReflectivity =            1,
	C4D_ChTra_Additive =            0,
	C4D_ChTra_MixMode = "Normal",
	C4D_ChTra_MixStrength =            1,
	C4D_ChTra_AbsorptionColor = tmp_C4D_ChTra_AbsorptionColor,
	C4D_ChTra_AbsorptionDistance =          100,
	C4D_ChTra_Blurriness =            0,
	C4D_ChTra_MinSamples =            5,
	C4D_ChTra_MaxSamples =          128,
	C4D_ChTra_Accuracy =          0.5,
	C4D_ChRef_State =            1,
	C4D_ChRef_Color = tmp_C4D_ChRef_Color,
	C4D_ChRef_Brightness =            1,
	C4D_ChRef_Additive =            1,
	C4D_ChRef_Texture = "7",
	C4D_ShFresnel_BlendMode_7 = "Normal",
	C4D_ShFresnel_BlendStre_7 =            1,
	C4D_ShFresnel_BlurOffset_7 =            0,
	C4D_ShFresnel_BlurScale_7 =            0,
	C4D_ShFresnel_UseBump_7 =            1,
	C4D_ShFresnel_Render_7 = "FrontAndBack",
	C4D_ShFresnel_Gradient_7 = "8",
	C4D_GradientRGB_Interpol_8 = "SmoothKnot",
	C4D_GradientRGB_Knots_8 = "9,10",
	C4D_GKRGB_Color_9 = tmp_C4D_GKRGB_Color_9,
	C4D_GKRGB_Intensity_9 =            1,
	C4D_GKRGB_Position_9 =            0,
	C4D_GKRGB_Bias_9 =          0.5,
	C4D_GKRGB_Color_10 = tmp_C4D_GKRGB_Color_10,
	C4D_GKRGB_Intensity_10 =            1,
	C4D_GKRGB_Position_10 =            1,
	C4D_GKRGB_Bias_10 =          0.5,
	C4D_ShFresnel_Physical_7 =            1,
	C4D_ShFresnel_IOR_7 =          2.5,
	C4D_ShFresnel_Preset_7 = "Custom",
	C4D_ShFresnel_Invert_7 =            0,
	C4D_ChRef_MixMode = "Multiply",
	C4D_ChRef_MixStrength =            1,
	C4D_ChRef_Blurriness =          0.2,
	C4D_ChRef_MinSamples =            5,
	C4D_ChRef_MaxSamples =          128,
	C4D_ChRef_Accuracy =          0.5,
	C4D_ChEnv_State =            0,
	C4D_ChEnv_Color = tmp_C4D_ChEnv_Color,
	C4D_ChEnv_Brightness =            1,
	C4D_ChEnv_MixMode = "Multiply",
	C4D_ChEnv_MixStrength =            1,
	C4D_ChEnv_TilesX =            1,
	C4D_ChEnv_TilesY =            1,
	C4D_ChEnv_Exclusive =            1,
	C4D_ChFog_State =            0,
	C4D_ChFog_Color = tmp_C4D_ChFog_Color,
	C4D_ChFog_Brightness =            1,
	C4D_ChFog_Distance =           10,
	C4D_ChBum_State =            1,
	C4D_ChBum_Strength =         0.02,
	C4D_ChBum_MipFalloff =            1,
	C4D_ChBum_Texture = "11",
	C4D_ShLayer_BlendMode_11 = "Normal",
	C4D_ShLayer_BlendStre_11 =            1,
	C4D_ShLayer_BlurOffset_11 =            0,
	C4D_ShLayer_BlurScale_11 =            0,
	C4D_ShLayer_Shaders_11 = "12,13",
	C4D_ShNoise_BlendMode_12 = "Multiply",
	C4D_ShNoise_BlendStre_12 =            1,
	C4D_ShNoise_BlurOffset_12 =            0,
	C4D_ShNoise_BlurScale_12 =            0,
	C4D_ShNoise_Color1_12 = tmp_C4D_ShNoise_Color1_12,
	C4D_ShNoise_Color2_12 = tmp_C4D_ShNoise_Color2_12,
	C4D_ShNoise_Seed_12 =          665,
	C4D_ShNoise_Noise_12 = "Noise",
	C4D_ShNoise_Octaves_12 =            5,
	C4D_ShNoise_Space_12 = "UV",
	C4D_ShNoise_GlobalScale_12 =         0.01,
	C4D_ShNoise_RelativeScale_12 = tmp_C4D_ShNoise_RelativeScale_12,
	C4D_ShNoise_Absolute_12 =            0,
	C4D_ShNoise_Cycles_12 =            0,
	C4D_ShNoise_LowClip_12 =            0,
	C4D_ShNoise_HighClip_12 =            1,
	C4D_ShNoise_Brightness_12 =            0,
	C4D_ShNoise_Contrast_12 =            0,
	C4D_ShNoise_BlendMode_13 = "Normal",
	C4D_ShNoise_BlendStre_13 =            1,
	C4D_ShNoise_BlurOffset_13 =            0,
	C4D_ShNoise_BlurScale_13 =            0,
	C4D_ShNoise_Color1_13 = tmp_C4D_ShNoise_Color1_13,
	C4D_ShNoise_Color2_13 = tmp_C4D_ShNoise_Color2_13,
	C4D_ShNoise_Seed_13 =          665,
	C4D_ShNoise_Noise_13 = "Turbulence",
	C4D_ShNoise_Octaves_13 =            5,
	C4D_ShNoise_Space_13 = "UV",
	C4D_ShNoise_GlobalScale_13 =            8,
	C4D_ShNoise_RelativeScale_13 = tmp_C4D_ShNoise_RelativeScale_13,
	C4D_ShNoise_Absolute_13 =            0,
	C4D_ShNoise_Cycles_13 =            0,
	C4D_ShNoise_LowClip_13 =            0,
	C4D_ShNoise_HighClip_13 =            1,
	C4D_ShNoise_Brightness_13 =            0,
	C4D_ShNoise_Contrast_13 = 0.3199999332428,
	C4D_ChNor_State =            0,
	C4D_ChNor_Strength =            1,
	C4D_ChNor_Method = "Tangent",
	C4D_ChNor_FlipX =            0,
	C4D_ChNor_FlipY =            0,
	C4D_ChNor_FlipZ =            0,
	C4D_ChNor_SwapYZ =            0,
	C4D_ChAlp_State =            0,
	C4D_ChAlp_Color = tmp_C4D_ChAlp_Color,
	C4D_ChAlp_Delta = tmp_C4D_ChAlp_Delta,
	C4D_ChAlp_Invert =            0,
	C4D_ChAlp_Soft =            1,
	C4D_ChAlp_ImageAlpha =            1,
	C4D_ChAlp_PreMultiplied =            0,
	C4D_ChSpe_State =            1,
	C4D_ChSpe_Color = tmp_C4D_ChSpe_Color,
	C4D_ChSpe_Brightness =            1,
	C4D_ChSpe_MixMode = "Normal",
	C4D_ChSpe_MixStrength =            1,
	C4D_ChSpe_Mode = "Colored",
	C4D_ChSpe_Width =          0.7,
	C4D_ChSpe_Height =            2,
	C4D_ChSpe_Falloff =            0,
	C4D_ChSpe_InnerWidth =            0,
	C4D_ChGlo_State =            0,
	C4D_ChGlo_Color = tmp_C4D_ChGlo_Color,
	C4D_ChGlo_Brightness =            1,
	C4D_ChGlo_InnerStrength =            1,
	C4D_ChGlo_OuterStrength =            5,
	C4D_ChGlo_Radius =           10,
	C4D_ChGlo_Random =            0,
	C4D_ChGlo_Frequency =            1,
	C4D_ChGlo_UseMatColor =            1,
	C4D_ChDis_State =            0,
	C4D_ChDis_Strength =            1,
	C4D_ChDis_Height =            5,
	C4D_ChDis_Type = "IntensityCentered",
	C4D_ChDis_SubDivision =            0,
	C4D_ChDis_Level =            4,
	C4D_ChDis_RoundGeometry =            0,
	C4D_ChDis_RoundContour =            1,
	C4D_ChDis_MapRounded =            1,
	C4D_ChDis_MapResult =            0,
	C4D_ChDis_KeepEdges =            1,
	C4D_ChDis_BestDistribution =            1,
	C4D_ChGra_State =            0,
	C4D_ChGra_Color = "14",
	C4D_GradientRGB_Interpol_14 = "SmoothKnot",
	C4D_GradientRGB_Knots_14 = "15,16",
	C4D_GKRGB_Color_15 = tmp_C4D_GKRGB_Color_15,
	C4D_GKRGB_Intensity_15 =            1,
	C4D_GKRGB_Position_15 =            0,
	C4D_GKRGB_Bias_15 =          0.5,
	C4D_GKRGB_Color_16 = tmp_C4D_GKRGB_Color_16,
	C4D_GKRGB_Intensity_16 =            1,
	C4D_GKRGB_Position_16 =            1,
	C4D_GKRGB_Bias_16 =          0.5,
	C4D_ChGra_MixStrength =          0.5,
	C4D_ChGra_Density =            1,
	C4D_ChGra_Length =          0.1,
	C4D_ChGra_Width =        0.005,
	C4D_ChGra_Crinkle =          0.1,
	C4D_ChGra_Bend =          0.6,
	C4D_ChGra_Wetness =         0.05,
	C4D_ChIll_GenerateGI =            1,
	C4D_ChIll_GenGIStrength =            1,
	C4D_ChIll_GenGISaturat =            1,
	C4D_ChIll_ReceiveGI =            1,
	C4D_ChIll_RecGIStrength =            1,
	C4D_ChIll_RecGISaturat =            1,
	C4D_ChIll_GIPortal =            0,
	C4D_ChIll_GILight =            0,
	C4D_ChIll_GenerateCaustics =            1,
	C4D_ChIll_GenCausticsStrength =            1,
	C4D_ChIll_ReceiveCaustics =            1,
	C4D_ChIll_RecCausticsStrength =            1,
	C4D_ChIll_Radius =          0.1,
	C4D_ChIll_CausticsSamples =          100,
	C4D_ChIll_Model = "Blinn",
	C4D_ChIll_DiffuseFalloff =            0,
	C4D_ChIll_DiffuseLevel =            1,
	C4D_ChIll_Roughness =          0.5


! ==============================================================================
! Hotspots
! ==============================================================================
call "Resize_A_B_ZZYZX" parameters ALL

hotspot a/2, b, ZZYZX, unID : unID = unID + 1
hotspot a/2, b, 0, unID 	: unID = unID + 1

!-----Leg Height-----
if gs_leg_type_m <> 0 and iFrameType <> FRAME_WIRE then
	hotspot  0, 0,  0,    unID, leg_h, 1+128				: unID=unID+1
	hotspot  0, 0, -1, 	  unID, leg_h, 3					: unID=unID+1
	hotspot  0, 0, leg_h, unID, leg_h, 2					: unID=unID+1

	hotspot  0, b,  0,    unID, leg_h, 1+128				: unID=unID+1
	hotspot  0, b, -1, 	  unID, leg_h, 3					: unID=unID+1
	hotspot  0, b, leg_h, unID, leg_h, 2					: unID=unID+1

	hotspot  a, b,  0,    unID, leg_h, 1+128				: unID=unID+1
	hotspot  a, b, -1, 	  unID, leg_h, 3					: unID=unID+1
	hotspot  a, b, leg_h, unID, leg_h, 2					: unID=unID+1

	hotspot  a, 0,  0,    unID, leg_h, 1+128				: unID=unID+1
	hotspot  a, 0, -1, 	  unID, leg_h, 3					: unID=unID+1
	hotspot  a, 0, leg_h, unID, leg_h, 2					: unID=unID+1
endif

for i = 1 to nModule
	if i > 1 then
		startModulX = frameWidth
		for kk = 1 to i-1
			startModulX = startModulX + moduleWidth[kk]
		next kk
		tempModulWidth = moduleWidth[i]

		if i = 2 then
			hotspot  startModulX+tempModulWidth, 0, leg_h, unID											: unID=unID+1
			hotspot  startModulX+tempModulWidth, 0, ZZYZX, unID											: unID=unID+1
			if not(bUniform) then
				hotspot  startModulX+tempModulWidth, 0, ZZYZX/2, unID, modulWidth02, 1					: unID=unID+1
				hotspot  startModulX+tempModulWidth+1, 0, ZZYZX/2, unID, modulWidth02, 3				: unID=unID+1
				hotspot  startModulX, 0, ZZYZX/2, unID, modulWidth02, 2									: unID=unID+1
			endif

			if bDivision02 then
				hotspot  startModulX+tempModulWidth/2, 0,  0, unID, divisionHeight02, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, -1, unID, divisionHeight02, 3					: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, divisionHeight02, unID, divisionHeight02, 2	: unID=unID+1
			endif
		endif

		if i = 3 then
			hotspot  startModulX+tempModulWidth, 0, leg_h, unID											: unID=unID+1
			hotspot  startModulX+tempModulWidth, 0, ZZYZX, unID											: unID=unID+1
			if not(bUniform) then
				hotspot  startModulX+tempModulWidth, 0, ZZYZX/2, unID, modulWidth03, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth+1, 0, ZZYZX/2, unID, modulWidth03, 3				: unID=unID+1
				hotspot  startModulX, 0, ZZYZX/2, unID, modulWidth03, 2									: unID=unID+1
			endif

			if bDivision03 then
				hotspot  startModulX+tempModulWidth/2, 0,  0, unID, divisionHeight03, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, -1, unID, divisionHeight03, 3					: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, divisionHeight03, unID, divisionHeight03, 2	: unID=unID+1
			endif
		endif

		if i = 4 then
			hotspot  startModulX+tempModulWidth, 0, leg_h, unID											: unID=unID+1
			hotspot  startModulX+tempModulWidth, 0, ZZYZX, unID											: unID=unID+1
			if not(bUniform) then
				hotspot  startModulX+tempModulWidth, 0, ZZYZX/2, unID, modulWidth04, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth+1, 0, ZZYZX/2, unID, modulWidth04, 3				: unID=unID+1
				hotspot  startModulX, 0, ZZYZX/2, unID, modulWidth04, 2									: unID=unID+1
			endif

			if bDivision04 then
				hotspot  startModulX+tempModulWidth/2, 0,  0, unID, divisionHeight04, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, -1, unID, divisionHeight04, 3					: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, divisionHeight04, unID, divisionHeight04, 2	: unID=unID+1
			endif
		endif

		if i = 5 then
			hotspot  startModulX+tempModulWidth, 0, leg_h, unID											: unID=unID+1
			hotspot  startModulX+tempModulWidth, 0, ZZYZX, unID											: unID=unID+1
			if not(bUniform) then
				hotspot  startModulX+tempModulWidth, 0, ZZYZX/2, unID, modulWidth05, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth+1, 0, ZZYZX/2, unID, modulWidth05, 3				: unID=unID+1
				hotspot  startModulX, 0, ZZYZX/2, unID, modulWidth05, 2									: unID=unID+1
			endif

			if bDivision05 then
				hotspot  startModulX+tempModulWidth/2, 0,  0, unID, divisionHeight05, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, -1, unID, divisionHeight05, 3					: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, divisionHeight05, unID, divisionHeight05, 2	: unID=unID+1
			endif
		endif

		if i = 6 then
			hotspot  startModulX+tempModulWidth, 0, leg_h,unID											: unID=unID+1
			hotspot  startModulX+tempModulWidth, 0, ZZYZX, unID											: unID=unID+1
			if not(bUniform) then
				hotspot  startModulX+tempModulWidth, 0, ZZYZX/2, unID, modulWidth06, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth+1, 0, ZZYZX/2, unID, modulWidth06, 3				: unID=unID+1
				hotspot  startModulX, 0, ZZYZX/2, unID, modulWidth06, 2									: unID=unID+1
			endif

			if bDivision06 then
				hotspot  startModulX+tempModulWidth/2, 0,  0, unID, divisionHeight06, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, -1, unID, divisionHeight06, 3					: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, divisionHeight06, unID, divisionHeight06, 2	: unID=unID+1
			endif
		endif
	else
		startModulX = 0
		tempModulWidth = moduleWidth[i] + frameWidth
		hotspot  startModulX+tempModulWidth, 0, leg_h, unID												: unID=unID+1
		hotspot  startModulX+tempModulWidth, 0, ZZYZX, unID												: unID=unID+1

		if bDivision01 then
			hotspot  startModulX+tempModulWidth/2, 0,  0, unID, divisionHeight01, 1+128					: unID=unID+1
			hotspot  startModulX+tempModulWidth/2, 0, -1, unID, divisionHeight01, 3						: unID=unID+1
			hotspot  startModulX+tempModulWidth/2, 0, divisionHeight01, unID, divisionHeight01, 2		: unID=unID+1
		endif
	endif
next i


! ==============================================================================
! Base
! ==============================================================================
corOverhang  = 0
corOverhangL = 0
corOverhangR = 0
cabinetStartX = 0
if abs(cot)<eps then cooh=0
if gs_cornice_type_m=0 then
	cot=0
	cooh=0
else
	if gs_lining_m=1 then
		corOverhangL = cooh
		corOverhangR = cooh
		cabinetStartX = -cooh
	endif
	if gs_lining_m=2 then
		corOverhangR = cooh
		corOverhangL = 0
		cabinetStartX = 0
	endif
	if gs_lining_m=3 then
		corOverhangR = 0
		corOverhangL = cooh
		cabinetStartX = -cooh
	endif
endif
corOverhang = corOverhangL+corOverhangR
if gs_leg_type_m=0 then leg_h=0


! ----- Frame -----
panelWidth = B-(iFrameType = FRAME_SOLID_BACK)*frameWidth-2*doorThickness*(nDoor>1) - doorThickness*(iFrameType <> FRAME_WIRE) - emptyDoorBack*(iFrameType <> FRAME_WIRE)
panelHeight = ZZYZX-cot-leg_h-frameWidth-frameWidth*(iFrameType <> FRAME_WIRE and leg_h > 0)
if iFrameType = FRAME_WIRE then
	gosub "steelFrames"
else
	gosub "woodFrames"
endif

! -----Panels -----
addx frameWidth
for i = 1 to nModule-1
	addx moduleWidth[i]
	gosub "panels"
next i
del nModule

! -----Divisions -----
addx frameWidth
bPreDiv = 0
for i = 1 to nModule
	tempModulWidth = moduleWidth[i]-frameWidth
	if iFrameType = FRAME_WIRE then
		addz frameWidth
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			4, frameWidth,
			0,b,15,
			0, b-frameWidth,15,
			tempModulWidth, b-frameWidth,15,
			tempModulWidth, b, 15
		gosub "textureHorizontal_01"
		del 1
	endif
	if (moduleMatrix[1+(i-1)*nElement][1]) then

		divisionHeight = moduleMatrix[1+(i-1)*nElement][2]
		gosub "divisions"
		bPreDiv = 1
	else
		bPreDiv = 0
	endif
	addx moduleWidth[i]
next i
del nModule+1


add (a+corOverhang)/2-corOverhangL, b, 0
! ----- Cornices -----
mulx -1
addz zzyzx-cot
CALL "fa_cornicetyp" PARAMETERS ALL A=A+corOverhang, B=B+cooh
del 2

! ----- Legs -----
CALL "fa_cabinet_legtyp" PARAMETERS A=A+corOverhang, B=B+cooh,
									gs_detlevel_3D_m=gs_detlevel_3D_m,
									gs_leg_type_m=gs_leg_type_m,leg_h=leg_h,leg_w=leg_w,
									cooh=cooh,gs_resol=gs_resol,gs_leg_mat=gs_leg_mat,
									gs_cont_pen=gs_cont_pen,gs_lining_m=gs_lining_m

del 1


! ==============================================================================
! Interior Fittings
! ==============================================================================
addx frameWidth
for i = 1 to nModule
	tempModulWidth = moduleWidth[i]-frameWidth
	bDivision = moduleMatrix[1+(i-1)*nElement][1]
	if bDivision then															!! Horizontal division
		divisionHeight = moduleMatrix[1+(i-1)*nElement][2]

		! Above
		addz divisionHeight
		AboveOrUnder = 1
		tempModulHeight = ZZYZX-cot-frameWidth - divisionHeight
		gosub "interior"
		del 1

		! Under
		addz leg_h+frameWidth*(iFrameType <> FRAME_WIRE and leg_h > 0)
		AboveOrUnder = 2
		tempModulHeight = divisionHeight-leg_h-frameWidth*(iFrameType <> FRAME_WIRE and leg_h > 0) - frameWidth
		gosub "interior"
		del 1
	else																		!! No Division
		addz leg_h+frameWidth*(iFrameType <> FRAME_WIRE and leg_h > 0)
		AboveOrUnder = 1
		tempModulHeight = panelHeight
		gosub "interior"
		del 1
	endif
	addx moduleWidth[i]
next i
del nModule+1



! ==============================================================================
! Door Settings
! ==============================================================================
if iDoorType <> DOOR_TYPE_NONE then

	! Rail
	doorHeight = panelHeight + frameWidth*(iFrameType = FRAME_WIRE)
	doorFullWidth = A-2*frameWidth*(iFrameType <> FRAME_WIRE)
	doorOffsetX = frameWidth*(iFrameType <> FRAME_WIRE)
	doorOffsetZ = leg_h+frameWidth*(iFrameType <> FRAME_WIRE and leg_h > 0)

	rotx 90
	add doorOffsetX, doorOffsetZ, -2*doorThickness - emptyDoorBack*(iFrameType <> FRAME_WIRE)
	cprism_ matSteelCabinet, matSteelCabinet, matSteelCabinet,
			10, 2*doorThickness,
			0, 0, 15,
			doorFullWidth, 0, 15,
			doorFullWidth, doorHeight, 15,
			0, doorHeight, 15,
			0, 0, -1,
			railThickness, railThickness, 15,
			doorFullWidth-railThickness, railThickness, 15,
			doorFullWidth-railThickness, doorHeight-railThickness, 15,
			railThickness, doorHeight-railThickness, 15,
			railThickness, railThickness, -1
	del 2

	! Door
	bMirrored = 0
	gs_full_edit = 0
	bFormMirror = 0
	bSliding = 1
	bAngleEdit = 0
	opening = 0

	doorHeight = doorHeight - 2*railThickness
	doorFullWidth = doorFullWidth - 2*railThickness

	add frameWidth*(iFrameType <> FRAME_WIRE)+railThickness, emptyDoorBack*(iFrameType <> FRAME_WIRE)+doorThickness,doorOffsetZ+railThickness
	for i=1 to nDoor
		if i = 1 then opening = openingDoor1
		if i = 2 then opening = openingDoor2
		if i = 3 then opening = openingDoor3
		if ceil(nDoor/2)=nDoor/2 then
			if ceil(i/2)<>i/2 then
				bMirrored = 1
				bFormMirror = 0
				slidingOffset =  doorThickness
				knobOffset = -knob_d
			else
				bMirrored = 0
				if iDoorStyle = 18 and nDoor= 2 then
					bFormMirror = 0
				else
					bFormMirror = 1
				endif
				slidingOffset = 0
				knobOffset = -knob_d - doorThickness
			endif
		else
			if ceil(i/2)<>i/2 then
				bMirrored = 0
				if i = 1 then bMirrored = 1
				bFormMirror = 0
				slidingOffset =  doorThickness
				knobOffset = -knob_d
			else
				bMirrored = 1
				bFormMirror = 1
				slidingOffset = 0
				knobOffset = -knob_d - doorThickness
			endif
		endif
		if iDoorStyle = 16 then bFormMirror = 0

		doorTempWidth = doorFullWidth/nDoor

		doordirection = 0
		if not(bMirrored) then
			hostspotStart = doorTempWidth-knob_pl_x
			doordirection = -1
		else
			hostspotStart = knob_pl_x
			doordirection = 1
		endif
		openingoffset = doorTempWidth * (opening/100) * doordirection

		if i = 1 then
			hotspot  hostspotStart, knobOffset, knob_pl_y,   			unID, openingDoorLength1, 1+128					: unID=unID+1
			hotspot  hostspotStart-doordirection, knobOffset, knob_pl_y, unID, openingDoorLength1, 3					: unID=unID+1
			hotspot  hostspotStart+openingoffset, knobOffset, knob_pl_y, unID, openingDoorLength1, 2, openingDoor1		: unID=unID+1
		endif

		if i = 2 then
			hotspot  hostspotStart, knobOffset, knob_pl_y,   			unID, openingDoorLength2, 1+128					: unID=unID+1
			hotspot  hostspotStart-doordirection, knobOffset, knob_pl_y, unID, openingDoorLength2, 3					: unID=unID+1
			hotspot  hostspotStart+openingoffset, knobOffset, knob_pl_y, unID, openingDoorLength2, 2, openingDoor2		: unID=unID+1
		endif

		if i = 3 then
			hotspot  hostspotStart, knobOffset, knob_pl_y,   			unID, openingDoorLength3, 1+128					: unID=unID+1
			hotspot  hostspotStart-doordirection, knobOffset, knob_pl_y, unID, openingDoorLength3, 3					: unID=unID+1
			hotspot  hostspotStart+openingoffset, knobOffset, knob_pl_y, unID, openingDoorLength3, 2, openingDoor3		: unID=unID+1
		endif

		add openingoffset, slidingOffset, 0
		call "fa_warddoortyp" parameters all bNotMacro = 0,
											gs_full_edit = gs_full_edit,
											bAngleEdit = 0,
											doorAngle3D = 0,
											bMirrored = bMirrored,
											bFormMirror = bFormMirror,
											doorFrameWidth = doorFrameWidth,
											bSliding = bSliding,
											cabdoortyp_unID = unID,
											doorWidth = doorTempWidth,
											doorHeight = doorHeight,
											returned_parameters cabdoortyp_unID
		unID = cabdoortyp_unID
		del 1
		addx doorTempWidth
	next i
	del nDoor+1
endif


! ======================================================================
! END
! ======================================================================

END

! ======================================================================
! SubRoutines
! ======================================================================
"interior":
	iInteriorType = moduleMatrix[2+(i-1)*nElement][AboveOrUnder]
	tModulWidth = tempModulWidth

	if iInteriorType = INTERIOR_SHELF then
		nTempNumber = moduleMatrix[3+(i-1)*nElement][AboveOrUnder]
		gosub "shelves"
	endif

	if iInteriorType = INTERIOR_DRAWER then
		nTempNumber = moduleMatrix[4+(i-1)*nElement][AboveOrUnder]
		gosub "drawers"
	endif

	if iInteriorType = INTERIOR_DRAWERFRONT then
		nTempNumber = moduleMatrix[5+(i-1)*nElement][AboveOrUnder]
		gosub "drawers"
	endif

	if iInteriorType = INTERIOR_WIRE then
		nTempNumber = moduleMatrix[6+(i-1)*nElement][AboveOrUnder]
		gosub "wireBaskets"
	endif

	if iInteriorType = INTERIOR_HANGER then
		nTempNumber = moduleMatrix[7+(i-1)*nElement][AboveOrUnder]
		gosub "hangers"
	endif
return



! ======================================================================
! Frames Macro
! ======================================================================
"woodFrames":
	addz leg_h
	rotx 90
	addz -b

	if (iFrameType = FRAME_SOLID_BACK) then
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
				4, frameWidth,
				a-frameWidth, frameWidth*(leg_h > 0),14+(leg_h < eps),
				frameWidth, frameWidth*(leg_h > 0),14,
				frameWidth, zzyzx-cot-leg_h-frameWidth,14,
				a-frameWidth, zzyzx-cot-leg_h-frameWidth,14
		gosub "textureHorizontal_01"
	endif

	bBack = (iFrameType = FRAME_SOLID)
	if leg_h > 0 then
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			10, B,
			a,0,15,
			0,0,15,
			0, zzyzx-cot-leg_h,15,
			a, zzyzx-cot-leg_h,15,
			a, 0, -1,
			a-frameWidth, frameWidth,14+bBack,
			frameWidth, frameWidth,14+bBack,
			frameWidth, zzyzx-cot-leg_h-frameWidth,14+bBack,
			a-frameWidth, zzyzx-cot-leg_h-frameWidth,14+bBack,
			a-frameWidth, frameWidth,-1

		gosub "textureHorizontal_01"
	else
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			8, B,
			0,0,15,
			0, zzyzx-cot,15,
			a, zzyzx-cot,15,
			a, 0, 15,
			a-frameWidth, 0, 14+bBack,
			a-frameWidth, zzyzx-cot-frameWidth, 14+bBack,
			frameWidth, zzyzx-cot-frameWidth,14+bBack,
			frameWidth, 0, 15

		gosub "textureHorizontal_01"
	endif
	del 3
return


"steelFrames":
	!Horizontal beam
	addz panelHeight
	cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
		4, frameWidth,
		0, b,15,
		a, b, 15,
		a, b-frameWidth, 15,
		0, b-frameWidth, 15
	gosub "textureHorizontal_01"

	cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
		4, frameWidth,
		0, b-panelWidth,15,
		a, b-panelWidth, 15,
		a, b-panelWidth+frameWidth, 15,
		0, b-panelWidth+frameWidth, 15
	gosub "textureHorizontal_01"

	del 1

	addx frameWidth
	gosub "steelFrame"
	addx a-frameWidth
	gosub "steelFrame"
	del 2
return

"steelFrame":
	addy b
	cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
		4, panelHeight,
		0,0,15,
		-frameWidth, 0, 15,
		-frameWidth, -frameWidth, 15,
		0, -frameWidth, 15
	gosub "textureVertical_01"

	cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
		4, panelHeight,
		0,-panelWidth,15,
		-frameWidth, -panelWidth, 15,
		-frameWidth, -panelWidth+frameWidth, 15,
		0, -panelWidth+frameWidth, 15
	gosub "textureVertical_01"

	addz panelHeight
	cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
		4, frameWidth,
		0,-frameWidth,15,
		-frameWidth, -frameWidth, 15,
		-frameWidth, -panelWidth+frameWidth, 15,
		0, -panelWidth+frameWidth, 15
	gosub "textureVertical_02"
	del 1

	addz frameWidth
	cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
		4, frameWidth,
		0,-frameWidth,15,
		-frameWidth, -frameWidth, 15,
		-frameWidth, -panelWidth+frameWidth, 15,
		0, -panelWidth+frameWidth, 15
	gosub "textureVertical_02"
	del 1

	del 1
return


! ======================================================================
! Panels Macro
! ======================================================================
"panels":
	if (iFrameType = FRAME_WIRE) then
		gosub "steelFrame"
	else
		add 0, B-(iFrameType = FRAME_SOLID_BACK)*frameWidth, leg_h + frameWidth*(leg_h > 0)
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			4, panelHeight,
			0,0,15,
			0, -panelWidth,15,
			-frameWidth, -panelWidth,15,
			-frameWidth, 0, 15
		gosub "textureVertical_01"
		del 1
	endif
return


! ======================================================================
! Divisions Macro
! ======================================================================
"divisions":
	if (iFrameType = FRAME_WIRE) then
		addz divisionHeight-frameWidth
		yOffset = 2*doorThickness*(nDoor>1) + doorThickness*(iFrameType <> FRAME_WIRE) + emptyDoorBack*(iFrameType <> FRAME_WIRE)

		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			4, frameWidth,
			0,b,15,
			0, b-frameWidth,15,
			tempModulWidth, b-frameWidth,15,
			tempModulWidth, b, 15
		gosub "textureHorizontal_01"

		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			4, frameWidth,
			0, yOffset,15,
			0, yOffset+frameWidth,15,
			tempModulWidth, yOffset+frameWidth,15,
			tempModulWidth, yOffset, 15
		gosub "textureHorizontal_01"

		if not(bPreDiv) then
			cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
				4, frameWidth,
				0, b-frameWidth,15,
				-frameWidth, b-frameWidth, 15,
				-frameWidth, b-panelWidth+frameWidth, 15,
				0, b-panelWidth+frameWidth, 15
			gosub "textureVertical_02"
		endif

		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			4, frameWidth,
			tempModulWidth, b-frameWidth,15,
			tempModulWidth+frameWidth, b-frameWidth, 15,
			tempModulWidth+frameWidth, b-panelWidth+frameWidth, 15,
			tempModulWidth, b-panelWidth+frameWidth, 15
		gosub "textureVertical_02"

		del 1
	else
		add 0, B-(iFrameType = FRAME_SOLID_BACK)*frameWidth, divisionHeight-frameWidth
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			4, frameWidth,
			0,0,15,
			0, -panelWidth,15,
			tempModulWidth, -panelWidth,15,
			tempModulWidth, 0, 15
		gosub "textureHorizontal_01"
		del 1
	endif
return


! ======================================================================
! Drawers Macro
! ======================================================================
"drawers":
	if iFrameType = FRAME_WIRE then tModulWidth = tempModulWidth - 2*plateThicknes
	doorHeight = (tempModulHeight+bDivision*thickness/2)/nTempNumber
	doorWidth = tModulWidth+thickness/2*(i<>1 and nModule<>1)+thickness/2*(i<>nModule and nModule<>1)
	drawerDepth = panelWidth+thickness

	add -thickness/2*(i<>1), B-(iFrameType = FRAME_SOLID_BACK)*frameWidth-panelWidth, -thickness/2*bDivision*(AboveOrUnder = 1)
	for kk=1 to nTempNumber
		if iInteriorType = INTERIOR_DRAWER then gosub "drawer"
		if iInteriorType = INTERIOR_DRAWERFRONT then gosub "drawerWithFront"
		addz doorHeight
	next kk
	del nTempNumber+1
return

"drawerWithFront":
	call "fa_warddoortyp" parameters all bNotMacro = 0,
										gs_full_edit = 0,
										bAngleEdit = 0,
										doorAngle3D = 0,
										bDrawer = 1,
										iDrawerKnobPos = 1,
										drawerDepth = panelWidth+frameWidth+thickness,
										iDoorStyle = iDrawerStyle,
										gs_knob_type_m = gs_knob_type_m*(iDoorType = DOOR_TYPE_NONE),
										matDoorDecor1 = gs_drawer_mat,
										matDoorFrame = gs_drawer_mat,
										xDrawerKnobPos = 0,
										zDrawerKnobPos = 0,
										doorFrameWidth = thickness,
										nVerticalMullion = 0,
										nHorizontalMullion = 0,
										bMirrored = 0,
										bFormMirror = 0,
										bSliding = 0,
										!cabdoortyp_unID = unID,
										doorWidth = doorWidth,
										doorHeight = doorHeight
										!returned_parameters cabdoortyp_unID
	!unID = cabdoortyp_unID
return

"drawer":
	! Front
	drawerCutZ			= 0.03
	drawerCutX			= 0.06
	if doorWidth > drawerCutX and doorHeight > drawerCutZ+thickness*1.5 then
		reducedDoorWidth	= doorWidth -0.001
		reducedDoorHeight	= doorHeight -0.001
		frameHillHeight		= 0.01
		mindistSmall		= 0.01

		add (doorWidth-reducedDoorWidth)/2, 0, (doorHeight-reducedDoorHeight)/2

		addx reducedDoorWidth/2
		rotx 90
		if bBevel then
			fprism_ gs_drawer_mat, gs_drawer_mat, gs_drawer_mat, gs_drawer_mat,
				8,doorThickness,45,frameHillHeight,
				-reducedDoorWidth/2,0,15,
				reducedDoorWidth/2,0,15,
				reducedDoorWidth/2,reducedDoorHeight,15,
				reducedDoorWidth/2-drawerCutX,reducedDoorHeight,15,
				reducedDoorWidth/2-drawerCutX,reducedDoorHeight-drawerCutZ,15,
				-reducedDoorWidth/2+drawerCutX,reducedDoorHeight-drawerCutZ,15,
				-reducedDoorWidth/2+drawerCutX,reducedDoorHeight,15,
				-reducedDoorWidth/2,reducedDoorHeight,15
		else
			cprism_ gs_drawer_mat, gs_drawer_mat, gs_drawer_mat,
				8,doorThickness,
				-reducedDoorWidth/2,0,15,
				reducedDoorWidth/2,0,15,
				reducedDoorWidth/2,reducedDoorHeight,15,
				reducedDoorWidth/2-drawerCutX,reducedDoorHeight,15,
				reducedDoorWidth/2-drawerCutX,reducedDoorHeight-drawerCutZ,15,
				-reducedDoorWidth/2+drawerCutX,reducedDoorHeight-drawerCutZ,15,
				-reducedDoorWidth/2+drawerCutX,reducedDoorHeight,15,
				-reducedDoorWidth/2,reducedDoorHeight,15
		endif

		if reducedDoorHeight>reducedDoorWidth then gosub "textureVertical_02" else gosub "textureHorizontal_01"

		del 3

		! Drawer
		drawerWidth = doorWidth - thickness
		drawerHeight= doorHeight - thickness*1.5
		drawerDepth = panelWidth - mindistSmall

		if drawerWidth<2*thickness+mindistSmall or drawerHeight<2*thickness+mindistSmall or drawerDepth<thickness+mindistSmall then return !!Not draw Drawer

		material gs_drawer_mat
		add thickness/2, 0, thickness/2

		!!Bottom
		prism_ 4, thickness,
			thickness, 0, 15,
			drawerWidth-thickness, 0, 15,
			drawerWidth-thickness, drawerDepth-thickness, 15,
			thickness, drawerDepth-thickness, 15
		gosub "textureHorizontal_02"

		!!Left Side
		prism_ 4, drawerHeight,
			0, 0, 15,
			thickness, 0, 15,
			thickness, drawerDepth, 15,
			0, drawerDepth, 15
		gosub "textureHorizontal_01"

		!!Right Side
		prism_ 4, drawerHeight,
			drawerWidth, 0, 15,
			drawerWidth-thickness, 0, 15,
			drawerWidth-thickness, drawerDepth, 15,
			drawerWidth, drawerDepth, 15
		gosub "textureHorizontal_01"

		!!Back Side
		prism_ 4, drawerHeight,
			thickness, drawerDepth-thickness, 15,
			drawerWidth-thickness, drawerDepth-thickness, 15,
			drawerWidth-thickness, drawerDepth, 15,
			thickness, drawerDepth, 15
		gosub "textureHorizontal_01"

		del 1
	else
		call "fa_warddoortyp" parameters all bNotMacro = 0,
											gs_full_edit = 0,
											bAngleEdit = 0,
											doorAngle3D = 0,
											bDrawer = 1,
											iDrawerKnobPos = 1,
											drawerDepth = panelWidth+frameWidth+thickness,
											iDoorStyle = 1,					!!!Simple
											gs_knob_type_m = 0,
											matDoorDecor1 = gs_drawer_mat,
											matDoorFrame = gs_drawer_mat,
											xDrawerKnobPos = 0,
											zDrawerKnobPos = 0,
											doorFrameWidth = thickness,
											nVerticalMullion = 0,
											nHorizontalMullion = 0,
											bMirrored = 0,
											bFormMirror = 0,
											bSliding = 0,
											!cabdoortyp_unID = unID,
											doorWidth = doorWidth,
											doorHeight = doorHeight
											!returned_parameters cabdoortyp_unID
		!unID = cabdoortyp_unID
	endif
return


! ======================================================================
! Shelves Macro
! ======================================================================
"shelves":
	if iFrameType = FRAME_WIRE then
		resol max(3, gs_resol/2)
		tModulDepth = panelWidth
		shelvesDistance=(tempModulHeight+wireDiameter*4)/(nTempNumber+1)

		add 0, B-(iFrameType = FRAME_SOLID_BACK)*frameWidth, -wireDiameter*2
		for kk=1 to nTempNumber
			addz shelvesDistance

			if gs_detlevel_3D_m = 1 or GLOB_CONTEXT = 5 or GLOB_CONTEXT = 4 or (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 50) then
				addz -wireDiameter*2
				cprism_ "builtInMatWireBasket", "builtInMatWireBasket", "builtInMatWireBasket",
					4, wireDiameter*4,
					0,0,15,
					0, -panelWidth,15,
					tempModulWidth, -panelWidth,15,
					tempModulWidth, 0, 15
				gosub "textureHorizontal_01"
				del 1
			else
				addy -panelWidth
				gosub "plates_shelf"

				material matSteelShelf
				add 0.01 + wireDiameter/2, 0.01 + wireDiameter/2, 0

				wireReducedSizeX = tModulWidth - 2* 0.01 - wireDiameter
				wireReducedSizeY = tModulDepth - 2* 0.01 - wireDiameter

				! --- Z direction ----
				iRes = max(3, gs_resol/2)
				iAlpha = 90/iRes
				wireRadius = 0.02

				put  wireReducedSizeX, 0, 0, 0
				put  wireRadius, 0, 0, 0
				for jj=1 to iRes-1
					put wireRadius-sin(jj*iAlpha)*wireRadius, wireRadius-cos(jj*iAlpha)*wireRadius, 0, 0
				next jj
				put 0, wireRadius, 0, 0
				put 0, wireReducedSizeY-wireRadius, 0, 0
				for jj=1 to iRes-1
					put wireRadius-cos(jj*iAlpha)*wireRadius, wireReducedSizeY-wireRadius+sin(jj*iAlpha)*wireRadius, 0, 0
				next jj
				put wireRadius, wireReducedSizeY, 0, 0
				put wireReducedSizeX-wireRadius, wireReducedSizeY, 0, 0
				for jj=1 to iRes-1
					put wireReducedSizeX-wireRadius+sin(jj*iAlpha)*wireRadius, wireReducedSizeY-wireRadius+cos(jj*iAlpha)*wireRadius, 0, 0
				next jj
				put wireReducedSizeX, wireReducedSizeY-wireRadius, 0, 0
				put wireReducedSizeX, wireRadius, 0, 0
				for jj=1 to iRes-1
					put wireReducedSizeX-wireRadius+cos(jj*iAlpha)*wireRadius, wireRadius-sin(jj*iAlpha)*wireRadius,0, 0
				next jj
				put wireReducedSizeX-wireRadius, 0, 0, 0
				put wireRadius, 0, 0, 0
				put wireRadius-sin(iAlpha)*wireRadius, wireRadius-cos(iAlpha)*wireRadius, 0, 0

				tube 2, nsp/4, 1+2,
					0,0,901,
					wireDiameter*4, 360, 4001,
					get(nsp)


				! --- X direction ----
				tempSize = wireReducedSizeY
				tempNumber = int((wireReducedSizeX-2*wireRadius) / wireMeshDivision)

				rotz 90
				add 0, -(tempNumber-1)*wireMeshDivision - ((wireReducedSizeX-(tempNumber-1)*wireMeshDivision)/2), wireDiameter
				for jj = 1 to tempNumber
					tube 2, 4, 1+2+16+32,
						0,0,901,
						wireDiameter, 360, 4001,

						-1, 0, 0, 0,
						0, 0, 0, 0,
						tempSize, 0, 0, 0,
						tempSize+1, 0, 0, 0
					addy wireMeshDivision
				next jj
				del tempNumber
				del 2

				! --- Y direction ----
				tempSize = wireReducedSizeX
				tempNumber = int((wireReducedSizeY-2*wireRadius) / wireMeshDivision)

				add	0, (wireReducedSizeY-(tempNumber-1)*wireMeshDivision)/2, -wireDiameter
				for jj = 1 to tempNumber
					tube 2, 4, 1+2+16+32,
						0,0,901,
						wireDiameter, 360, 4001,

						-1, 0, 0, 0,
						0, 0, 0, 0,
						tempSize, 0, 0, 0,
						tempSize+1, 0, 0, 0
					addy wireMeshDivision
				next jj
				del tempNumber
				del 1


				del 2
			endif
		next kk
		del nTempNumber+1
	else
		shelvesDistance=(tempModulHeight+thickness)/(nTempNumber+1)

		add 0, B-(iFrameType = FRAME_SOLID_BACK)*frameWidth, -thickness
		for kk=1 to nTempNumber
			addz shelvesDistance
			cprism_ gs_shelf_mat, gs_shelf_mat, gs_shelf_mat,
				4, thickness,
				0,0,15,
				0, -panelWidth,15,
				tempModulWidth, -panelWidth,15,
				tempModulWidth, 0, 15
			gosub "textureHorizontal_01"
		next kk
		del nTempNumber+1
	endif
return


! ======================================================================
! WireBasket Macro
! ======================================================================
"wireBaskets":
	resol max(3, gs_resol/4)
	tModulDepth = panelWidth
	wireDistance=(tempModulHeight)/(nTempNumber)

	wireAlpha = max ( atn(wireDistance/0.04), minWireAlpha )

	yOffset = 2*doorThickness*(nDoor>1) + doorThickness*(iFrameType <> FRAME_WIRE)  + emptyDoorBack*(iFrameType <> FRAME_WIRE)

	addy yOffset
	for kk=1 to nTempNumber
		addz wireDistance
		gosub "wireBasket"
	next kk
	del nTempNumber+1
	resol gs_resol
return


"wireBasket":
	wireBasketHeight = wireDistance - 0.03
	if wireBasketHeight < minDist/2 then return

	if gs_detlevel_3D_m = 1 or GLOB_CONTEXT = 5 or GLOB_CONTEXT = 4 or (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 50) then
		material "builtInMatWireBasket"
		wireReducedSizeX = tModulWidth - 2* 0.01 - wireDiameter
		wireReducedSizeY = tModulDepth - 2* 0.01 - wireDiameter

		add 0.01, 0.01, -wireDistance
		block wireReducedSizeX, wireReducedSizeY, wireBasketHeight
		del 1
	else
		material matWireBasket
		gosub "plates_wire"

		wireReducedSizeX = tModulWidth - 2* 0.01 - wireDiameter
		wireReducedSizeY = tModulDepth - 2* 0.01 - wireDiameter

		add 0.01 + wireDiameter/2, 0.01 + wireDiameter/2, -0.03

		! --- X direction ----
		tempWireY = wireBasketHeight - wireDiameter
		tempWireX = tempWireY / tan(wireAlpha)
		tempSize = wireReducedSizeY
		tempNumber = int((wireReducedSizeX-2*tempWireX) / wireMeshDivision)

		if wireReducedSizeX > (wireHandle+wireDiameter+0.01)*2 then
			rotx 90
			cutpolya 6, 0, -tempWireX,
				wireHandle, wireDiameter, 15,
				wireHandle, 0, 15,
				wireHandle+0.01, -0.03, 15,
				wireReducedSizeX-wireHandle-0.01, -0.03, 15,
				wireReducedSizeX-wireHandle, 0, 15,
				wireReducedSizeX-wireHandle, wireDiameter, 15
			del 1
		endif

		rotz 90
		addy -(tempNumber-1)*wireMeshDivision - ((wireReducedSizeX-(tempNumber-1)*wireMeshDivision)/2)
		for jj = 1 to tempNumber
			tube 2, 6, 1+2+16+32,
				0,0,901,
				wireDiameter, 360, 4001,

				-tempWireX, 0, tempWireY, 0,
				0, 0, 0, 0,
				tempWireX, 0, -tempWireY, 0,
				tempSize-tempWireX, 0, -tempWireY, 0,
				tempSize, 0, 0, 0,
				tempSize+tempWireX, 0, tempWireY, 0
			addy wireMeshDivision
		next jj
		del tempNumber
		del 2

		! --- Z direction ----
		tempNumber = int(wireBasketHeight / wireMeshDivision)
		iRes = max(3, gs_resol/2)
		iAlpha = 90/iRes
		wireRadius = 0.02
		for ii = 1 to tempNumber
			tempZ = ii*wireMeshDivision
			tempX = tempZ / tan(wireAlpha)-wireDiameter*2

			put  wireReducedSizeX, tempX, -tempZ, 0
			put  tempX+wireRadius, tempX, -tempZ, 0
			for jj=1 to iRes-1
				put tempX+wireRadius-sin(jj*iAlpha)*wireRadius, tempX+wireRadius-cos(jj*iAlpha)*wireRadius, -tempZ, 0
			next jj
			put tempX, tempX+wireRadius, -tempZ, 0
			put tempX, wireReducedSizeY-wireRadius-tempX, -tempZ, 0
			for jj=1 to iRes-1
				put tempX+wireRadius-cos(jj*iAlpha)*wireRadius, wireReducedSizeY-tempX-wireRadius+sin(jj*iAlpha)*wireRadius, -tempZ, 0
			next jj
			put tempX+wireRadius, wireReducedSizeY-tempX, -tempZ, 0
			put wireReducedSizeX-wireRadius-tempX, wireReducedSizeY-tempX, -tempZ, 0
			for jj=1 to iRes-1
				put wireReducedSizeX-wireRadius-tempX+sin(jj*iAlpha)*wireRadius, wireReducedSizeY-tempX-wireRadius+cos(jj*iAlpha)*wireRadius, -tempZ, 0
			next jj
			put wireReducedSizeX-tempX, wireReducedSizeY-wireRadius-tempX, -tempZ, 0
			put wireReducedSizeX-tempX, tempX+wireRadius, -tempZ, 0
			for jj=1 to iRes-1
				put wireReducedSizeX-wireRadius-tempX+cos(jj*iAlpha)*wireRadius, tempX+wireRadius-sin(jj*iAlpha)*wireRadius, -tempZ, 0
			next jj
			put wireReducedSizeX-wireRadius-tempX, tempX, -tempZ, 0
			put tempX+wireRadius, tempX, -tempZ, 0
			put tempX+wireRadius-sin(iAlpha)*wireRadius, tempX+wireRadius-cos(iAlpha)*wireRadius, -tempZ, 0

			tube 2, nsp/4, 1+2,
				0,0,901,
				wireDiameter, 360, 4001,
				get(nsp)
		next ii

		if wireReducedSizeX > (wireHandle+wireDiameter+0.01)*2 then cutend


		! --- Y direction ----
		tempWireY = wireBasketHeight - 3*wireDiameter
		tempWireX = tempWireY / tan(wireAlpha)
		tempSize = wireReducedSizeX
		tempNumber = int((wireReducedSizeY-2*tempWireX) / wireMeshDivision)

		addy (wireReducedSizeY-(tempNumber-1)*wireMeshDivision)/2
		for jj = 1 to tempNumber
			tube 2, 6, 1+2+16+32,
				0,0,901,
				wireDiameter, 360, 4001,

				-tempWireX, 0, tempWireY, 0,
				0, 0, 0, 0,
				tempWireX, 0, -tempWireY, 0,
				tempSize-tempWireX, 0, -tempWireY, 0,
				tempSize, 0, 0, 0,
				tempSize+tempWireX, 0, tempWireY, 0
			addy wireMeshDivision
		next jj
		del tempNumber
		del 1


		! --- Frame ----
		put  wireRadius+1, 0, 0, 0
		put  wireRadius, 0, 0, 0
		for jj=1 to iRes-1
			put wireRadius-sin(jj*iAlpha)*wireRadius, wireRadius-cos(jj*iAlpha)*wireRadius, 0, 0
		next jj
		put 0, wireRadius, 0, 0
		put 0, wireReducedSizeY-wireRadius, 0, 0
		for jj=1 to iRes-1
			put wireRadius-cos(jj*iAlpha)*wireRadius, wireReducedSizeY-wireRadius+sin(jj*iAlpha)*wireRadius, 0, 0
		next jj
		put wireRadius, wireReducedSizeY, 0, 0
		put wireReducedSizeX-wireRadius, wireReducedSizeY, 0, 0
		for jj=1 to iRes-1
			put wireReducedSizeX-wireRadius+sin(jj*iAlpha)*wireRadius, wireReducedSizeY-wireRadius+cos(jj*iAlpha)*wireRadius, 0, 0
		next jj
		put wireReducedSizeX, wireReducedSizeY-wireRadius, 0, 0
		put wireReducedSizeX, wireRadius, 0, 0
		for jj=1 to iRes-1
			put wireReducedSizeX-wireRadius+cos(jj*iAlpha)*wireRadius, wireRadius-sin(jj*iAlpha)*wireRadius, 0, 0
		next jj
		put wireReducedSizeX-wireRadius, 0, 0, 0
		if wireReducedSizeX > (wireHandle+wireDiameter+0.01)*2 then
			put wireReducedSizeX-wireHandle, 0, 0, 0
			put wireReducedSizeX-wireHandle-0.01, 0.03/tan(wireAlpha), -0.03, 0
			put wireHandle+0.01, 0.03/tan(wireAlpha), -0.03, 0
			put wireHandle, 0, 0, 0
		endif
		put wireRadius, 0, 0, 0
		put wireRadius-sin(iAlpha)*wireRadius, wireRadius-cos(iAlpha)*wireRadius, 0, 0


		tube 2, nsp/4, 1+2+128,
			0, 0, 901,
			wireDiameter*2 , 360, 4001,
			get(nsp)

		del 1
	endif
return


! ======================================================================
! Hanger Macro
! ======================================================================
"hangers":
	resol max(4, gs_resol/2)
	material gs_hanger_mat
	hangerDistance=(tempModulHeight-0.1)/(nTempNumber)
	yOffset = 2*doorThickness*(nDoor>1) + doorThickness*(iFrameType <> FRAME_WIRE)  + emptyDoorBack*(iFrameType <> FRAME_WIRE)
	if iFrameType = FRAME_WIRE then tModulWidth = tempModulWidth - 2*plateThicknes

	addy yOffset + panelWidth/2
	for kk=1 to nTempNumber
		addz hangerDistance
		if iFrameType = FRAME_WIRE then
			plateHeight = 3*hangerWidth
			add 0, -panelWidth/2-yOffset, -plateHeight/2-hangerWidth
			gosub "plates_normal"
			del 1

			addx plateThicknes
			gosub "hanger"
			del 1
		else
			gosub "hanger"
		endif
	next kk
	del nTempNumber+1
	resol gs_resol
return

"hanger":
	rotx 90
	roty 90
	if tModulWidth > 2 * hangerWidth then
		cprism_  gs_hanger_mat, gs_hanger_mat, gs_hanger_mat,
				6, hangerWidth,
				-hangerOversize/2,-hangerWidth/2, 79,
				0,-hangerWidth/2, 900,
				hangerOversize/2,-hangerWidth/2, 3079,
				hangerOversize/2,-hangerWidth*1.5, 79,
				0,-hangerWidth*1.5,900,
				0,-180,4079
		gosub "textureVertical_01"

		addz hangerWidth
		cprism_  gs_hanger_mat, gs_hanger_mat, gs_hanger_mat,
				6, tModulWidth-2*hangerWidth,
				-hangerWidth/2,-hangerWidth/2, 79,
				0,-hangerWidth/2, 900,
				hangerWidth/2,-hangerWidth/2, 3079,
				hangerWidth/2,-hangerWidth*1.5, 79,
				0,-hangerWidth*1.5,900,
				0,-180,4079
		gosub "textureVertical_01"

		addz tModulWidth-2*hangerWidth
		cprism_  gs_hanger_mat, gs_hanger_mat, gs_hanger_mat,
				6, hangerWidth,
				-hangerOversize/2,-hangerWidth/2, 79,
				0,-hangerWidth/2, 900,
				hangerOversize/2,-hangerWidth/2, 3079,
				hangerOversize/2,-hangerWidth*1.5, 79,
				0,-hangerWidth*1.5,900,
				0,-180,4079
		gosub "textureVertical_01"
		del 2
	else
		cprism_  gs_hanger_mat, gs_hanger_mat, gs_hanger_mat,
				6, tModulWidth,
				-hangerWidth/2,-hangerWidth/2, 79,
				0,-hangerWidth/2, 900,
				hangerWidth/2,-hangerWidth/2, 3079,
				hangerWidth/2,-hangerWidth*1.5, 79,
				0,-hangerWidth*1.5,900,
				0,-180,4079
		gosub "textureVertical_01"
	endif
	del 2
return

! ======================================================================
! Plates
! ======================================================================
"plates_normal":
	addy B-(iFrameType = FRAME_SOLID_BACK)*frameWidth
	for jj = 1 to 2
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			4, plateHeight,
			0,0,15,
			0, -panelWidth,15,
			plateThicknes, -panelWidth,15,
			plateThicknes, 0, 15
		gosub "textureHorizontal_01"
		mulx -1
		addx -tempModulWidth
	next jj
	del 1+4
return


"plates_wire":
	plateHeight = 0.02
	addz -0.03+plateHeight-wireDiameter*2
	for jj = 1 to 2
		rotx 90
		addz -panelWidth
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			8, panelWidth,
			0, 0, 15,
			plateThicknes, 0, 15,
			plateThicknes, -plateHeight, 15,
			plateThicknes+0.007, -plateHeight,15,
			plateThicknes+0.007, -plateHeight-plateThicknes,15,
			plateThicknes, -plateHeight-plateThicknes,15,
			plateThicknes, -2*plateHeight,15,
			0, -2*plateHeight,15
		gosub "textureVertical_01"
		del 2
		mulx -1
		addx -tempModulWidth
	next jj
	del 1+4
return


"plates_shelf":
	plateHeight = 0.02
	addz plateHeight-wireDiameter*4
	for jj = 1 to 2
		rotx 90
		addz -panelWidth
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			8, panelWidth,
			0, 0, 15,
			plateThicknes, 0, 15,
			plateThicknes, -plateHeight, 15,
			plateThicknes+0.01, -plateHeight,15,
			plateThicknes+0.01, -plateHeight-plateThicknes,15,
			plateThicknes, -plateHeight-plateThicknes,15,
			plateThicknes, -2*plateHeight,15,
			0, -2*plateHeight,15
		gosub "textureVertical_01"
		del 2
		mulx -1
		addx -tempModulWidth
	next jj
	del 1+4
return


! ======================================================================
! Textures
! ======================================================================
"textureVertical_01":
	roty 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureVertical_02":
	roty 90
	rotz 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 2

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureHorizontal_01":
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureHorizontal_02":
	rotx 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return

]]></Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[
unID = 1
pen gs_cont_pen
fill gs_fill_type
drawindex 20

if iSymbolType = 2 | iSymbolType = 3 then bHangers = 0

! ======================================================================
! HOTSPOTS
! ======================================================================
CALL "Resize_A_B_ZZYZX" Parameters ALL
hotspot2  A/2, B, unID				: unID=unID+1
!hotspot2  A/2, B/2, unID			: unID=unID+1


! ======================================================================
! BODY
! ======================================================================
! ----- Base Polygon -----
poly2_b 5,3,gs_fill_pen,gs_back_pen,
	0,0,1,
	A,0,1,
	A,B,1,
	0,B,1,
	0,0,-1

if iSymbolType = 4 then
	line2 0, doorThickness, a, doorThickness
	tempDoorWidth = A / nDoor
	for i = 1 to nDoor-1
		line2 tempDoorWidth*i,0,tempDoorWidth*i,doorThickness
	next i
endif

for i = 1 to nModule
	if i > 1 then
		startModulX = frameWidth
		for kk = 1 to i-1
			startModulX = startModulX + moduleWidth[kk]
		next kk
		tempModulWidth = moduleWidth[i]

		if i = 2 then
			hotspot2  startModulX+tempModulWidth, 0, unID								: unID=unID+1
			if not(bUniform) then
				hotspot2  startModulX+tempModulWidth, B/2, unID, modulWidth02, 1+128	: unID=unID+1
				hotspot2  startModulX+tempModulWidth+1, B/2, unID, modulWidth02, 3		: unID=unID+1
				hotspot2  startModulX, B/2, unID, modulWidth02, 2						: unID=unID+1
			endif
		endif

		if i = 3 then
			hotspot2  startModulX+tempModulWidth, 0, unID								: unID=unID+1
			if not(bUniform) then
				hotspot2  startModulX+tempModulWidth, B/2, unID, modulWidth03, 1+128	: unID=unID+1
				hotspot2  startModulX+tempModulWidth+1, B/2, unID, modulWidth03, 3		: unID=unID+1
				hotspot2  startModulX, B/2, unID, modulWidth03, 2						: unID=unID+1
			endif
		endif

		if i = 4 then
			hotspot2  startModulX+tempModulWidth, 0, unID								: unID=unID+1
			if not(bUniform) then
				hotspot2  startModulX+tempModulWidth, B/2, unID, modulWidth04, 1+128	: unID=unID+1
				hotspot2  startModulX+tempModulWidth+1, B/2, unID, modulWidth04, 3		: unID=unID+1
				hotspot2  startModulX, B/2, unID, modulWidth04, 2						: unID=unID+1
			endif
		endif

		if i = 5 then
			hotspot2  startModulX+tempModulWidth, 0, unID								: unID=unID+1
			if not(bUniform) then
				hotspot2  startModulX+tempModulWidth, B/2, unID, modulWidth05, 1+128	: unID=unID+1
				hotspot2  startModulX+tempModulWidth+1, B/2, unID, modulWidth05, 3		: unID=unID+1
				hotspot2  startModulX, B/2, unID, modulWidth05, 2						: unID=unID+1
			endif
		endif

		if i = 6 then
			hotspot2  startModulX+tempModulWidth, 0, unID								: unID=unID+1
			if not(bUniform) then
				hotspot2  startModulX+tempModulWidth, B/2, unID, modulWidth06, 1+128	: unID=unID+1
				hotspot2  startModulX+tempModulWidth+1, B/2, unID, modulWidth06, 3		: unID=unID+1
				hotspot2  startModulX, B/2, unID, modulWidth06, 2						: unID=unID+1
			endif
		endif
	else
		startModulX = 0
		tempModulWidth = moduleWidth[i] + frameWidth
		hotspot2  startModulX+tempModulWidth, 0, unID									: unID=unID+1
	endif
	if i < nModule then
		line2 startModulX+tempModulWidth,doorThickness*(iSymbolType = 4),startModulX+tempModulWidth,b
	endif

	if iSymbolType = 2 then			!Draw X
		line2 startModulX, 0, startModulX + tempModulWidth, b
		line2 startModulX, b, startModulX + tempModulWidth, 0
	endif

	if iSymbolType = 3 then			! Draw V
		line2 startModulX, b, startModulX + tempModulWidth/2, 0
		line2 startModulX + tempModulWidth/2, 0, startModulX + tempModulWidth, b
	endif

	tempHangers =  (moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_HANGER)

	! ----- Hangers -----
	if bHangers and tempHangers then
		add2 startModulX, 0
		line2 0,b/2,tempModulWidth,b/2
		gosub "hangers"
		del 1
	endif
next i


! ======================================================================
! Minimal Space
! ======================================================================
if MSFront> EPS then
	reqBMinSpace = 0
	drawindex 10
	success = LIBRARYGLOBAL ("LibraryGlobals13", "showBMinSpace", reqBMinSpace)
	if success > 0 and reqBMinSpace then
		call "fa_minimalspace" parameters all 	MSType 	= 1,
												unID 	= 3000
	endif
endif


END

! ======================================================================
! SubRoutines
! ======================================================================

"hangers":
	add2 0.1, b/2
	hn = tempModulWidth - 2*0.05
	cn=int(hn/0.1)
	for ii=1 to cn
		ff=rnd(.2)
		rot2 ff*100
		line2 -doorThickness, -b/2 + 0.02 + doorThickness , doorThickness, b/2 - 0.02 - doorThickness
		del 1
		add2 0.1, 0
	next ii
	del cn+1
return
]]></Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[
EPS=0.0001

dim stDetlevel3D[3]
	stDetlevel3D[1] = `Detailed`
	stDetlevel3D[2] = `Simple`
	stDetlevel3D[3] = `Off`

DIM stSymbolTypes[4]
	stSymbolTypes[1]=`Style 1`
	stSymbolTypes[2]=`Style 2`
	stSymbolTypes[3]=`Style 3`
	stSymbolTypes[4]=`Style 4`

dim stDoorType[3]
	stDoorType[1] = `Double Sliding Door`
	stDoorType[2] = `Triple Sliding Door`
	stDoorType[3] = `None`

DOOR_TYPE_NONE			= 0
DOOR_TYPE_TRIPLE_SIDING	= 1
DOOR_TYPE_SLIDING		= 2

dim stDoorStyle[12]
	stDoorStyle[1] = `Style 1`
	stDoorStyle[2] = `Style 2`
	stDoorStyle[3] = `Style 3`
	stDoorStyle[4] = `Style 4`
	stDoorStyle[5] = `Style 5`
	stDoorStyle[6] = `Style 6`
	stDoorStyle[7] = `Style 7`
	stDoorStyle[8] = `Style 8`
	stDoorStyle[9] = `Style 9`
	stDoorStyle[10] = `Style 10`
	stDoorStyle[11] = `Style 11`
	stDoorStyle[12] = `Custom Panel`

dim stKnobTypes[9]
	stKnobTypes[1]=`None`
	stKnobTypes[2]=`Style 1`
	stKnobTypes[3]=`Style 2`
	stKnobTypes[4]=`Style 3`
	stKnobTypes[5]=`Style 4`
	stKnobTypes[6]=`Style 5`
	stKnobTypes[7]=`Style 6`
	stKnobTypes[8]=`Style 7`
	stKnobTypes[9]=`Style 8`

dim stKnobPlacing[2]
	stKnobPlacing[1]=`Vertical`
	stKnobPlacing[2]=`Horizontal`

dim stInteriorType[6]
	stInteriorType[1]=`Shelf`
	stInteriorType[2]=`Drawer`
	stInteriorType[3]=`Drawer with Front`
	stInteriorType[4]=`Wire Basket`
	stInteriorType[5]=`Hanger`
	stInteriorType[6]=`None`

INTERIOR_NONE		= 0
INTERIOR_HANGER		= 1
INTERIOR_WIRE		= 2
INTERIOR_DRAWERFRONT= 3
INTERIOR_DRAWER		= 4
INTERIOR_SHELF		= 5

dim stCorniceTypes[5]
	stCorniceTypes[1]=`None`
	stCorniceTypes[2]=`Style 1`
	stCorniceTypes[3]=`Style 2`
	stCorniceTypes[4]=`Style 3`
	stCorniceTypes[5]=`Style 4`

dim stCorniceOverhang[4]
	stCorniceOverhang[1]=`Front`
	stCorniceOverhang[2]=`Front and Left Side`
	stCorniceOverhang[3]=`Front and Right Side`
	stCorniceOverhang[4]=`Front and Both Side`

dim stLegTypes[7]
	stLegTypes[1]=`None`
	stLegTypes[2]=`Style 1`
	stLegTypes[3]=`Style 2`
	stLegTypes[4]=`Style 3`
	stLegTypes[5]=`Style 4`
	stLegTypes[6]=`Style 5`
	stLegTypes[7]=`Style 6`

dim stFrameTypes[3]
	stFrameTypes[1]=`Solid`
	stFrameTypes[2]=`Solid with Back`
	stFrameTypes[3]=`Wire`

FRAME_SOLID		= 1
FRAME_SOLID_BACK= 2
FRAME_WIRE		= 3

dim stDrawerTypes[3]
	stDrawerTypes[1]=`Style 1`
	stDrawerTypes[2]=`Style 2`
	stDrawerTypes[3]=`Style 3`


!-----Definitions-----
if iFrameType = FRAME_WIRE then
	leg_h = 0
endif
minDist = 0.1
nDoor = 1
if iDoorType = DOOR_TYPE_SLIDING then nDoor = 2
if iDoorType = DOOR_TYPE_TRIPLE_SIDING then nDoor = 3
railThickness = 0.005


!-----Fill Array-----
dim moduleWidth[]
dim moduleMatrix[][2]
m = 1
nElement = 7
if nModule >= 1 then
	moduleWidth[1] = modulWidth01
	 moduleMatrix[m][1] = bDivision01
	 moduleMatrix[m][2] = divisionHeight01		: m = m + 1
	 moduleMatrix[m][1] = iInteriorType01
	 moduleMatrix[m][2] = iInteriorTypeUnder01	: m = m + 1
	 moduleMatrix[m][1] = nShelves01
	 moduleMatrix[m][2] = nShelvesUnder01		: m = m + 1
	 moduleMatrix[m][1] = nDrawers01
	 moduleMatrix[m][2] = nDrawersUnder01		: m = m + 1
	 moduleMatrix[m][1] = nDrawersFront01
	 moduleMatrix[m][2] = nDrawersFrontUnder01	: m = m + 1
	 moduleMatrix[m][1] = nWire01
	 moduleMatrix[m][2] = nWireUnder01			: m = m + 1
	 moduleMatrix[m][1] = nHangers01
	 moduleMatrix[m][2] = nHangersUnder01		: m = m + 1
endif

if nModule >= 2 then
	moduleWidth[2] = modulWidth02
	 moduleMatrix[m][1] = bDivision02
	 moduleMatrix[m][2] = divisionHeight02		: m = m + 1
	 moduleMatrix[m][1] = iInteriorType02
	 moduleMatrix[m][2] = iInteriorTypeUnder02	: m = m + 1
	 moduleMatrix[m][1] = nShelves02
	 moduleMatrix[m][2] = nShelvesUnder02		: m = m + 1
	 moduleMatrix[m][1] = nDrawers02
	 moduleMatrix[m][2] = nDrawersUnder02		: m = m + 1
	 moduleMatrix[m][1] = nDrawersFront02
	 moduleMatrix[m][2] = nDrawersFrontUnder02	: m = m + 1
	 moduleMatrix[m][1] = nWire02
	 moduleMatrix[m][2] = nWireUnder02			: m = m + 1
	 moduleMatrix[m][1] = nHangers02
	 moduleMatrix[m][2] = nHangersUnder02		: m = m + 1
endif

if nModule >= 3 then
	moduleWidth[3] = modulWidth03
	 moduleMatrix[m][1] = bDivision03
	 moduleMatrix[m][2] = divisionHeight03		: m = m + 1
	 moduleMatrix[m][1] = iInteriorType03
	 moduleMatrix[m][2] = iInteriorTypeUnder03	: m = m + 1
	 moduleMatrix[m][1] = nShelves03
	 moduleMatrix[m][2] = nShelvesUnder03		: m = m + 1
	 moduleMatrix[m][1] = nDrawers03
	 moduleMatrix[m][2] = nDrawersUnder03		: m = m + 1
	 moduleMatrix[m][1] = nDrawersFront03
	 moduleMatrix[m][2] = nDrawersFrontUnder03	: m = m + 1
	 moduleMatrix[m][1] = nWire03
	 moduleMatrix[m][2] = nWireUnder03			: m = m + 1
	 moduleMatrix[m][1] = nHangers03
	 moduleMatrix[m][2] = nHangersUnder03		: m = m + 1
endif

if nModule >= 4 then
	moduleWidth[4] = modulWidth04
	 moduleMatrix[m][1] = bDivision04
	 moduleMatrix[m][2] = divisionHeight04		: m = m + 1
	 moduleMatrix[m][1] = iInteriorType04
	 moduleMatrix[m][2] = iInteriorTypeUnder04	: m = m + 1
	 moduleMatrix[m][1] = nShelves04
	 moduleMatrix[m][2] = nShelvesUnder04		: m = m + 1
	 moduleMatrix[m][1] = nDrawers04
	 moduleMatrix[m][2] = nDrawersUnder04		: m = m + 1
	 moduleMatrix[m][1] = nDrawersFront04
	 moduleMatrix[m][2] = nDrawersFrontUnder04	: m = m + 1
	 moduleMatrix[m][1] = nWire04
	 moduleMatrix[m][2] = nWireUnder04			: m = m + 1
	 moduleMatrix[m][1] = nHangers04
	 moduleMatrix[m][2] = nHangersUnder04		: m = m + 1
endif

if nModule >= 5 then
	moduleWidth[5] = modulWidth05
	 moduleMatrix[m][1] = bDivision05
	 moduleMatrix[m][2] = divisionHeight05		: m = m + 1
	 moduleMatrix[m][1] = iInteriorType05
	 moduleMatrix[m][2] = iInteriorTypeUnder05	: m = m + 1
	 moduleMatrix[m][1] = nShelves05
	 moduleMatrix[m][2] = nShelvesUnder05		: m = m + 1
	 moduleMatrix[m][1] = nDrawers05
	 moduleMatrix[m][2] = nDrawersUnder05		: m = m + 1
	 moduleMatrix[m][1] = nDrawersFront05
	 moduleMatrix[m][2] = nDrawersFrontUnder05	: m = m + 1
	 moduleMatrix[m][1] = nWire05
	 moduleMatrix[m][2] = nWireUnder05			: m = m + 1
	 moduleMatrix[m][1] = nHangers05
	 moduleMatrix[m][2] = nHangersUnder05		: m = m + 1
endif

if nModule >= 6 then
	moduleWidth[6] = modulWidth06
	 moduleMatrix[m][1] = bDivision06
	 moduleMatrix[m][2] = divisionHeight06		: m = m + 1
	 moduleMatrix[m][1] = iInteriorType06
	 moduleMatrix[m][2] = iInteriorTypeUnder06	: m = m + 1
	 moduleMatrix[m][1] = nShelves06
	 moduleMatrix[m][2] = nShelvesUnder06		: m = m + 1
	 moduleMatrix[m][1] = nDrawers06
	 moduleMatrix[m][2] = nDrawersUnder06		: m = m + 1
	 moduleMatrix[m][1] = nDrawersFront06
	 moduleMatrix[m][2] = nDrawersFrontUnder06	: m = m + 1
	 moduleMatrix[m][1] = nWire06
	 moduleMatrix[m][2] = nWireUnder06			: m = m + 1
	 moduleMatrix[m][1] = nHangers06
	 moduleMatrix[m][2] = nHangersUnder06		: m = m + 1
endif

goto 1000

"findElements":
	!-----Find Element-----
	nDrawersWithFront = 0
	nDrawers = 0
	nHangers = 0
	nShelves = 0
	for i = 1 to nModule
		if moduleMatrix[1+(i-1)*nElement][1] then									!! Horizontal division

			! Above
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_DRAWER then nDrawers = nDrawers + 1
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_DRAWERFRONT then nDrawersWithFront = nDrawersWithFront + 1
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_HANGER then nHangers = nHangers + 1
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_SHELF then nShelves = nShelves + 1

			! Under
			if moduleMatrix[2+(i-1)*nElement][2] = INTERIOR_DRAWER then nDrawers = nDrawers + 1
			if moduleMatrix[2+(i-1)*nElement][2] = INTERIOR_DRAWERFRONT then nDrawersWithFront = nDrawersWithFront + 1
			if moduleMatrix[2+(i-1)*nElement][2] = INTERIOR_HANGER then nHangers = nHangers + 1
			if moduleMatrix[2+(i-1)*nElement][2] = INTERIOR_SHELF then nShelves = nShelves + 1

		else																		!! No Division

			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_DRAWER then nDrawers = nDrawers + 1
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_DRAWERFRONT then nDrawersWithFront = nDrawersWithFront + 1
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_HANGER then nHangers = nHangers + 1
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_SHELF then nShelves = nShelves + 1
		endif
	next i
return

1000:



]]></Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

]]></Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[
ui_dialog `Wardrobe Settings`,444,266
ui_current_page gs_ui_current_page
ui_page gs_ui_current_page

dim tabTitles[6]
	tabTitles[1] = `General Settings`
	tabTitles[2] = `Interior Fittings`
	tabTitles[3] = `Door Drawer and Knob`
	tabTitles[4] = `Cornice and Leg`
	tabTitles[5] = `Appearance`
	tabTitles[6] = `3D Representation`

dim tabIcons[6]
	tabIcons[1] = "ui_tab_dimension(1)"
	tabIcons[2] = "ui_tab_wadrobe(1)"
	tabIcons[3] = "ui_tab_furniture_door(1)"
	tabIcons[4] = "ui_tab_furniture_leg(1)"
	tabIcons[5] = "ui_tab_furniture_appearance(1)"
	tabIcons[6] = "ui_tab_furniture_materials(1)"

FILE_DEPENDENCE "ui_tab_dimension(1)"
FILE_DEPENDENCE "ui_tab_wadrobe(1)"
FILE_DEPENDENCE "ui_tab_furniture_door(1)"
FILE_DEPENDENCE "ui_tab_furniture_leg(1)"
FILE_DEPENDENCE "ui_tab_furniture_appearance(1)"
FILE_DEPENDENCE "ui_tab_furniture_materials(1)"

dim stWardrobeSettingsUI[65]
	stWardrobeSettingsUI[1] = `Drawer Style`
	stWardrobeSettingsUI[2] = `3D`
	stWardrobeSettingsUI[3] = `Resolution`
	stWardrobeSettingsUI[4] = `Shadow`
	stWardrobeSettingsUI[5] = `Cabinet`
	stWardrobeSettingsUI[6] = `Door Frame`
	stWardrobeSettingsUI[7] = `Door Glass`
	stWardrobeSettingsUI[8] = `Door Mirror`
	stWardrobeSettingsUI[9] = `Door Decor 1`
	stWardrobeSettingsUI[10] = `Door Decor 2`
	stWardrobeSettingsUI[11] = `Knob`
	stWardrobeSettingsUI[12] = `Shelf`
	stWardrobeSettingsUI[13] = `Hanger`
	stWardrobeSettingsUI[14] = `Cornice`
	stWardrobeSettingsUI[15] = `Leg`
	stWardrobeSettingsUI[16] = `2D Representation`
	stWardrobeSettingsUI[17] = `2D Symbol Type`
	stWardrobeSettingsUI[18] = `Show Hanger in 2D`
	stWardrobeSettingsUI[19] = `Contour Pen`
	stWardrobeSettingsUI[20] = `Fill Type`
	stWardrobeSettingsUI[21] = `Fill Pen`
	stWardrobeSettingsUI[22] = `Background Pen`
	stWardrobeSettingsUI[23] = `Minimal Space`
	stWardrobeSettingsUI[24] = `In Front`
	stWardrobeSettingsUI[25] = `Thickness`
	stWardrobeSettingsUI[26] = `Door Style`
	stWardrobeSettingsUI[27] = `Module Plan`
	stWardrobeSettingsUI[28] = `Nr. of Modules`
	stWardrobeSettingsUI[29] = `Frame Width`
	stWardrobeSettingsUI[30] = `Mullion Width`
	stWardrobeSettingsUI[31] = `Nr. of Hor. Mullions`
	stWardrobeSettingsUI[32] = `Nr. of Vert. Mullions`
	stWardrobeSettingsUI[33] = `Knob Style`
	stWardrobeSettingsUI[34] = `Depth`
	stWardrobeSettingsUI[35] = `Uniform Module Width`
	stWardrobeSettingsUI[36] = `Frame Type`
	stWardrobeSettingsUI[37] = `Frame Width`
	stWardrobeSettingsUI[38] = `Cornice Style`
	stWardrobeSettingsUI[39] = `Side Overhang`
	stWardrobeSettingsUI[40] = `Leg Style`
	stWardrobeSettingsUI[41] = `Width`
	stWardrobeSettingsUI[42] = `Height`
	stWardrobeSettingsUI[43] = `Overhang`
	stWardrobeSettingsUI[44] = `Door Type`
	stWardrobeSettingsUI[45] = `Select Module to Edit`
	stWardrobeSettingsUI[46] = `Custom Panel Name`
	stWardrobeSettingsUI[47] = `Drawer`
	stWardrobeSettingsUI[48] = `Double Sliding`
	stWardrobeSettingsUI[49] = `Triple Sliding`
	stWardrobeSettingsUI[50] = ""
	stWardrobeSettingsUI[51] = ""
	stWardrobeSettingsUI[52] = ""
	stWardrobeSettingsUI[53] = ""
	stWardrobeSettingsUI[54] = ""
	stWardrobeSettingsUI[55] = ""
	stWardrobeSettingsUI[56] = `Horizontal Division`
	stWardrobeSettingsUI[57] = `Interior Fittings`
	stWardrobeSettingsUI[58] = `Above Division`
	stWardrobeSettingsUI[59] = `Under Division`
	stWardrobeSettingsUI[60] = `Type`
	stWardrobeSettingsUI[61] = `Nr. of Shelves`
	stWardrobeSettingsUI[62] = `Nr. of Drawers`
	stWardrobeSettingsUI[63] = `Nr. of Drawer with Front`
	stWardrobeSettingsUI[64] = `Nr. of Wire Basket`
	stWardrobeSettingsUI[65] = `Nr. of Hangers`


dim stToolTips[7]
	stToolTips[1] = `Total Width`
	stToolTips[2] = `Module 1 Width`
	stToolTips[3] = `Module 2 Width`
	stToolTips[4] = `Module 3 Width`
	stToolTips[5] = `Module 4 Width`
	stToolTips[6] = `Module 5 Width`
	stToolTips[7] = `Module 6 Width`


call "ui_tabcontrol" parameters	controlType = 1,
								nTabs = 6,
								gs_ui_current_page = gs_ui_current_page,
								tabTitles = tabTitles,
								tabIcons = tabIcons

gosub "findElements"

! ======================================================================
! Page 1
! ======================================================================

ui_page 1

x1			= 10
yStart		= 40
xHalfLevel 	= 225
xEndLevel	= 440
yHalfLevel 	= 115

hRow		= 20
hRow2		= 14
lineSpace	= 26

wDescript1	= 80
wDescript2	= 140
wBox1		= 80
wBox2		= 100
wBox3		= 65

y1 = yStart
ui_style 0, 1
ui_outfield stWardrobeSettingsUI[27], x1, y1, wDescript2,	hRow		  								! Module Plan
ui_style 0, 0
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[28], x1, y1, xHalfLevel-x1-22-wBox1,	hRow		  					! Nr. of Modules
ui_infield "nModule", xHalfLevel-10-wBox1, y1-4, wBox1, hRow  ui_tooltip stWardrobeSettingsUI[28]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[34], x1, y1, xHalfLevel-x1-22-wBox1,	hRow		  					! Depth
ui_infield "B", xHalfLevel-10-wBox1, y1-4, wBox1, hRow  ui_tooltip stWardrobeSettingsUI[34]
y1 = y1 + lineSpace

ui_infield{3} "bUniform", x1, y1-4, xHalfLevel - x1 -10, hRow,											! Uniform Module Width
	7, "",
	2,
	1, 20, 20, 20, 20,
	0, stWardrobeSettingsUI[35], 0,
	1, stWardrobeSettingsUI[35], 1	ui_tooltip stWardrobeSettingsUI[35]
y1 = yStart + lineSpace

ui_outfield stWardrobeSettingsUI[36], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox2, hRow			! Frame Type
ui_infield{3} "iFrameType", xEndLevel - wBox2-10, y1-4, wBox2, hRow,
		8, "", 3, 1, 0, 0, 0, 0,
		1, stFrameTypes[1], 1,
		2, stFrameTypes[2], 2,
		3, stFrameTypes[3], 3   ui_tooltip stWardrobeSettingsUI[36]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[37], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox2, hRow			! Frame Width
ui_infield "frameWidth", xEndLevel - wBox2-10, y1-4, wBox1, hRow ui_tooltip stWardrobeSettingsUI[37]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[44], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox2, hRow			! Door Type
ui_infield{3} "iDoorType", xEndLevel - wBox2-10, y1-4, wBox2, hRow,
		8, "", 3, 1, 0, 0, 0, 0,
		1, stWardrobeSettingsUI[48], 2,
		2, stWardrobeSettingsUI[49], 1,
		3, stDoorType[3], 0   ui_tooltip stWardrobeSettingsUI[44]
y1 = y1 + lineSpace+20


ui_pict 18, x1, y1, 6, 86, 1																! ui_mod_wardrobe_start_extended.png

for i = 1 to nModule
	if i = nModule then
		ui_pict 11, x1+6+(nModule-1)*68, y1, 68, 48, 1										! ui_mod_wardrobe_active_end.png
		ui_pict 12, x1+6+(nModule-1)*68, y1+76, 68, 10, 1									! ui_mod_wardrobe_end_extended2.png
		ui_pict 13, x1+6+(nModule-1)*68+67, y1+48, 1, 27, 1									! ui_mod_wardrobe_end_extended3.png
	else
		ui_pict 10, x1+6+(i-1)*68, y1, 68, 48, 1											! ui_mod_wardrobe_active.png
	endif
	ui_outfield str(i, 1, 0), x1+6+(i-1)*68 , y1-14, wBox3, 13	, 2			! m1, m2, m3
next i

if nModule > 1 then
	ui_pict 16, x1+6, y1+79, (nModule-1)*68, 1, 1											! ui_mod_wardrobe_line.png
	for i = 2 to nModule
		if i = 2 then
			ui_infield "modulWidth02", x1+6+(i-1)*68, y1+50, wBox3, hRow ui_tooltip stToolTips[3] 	! Module Width 02
		endif
		if i = 3 then
			ui_infield "modulWidth03", x1+6+(i-1)*68, y1+50, wBox3, hRow ui_tooltip stToolTips[4] 	! Module Width 03
		endif
		if i = 4 then
			ui_infield "modulWidth04", x1+6+(i-1)*68, y1+50, wBox3, hRow ui_tooltip stToolTips[5] 	! Module Width 04
		endif
		if i = 5 then
			ui_infield "modulWidth05", x1+6+(i-1)*68, y1+50, wBox3, hRow ui_tooltip stToolTips[6] 	! Module Width 05
		endif
		if i = 6 then
			ui_infield "modulWidth06", x1+6+(i-1)*68, y1+50, wBox3, hRow ui_tooltip stToolTips[7] 	! Module Width 06
		endif
	next i
endif

dimensionForm = ""
qq= REQUEST ("Working_length_unit", "", dimensionForm)
ui_outfield str(dimensionForm, modulWidth01), x1+6, y1+54, wBox3, hRow, 2 ui_tooltip stToolTips[2] 	! Module Width 01
ui_infield "A", x1+(6+nModule*68)/2-wBox1/2, y1+82, wBox1, hRow ui_tooltip stToolTips[1] 			! Total Width



! ======================================================================
! Page 2
! ======================================================================

ui_page 2

x1			= 10
yStart		= 38
xHalfLevel 	= 225
xEndLevel	= 440
yHalfLevel 	= 115

hRow		= 20
hRow2		= 18
lineSpace	= 24

wDescript1	= 80
wDescript2	= 140
wBox1		= 80
wBox2		= 100
wBox3		= 65

y1 = yStart
ui_style 0, 1
ui_outfield stWardrobeSettingsUI[45], x1, y1, xEndLevel-x1-22-wBox3,	hRow2		  					! Select Module to Edit
ui_style 0, 0
ui_infield{3} "nEditableModule", xEndLevel - wBox3-10, y1-4, wBox3, hRow,
		8, "", 6, 1, 0, 0, 0, 0,
		1, `1`, 1,
		2, `2`, 2,
		3, `3`, 3,
		4, `4`, 4,
		5, `5`, 5,
		6, `6`, 6   ui_tooltip stWardrobeSettingsUI[45]
y1 = y1 + 20

ui_separator x1,y1, xEndLevel, y1
y1 = y1 + 10

if nEditableModule = 1 then
	ui_infield{3} "bDivision01", x1, y1-2, xHalfLevel - x1 -10, hRow2,									! Horizontal Division
		7, "",
		2,
		1, 20, 20, 20, 20,
		0, stWardrobeSettingsUI[56], 0,
		1, stWardrobeSettingsUI[56], 1	ui_tooltip stWardrobeSettingsUI[56]

	flag = 4 * not(bDivision01)
	ui_outfield stWardrobeSettingsUI[42], xHalfLevel + 70 , y1, xEndlevel-xHalfLevel-82-wBox3, hRow2, flag	! Height
	ui_infield "divisionHeight01", xEndLevel - wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[42]
endif

if nEditableModule = 2 then
	ui_infield{3} "bDivision02", x1, y1-2, xHalfLevel - x1 -10, hRow2,									! Horizontal Division
		7, "",
		2,
		1, 20, 20, 20, 20,
		0, stWardrobeSettingsUI[56], 0,
		1, stWardrobeSettingsUI[56], 1	ui_tooltip stWardrobeSettingsUI[56]

	flag = 4 * not(bDivision02)
	ui_outfield stWardrobeSettingsUI[42], xHalfLevel + 70 , y1, xEndlevel-xHalfLevel-82-wBox3, hRow2, flag	! Height
	ui_infield "divisionHeight02", xEndLevel - wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[42]
endif

if nEditableModule = 3 then
	ui_infield{3} "bDivision03", x1, y1-2, xHalfLevel - x1 -10, hRow2,									! Horizontal Division
		7, "",
		2,
		1, 20, 20, 20, 20,
		0, stWardrobeSettingsUI[56], 0,
		1, stWardrobeSettingsUI[56], 1	ui_tooltip stWardrobeSettingsUI[56]

	flag = 4 * not(bDivision03)
	ui_outfield stWardrobeSettingsUI[42], xHalfLevel + 70 , y1, xEndlevel-xHalfLevel-82-wBox3, hRow2, flag	! Height
	ui_infield "divisionHeight03", xEndLevel - wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[42]
endif

if nEditableModule = 4 then
	ui_infield{3} "bDivision04", x1, y1-2, xHalfLevel - x1 -10, hRow2,									! Horizontal Division
		7, "",
		2,
		1, 20, 20, 20, 20,
		0, stWardrobeSettingsUI[56], 0,
		1, stWardrobeSettingsUI[56], 1	ui_tooltip stWardrobeSettingsUI[56]

	flag = 4 * not(bDivision04)
	ui_outfield stWardrobeSettingsUI[42], xHalfLevel + 70 , y1, xEndlevel-xHalfLevel-82-wBox3, hRow2, flag	! Height
	ui_infield "divisionHeight04", xEndLevel - wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[42]
endif

if nEditableModule = 5 then
	ui_infield{3} "bDivision05", x1, y1-2, xHalfLevel - x1 -10, hRow2,									! Horizontal Division
		7, "",
		2,
		1, 20, 20, 20, 20,
		0, stWardrobeSettingsUI[56], 0,
		1, stWardrobeSettingsUI[56], 1	ui_tooltip stWardrobeSettingsUI[56]

	flag = 4 * not(bDivision05)
	ui_outfield stWardrobeSettingsUI[42], xHalfLevel + 70 , y1, xEndlevel-xHalfLevel-82-wBox3, hRow2, flag	! Height
	ui_infield "divisionHeight05", xEndLevel - wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[42]
endif

if nEditableModule = 6 then
	ui_infield{3} "bDivision06", x1, y1-2, xHalfLevel - x1 -10, hRow2,									! Horizontal Division
		7, "",
		2,
		1, 20, 20, 20, 20,
		0, stWardrobeSettingsUI[56], 0,
		1, stWardrobeSettingsUI[56], 1	ui_tooltip stWardrobeSettingsUI[56]

	flag = 4 * not(bDivision06)
	ui_outfield stWardrobeSettingsUI[42], xHalfLevel + 70 , y1, xEndlevel-xHalfLevel-82-wBox3, hRow2, flag	! Height
	ui_infield "divisionHeight06", xEndLevel - wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[42]
endif
y1 = y1 + lineSpace

ui_style 0, 1
ui_outfield stWardrobeSettingsUI[57], x1, y1, xEndLevel-x1-22-wBox3,	hRow2		  					! Interior Fittings
ui_style 0, 0
y1 = y1 + lineSpace

if nEditableModule = 1 then
	if bDivision01 then
		ui_outfield stWardrobeSettingsUI[58], x1 , y1, xHalfLevel-x1-10, hRow2							! Above Division
		ui_outfield stWardrobeSettingsUI[59], xHalfLevel +10 , y1, xEndLevel-xHalfLevel-10, hRow2		! Under Division
		y1 = y1 + lineSpace

		ui_outfield stWardrobeSettingsUI[60], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox2, hRow2			! Type
		ui_infield{3} "iInteriorTypeUnder01", xEndLevel - wBox2-10, y1-4, wBox2, hRow,
				8, "", 6, 1, 0, 0, 0, 0,
				1, stInteriorType[1], 5,
				2, stInteriorType[2], 4,
				3, stInteriorType[3], 3,
				4, stInteriorType[4], 2,
				5, stInteriorType[5], 1,
				6, stInteriorType[6], 0   ui_tooltip stWardrobeSettingsUI[60]
		y1 = y1 + lineSpace

		if iInteriorTypeUnder01 = INTERIOR_HANGER then
			ui_outfield stWardrobeSettingsUI[65], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Hangers
			ui_infield{3} "nHangersUnder01", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[65]
		endif

		if iInteriorTypeUnder01 = INTERIOR_WIRE then
			ui_outfield stWardrobeSettingsUI[64], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Wire Basket
			ui_infield{3} "nWireUnder01", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[64]
		endif

		if iInteriorTypeUnder01 = INTERIOR_DRAWERFRONT then
			ui_outfield stWardrobeSettingsUI[63], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Drawer with Front
			ui_infield{3} "nDrawersFrontUnder01", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[63]
		endif

		if iInteriorTypeUnder01 = INTERIOR_DRAWER then
			ui_outfield stWardrobeSettingsUI[62], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Drawers
			ui_infield{3} "nDrawersUnder01", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[62]
		endif

		if iInteriorTypeUnder01 = INTERIOR_SHELF then
			ui_outfield stWardrobeSettingsUI[61], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Shelves
			ui_infield{3} "nShelvesUnder01", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[61]
		endif
		y1 = y1 - lineSpace
	endif

	ui_outfield stWardrobeSettingsUI[60], x1 , y1, xHalfLevel-22-wBox2, hRow2			! Type
	ui_infield{3} "iInteriorType01", xHalfLevel - wBox2-10, y1-4, wBox2, hRow,
			8, "", 6, 1, 0, 0, 0, 0,
			1, stInteriorType[1], 5,
			2, stInteriorType[2], 4,
			3, stInteriorType[3], 3,
			4, stInteriorType[4], 2,
			5, stInteriorType[5], 1,
			6, stInteriorType[6], 0   ui_tooltip stWardrobeSettingsUI[60]
	y1 = y1 + lineSpace

	if iInteriorType01 = INTERIOR_HANGER then
		ui_outfield stWardrobeSettingsUI[65], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Hangers
		ui_infield{3} "nHangers01", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[65]
	endif

	if iInteriorType01 = INTERIOR_WIRE then
		ui_outfield stWardrobeSettingsUI[64], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Wire Basket
		ui_infield{3} "nWire01", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[64]
	endif

	if iInteriorType01 = INTERIOR_DRAWERFRONT then
		ui_outfield stWardrobeSettingsUI[63], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Drawer with Front
		ui_infield{3} "nDrawersFront01", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[63]
	endif

	if iInteriorType01 = INTERIOR_DRAWER then
		ui_outfield stWardrobeSettingsUI[62], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Drawers
		ui_infield{3} "nDrawers01", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[62]
	endif

	if iInteriorType01 = INTERIOR_SHELF then
		ui_outfield stWardrobeSettingsUI[61], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Shelves
		ui_infield{3} "nShelves01", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[61]
	endif
	y1 = y1 + lineSpace
endif

if nEditableModule = 2 then
	if bDivision02 then
		ui_outfield stWardrobeSettingsUI[58], x1 , y1, xHalfLevel-x1-10, hRow2							! Above Division
		ui_outfield stWardrobeSettingsUI[59], xHalfLevel +10 , y1, xEndLevel-xHalfLevel-10, hRow2		! Under Division
		y1 = y1 + lineSpace

		ui_outfield stWardrobeSettingsUI[60], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox2, hRow2			! Type
		ui_infield{3} "iInteriorTypeUnder02", xEndLevel - wBox2-10, y1-4, wBox2, hRow,
				8, "", 6, 1, 0, 0, 0, 0,
				1, stInteriorType[1], 5,
				2, stInteriorType[2], 4,
				3, stInteriorType[3], 3,
				4, stInteriorType[4], 2,
				5, stInteriorType[5], 1,
				6, stInteriorType[6], 0   ui_tooltip stWardrobeSettingsUI[60]
		y1 = y1 + lineSpace

		if iInteriorTypeUnder02 = INTERIOR_HANGER then
			ui_outfield stWardrobeSettingsUI[65], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Hangers
			ui_infield{3} "nHangersUnder02", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[65]
		endif

		if iInteriorTypeUnder02 = INTERIOR_WIRE then
			ui_outfield stWardrobeSettingsUI[64], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Wire Basket
			ui_infield{3} "nWireUnder02", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[64]
		endif

		if iInteriorTypeUnder02 = INTERIOR_DRAWERFRONT then
			ui_outfield stWardrobeSettingsUI[63], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Drawer with Front
			ui_infield{3} "nDrawersFrontUnder02", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[63]
		endif

		if iInteriorTypeUnder02 = INTERIOR_DRAWER then
			ui_outfield stWardrobeSettingsUI[62], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Drawers
			ui_infield{3} "nDrawersUnder02", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[62]
		endif

		if iInteriorTypeUnder02 = INTERIOR_SHELF then
			ui_outfield stWardrobeSettingsUI[61], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Shelves
			ui_infield{3} "nShelvesUnder02", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[61]
		endif
		y1 = y1 - lineSpace
	endif

	ui_outfield stWardrobeSettingsUI[60], x1 , y1, xHalfLevel-22-wBox2, hRow2			! Type
	ui_infield{3} "iInteriorType02", xHalfLevel - wBox2-10, y1-4, wBox2, hRow,
			8, "", 6, 1, 0, 0, 0, 0,
			1, stInteriorType[1], 5,
			2, stInteriorType[2], 4,
			3, stInteriorType[3], 3,
			4, stInteriorType[4], 2,
			5, stInteriorType[5], 1,
			6, stInteriorType[6], 0   ui_tooltip stWardrobeSettingsUI[60]
	y1 = y1 + lineSpace

	if iInteriorType02 = INTERIOR_HANGER then
		ui_outfield stWardrobeSettingsUI[65], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Hangers
		ui_infield{3} "nHangers02", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[65]
	endif

	if iInteriorType02 = INTERIOR_WIRE then
		ui_outfield stWardrobeSettingsUI[64], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Wire Basket
		ui_infield{3} "nWire02", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[64]
	endif

	if iInteriorType02 = INTERIOR_DRAWERFRONT then
		ui_outfield stWardrobeSettingsUI[63], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Drawer with Front
		ui_infield{3} "nDrawersFront02", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[63]
	endif

	if iInteriorType02 = INTERIOR_DRAWER then
		ui_outfield stWardrobeSettingsUI[62], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Drawers
		ui_infield{3} "nDrawers02", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[62]
	endif

	if iInteriorType02 = INTERIOR_SHELF then
		ui_outfield stWardrobeSettingsUI[61], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Shelves
		ui_infield{3} "nShelves02", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[61]
	endif
	y1 = y1 + lineSpace
endif

if nEditableModule = 3 then
	if bDivision03 then
		ui_outfield stWardrobeSettingsUI[58], x1 , y1, xHalfLevel-x1-10, hRow2							! Above Division
		ui_outfield stWardrobeSettingsUI[59], xHalfLevel +10 , y1, xEndLevel-xHalfLevel-10, hRow2		! Under Division
		y1 = y1 + lineSpace

		ui_outfield stWardrobeSettingsUI[60], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox2, hRow2			! Type
		ui_infield{3} "iInteriorTypeUnder03", xEndLevel - wBox2-10, y1-4, wBox2, hRow,
				8, "", 6, 1, 0, 0, 0, 0,
				1, stInteriorType[1], 5,
				2, stInteriorType[2], 4,
				3, stInteriorType[3], 3,
				4, stInteriorType[4], 2,
				5, stInteriorType[5], 1,
				6, stInteriorType[6], 0   ui_tooltip stWardrobeSettingsUI[60]
		y1 = y1 + lineSpace

		if iInteriorTypeUnder03 = INTERIOR_HANGER then
			ui_outfield stWardrobeSettingsUI[65], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Hangers
			ui_infield{3} "nHangersUnder03", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[65]
		endif

		if iInteriorTypeUnder03 = INTERIOR_WIRE then
			ui_outfield stWardrobeSettingsUI[64], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Wire Basket
			ui_infield{3} "nWireUnder03", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[64]
		endif

		if iInteriorTypeUnder03 = INTERIOR_DRAWERFRONT then
			ui_outfield stWardrobeSettingsUI[63], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Drawer with Front
			ui_infield{3} "nDrawersFrontUnder03", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[63]
		endif

		if iInteriorTypeUnder03 = INTERIOR_DRAWER then
			ui_outfield stWardrobeSettingsUI[62], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Drawers
			ui_infield{3} "nDrawersUnder03", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[62]
		endif

		if iInteriorTypeUnder03 = INTERIOR_SHELF then
			ui_outfield stWardrobeSettingsUI[61], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Shelves
			ui_infield{3} "nShelvesUnder03", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[61]
		endif
		y1 = y1 - lineSpace
	endif

	ui_outfield stWardrobeSettingsUI[60], x1 , y1, xHalfLevel-22-wBox2, hRow2			! Type
	ui_infield{3} "iInteriorType03", xHalfLevel - wBox2-10, y1-4, wBox2, hRow,
			8, "", 6, 1, 0, 0, 0, 0,
			1, stInteriorType[1], 5,
			2, stInteriorType[2], 4,
			3, stInteriorType[3], 3,
			4, stInteriorType[4], 2,
			5, stInteriorType[5], 1,
			6, stInteriorType[6], 0   ui_tooltip stWardrobeSettingsUI[60]
	y1 = y1 + lineSpace

	if iInteriorType03 = INTERIOR_HANGER then
		ui_outfield stWardrobeSettingsUI[65], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Hangers
		ui_infield{3} "nHangers03", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[65]
	endif

	if iInteriorType03 = INTERIOR_WIRE then
		ui_outfield stWardrobeSettingsUI[64], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Wire Basket
		ui_infield{3} "nWire03", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[64]
	endif

	if iInteriorType03 = INTERIOR_DRAWERFRONT then
		ui_outfield stWardrobeSettingsUI[63], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Drawer with Front
		ui_infield{3} "nDrawersFront03", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[63]
	endif

	if iInteriorType03 = INTERIOR_DRAWER then
		ui_outfield stWardrobeSettingsUI[62], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Drawers
		ui_infield{3} "nDrawers03", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[62]
	endif

	if iInteriorType03 = INTERIOR_SHELF then
		ui_outfield stWardrobeSettingsUI[61], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Shelves
		ui_infield{3} "nShelves03", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[61]
	endif
	y1 = y1 + lineSpace
endif

if nEditableModule = 4 then
	if bDivision04 then
		ui_outfield stWardrobeSettingsUI[58], x1 , y1, xHalfLevel-x1-10, hRow2							! Above Division
		ui_outfield stWardrobeSettingsUI[59], xHalfLevel +10 , y1, xEndLevel-xHalfLevel-10, hRow2		! Under Division
		y1 = y1 + lineSpace

		ui_outfield stWardrobeSettingsUI[60], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox2, hRow2			! Type
		ui_infield{3} "iInteriorTypeUnder04", xEndLevel - wBox2-10, y1-4, wBox2, hRow,
				8, "", 6, 1, 0, 0, 0, 0,
				1, stInteriorType[1], 5,
				2, stInteriorType[2], 4,
				3, stInteriorType[3], 3,
				4, stInteriorType[4], 2,
				5, stInteriorType[5], 1,
				6, stInteriorType[6], 0   ui_tooltip stWardrobeSettingsUI[60]
		y1 = y1 + lineSpace

		if iInteriorTypeUnder04 = INTERIOR_HANGER then
			ui_outfield stWardrobeSettingsUI[65], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Hangers
			ui_infield{3} "nHangersUnder04", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[65]
		endif

		if iInteriorTypeUnder04 = INTERIOR_WIRE then
			ui_outfield stWardrobeSettingsUI[64], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Wire Basket
			ui_infield{3} "nWireUnder04", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[64]
		endif

		if iInteriorTypeUnder04 = INTERIOR_DRAWERFRONT then
			ui_outfield stWardrobeSettingsUI[63], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Drawer with Front
			ui_infield{3} "nDrawersFrontUnder04", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[63]
		endif

		if iInteriorTypeUnder04 = INTERIOR_DRAWER then
			ui_outfield stWardrobeSettingsUI[62], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Drawers
			ui_infield{3} "nDrawersUnder04", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[62]
		endif

		if iInteriorTypeUnder04 = INTERIOR_SHELF then
			ui_outfield stWardrobeSettingsUI[61], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Shelves
			ui_infield{3} "nShelvesUnder04", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[61]
		endif
		y1 = y1 - lineSpace
	endif

	ui_outfield stWardrobeSettingsUI[60], x1 , y1, xHalfLevel-22-wBox2, hRow2			! Type
	ui_infield{3} "iInteriorType04", xHalfLevel - wBox2-10, y1-4, wBox2, hRow,
			8, "", 6, 1, 0, 0, 0, 0,
			1, stInteriorType[1], 5,
			2, stInteriorType[2], 4,
			3, stInteriorType[3], 3,
			4, stInteriorType[4], 2,
			5, stInteriorType[5], 1,
			6, stInteriorType[6], 0   ui_tooltip stWardrobeSettingsUI[60]
	y1 = y1 + lineSpace

	if iInteriorType04 = INTERIOR_HANGER then
		ui_outfield stWardrobeSettingsUI[65], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Hangers
		ui_infield{3} "nHangers04", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[65]
	endif

	if iInteriorType04 = INTERIOR_WIRE then
		ui_outfield stWardrobeSettingsUI[64], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Wire Basket
		ui_infield{3} "nWire04", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[64]
	endif

	if iInteriorType04 = INTERIOR_DRAWERFRONT then
		ui_outfield stWardrobeSettingsUI[63], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Drawer with Front
		ui_infield{3} "nDrawersFront04", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[63]
	endif

	if iInteriorType04 = INTERIOR_DRAWER then
		ui_outfield stWardrobeSettingsUI[62], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Drawers
		ui_infield{3} "nDrawers04", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[62]
	endif

	if iInteriorType04 = INTERIOR_SHELF then
		ui_outfield stWardrobeSettingsUI[61], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Shelves
		ui_infield{3} "nShelves04", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[61]
	endif
	y1 = y1 + lineSpace
endif

if nEditableModule = 5 then
	if bDivision05 then
		ui_outfield stWardrobeSettingsUI[58], x1 , y1, xHalfLevel-x1-10, hRow2							! Above Division
		ui_outfield stWardrobeSettingsUI[59], xHalfLevel +10 , y1, xEndLevel-xHalfLevel-10, hRow2		! Under Division
		y1 = y1 + lineSpace

		ui_outfield stWardrobeSettingsUI[60], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox2, hRow2			! Type
		ui_infield{3} "iInteriorTypeUnder05", xEndLevel - wBox2-10, y1-4, wBox2, hRow,
				8, "", 6, 1, 0, 0, 0, 0,
				1, stInteriorType[1], 5,
				2, stInteriorType[2], 4,
				3, stInteriorType[3], 3,
				4, stInteriorType[4], 2,
				5, stInteriorType[5], 1,
				6, stInteriorType[6], 0   ui_tooltip stWardrobeSettingsUI[60]
		y1 = y1 + lineSpace

		if iInteriorTypeUnder05 = INTERIOR_HANGER then
			ui_outfield stWardrobeSettingsUI[65], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Hangers
			ui_infield{3} "nHangersUnder05", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[65]
		endif

		if iInteriorTypeUnder05 = INTERIOR_WIRE then
			ui_outfield stWardrobeSettingsUI[64], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Wire Basket
			ui_infield{3} "nWireUnder05", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[64]
		endif

		if iInteriorTypeUnder05 = INTERIOR_DRAWERFRONT then
			ui_outfield stWardrobeSettingsUI[63], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Drawer with Front
			ui_infield{3} "nDrawersFrontUnder05", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[63]
		endif

		if iInteriorTypeUnder05 = INTERIOR_DRAWER then
			ui_outfield stWardrobeSettingsUI[62], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Drawers
			ui_infield{3} "nDrawersUnder05", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[62]
		endif

		if iInteriorTypeUnder05 = INTERIOR_SHELF then
			ui_outfield stWardrobeSettingsUI[61], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Shelves
			ui_infield{3} "nShelvesUnder05", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[61]
		endif
		y1 = y1 - lineSpace
	endif

	ui_outfield stWardrobeSettingsUI[60], x1 , y1, xHalfLevel-22-wBox2, hRow2			! Type
	ui_infield{3} "iInteriorType05", xHalfLevel - wBox2-10, y1-4, wBox2, hRow,
			8, "", 6, 1, 0, 0, 0, 0,
			1, stInteriorType[1], 5,
			2, stInteriorType[2], 4,
			3, stInteriorType[3], 3,
			4, stInteriorType[4], 2,
			5, stInteriorType[5], 1,
			6, stInteriorType[6], 0   ui_tooltip stWardrobeSettingsUI[60]
	y1 = y1 + lineSpace

	if iInteriorType05 = INTERIOR_HANGER then
		ui_outfield stWardrobeSettingsUI[65], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Hangers
		ui_infield{3} "nHangers05", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[65]
	endif

	if iInteriorType05 = INTERIOR_WIRE then
		ui_outfield stWardrobeSettingsUI[64], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Wire Basket
		ui_infield{3} "nWire05", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[64]
	endif

	if iInteriorType05 = INTERIOR_DRAWERFRONT then
		ui_outfield stWardrobeSettingsUI[63], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Drawer with Front
		ui_infield{3} "nDrawersFront05", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[63]
	endif

	if iInteriorType05 = INTERIOR_DRAWER then
		ui_outfield stWardrobeSettingsUI[62], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Drawers
		ui_infield{3} "nDrawers05", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[62]
	endif

	if iInteriorType05 = INTERIOR_SHELF then
		ui_outfield stWardrobeSettingsUI[61], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Shelves
		ui_infield{3} "nShelves05", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[61]
	endif
	y1 = y1 + lineSpace
endif

if nEditableModule = 6 then
	if bDivision06 then
		ui_outfield stWardrobeSettingsUI[58], x1 , y1, xHalfLevel-x1-10, hRow2							! Above Division
		ui_outfield stWardrobeSettingsUI[59], xHalfLevel +10 , y1, xEndLevel-xHalfLevel-10, hRow2		! Under Division
		y1 = y1 + lineSpace

		ui_outfield stWardrobeSettingsUI[60], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox2, hRow2			! Type
		ui_infield{3} "iInteriorTypeUnder06", xEndLevel - wBox2-10, y1-4, wBox2, hRow,
				8, "", 6, 1, 0, 0, 0, 0,
				1, stInteriorType[1], 5,
				2, stInteriorType[2], 4,
				3, stInteriorType[3], 3,
				4, stInteriorType[4], 2,
				5, stInteriorType[5], 1,
				6, stInteriorType[6], 0   ui_tooltip stWardrobeSettingsUI[60]
		y1 = y1 + lineSpace

		if iInteriorTypeUnder06 = INTERIOR_HANGER then
			ui_outfield stWardrobeSettingsUI[65], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Hangers
			ui_infield{3} "nHangersUnder06", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[65]
		endif

		if iInteriorTypeUnder06 = INTERIOR_WIRE then
			ui_outfield stWardrobeSettingsUI[64], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Wire Basket
			ui_infield{3} "nWireUnder06", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[64]
		endif

		if iInteriorTypeUnder06 = INTERIOR_DRAWERFRONT then
			ui_outfield stWardrobeSettingsUI[63], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Drawer with Front
			ui_infield{3} "nDrawersFrontUnder06", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[63]
		endif

		if iInteriorTypeUnder06 = INTERIOR_DRAWER then
			ui_outfield stWardrobeSettingsUI[62], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Drawers
			ui_infield{3} "nDrawersUnder06", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[62]
		endif

		if iInteriorTypeUnder06 = INTERIOR_SHELF then
			ui_outfield stWardrobeSettingsUI[61], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-22-wBox3, hRow2			! Nr. of Shelves
			ui_infield{3} "nShelvesUnder06", xEndLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[61]
		endif
		y1 = y1 - lineSpace
	endif

	ui_outfield stWardrobeSettingsUI[60], x1 , y1, xHalfLevel-22-wBox2, hRow2			! Type
	ui_infield{3} "iInteriorType06", xHalfLevel - wBox2-10, y1-4, wBox2, hRow,
			8, "", 6, 1, 0, 0, 0, 0,
			1, stInteriorType[1], 5,
			2, stInteriorType[2], 4,
			3, stInteriorType[3], 3,
			4, stInteriorType[4], 2,
			5, stInteriorType[5], 1,
			6, stInteriorType[6], 0   ui_tooltip stWardrobeSettingsUI[60]
	y1 = y1 + lineSpace

	if iInteriorType06 = INTERIOR_HANGER then
		ui_outfield stWardrobeSettingsUI[65], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Hangers
		ui_infield{3} "nHangers06", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[65]
	endif

	if iInteriorType06 = INTERIOR_WIRE then
		ui_outfield stWardrobeSettingsUI[64], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Wire Basket
		ui_infield{3} "nWire06", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[64]
	endif

	if iInteriorType06 = INTERIOR_DRAWERFRONT then
		ui_outfield stWardrobeSettingsUI[63], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Drawer with Front
		ui_infield{3} "nDrawersFront06", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[63]
	endif

	if iInteriorType06 = INTERIOR_DRAWER then
		ui_outfield stWardrobeSettingsUI[62], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Drawers
		ui_infield{3} "nDrawers06", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[62]
	endif

	if iInteriorType06 = INTERIOR_SHELF then
		ui_outfield stWardrobeSettingsUI[61], x1 , y1, xHalfLevel-22-wBox3, hRow2			! Nr. of Shelves
		ui_infield{3} "nShelves06", xHalfLevel-wBox3-10, y1-4, wBox3, hRow2 ui_tooltip stWardrobeSettingsUI[61]
	endif
	y1 = y1 + lineSpace
endif

if nEditableModule = 1 and not(bDivision01) then y1 = y1 + lineSpace
if nEditableModule = 2 and not(bDivision02) then y1 = y1 + lineSpace
if nEditableModule = 3 and not(bDivision03) then y1 = y1 + lineSpace
if nEditableModule = 4 and not(bDivision04) then y1 = y1 + lineSpace
if nEditableModule = 5 and not(bDivision05) then y1 = y1 + lineSpace
if nEditableModule = 6 and not(bDivision06) then y1 = y1 + lineSpace

y1 = y1 + 14

ui_pict 17, x1, y1, 6, 48, 1																! ui_mod_wardrobe_start.png
dimensionForm = ""
qq= REQUEST ("Working_length_unit", "", dimensionForm)
for i = 1 to nModule
	if i = nModule then
		if i = nEditableModule then
			ui_pict 11, x1+6+(nModule-1)*68, y1, 68, 48, 1									! ui_mod_wardrobe_active_end.png
		else
			ui_pict 15, x1+6+(nModule-1)*68, y1, 68, 48, 1									! ui_mod_wardrobe_inactive_end.png
		endif
	else
		if i = nEditableModule then
			ui_pict 10, x1+6+(i-1)*68, y1, 68, 48, 1										! ui_mod_wardrobe_active.png
		else
			ui_pict 14, x1+6+(i-1)*68, y1, 68, 48, 1										! ui_mod_wardrobe_inactive.png
		endif
	endif
	ui_outfield str(i, 1, 0), x1+6+(i-1)*68 , y1-14, wBox3, 13, 2				! m1, m2, m3
	ui_outfield str(dimensionForm, moduleWidth[i]), x1+6+(i-1)*68, y1+50, wBox3, 13, 2 ui_tooltip stToolTips[1+i] 	! Module Width xx
next i




! ======================================================================
! Page 3
! ======================================================================

ui_page 3

x1			= 10
yStart		= 40
xHalfLevel 	= 225
xEndLevel	= 440

hRow		= 18
hPict		= 85
lineSpace	= 24

wDescript1	= 100
wDescript2	= 80
wBox1		= 75
wBox2		= 100
wPict		= 120

ui_separator xHalfLevel, 32, xHalfLevel, 266

! ------ 1. Column - Door -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[26],	x1,	y1,	xHalfLevel-x1-12-wPict , hRow							! Door Style
ui_infield{3} "iDoorStyle", xHalfLevel - wPict - 10, y1-4, wPict, hPict,
	2, "ui_WardDoorTyp(1)", 20, 5,																			! ui_WardDoorTyp(1).png
	65,hPict,60,80,
	2, stDoorStyle[1], 1,
	14, stDoorStyle[2], 13,
	4, stDoorStyle[3], 3,
	10, stDoorStyle[4], 9,
	5, stDoorStyle[5], 4,
	6, stDoorStyle[6], 5,
	15, stDoorStyle[7], 14,
	16, stDoorStyle[8], 15,
	17, stDoorStyle[9], 16,
	18, stDoorStyle[10], 17,
	19, stDoorStyle[11], 18,
	11, stDoorStyle[12], 10 ui_tooltip  stWardrobeSettingsUI[26]
y1 = y1 + hPict +5

ui_outfield stWardrobeSettingsUI[25], x1 , y1, xHalfLevel-x1-12-wBox1, hRow								! Thickness
ui_infield "doorThickness", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[25]
y1 = y1 + lineSpace

if iDoorStyle <> 10 then
	ui_outfield stWardrobeSettingsUI[29], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Frame Width
	ui_infield "doorFrameWidth", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[29]
	y1 = y1 + lineSpace

	ui_outfield stWardrobeSettingsUI[30], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Mullion Width
	ui_infield "mullionWidth", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[30]
	y1 = y1 + lineSpace

	ui_outfield stWardrobeSettingsUI[31], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Nr. of Hor, Mullions
	ui_infield "nHorizontalMullion", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[31]
	y1 = y1 + lineSpace

	ui_outfield stWardrobeSettingsUI[32], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Nr. of Vert. Mullions
	ui_infield "nVerticalMullion", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[32]
	y1 = y1 + lineSpace
else
	ui_outfield stWardrobeSettingsUI[46], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Custom Panel Name
	y1 = y1 + lineSpace
	ui_infield "doorCustomPanelName", x1+10, y1-2,	xHalfLevel-x1-20, hRow		ui_tooltip stWardrobeSettingsUI[46]
endif

! ------ 2. Column - Drawer -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[1],	xHalfLevel +10,	y1,	xEndlevel-xHalfLevel-22-wPict , hRow		! Drawer Style
ui_infield{3} "iDrawerStyle", xEndLevel - wPict - 10, y1-4, wPict, hPict,
	2, "ui_WardDrawerTyp(1)", 20, 5,																		! ui_WardDrawerTyp(1).png
	65,hPict,60,40,
	2, stDrawerTypes[1], 1,
	3, stDrawerTypes[2], 2,
	4, stDrawerTypes[3], 3 ui_tooltip  stWardrobeSettingsUI[1]
y1 = y1 + hPict +5

ui_outfield stWardrobeSettingsUI[29], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-x1-22-wBox1, hRow		! Frame Width
ui_infield "drawerFrameWidth", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[29]
y1 = y1 + lineSpace

ui_separator xHalfLevel+3, y1+4, xEndLevel, y1+4
y1 = y1 + 20

ui_outfield stWardrobeSettingsUI[33],	xHalfLevel +10,	y1,	xEndlevel-xHalfLevel-22-wPict , hRow		! Knob Style
ui_infield{3} "gs_knob_type_m", xEndLevel - wPict - 10, y1-4, wPict, hPict,
	2, "Knob_Types_N(13)",12,4,
	65,hPict,60,80,
	1, stKnobTypes[2], 1,
	2, stKnobTypes[3], 2,
	3, stKnobTypes[4], 3,
	4, stKnobTypes[5], 4,
	5, stKnobTypes[6], 5,
	6, stKnobTypes[7], 6,
	7, stKnobTypes[8], 7,
	8, stKnobTypes[9], 8,
	9, stKnobTypes[1], 0 ui_tooltip  stWardrobeSettingsUI[33]


! ======================================================================
! Page 4
! ======================================================================

ui_page 4

x1			= 10
yStart		= 43
xHalfLevel 	= 225
xEndLevel	= 440

hRow		= 18
hPict		= 85
lineSpace	= 24

wDescript1	= 100
wDescript2	= 80
wBox1		= 65
wBox2		= 100
wPict		= 120

ui_separator xHalfLevel, 32, xHalfLevel, 266


! ------ 1. Column - Cornice -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[38],	x1,	y1,	xHalfLevel-x1-12-wPict , hRow						! Cornice Style
ui_infield{3} "gs_cornice_type_m", xHalfLevel - wPict - 10, y1-4, wPict, hPict,
	2, "ui_CabCorniceTyp(2)", 6,2,																		! ui_CabCorniceTyp(2).png
	65,hPict,60,20,
	1, stCorniceTypes[2], 1,
	2, stCorniceTypes[3], 2,
	3, stCorniceTypes[4], 3,
	4, stCorniceTypes[5], 4,
	5, stCorniceTypes[1], 0 ui_tooltip  stWardrobeSettingsUI[38]
y1 = y1 + hPict + linespace

ui_outfield stWardrobeSettingsUI[43], x1 , y1, xHalfLevel-x1-22-wBox1, hRow							! Overhang
ui_infield "cooh", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow	ui_tooltip stWardrobeSettingsUI[43]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[42], x1 , y1, xHalfLevel-x1-22-wBox1, hRow							! Height
ui_infield "cot", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow	ui_tooltip stWardrobeSettingsUI[42]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[39], x1 , y1, xHalfLevel-x1-85, hRow								! Side Overhang
ui_infield{3} "gs_lining_m", xHalfLevel - 80, y1-2, 54, 34,
		3, "ui_CorniceOverhang(13)", 4, 1, 54, 34, 50, 30,
		1, stCorniceOverhang[1], 4,
		2, stCorniceOverhang[2], 3,
		3, stCorniceOverhang[3], 2,
		4, stCorniceOverhang[4], 1   ui_tooltip stWardrobeSettingsUI[39]


! ------ 2. Column - Leg -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[40],	xHalfLevel +10,	y1,	xEndlevel-xHalfLevel-22-wPict , hRow	! Leg Style
ui_infield{3} "gs_leg_type_m", xEndLevel - wPict - 10, y1-4, wPict, hPict,
	2, "ui_CabLegTyp(1)", 8,2,																			! ui_CabLegTyp(1).png
	65,hPict,60,60,
	1, stLegTypes[2], 1,
	2, stLegTypes[3], 2,
	3, stLegTypes[4], 3,
	4, stLegTypes[5], 4,
	5, stLegTypes[6], 5,
	6, stLegTypes[7], 6,
	7, stLegTypes[1], 0 ui_tooltip  stWardrobeSettingsUI[40]
y1 = y1 + hPict + linespace

ui_outfield stWardrobeSettingsUI[42], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-x1-22-wBox1, hRow			! Height
ui_infield "leg_h", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[42]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[41], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-x1-22-wBox1, hRow			! Width
ui_infield "leg_w", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[41]



! ======================================================================
! Page 5
! ======================================================================

ui_page 5

x1			= 10
yStart		= 45
xHalfLevel 	= 230
xEndLevel	= 440

hRow		= 18
hPenBox		= 22
hFillBox	= 24
hMatBox		= 24
lineSpace	= 30

wDescript1	= 150
wDescript2	= 80
wBox1		= 90
wPenBox		= 35
wFillBox	= 80
wMatBox		= 130

ui_style 0, 1
ui_outfield stWardrobeSettingsUI[16],	x1,		yStart,	wDescript1,	hRow								! 2D Representation
ui_style 0, 0
y1 = yStart + lineSpace

x1 = x1 +5
ui_outfield stWardrobeSettingsUI[17],	x1,	y1,	wDescript1,	hRow										! 2D Symbol Type
y1 = y1 + lineSpace

ui_infield{3} "iSymbolType", 30, y1-10, 79, 64,
	3,"2Dstypcab(13)",8,2,
	79,64,75,60,
	1, stSymbolTypes[1], 1,
	5, stSymbolTypes[2], 2,
	6, stSymbolTypes[3], 3,
	2, stSymbolTypes[4], 4 ui_tooltip  stWardrobeSettingsUI[17]
y1 = y1 + 2*lineSpace

ui_infield{3} "bHangers", x1, y1-2, xHalfLevel-x1, hRow,													! Show Hanger in 2D
	7, "",
	2,
	1, 20, 20, 20, 20,
	0, stWardrobeSettingsUI[18], 0,
	1, stWardrobeSettingsUI[18], 1	ui_tooltip stWardrobeSettingsUI[18]


! ------ 2. Column - 2D Representation -------

y1 =  yStart + lineSpace
ui_outfield stWardrobeSettingsUI[19], xHalfLevel + 10 , y1, wDescript2, hRow							! Contour Pen
ui_infield "gs_cont_pen",	xEndLevel - wPenBox - 10, y1-4, wPenBox, hPenBox  ui_tooltip stWardrobeSettingsUI[19]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[20], xHalfLevel + 10, y1, wDescript2,	hRow							! Fill Type
ui_infield "gs_fill_type",	xEndLevel - wFillBox - 10, y1-5, wFillBox, hFillBox  ui_tooltip stWardrobeSettingsUI[20]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[21], xHalfLevel + 10, y1, wDescript1,	hRow							! Fill Pen
ui_infield "gs_fill_pen",	xEndLevel - wPenBox - 10, y1-4, wPenBox, hPenBox  ui_tooltip stWardrobeSettingsUI[21]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[22], xHalfLevel + 10, y1, wDescript1,	hRow							! Fill Background Pen
ui_infield "gs_back_pen",	xEndLevel - wPenBox -10 , y1-4, wPenBox, hPenBox  ui_tooltip stWardrobeSettingsUI[22]
y1 = y1 + lineSpace

ui_separator x1 , y1, xEndLevel, y1
y1 = y1 + lineSpace/2

ui_style 0, 1
ui_outfield stWardrobeSettingsUI[23],	x1,		y1,	wDescript1,	hRow									! Minimal Space
ui_style 0, 0
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[24], x1, y1, xHalfLevel - x1 - wDescript2 - 22,	hRow				! In Front
ui_infield "MSFront",	xHalfLevel - wDescript2 - 10 , y1, wDescript2, hRow  ui_tooltip stWardrobeSettingsUI[24]



! ======================================================================
! Page 6
! ======================================================================

ui_page 6

x1			= 10
yStart		= 40
xHalfLevel 	= 240
xEndLevel	= 440

hRow		= 18
hMatBox		= 24
lineSpace1	= 28
lineSpace2	= 24

wDescript1	= 115
wDescript2	= 80
wBox1		= 80
wMatBox		= 100
wPictBox	= 15


! ------ 1. Column - 3D -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[2], x1 , y1, wDescript1, hRow		  											! 3D
ui_infield{3} "gs_detlevel_3D_m", x1+wDescript1+2, y1-4, wBox1, hRow,
		8, "", 3, 1, 0, 0, 0, 0,
		1, stDetlevel3D[1], 2,
		2, stDetlevel3D[2], 1,
		3, stDetlevel3D[3], 0   ui_tooltip stWardrobeSettingsUI[2]
y1 = y1 + lineSpace2

ui_outfield stWardrobeSettingsUI[3], x1 , y1, wDescript1, hRow		  											! Resolution
ui_infield "gs_resol", x1+wDescript1+2, y1-4, wBox1, hRow  ui_tooltip stWardrobeSettingsUI[3]
y1 = y1 + lineSpace2

y1 = yStart
ui_infield{3} "gs_shadow", xHalfLevel, y1-2, 440-xHalfLevel, hRow,													! Shadow
	7, "",
	2,
	1, 20, 20, 20, 20,
	0, stWardrobeSettingsUI[4], 0,
	1, stWardrobeSettingsUI[4], 1	ui_tooltip stWardrobeSettingsUI[4]
y1 = y1 + lineSpace2*2 - 2


ui_separator 0, y1, 444, y1
yStart = y1 + lineSpace2*0.5

! ------ 1. Column - Materials -------
y1 = yStart
ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[5]												! ui_mat(1).png
ui_outfield stWardrobeSettingsUI[5], x1 + wPictBox, y1, wDescript2,	hRow		  								! Cabinet
if iFrameType = FRAME_WIRE then
	ui_infield "matSteelCabinet", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[5]
else
	ui_infield "gs_cabinet_mat", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[5]
endif
y1 = y1 + lineSpace1

bDoor = 0 !(iFrontAbove = FRONT_DRAWER or iFrontAbove = FRONT_SLIDING or iFrontUnder = FRONT_DRAWER or iFrontUnder = FRONT_SLIDING)

flag = 4 * (iDoorStyle = 1 or iDoorStyle = 8 or iDoorStyle = 10 or nDoor=1)
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[6]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[6]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[6], x1 + wPictBox, y1, wDescript2,	hRow, flag	  								! Door Frame
ui_infield "matDoorFrame", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[6]
y1 = y1 + lineSpace1

flag = 4 * (iDoorStyle <> 3 and iDoorStyle <> 5 and iDoorStyle <> 7 and iDoorStyle <> 9 and iDoorStyle <> 12 or nDoor=1)
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[7]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[7]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[7], x1 + wPictBox, y1, wDescript2,	hRow, flag  								! Door Glass
ui_infield "matDoorGlass", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[7]
y1 = y1 + lineSpace1

flag = 4 * (iDoorStyle <> 14 and iDoorStyle <> 15 or nDoor=1)
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[8]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[8]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[8], x1 + wPictBox, y1, wDescript2,	hRow, flag  								! Door Mirror
ui_infield "matDoorMirror", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[8]
y1 = y1 + lineSpace1

flag = 4 * (iDoorStyle = 3 or iDoorStyle = 5 or iDoorStyle = 7 or iDoorStyle = 9 or iDoorStyle = 10 or iDoorStyle = 12 or nDoor=1)
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[9]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[9]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[9], x1 + wPictBox, y1, wDescript2,	hRow, flag  								! Door Decor 1
ui_infield "matDoorDecor1", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[9]
y1 = y1 + lineSpace1

flag = 4 * (iDoorStyle < 16 or nDoor=1)
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[10]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[10]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[10], x1 + wPictBox, y1, wDescript2,	hRow, flag  							! Door Decor 2
ui_infield "matDoorDecor2", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[10]
y1 = y1 + lineSpace1


! ------ 2. Column - Materials -------
y1 = yStart
flag = 4 * (nDrawersWithFront = 0 and nDrawers = 0)
if not(flag) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[47]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[47]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[47], xHalfLevel + wPictBox, y1, wDescript2,	hRow, flag  					! Drawer
ui_infield "gs_drawer_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[47]
y1 = y1 + lineSpace1

flag = 4 * (nShelves = 0)
if not(flag) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[12]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[12]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[12], xHalfLevel + wPictBox, y1, wDescript2,	hRow, flag  					! Shelf
if iFrameType = FRAME_WIRE then
	ui_infield "matSteelShelf", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[12]
else
	ui_infield "gs_shelf_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[12]
endif
y1 = y1 + lineSpace1

flag = 4 * (nHangers = 0)
if not(flag) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[13]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[13]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[13], xHalfLevel + wPictBox, y1, wDescript2,	hRow, flag  					! Hanger
ui_infield "gs_hanger_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[13]
y1 = y1 + lineSpace1

flag = 4 * (gs_knob_type_m=0 or (iDoorType = DOOR_TYPE_NONE and (nDrawersWithFront = 0)))
if not(flag) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[11]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[11]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[11], xHalfLevel + wPictBox, y1, wDescript2,	hRow, flag  					! Knob
ui_infield "gs_knob_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[11]
y1 = y1 + lineSpace1

flag = 4 * (gs_cornice_type_m=0)
if not(flag) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[14]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[14]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[14], xHalfLevel + wPictBox, y1, wDescript2,	hRow, flag  					! Cornice
ui_infield "gs_cornice_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[14]
y1 = y1 + lineSpace1

flag = 4 * (gs_leg_type_m=0 or iFrameType = FRAME_WIRE)
if not(flag) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[15]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[15]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[15], xHalfLevel + wPictBox, y1, wDescript2,	hRow, flag  					! Leg
ui_infield "gs_leg_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[15]
y1 = y1 + lineSpace1





]]></Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

call "FM_types" parameters all

if gs_ui_current_page > 6 then
	gs_ui_current_page = 6
	parameters gs_ui_current_page = gs_ui_current_page
endif

call "ui_tabcontrol" parameters	controlType = 1,
								nTabs = 6,
								gs_ui_current_page = gs_ui_current_page


gosub "findElements"

values "a" range [minDist + frameWidth, ]
values "b" range [minDist, ]
values "zzyzx" range [minDist*3+(gs_cornice_type_m>0)*cot, ]
values "nModule" range [1, min(int ((A - frameWidth) / minDist), 6)]
values "nTempModule" 1,2,3,4,5,6
if iFrameType = FRAME_WIRE then
	values "frameWidth" range [0.015, ]
else
	values "frameWidth" range [0.02, ]
endif
for i = 1 to nModule
	put i
next i
values "nEditableModule" get(nsp)

if nShelves = 0 then
	hideparameter "gs_shelf_mat"
	lock "gs_shelf_mat"
endif

if nHangers = 0 then
	hideparameter "gs_hanger_mat"
	lock "gs_hanger_mat"
endif


! ----- Frame Type-----
values "frameType" stFrameTypes
values "iFrameType"  FRAME_SOLID, FRAME_SOLID_BACK, FRAME_WIRE
if GLOB_MODPAR_NAME = "frameType"  or GLOB_MODPAR_NAME = "iFrameType" then
	if GLOB_MODPAR_NAME = "frameType" then
		iFrameType = 0
		for i = 1 to vardim1(stFrameTypes)
			if frameType= stFrameTypes[i] then	iFrameType = i
		next i
		parameters iFrameType = iFrameType
	endif

	if GLOB_MODPAR_NAME = "iFrameType" then
		iFrameType = max(min(iFrameType,3),1)
		parameters frameType = stFrameTypes[iFrameType]
	endif

	if iFrameType = FRAME_WIRE then
		frameWidth = 0.015
		parameters frameWidth = frameWidth
	endif

	if not(bUniform) then
		tempModulWidth = 0
		for i = nModule to 2 step -1
			if i = 6 then tempModulWidth = tempModulWidth + modulWidth06
			if i = 5 then tempModulWidth = tempModulWidth + modulWidth05
			if i = 4 then tempModulWidth = tempModulWidth + modulWidth04
			if i = 3 then tempModulWidth = tempModulWidth + modulWidth03
			if i = 2 then tempModulWidth = tempModulWidth + modulWidth02
		next i
		modulWidth01 = A- tempModulWidth - frameWidth
		parameters modulWidth01 = modulWidth01
	else
		gosub "allocationModuleWidth"
	endif
else
	iFrameType = max(min(iFrameType,3),1)
	parameters frameType = stFrameTypes[iFrameType]
endif

if iFrameType = FRAME_WIRE then
	lock "leg_h", "leg_w", "gs_leg_type", "gs_leg_type_m", "gs_leg_mat"
	hideparameter "leg_h", "leg_w", "gs_leg_type", "gs_leg_type_m", "gs_leg_mat"

	lock "gs_cabinet_mat", "gs_shelf_mat"
	hideparameter "gs_cabinet_mat", "gs_shelf_mat"
else
	lock "matSteelCabinet", "matSteelShelf"
	hideparameter "matSteelCabinet", "matSteelShelf"
endif


! ----- LENGTH-----
lock "modulWidth01"
if bUniform then
	if nModule > min(int ((A - frameWidth) / minDist), 6) then
		nModule = min(int ((A - frameWidth) / minDist), 6)
		parameters nModule = nModule
	endif
	gosub "allocationModuleWidth"
	lock "modulWidth02", "modulWidth03", "modulWidth04", "modulWidth05", "modulWidth06"

	nTempModule = nModule
	parameters nTempModule = nTempModule
else
	if GLOB_MODPAR_NAME = "nModule" or GLOB_MODPAR_NAME = "A" or GLOB_MODPAR_NAME = "modulWidth02" or GLOB_MODPAR_NAME = "modulWidth03"\
		or GLOB_MODPAR_NAME = "modulWidth04" or GLOB_MODPAR_NAME = "modulWidth05" or GLOB_MODPAR_NAME = "modulWidth06" then

		if GLOB_MODPAR_NAME = "nModule" then
			if nTempModule > nModule then
				tempModulWidth = 0
				for i = nTempModule to nModule+1 step -1
					if i = 6 then tempModulWidth = tempModulWidth + modulWidth06
					if i = 5 then tempModulWidth = tempModulWidth + modulWidth05
					if i = 4 then tempModulWidth = tempModulWidth + modulWidth04
					if i = 3 then tempModulWidth = tempModulWidth + modulWidth03
					if i = 2 then tempModulWidth = tempModulWidth + modulWidth02
				next i
				modulWidth01 = modulWidth01 + tempModulWidth
				parameters modulWidth01 = modulWidth01
			endif

			if nTempModule < nModule then
				if modulWidth01 / (nModule - nTempModule + 1) >= minDist then
					tempModulWidth = modulWidth01 / (nModule - nTempModule + 1)
					modulWidth01 = tempModulWidth
					parameters modulWidth01 = modulWidth01
					for i = nTempModule+1 to nModule
						if i = 2 then
							modulWidth02 = tempModulWidth
							parameters modulWidth02 = modulWidth02
						endif
						if i = 3 then
							modulWidth03 = tempModulWidth
							parameters modulWidth03 = modulWidth03
						endif
						if i = 4 then
							modulWidth04 = tempModulWidth
							parameters modulWidth04 = modulWidth04
						endif
						if i = 5 then
							modulWidth05 = tempModulWidth
							parameters modulWidth05 = modulWidth05
						endif
						if i = 6 then
							modulWidth06 = tempModulWidth
							parameters modulWidth06 = modulWidth06
						endif
					next i
				else
					if nModule > min(int ((A - frameWidth) / minDist), 6) then
						nModule = min(int ((A - frameWidth) / minDist), 6)
						parameters nModule = nModule
					endif
					gosub "allocationModuleWidth"
				endif
			endif
			nTempModule = nModule
			parameters nTempModule = nTempModule
		endif

		if GLOB_MODPAR_NAME = "A" then
			if nModule > min(int ((A - frameWidth) / minDist), 6) then
				nModule = min(int ((A - frameWidth) / minDist), 6)
				parameters nModule = nModule
			endif
			gosub "allocationModuleWidth"
		endif

		if GLOB_MODPAR_NAME = "modulWidth02" then
			if nModule >= 2 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-(nModule>=3)*modulWidth03-(nModule>=4)*modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

		if GLOB_MODPAR_NAME = "modulWidth03" then
			if nModule >= 3 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-modulWidth03-(nModule>=4)*modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

		if GLOB_MODPAR_NAME = "modulWidth04" then
			if nModule >= 4 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-modulWidth03-modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

		if GLOB_MODPAR_NAME = "modulWidth05" then
			if nModule >= 5 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-modulWidth03-modulWidth04-modulWidth05-(nModule>=6)*modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

		if GLOB_MODPAR_NAME = "modulWidth06" then
			if nModule >= 6 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-modulWidth03-modulWidth04-modulWidth05-modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

	else
		nTempModule = nModule
		parameters nTempModule = nTempModule

		tempModulWidth = 0
		for i = 2 to nModule
			if i = 2 then tempModulWidth = tempModulWidth + modulWidth02
			if i = 3 then tempModulWidth = tempModulWidth + modulWidth03
			if i = 4 then tempModulWidth = tempModulWidth + modulWidth04
			if i = 5 then tempModulWidth = tempModulWidth + modulWidth05
			if i = 6 then tempModulWidth = tempModulWidth + modulWidth06
		next i

		modulWidth01 = A - tempModulWidth - frameWidth
		parameters modulWidth01 = modulWidth01
	endif
endif


! ==============================================================================
! Door Settings
! ==============================================================================
! ----- Door Style -----
dim doorStyleNumber[12]
	doorStyleNumber[1] = 1
	doorStyleNumber[2] = 13
	doorStyleNumber[3] = 3
	doorStyleNumber[4] = 9
	doorStyleNumber[5] = 4
	doorStyleNumber[6] = 5
	doorStyleNumber[7] = 14
	doorStyleNumber[8] = 15
	doorStyleNumber[9] = 16
	doorStyleNumber[10] = 17
	doorStyleNumber[11] = 18
	doorStyleNumber[12] = 10

values "iDoorStyle" doorStyleNumber
values "doorStyle" stDoorStyle
if GLOB_MODPAR_NAME = "doorStyle" then
	iDoorStyle = 1
	for i = 1 to vardim1(stDoorStyle)
		if doorStyle = stDoorStyle[i] then iDoorStyle = doorStyleNumber[i]
	next i
	parameters iDoorStyle = iDoorStyle
else
	for i = 1 to vardim1(stDoorStyle)
		if iDoorStyle = doorStyleNumber[i] then doorStyle = stDoorStyle[i]
	next i
	parameters doorStyle = doorStyle
endif

! ----- Door Type -----
values "doorType" stDoorType
values "iDoorType" DOOR_TYPE_NONE, DOOR_TYPE_SLIDING, DOOR_TYPE_TRIPLE_SIDING
if GLOB_MODPAR_NAME = "doorType"  or GLOB_MODPAR_NAME = "iDoorType" then
	if GLOB_MODPAR_NAME = "doorType" then
		iDoorType = 2
		for i = 1 to vardim1(stDoorType)
			if doorType = stDoorType[i] then	iDoorType = 3-i
		next i
		parameters iDoorType = iDoorType
	else
		iDoorType = max(min(iDoorType,2),0)
		parameters doorType = stDoorType[3-iDoorType]
	endif

	if nDrawersWithFront and iDoorType <> DOOR_TYPE_NONE then
		for i = 1 to nModule
			! Above
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_DRAWERFRONT then
				moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_DRAWER
				moduleMatrix[4+(i-1)*nElement][1] = moduleMatrix[5+(i-1)*nElement][1]
				if i = 1 then
					iInteriorType01 = INTERIOR_DRAWER
					parameters iInteriorType01 = iInteriorType01
					nDrawers01 = nDrawersFront01
					parameters nDrawers01 = nDrawers01
				endif
				if i = 2 then
					iInteriorType02 = INTERIOR_DRAWER
					parameters iInteriorType02 = iInteriorType02
					nDrawers02 = nDrawersFront02
					parameters nDrawers02 = nDrawers02
				endif
				if i = 3 then
					iInteriorType03 = INTERIOR_DRAWER
					parameters iInteriorType03 = iInteriorType03
					nDrawers03 = nDrawersFront03
					parameters nDrawers03 = nDrawers03
				endif
				if i = 4 then
					iInteriorType04 = INTERIOR_DRAWER
					parameters iInteriorType04 = iInteriorType04
					nDrawers04 = nDrawersFront04
					parameters nDrawers04 = nDrawers04
				endif
				if i = 5 then
					iInteriorType05 = INTERIOR_DRAWER
					parameters iInteriorType05 = iInteriorType05
					nDrawers05 = nDrawersFront05
					parameters nDrawers05 = nDrawers05
				endif
				if i = 6 then
					iInteriorType06 = INTERIOR_DRAWER
					parameters iInteriorType06 = iInteriorType06
					nDrawers06 = nDrawersFront06
					parameters nDrawers06 = nDrawers06
				endif
			endif

			! Under
			if moduleMatrix[2+(i-1)*nElement][2] = INTERIOR_DRAWERFRONT then
				moduleMatrix[2+(i-1)*nElement][2] = INTERIOR_DRAWER
				moduleMatrix[4+(i-1)*nElement][2] = moduleMatrix[5+(i-1)*nElement][2]
				if i = 1 then
					iInteriorTypeUnder01 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder01 = iInteriorTypeUnder01
					nDrawersUnder01 = nDrawersFrontUnder01
					parameters nDrawersUnder01 = nDrawersUnder01
				endif
				if i = 2 then
					iInteriorTypeUnder02 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder02 = iInteriorTypeUnder02
					nDrawersUnder02 = nDrawersFrontUnder02
					parameters nDrawersUnder02 = nDrawersUnder02
				endif
				if i = 3 then
					iInteriorTypeUnder03 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder03 = iInteriorTypeUnder03
					nDrawersUnder03 = nDrawersFrontUnder03
					parameters nDrawersUnder03 = nDrawersUnder03
				endif
				if i = 4 then
					iInteriorTypeUnder04 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder04 = iInteriorTypeUnder04
					nDrawersUnder04 = nDrawersFrontUnder04
					parameters nDrawersUnder04 = nDrawersUnder04
				endif
				if i = 4 then
					iInteriorTypeUnder05 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder05 = iInteriorTypeUnder05
					nDrawersUnder05 = nDrawersFrontUnder05
					parameters nDrawersUnder05 = nDrawersUnder05
				endif
				if i = 6 then
					iInteriorTypeUnder06 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder06 = iInteriorTypeUnder06
					nDrawersUnder06 = nDrawersFrontUnder06
					parameters nDrawersUnder06 = nDrawersUnder06
				endif
			endif

		next i
	endif
else
	iDoorType = max(min(iDoorType,2),0)
	parameters doorType = stDoorType[3-iDoorType]
endif

if iDoorType = DOOR_TYPE_NONE then
	hideparameter "doorStyle", "iDoorStyle", "iTempDoorStyle", "doorThickness", "doorFrameWidth", "mullionWidth", "nVerticalMullion", "nHorizontalMullion", "bBevel", "gs_door"
	lock "doorStyle", "iDoorStyle", "iTempDoorStyle", "doorThickness", "doorFrameWidth", "mullionWidth", "nVerticalMullion", "nHorizontalMullion", "bBevel", "gs_door"

	hideparameter "matDoorFrame", "matDoorGlass", "matDoorMirror", "matDoorDecor1", "matDoorDecor2"
	lock "matDoorFrame", "matDoorGlass", "matDoorMirror", "matDoorDecor1", "matDoorDecor2"
endif


! ==============================================================================
! Door Style Change
! ==============================================================================
if iDoorStyle <> iTempDoorStyle then
	if (iDoorStyle < 13 | iDoorStyle = 14) and (iTempDoorStyle > 12 & iTempDoorStyle <> 14) then
		doorFrameWidth = 0.1
		parameters doorFrameWidth = doorFrameWidth
	endif

	if (iDoorStyle > 12 & iDoorStyle <> 14) and (iTempDoorStyle < 13 | iTempDoorStyle = 14) then
		doorFrameWidth = 0.02
		parameters doorFrameWidth = doorFrameWidth
	endif

	if (iDoorStyle < 15 & iDoorStyle <> 13) and (iTempDoorStyle >= 15 | iTempDoorStyle = 13) then
		matDoorFrame = 15		! Wd-Pine Horizontal
		parameters matDoorFrame = matDoorFrame
	endif

	if (iDoorStyle >= 15 | iDoorStyle = 13) and (iTempDoorStyle < 15 & iTempDoorStyle <> 13) then
		matDoorFrame = 13		! Mtl-Chrome
		parameters matDoorFrame = matDoorFrame
	endif

	if iDoorStyle < 16 and iTempDoorStyle >= 16 then
		matDoorDecor1 = 15		! Wd-Pine Horizontal
		parameters matDoorDecor1 = matDoorDecor1
	endif

	if iDoorStyle >= 16 and iTempDoorStyle < 16 then
		matDoorDecor1 = 18		! Paint-1
		parameters matDoorDecor1 = matDoorDecor1
	endif

	if iDoorStyle = 13 and iTempDoorStyle <> 13 then
		nVerticalMullion = 0
		nHorizontalMullion = 3
		parameters nVerticalMullion = nVerticalMullion, nHorizontalMullion = nHorizontalMullion
	endif

	if iDoorStyle <> 13 and iTempDoorStyle = 13 then
		nVerticalMullion = 1
		nHorizontalMullion = 3
		parameters nVerticalMullion = nVerticalMullion, nHorizontalMullion = nHorizontalMullion
	endif

	iTempDoorStyle = iDoorStyle
	parameters iTempDoorStyle = iTempDoorStyle
endif

! ==============================================================================
! Door Parameters
! ==============================================================================
values "doorThickness" range [0.02,]
if iDoorStyle <= 12 then
	values "doorFrameWidth" range [0.03,]
else
	values "doorFrameWidth" range [0,]
endif
values "mullionWidth" range (0, )
values "nVerticalMullion" range [0,]
values "nHorizontalMullion" range [0,]

if iDoorStyle = 1 or iDoorStyle = 8 then
	lock "doorFrameWidth", "matDoorFrame"
	hideparameter "doorFrameWidth", "matDoorFrame"
endif

if iDoorStyle=10 or iDoorStyle>14 then
	lock "bBevel"
	hideparameter "bBevel"
endif

if iDoorStyle < 16 then
	lock "matDoorDecor2"
	hideparameter "matDoorDecor2"
endif

if iDoorStyle <> 3 and iDoorStyle <> 5 and iDoorStyle <> 7 and iDoorStyle <> 12 and iDoorStyle <> 13 then
	lock "mullionWidth", "nVerticalMullion", "nHorizontalMullion"
	hideparameter "mullionWidth", "nVerticalMullion", "nHorizontalMullion"
endif

if iDoorStyle <> 3 and iDoorStyle <> 5 and iDoorStyle <> 7 and iDoorStyle <> 9 and iDoorStyle <> 12 then
	lock "matDoorGlass"
	hideparameter "matDoorGlass"
else
	lock "matDoorDecor1"
	hideparameter "matDoorDecor1"
endif

if iDoorStyle <> 14 and iDoorStyle <> 15 then
	lock "matDoorMirror"
	hideparameter "matDoorMirror"
endif

if iDoorStyle = 10 or iDoorStyle = 99 then
	lock "doorFrameWidth", "matDoorFrame", "matDoorGlass", "matDoorMirror", "matDoorDecor1", "matDoorDecor2"
	hideparameter "doorFrameWidth", "matDoorFrame", "matDoorGlass", "matDoorMirror", "matDoorDecor1", "matDoorDecor2"

	dim gs_pt[]
	call "Object_Panel_Collection" parameters returned_parameters gs_pt
	values "doorCustomPanelName" gs_pt
else
	lock "doorCustomPanelName"
	hideparameter "doorCustomPanelName"
endif

! ==============================================================================
! Door Opening
! ==============================================================================
openingRange = 0.9

values "openingDoor1" range [0, openingRange*100]
if nDoor = 3 then
	values "openingDoor2" range [-openingRange*100, openingRange*100]
else
	values "openingDoor2" range [0, openingRange*100]
endif
values "openingDoor3" range [0, openingRange*100]

doorFullWidth = A-2*frameWidth*(iFrameType <> FRAME_WIRE)- 2*railThickness
doorTempWidth = doorFullWidth/nDoor

knob_w = 0
if gs_knob_type_m >=1 & gs_knob_type_m <=3 then knob_w= 0.02
if gs_knob_type_m >=4 & gs_knob_type_m <=8 then
	if gs_knob_p_m = 1 then	! Horizontally
		knob_w= 0.1
	else
		knob_w= 0.012
	endif
endif

minLengthKnob = knob_pl_x + knob_w
slidingRange = 1 - (minLengthKnob/doorTempWidth)

values "openingDoorLength1" range [0, doorTempWidth*slidingRange]
if nDoor = 3 then
	values "openingDoorLength2" range [-doorTempWidth*slidingRange, doorTempWidth*slidingRange]
else
	values "openingDoorLength2" range [0, doorTempWidth*slidingRange]
endif
values "openingDoorLength3" range [0, doorTempWidth*slidingRange]

if GLOB_MODPAR_NAME = "openingDoor1" then
	openingDoorLength1 = doorTempWidth * (openingDoor1/100)
	parameters openingDoorLength1 = openingDoorLength1
else
	! Maximum Range
	if GLOB_MODPAR_NAME = "openingDoorLength1" then
		if openingDoorLength1 > (doorTempWidth * slidingRange) - (nDoor = 2) * openingDoorLength2 + (nDoor = 3) * openingDoorLength2 then
			openingDoorLength1 = (doorTempWidth * slidingRange) - (nDoor = 2) * openingDoorLength2 + (nDoor = 3) * openingDoorLength2
			parameters openingDoorLength1 = openingDoorLength1
		endif
	endif
	openingDoor1 = (openingDoorLength1/doorTempWidth)*100
	parameters openingDoor1 = openingDoor1
endif

if GLOB_MODPAR_NAME = "openingDoor2" then
	openingDoorLength2 = doorTempWidth * (openingDoor2/100)
	parameters openingDoorLength2 = openingDoorLength2
else
	if GLOB_MODPAR_NAME = "openingDoorLength2" then
		if nDoor = 3 then
			! Minimum Range
			if openingDoorLength2 < (-1) * ((doorTempWidth * slidingRange) - openingDoorLength1) then
				openingDoorLength2 = (-1) * ((doorTempWidth * slidingRange) - openingDoorLength1)
				parameters openingDoorLength2 = openingDoorLength2
			endif
			! Maximum Range
			if openingDoorLength2 > ((doorTempWidth * slidingRange) - openingDoorLength3) then
				openingDoorLength2 = (doorTempWidth * slidingRange) - openingDoorLength3
				parameters openingDoorLength2 = openingDoorLength2
			endif
		else
			! Maximum Range
			if openingDoorLength2 > ((doorTempWidth * slidingRange) - openingDoorLength1) then
				openingDoorLength2 = ((doorTempWidth * slidingRange) - openingDoorLength1)
				parameters openingDoorLength2 = openingDoorLength2
			endif
		endif
	endif
	openingDoor2 = (openingDoorLength2/doorTempWidth)*100
	parameters openingDoor2 = openingDoor2
endif

if GLOB_MODPAR_NAME = "openingDoor3" then
	openingDoorLength3 = doorTempWidth * (openingDoor3/100)
	parameters openingDoorLength3 = openingDoorLength3
else
	if GLOB_MODPAR_NAME = "openingDoorLength3" then
		! Maximum Range
		if openingDoorLength3 > (doorTempWidth * slidingRange) - openingDoorLength2 then
			openingDoorLength3 = (doorTempWidth * slidingRange) - openingDoorLength2
			parameters openingDoorLength3 = openingDoorLength3
		endif
	endif
	openingDoor3 = (openingDoorLength3/doorTempWidth)*100
	parameters openingDoor3 = openingDoor3
endif

! ==============================================================================
! Module 01
! ==============================================================================
! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType01" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove01" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType01" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove01" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType01" stInteriorType
		values "interiorTypeAbove01" stInteriorType
		values "iInteriorType01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType01" or GLOB_MODPAR_NAME = "interiorTypeAbove01" then
	iInteriorType01 = 0
	if GLOB_MODPAR_NAME = "interiorType01" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType01= stInteriorType[i] then	iInteriorType01 = 6-i
		next i
		interiorTypeAbove01 = interiorType01
		parameters interiorTypeAbove01 = interiorTypeAbove01
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove01" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove01= stInteriorType[i] then	iInteriorType01 = 6-i
		next i
		interiorType01 = interiorTypeAbove01
		parameters interiorType01 = interiorType01
	endif
	parameters iInteriorType01 = iInteriorType01
else
	iInteriorType01 = max(min(iInteriorType01,5),0)
	parameters interiorType01 = stInteriorType[6-iInteriorType01]
	parameters interiorTypeAbove01 = stInteriorType[6-iInteriorType01]
endif

values "nShelves01" range [1, ]
values "nDrawers01" range [1, ]
values "nDrawersFront01" range [1, ]
values "nWire01" range [1, ]
values "nHangers01" range [1, ]
values "modulWidth01" range [minDist, ]
values "divisionHeight01" range [leg_h+minDist, ZZYZX-(gs_cornice_type_m>0)*cot-minDist]


if bDivision01 then
	lock "interiorType01"
	hideparameter "interiorType01"
else
	lock "interiorTypeUnder01", "iInteriorTypeUnder01", "interiorTypeAbove01", "nHangersUnder01", "nWireUnder01", "nDrawersFrontUnder01", "nDrawersUnder01", "nShelvesUnder01", "divisionHeight01"
	hideparameter "interiorTypeUnder01", "iInteriorTypeUnder01", "interiorTypeAbove01", "nHangersUnder01", "nWireUnder01", "nDrawersFrontUnder01", "nDrawersUnder01", "nShelvesUnder01", "divisionHeight01"
endif

if iInteriorType01 <> INTERIOR_HANGER then
	lock "nHangers01"
	hideparameter "nHangers01"
endif

if iInteriorType01 <> INTERIOR_WIRE then
	lock "nWire01"
	hideparameter "nWire01"
endif

if iInteriorType01 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront01"
	hideparameter "nDrawersFront01"
endif

if iInteriorType01 <> INTERIOR_DRAWER then
	lock "nDrawers01"
	hideparameter "nDrawers01"
endif

if iInteriorType01 <> INTERIOR_SHELF then
	lock "nShelves01"
	hideparameter "nShelves01"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder01" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder01" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder01" stInteriorType
		values "iInteriorTypeUnder01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder01" then
	iInteriorTypeUnder01 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder01= stInteriorType[i] then	iInteriorTypeUnder01 = 6-i
	next i
	parameters iInteriorTypeUnder01 = iInteriorTypeUnder01
else
	iInteriorTypeUnder01 = max(min(iInteriorTypeUnder01,5),0)
	parameters interiorTypeUnder01 = stInteriorType[6-iInteriorTypeUnder01]
endif

values "nShelvesUnder01" range [1, ]
values "nDrawersUnder01" range [1, ]
values "nDrawersFrontUnder01" range [1, ]
values "nWireUnder01" range [1, ]
values "nHangersUnder01" range [1, ]

if iInteriorTypeUnder01 <> INTERIOR_HANGER then
	lock "nHangersUnder01"
	hideparameter "nHangersUnder01"
endif

if iInteriorTypeUnder01 <> INTERIOR_WIRE then
	lock "nWireUnder01"
	hideparameter "nWireUnder01"
endif

if iInteriorTypeUnder01 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder01"
	hideparameter "nDrawersFrontUnder01"
endif

if iInteriorTypeUnder01 <> INTERIOR_DRAWER then
	lock "nDrawersUnder01"
	hideparameter "nDrawersUnder01"
endif

if iInteriorTypeUnder01 <> INTERIOR_SHELF then
	lock "nShelvesUnder01"
	hideparameter "nShelvesUnder01"
endif


! ==============================================================================
! Module 02
! ==============================================================================
if nModule < 2 then
	lock "module_02"
	hideparameter "module_02"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType02" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove02" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType02" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove02" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType02" stInteriorType
		values "interiorTypeAbove02" stInteriorType
		values "iInteriorType02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType02" or GLOB_MODPAR_NAME = "interiorTypeAbove02" then
	iInteriorType02 = 0
	if GLOB_MODPAR_NAME = "interiorType02" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType02= stInteriorType[i] then	iInteriorType02 = 6-i
		next i
		interiorTypeAbove02 = interiorType02
		parameters interiorTypeAbove02 = interiorTypeAbove02
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove02" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove02= stInteriorType[i] then	iInteriorType02 = 6-i
		next i
		interiorType02 = interiorTypeAbove02
		parameters interiorType02 = interiorType02
	endif
	parameters iInteriorType02 = iInteriorType02
else
	iInteriorType02 = max(min(iInteriorType02,5),0)
	parameters interiorType02 = stInteriorType[6-iInteriorType02]
	parameters interiorTypeAbove02 = stInteriorType[6-iInteriorType02]
endif

values "nShelves02" range [1, ]
values "nDrawers02" range [1, ]
values "nDrawersFront02" range [1, ]
values "nWire02" range [1, ]
values "nHangers02" range [1, ]
values "modulWidth02" range [minDist, A-frameWidth-minDist-(nModule>=3)*modulWidth03-(nModule>=4)*modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06]
values "divisionHeight02" range [leg_h+minDist, ZZYZX-(gs_cornice_type_m>0)*cot-minDist]

if bDivision02 then
	lock "interiorType02"
	hideparameter "interiorType02"
else
	lock "interiorTypeUnder02", "iInteriorTypeUnder02", "interiorTypeAbove02", "nHangersUnder02", "nWireUnder02", "nDrawersFrontUnder02", "nDrawersUnder02", "nShelvesUnder02", "divisionHeight02"
	hideparameter "interiorTypeUnder02", "iInteriorTypeUnder02", "interiorTypeAbove02", "nHangersUnder02", "nWireUnder02", "nDrawersFrontUnder02", "nDrawersUnder02", "nShelvesUnder02", "divisionHeight02"
endif

if iInteriorType02 <> INTERIOR_HANGER then
	lock "nHangers02"
	hideparameter "nHangers02"
endif

if iInteriorType02 <> INTERIOR_WIRE then
	lock "nWire02"
	hideparameter "nWire02"
endif

if iInteriorType02 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront02"
	hideparameter "nDrawersFront02"
endif

if iInteriorType02 <> INTERIOR_DRAWER then
	lock "nDrawers02"
	hideparameter "nDrawers02"
endif

if iInteriorType02 <> INTERIOR_SHELF then
	lock "nShelves02"
	hideparameter "nShelves02"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder02" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder02" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder02" stInteriorType
		values "iInteriorTypeUnder02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder02" then
	iInteriorTypeUnder02 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder02= stInteriorType[i] then	iInteriorTypeUnder02 = 6-i
	next i
	parameters iInteriorTypeUnder02 = iInteriorTypeUnder02
else
	iInteriorTypeUnder02 = max(min(iInteriorTypeUnder02,5),0)
	parameters interiorTypeUnder02 = stInteriorType[6-iInteriorTypeUnder02]
endif

values "nShelvesUnder02" range [1, ]
values "nDrawersUnder02" range [1, ]
values "nDrawersFrontUnder02" range [1, ]
values "nWireUnder02" range [1, ]
values "nHangersUnder02" range [1, ]

if iInteriorTypeUnder02 <> INTERIOR_HANGER then
	lock "nHangersUnder02"
	hideparameter "nHangersUnder02"
endif

if iInteriorTypeUnder02 <> INTERIOR_WIRE then
	lock "nWireUnder02"
	hideparameter "nWireUnder02"
endif

if iInteriorTypeUnder02 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder02"
	hideparameter "nDrawersFrontUnder02"
endif

if iInteriorTypeUnder02 <> INTERIOR_DRAWER then
	lock "nDrawersUnder02"
	hideparameter "nDrawersUnder02"
endif

if iInteriorTypeUnder02 <> INTERIOR_SHELF then
	lock "nShelvesUnder02"
	hideparameter "nShelvesUnder02"
endif


! ==============================================================================
! Module 03
! ==============================================================================
if nModule < 3 then
	lock "module_03"
	hideparameter "module_03"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType03" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove03" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType03" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove03" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType03" stInteriorType
		values "interiorTypeAbove03" stInteriorType
		values "iInteriorType03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType03" or GLOB_MODPAR_NAME = "interiorTypeAbove03" then
	iInteriorType03 = 0
	if GLOB_MODPAR_NAME = "interiorType03" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType03= stInteriorType[i] then	iInteriorType03 = 6-i
		next i
		interiorTypeAbove03 = interiorType03
		parameters interiorTypeAbove03 = interiorTypeAbove03
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove03" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove03= stInteriorType[i] then	iInteriorType03 = 6-i
		next i
		interiorType03 = interiorTypeAbove03
		parameters interiorType03 = interiorType03
	endif
	parameters iInteriorType03 = iInteriorType03
else
	iInteriorType03 = max(min(iInteriorType03,5),0)
	parameters interiorType03 = stInteriorType[6-iInteriorType03]
	parameters interiorTypeAbove03 = stInteriorType[6-iInteriorType03]
endif

values "nShelves03" range [1, ]
values "nDrawers03" range [1, ]
values "nDrawersFront03" range [1, ]
values "nWire03" range [1, ]
values "nHangers03" range [1, ]
values "modulWidth03" range [minDist, A-frameWidth-minDist-modulWidth02-(nModule>=4)*modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06]
values "divisionHeight03" range [leg_h+minDist, ZZYZX-(gs_cornice_type_m>0)*cot-minDist]

if bDivision03 then
	lock "interiorType03"
	hideparameter "interiorType03"
else
	lock "interiorTypeUnder03", "iInteriorTypeUnder03", "interiorTypeAbove03", "nHangersUnder03", "nWireUnder03", "nDrawersFrontUnder03", "nDrawersUnder03", "nShelvesUnder03", "divisionHeight03"
	hideparameter "interiorTypeUnder03", "iInteriorTypeUnder03", "interiorTypeAbove03", "nHangersUnder03", "nWireUnder03", "nDrawersFrontUnder03", "nDrawersUnder03", "nShelvesUnder03", "divisionHeight03"
endif

if iInteriorType03 <> INTERIOR_HANGER then
	lock "nHangers03"
	hideparameter "nHangers03"
endif

if iInteriorType03 <> INTERIOR_WIRE then
	lock "nWire03"
	hideparameter "nWire03"
endif

if iInteriorType03 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront03"
	hideparameter "nDrawersFront03"
endif

if iInteriorType03 <> INTERIOR_DRAWER then
	lock "nDrawers03"
	hideparameter "nDrawers03"
endif

if iInteriorType03 <> INTERIOR_SHELF then
	lock "nShelves03"
	hideparameter "nShelves03"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder03" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder03" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder03" stInteriorType
		values "iInteriorTypeUnder03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder03" then
	iInteriorTypeUnder03 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder03= stInteriorType[i] then	iInteriorTypeUnder03 = 6-i
	next i
	parameters iInteriorTypeUnder03 = iInteriorTypeUnder03
else
	iInteriorTypeUnder03 = max(min(iInteriorTypeUnder03,5),0)
	parameters interiorTypeUnder03 = stInteriorType[6-iInteriorTypeUnder03]
endif

values "nShelvesUnder03" range [1, ]
values "nDrawersUnder03" range [1, ]
values "nDrawersFrontUnder03" range [1, ]
values "nWireUnder03" range [1, ]
values "nHangersUnder03" range [1, ]

if iInteriorTypeUnder03 <> INTERIOR_HANGER then
	lock "nHangersUnder03"
	hideparameter "nHangersUnder03"
endif

if iInteriorTypeUnder03 <> INTERIOR_WIRE then
	lock "nWireUnder03"
	hideparameter "nWireUnder03"
endif

if iInteriorTypeUnder03 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder03"
	hideparameter "nDrawersFrontUnder03"
endif

if iInteriorTypeUnder03 <> INTERIOR_DRAWER then
	lock "nDrawersUnder03"
	hideparameter "nDrawersUnder03"
endif

if iInteriorTypeUnder03 <> INTERIOR_SHELF then
	lock "nShelvesUnder03"
	hideparameter "nShelvesUnder03"
endif


! ==============================================================================
! Module 04
! ==============================================================================
if nModule < 4 then
	lock "module_04"
	hideparameter "module_04"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType04" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove04" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType04" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove04" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType04" stInteriorType
		values "interiorTypeAbove04" stInteriorType
		values "iInteriorType04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType04" or GLOB_MODPAR_NAME = "interiorTypeAbove04" then
	iInteriorType04 = 0
	if GLOB_MODPAR_NAME = "interiorType04" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType04= stInteriorType[i] then	iInteriorType04 = 6-i
		next i
		interiorTypeAbove04 = interiorType04
		parameters interiorTypeAbove04 = interiorTypeAbove04
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove04" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove04= stInteriorType[i] then	iInteriorType04 = 6-i
		next i
		interiorType04 = interiorTypeAbove04
		parameters interiorType04 = interiorType04
	endif
	parameters iInteriorType04 = iInteriorType04
else
	iInteriorType04 = max(min(iInteriorType04,5),0)
	parameters interiorType04 = stInteriorType[6-iInteriorType04]
	parameters interiorTypeAbove04 = stInteriorType[6-iInteriorType04]
endif

values "nShelves04" range [1, ]
values "nDrawers04" range [1, ]
values "nDrawersFront04" range [1, ]
values "nWire04" range [1, ]
values "nHangers04" range [1, ]
values "modulWidth04" range [minDist, A-frameWidth-minDist-modulWidth02-modulWidth03-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06]
values "divisionHeight04" range [leg_h+minDist, ZZYZX-(gs_cornice_type_m>0)*cot-minDist]

if bDivision04 then
	lock "interiorType04"
	hideparameter "interiorType04"
else
	lock "interiorTypeUnder04", "iInteriorTypeUnder04", "interiorTypeAbove04", "nHangersUnder04", "nWireUnder04", "nDrawersFrontUnder04", "nDrawersUnder04", "nShelvesUnder04", "divisionHeight04"
	hideparameter "interiorTypeUnder04", "iInteriorTypeUnder04", "interiorTypeAbove04", "nHangersUnder04", "nWireUnder04", "nDrawersFrontUnder04", "nDrawersUnder04", "nShelvesUnder04", "divisionHeight04"
endif

if iInteriorType04 <> INTERIOR_HANGER then
	lock "nHangers04"
	hideparameter "nHangers04"
endif

if iInteriorType04 <> INTERIOR_WIRE then
	lock "nWire04"
	hideparameter "nWire04"
endif

if iInteriorType04 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront04"
	hideparameter "nDrawersFront04"
endif

if iInteriorType04 <> INTERIOR_DRAWER then
	lock "nDrawers04"
	hideparameter "nDrawers04"
endif

if iInteriorType04 <> INTERIOR_SHELF then
	lock "nShelves04"
	hideparameter "nShelves04"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder04" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder04" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder04" stInteriorType
		values "iInteriorTypeUnder04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder04" then
	iInteriorTypeUnder04 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder04= stInteriorType[i] then	iInteriorTypeUnder04 = 6-i
	next i
	parameters iInteriorTypeUnder04 = iInteriorTypeUnder04
else
	iInteriorTypeUnder04 = max(min(iInteriorTypeUnder04,5),0)
	parameters interiorTypeUnder04 = stInteriorType[6-iInteriorTypeUnder04]
endif

values "nShelvesUnder04" range [1, ]
values "nDrawersUnder04" range [1, ]
values "nDrawersFrontUnder04" range [1, ]
values "nWireUnder04" range [1, ]
values "nHangersUnder04" range [1, ]

if iInteriorTypeUnder04 <> INTERIOR_HANGER then
	lock "nHangersUnder04"
	hideparameter "nHangersUnder04"
endif

if iInteriorTypeUnder04 <> INTERIOR_WIRE then
	lock "nWireUnder04"
	hideparameter "nWireUnder04"
endif

if iInteriorTypeUnder04 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder04"
	hideparameter "nDrawersFrontUnder04"
endif

if iInteriorTypeUnder04 <> INTERIOR_DRAWER then
	lock "nDrawersUnder04"
	hideparameter "nDrawersUnder04"
endif

if iInteriorTypeUnder04 <> INTERIOR_SHELF then
	lock "nShelvesUnder04"
	hideparameter "nShelvesUnder04"
endif


! ==============================================================================
! Module 05
! ==============================================================================
if nModule < 5 then
	lock "module_05"
	hideparameter "module_05"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType05" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove05" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType05" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove05" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType05" stInteriorType
		values "interiorTypeAbove05" stInteriorType
		values "iInteriorType05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType05" or GLOB_MODPAR_NAME = "interiorTypeAbove05" then
	iInteriorType05 = 0
	if GLOB_MODPAR_NAME = "interiorType05" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType05= stInteriorType[i] then	iInteriorType05 = 6-i
		next i
		interiorTypeAbove05 = interiorType05
		parameters interiorTypeAbove05 = interiorTypeAbove05
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove05" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove05= stInteriorType[i] then	iInteriorType05 = 6-i
		next i
		interiorType05 = interiorTypeAbove05
		parameters interiorType05 = interiorType05
	endif
	parameters iInteriorType05 = iInteriorType05
else
	iInteriorType05 = max(min(iInteriorType05,5),0)
	parameters interiorType05 = stInteriorType[6-iInteriorType05]
	parameters interiorTypeAbove05 = stInteriorType[6-iInteriorType05]
endif

values "nShelves05" range [1, ]
values "nDrawers05" range [1, ]
values "nDrawersFront05" range [1, ]
values "nWire05" range [1, ]
values "nHangers05" range [1, ]
values "modulWidth05" range [minDist, A-frameWidth-minDist-modulWidth02-modulWidth03-modulWidth04-(nModule>=6)*modulWidth06]
values "divisionHeight05" range [leg_h+minDist, ZZYZX-(gs_cornice_type_m>0)*cot-minDist]

if bDivision05 then
	lock "interiorType05"
	hideparameter "interiorType05"
else
	lock "interiorTypeUnder05", "iInteriorTypeUnder05", "interiorTypeAbove05", "nHangersUnder05", "nWireUnder05", "nDrawersFrontUnder05", "nDrawersUnder05", "nShelvesUnder05", "divisionHeight05"
	hideparameter "interiorTypeUnder05", "iInteriorTypeUnder05", "interiorTypeAbove05", "nHangersUnder05", "nWireUnder05", "nDrawersFrontUnder05", "nDrawersUnder05", "nShelvesUnder05", "divisionHeight05"
endif

if iInteriorType05 <> INTERIOR_HANGER then
	lock "nHangers05"
	hideparameter "nHangers05"
endif

if iInteriorType05 <> INTERIOR_WIRE then
	lock "nWire05"
	hideparameter "nWire05"
endif

if iInteriorType05 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront05"
	hideparameter "nDrawersFront05"
endif

if iInteriorType05 <> INTERIOR_DRAWER then
	lock "nDrawers05"
	hideparameter "nDrawers05"
endif

if iInteriorType05 <> INTERIOR_SHELF then
	lock "nShelves05"
	hideparameter "nShelves05"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder05" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder05" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder05" stInteriorType
		values "iInteriorTypeUnder05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder05" then
	iInteriorTypeUnder05 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder05= stInteriorType[i] then	iInteriorTypeUnder05 = 6-i
	next i
	parameters iInteriorTypeUnder05 = iInteriorTypeUnder05
else
	iInteriorTypeUnder05 = max(min(iInteriorTypeUnder05,5),0)
	parameters interiorTypeUnder05 = stInteriorType[6-iInteriorTypeUnder05]
endif

values "nShelvesUnder05" range [1, ]
values "nDrawersUnder05" range [1, ]
values "nDrawersFrontUnder05" range [1, ]
values "nWireUnder05" range [1, ]
values "nHangersUnder05" range [1, ]

if iInteriorTypeUnder05 <> INTERIOR_HANGER then
	lock "nHangersUnder05"
	hideparameter "nHangersUnder05"
endif

if iInteriorTypeUnder05 <> INTERIOR_WIRE then
	lock "nWireUnder05"
	hideparameter "nWireUnder05"
endif

if iInteriorTypeUnder05 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder05"
	hideparameter "nDrawersFrontUnder05"
endif

if iInteriorTypeUnder05 <> INTERIOR_DRAWER then
	lock "nDrawersUnder05"
	hideparameter "nDrawersUnder05"
endif

if iInteriorTypeUnder05 <> INTERIOR_SHELF then
	lock "nShelvesUnder05"
	hideparameter "nShelvesUnder05"
endif


! ==============================================================================
! Module 06
! ==============================================================================
if nModule < 6 then
	lock "module_06"
	hideparameter "module_06"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType06" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove06" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType06" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove06" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType06" stInteriorType
		values "interiorTypeAbove06" stInteriorType
		values "iInteriorType06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType06" or GLOB_MODPAR_NAME = "interiorTypeAbove06" then
	iInteriorType06 = 0
	if GLOB_MODPAR_NAME = "interiorType06" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType06= stInteriorType[i] then	iInteriorType06 = 6-i
		next i
		interiorTypeAbove06 = interiorType06
		parameters interiorTypeAbove06 = interiorTypeAbove06
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove06" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove06= stInteriorType[i] then	iInteriorType06 = 6-i
		next i
		interiorType06 = interiorTypeAbove06
		parameters interiorType06 = interiorType06
	endif
	parameters iInteriorType06 = iInteriorType06
else
	iInteriorType06 = max(min(iInteriorType06,5),0)
	parameters interiorType06 = stInteriorType[6-iInteriorType06]
	parameters interiorTypeAbove06 = stInteriorType[6-iInteriorType06]
endif

values "nShelves06" range [1, ]
values "nDrawers06" range [1, ]
values "nDrawersFront06" range [1, ]
values "nWire06" range [1, ]
values "nHangers06" range [1, ]
values "modulWidth06" range [minDist, A-frameWidth-minDist-modulWidth02-modulWidth03-modulWidth04-modulWidth05]
values "divisionHeight06" range [leg_h+minDist, ZZYZX-(gs_cornice_type_m>0)*cot-minDist]

if bDivision06 then
	lock "interiorType06"
	hideparameter "interiorType06"
else
	lock "interiorTypeUnder06", "iInteriorTypeUnder06", "interiorTypeAbove06", "nHangersUnder06", "nWireUnder06", "nDrawersFrontUnder06", "nDrawersUnder06", "nShelvesUnder06", "divisionHeight06"
	hideparameter "interiorTypeUnder06", "iInteriorTypeUnder06", "interiorTypeAbove06", "nHangersUnder06", "nWireUnder06", "nDrawersFrontUnder06", "nDrawersUnder06", "nShelvesUnder06", "divisionHeight06"
endif

if iInteriorType06 <> INTERIOR_HANGER then
	lock "nHangers06"
	hideparameter "nHangers06"
endif

if iInteriorType06 <> INTERIOR_WIRE then
	lock "nWire06"
	hideparameter "nWire06"
endif

if iInteriorType06 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront06"
	hideparameter "nDrawersFront06"
endif

if iInteriorType06 <> INTERIOR_DRAWER then
	lock "nDrawers06"
	hideparameter "nDrawers06"
endif

if iInteriorType06 <> INTERIOR_SHELF then
	lock "nShelves06"
	hideparameter "nShelves06"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder06" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder06" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder06" stInteriorType
		values "iInteriorTypeUnder06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder06" then
	iInteriorTypeUnder06 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder06= stInteriorType[i] then	iInteriorTypeUnder06 = 6-i
	next i
	parameters iInteriorTypeUnder06 = iInteriorTypeUnder06
else
	iInteriorTypeUnder06 = max(min(iInteriorTypeUnder06,5),0)
	parameters interiorTypeUnder06 = stInteriorType[6-iInteriorTypeUnder06]
endif

values "nShelvesUnder06" range [1, ]
values "nDrawersUnder06" range [1, ]
values "nDrawersFrontUnder06" range [1, ]
values "nWireUnder06" range [1, ]
values "nHangersUnder06" range [1, ]

if iInteriorTypeUnder06 <> INTERIOR_HANGER then
	lock "nHangersUnder06"
	hideparameter "nHangersUnder06"
endif

if iInteriorTypeUnder06 <> INTERIOR_WIRE then
	lock "nWireUnder06"
	hideparameter "nWireUnder06"
endif

if iInteriorTypeUnder06 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder06"
	hideparameter "nDrawersFrontUnder06"
endif

if iInteriorTypeUnder06 <> INTERIOR_DRAWER then
	lock "nDrawersUnder06"
	hideparameter "nDrawersUnder06"
endif

if iInteriorTypeUnder06 <> INTERIOR_SHELF then
	lock "nShelvesUnder06"
	hideparameter "nShelvesUnder06"
endif


! ==============================================================================
! Drawers
! ==============================================================================
! ----- Drawers -----
dim drawerStyleNumber[3]
	drawerStyleNumber[1] = 1
	drawerStyleNumber[2] = 2
	drawerStyleNumber[3] = 3

values "drawerStyle" stDrawerTypes
values "iDrawerStyle"  drawerStyleNumber
if GLOB_MODPAR_NAME = "drawerStyle" then
	iDrawerStyle = 1
	for i = 1 to vardim1(stDrawerTypes)
		if drawerStyle= stDrawerTypes[i] then	iDrawerStyle = drawerStyleNumber[i]
	next i
	parameters iDrawerStyle = iDrawerStyle
else
	for i = 1 to vardim1(stDrawerTypes)
		if iDrawerStyle = drawerStyleNumber[i] then drawerStyle = stDrawerTypes[i]
	next i
	parameters drawerStyle = drawerStyle
endif

values "drawerFrameWidth" range [0.03,]

if iDrawerStyle = 1 then
	hideparameter "drawerFrameWidth"
	lock "drawerFrameWidth"
endif

if nDrawersWithFront = 0 then
	hideparameter "drawer", "drawerFrameWidth", "iDrawerStyle", "drawerStyle"
	lock "drawer", "drawerFrameWidth", "iDrawerStyle", "drawerStyle"
endif

if nDrawersWithFront = 0 and nDrawers = 0 then
	hideparameter "gs_drawer_mat"
	lock "gs_drawer_mat"
endif


! ==============================================================================
! Knob
! ==============================================================================
! ----- Knob Style-----
values "gs_knob_type_m" 0,1,2,3,4,5,6,7,8
values "gs_knob_type" stKnobTypes
if GLOB_MODPAR_NAME = "gs_knob_type" then
	gs_knob_type_m = 1
	for i = 1 to vardim1(stKnobTypes)
		if gs_knob_type = stKnobTypes[i] then gs_knob_type_m = i-1
	next i
	parameters gs_knob_type_m = gs_knob_type_m
else
	gs_knob_type_m = max(min(gs_knob_type_m,8),0)
	parameters gs_knob_type = stKnobTypes[gs_knob_type_m+1]
endif

if gs_knob_type_m < 4 then
	lock "gs_knob_p", "knob_size"
	hideparameter "gs_knob_p", "knob_size"
endif

if gs_knob_type_m = 0 then
	lock "knob_pl_x", "knob_pl_y"
	hideparameter "knob_pl_x", "knob_pl_y"
endif

! ----- Knob Placing-----
values "gs_knob_p_m" 0,1
values "gs_knob_p" stKnobPlacing
if GLOB_MODPAR_NAME = "gs_knob_p" then
	gs_knob_type_m = 1
	for i = 1 to vardim1(stKnobPlacing)
		if gs_knob_p = stKnobPlacing[i] then gs_knob_p_m = i-1
	next i
	parameters gs_knob_p_m = gs_knob_p_m
else
	gs_knob_p_m = max(min(gs_knob_p_m,1),0)
	parameters gs_knob_p = stKnobPlacing[gs_knob_p_m+1]
endif

if iDoorType = DOOR_TYPE_NONE and nDrawersWithFront = 0 then
	hideparameter "gs_knob_type", "gs_knob_type_m", "knob_pl_x", "knob_pl_y", "gs_knob_p", "gs_knob_p_m", "knob_size", "gs_knob_mat"
	lock "gs_knob_type", "gs_knob_type_m", "knob_pl_x", "knob_pl_y", "gs_knob_p", "gs_knob_p_m", "knob_size", "gs_knob_mat"
endif


! ==============================================================================
! Cornice
! ==============================================================================
! ----- Cornice Style -----
values "gs_cornice_type" stCorniceTypes[2], stCorniceTypes[3], stCorniceTypes[4], stCorniceTypes[5], stCorniceTypes[1]
values "gs_cornice_type_m" 0,1,2,3,4
if GLOB_MODPAR_NAME = "gs_cornice_type" then
	gs_cornice_type_m= 0
	for i = 1 to vardim1(stCorniceTypes)
		if gs_cornice_type = stCorniceTypes[i] then gs_cornice_type_m = i -1
	next i
	parameters gs_cornice_type_m = gs_cornice_type_m
else
	gs_cornice_type_m = max(min(gs_cornice_type_m,4),0)
	parameters gs_cornice_type = stCorniceTypes[gs_cornice_type_m+1]
endif

! ----- Cornice Overhang-----
values "gs_lining" stCorniceOverhang
values "gs_lining_m" 1,2,3,4
if GLOB_MODPAR_NAME = "gs_lining" then
	gs_lining_m = 0
	for i = 1 to vardim1(stCorniceOverhang)
		if gs_lining = stCorniceOverhang[i] then gs_lining_m= 5-i
	next i
	parameters gs_lining_m = gs_lining_m
else
	gs_lining_m = max(min(gs_lining_m,4),1)
	parameters gs_lining = stCorniceOverhang[5-gs_lining_m]
endif


if gs_cornice_type_m = 0 then
	hideparameter "gs_lining", "gs_lining_m", "cot", "cooh", "gs_cornice_mat"
	lock "gs_lining", "gs_lining_m", "cot", "cooh", "gs_cornice_mat"
endif

values "cot" range (0,)
if gs_cornice_type_m=1  then values "cooh" range [0,)
if gs_cornice_type_m=2 or gs_cornice_type_m=3  then values "cooh" range [1/2*cot,)
if gs_cornice_type_m=4 then values "cooh" range [3/4*cot,)


! ==============================================================================
! Leg
! ==============================================================================
! ----- Leg Style-----
values "gs_leg_type_m" 0,1,2,3,4,5,6
values "gs_leg_type" stLegTypes
if GLOB_MODPAR_NAME = "gs_leg_type" then
	gs_leg_type_m = 1
	for i = 1 to vardim1(stLegTypes)
		if gs_leg_type = stLegTypes[i] then gs_leg_type_m = i-1
	next i
	parameters gs_leg_type_m = gs_leg_type_m
else
	gs_leg_type_m = max(min(gs_leg_type_m,6),0)
	parameters gs_leg_type = stLegTypes[gs_leg_type_m+1]
endif

values "leg_h" range [0, mindist*3]
values "leg_w" range (0, min(a/2, b/2))

if gs_leg_type_m=0 then
	hideparameter "gs_leg_mat", "leg_h", "leg_w"
	lock "gs_leg_mat", "leg_h", "leg_w"
endif


! ==============================================================================
! 2D Style
! ==============================================================================
! ----- 2D Symbol Type -----
values "symbolType" stSymbolTypes		! Type 1(1),Type 2(2),Type 3(3),Type 4(4)
values "iSymbolType" 1, 2, 3, 4
if GLOB_MODPAR_NAME = "symbolType" then
	iSymbolType = 1
	for i = 1 to vardim1(stSymbolTypes)
		if symbolType = stSymbolTypes[i] then	iSymbolType = i
	next i
	parameters iSymbolType = iSymbolType
else
	iSymbolType = max(min(iSymbolType,4),1)
	parameters symbolType= stSymbolTypes[iSymbolType]
endif

if gs_cont_pen=0 then parameters gs_cont_pen=4
if gs_fill_pen=0 then parameters gs_fill_pen=19

! ==============================================================================
! Lock and Hide "bHangers" parameter
! ==============================================================================

if iSymbolType = 2 | iSymbolType = 3 then
	hideparameter "bHangers"
	lock "bHangers"
else
	dim _iTypes[6]
		_iTypes[1] = iInteriorType01
		_iTypes[2] = iInteriorType02
        _iTypes[3] = iInteriorType03
		_iTypes[4] = iInteriorType04
		_iTypes[5] = iInteriorType05
        _iTypes[6] = iInteriorType06

    _bLock = 1
    for _iii = 1 to nModule
        if _iTypes[_iii] = INTERIOR_HANGER then
            _bLock = 0
            _iii = nModule
		endif
    next _iii

    if _bLock then
		hideparameter "bHangers"
		lock "bHangers"
	endif
endif



! ==============================================================================
! Minimal Space
! ==============================================================================
values "MSFront" range [0, ]


! ==============================================================================
! 3D Representation
! ==============================================================================
! ----- 3D Representation -----
values "gs_detlevel_3D" stDetlevel3D		! Off(0), Simple(1), Detailed(2)
values "gs_detlevel_3D_m" 0, 1, 2
if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = 2
	for i = 1 to vardim1(stDetlevel3D)
		if gs_detlevel_3D = stDetlevel3D[i] then	gs_detlevel_3D_m = 3-i
	next i
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D_m = max(min(gs_detlevel_3D_m,2),0)
	parameters gs_detlevel_3D = stDetlevel3D[3-gs_detlevel_3D_m]
endif

values "gs_resol" range [3, )
if gs_resol<3 then parameters gs_resol=3



END

! ======================================================================
! SubRoutines
! ======================================================================

"allocationModuleWidth":
	tempModulWidth = (A - frameWidth) / nModule
	if nModule >= 1 then
		modulWidth01 = tempModulWidth
		parameters modulWidth01 = modulWidth01
	endif
	if nModule >= 2 then
		modulWidth02 = tempModulWidth
		parameters modulWidth02 = modulWidth02
	endif
	if nModule >= 3 then
		modulWidth03 = tempModulWidth
		parameters modulWidth03 = modulWidth03
	endif
	if nModule >= 4 then
		modulWidth04 = tempModulWidth
		parameters modulWidth04 = modulWidth04
	endif
	if nModule >= 5 then
		modulWidth05 = tempModulWidth
		parameters modulWidth05 = modulWidth05
	endif
	if nModule >= 6 then
		modulWidth06 = tempModulWidth
		parameters modulWidth06 = modulWidth06
	endif
return

]]></Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[Bedroom wardrobe with sliding doors and individually defined units for interior fittings.]]>
</Comment>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[Number of modules, frame type, shelf, drawer, wire basket, hanger, door, knob drawer, leg and cornice styles, 2D symbols, minimal space]]>
</Keywords>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="19457" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	008008020000004C5CF69C000000097048597300002E2300002E230178A53F76
	00000A396943435050686F746F73686F70204943432070726F66696C65000078
	DA9D96775454D71687CFBD777AA1CD30025286DEBBC000D27B935E4561981960
	28030E3334B121A2021145449A224850C480D150245644B1101454B007240828
	311845542C6F46D68BAEACBCF7F2F2FBE3AC6FEDB3F7B9FBECBDCF5A170092A7
	2F9797064B0190CA13F0833C9CE911915174EC0080011E608029004C5646BA5F
	B07B0810C9CBCD859E2172025F0401F07A58BC0270D3D033804E07FF9FA459E9
	7C81E89800119BB339192C11178838254B902EB6CF8A981A972C66182566BE28
	4111CB893961910D3EFB2CB2A398D9A93CB688C539A7B353D962EE15F1B64C21
	47C488AF880B33B99C2C11DF12B1468A30952BE237E2D8540E33030014496C17
	70588922361131891F12E422E2E500E048095F71DC572CE0640BC49772494BCF
	E173131205741D962EDDD4DA9A41F7E464A5700402C300262B99C967D35DD252
	D399BC1C0016EFFC5932E2DAD24545B634B5B6B434343332FDAA50FF75F36F4A
	DCDB457A19F8B96710ADFF8BEDAFFCD21A0060CC896AB3F38B2DAE0A80CE2D00
	C8DDFB62D3380080A4A86F1DD7BFBA0F4D3C2F890241BA8DB1715656961197C3
	321217F40FFD4F87BFA1AFBE67243EEE8FF2D05D39F14C618A802EAE1B2B2D25
	4DC8A767A433591CBAE19F87F81F07FE751E06419C780E9FC313458489A68CCB
	4B10B59BC7E60AB8693C3A97F79F9AF80FC3FEA4C5B91689D2F81150638C80D4
	752A407EED07280A1120D1FBC55DFFA36FBEF830207E79E12A938B73FFEF37FD
	67C1A5E225839BF039CE252884CE12F23317F7C4CF12A0010148022A9007CA40
	1DE800436006AC802D70046EC01BF8831010095603164804A9800FB2401ED804
	0A4131D809F6806A50071A41336805C741273805CE834BE01AB8016E83FB6014
	4C80676016BC060B10046121324481E421154813D287CC2006640FB941BE5010
	1409C54209100F124279D066A8182A83AAA17AA819FA1E3A099D87AE4083D05D
	680C9A867E87DEC1084C82A9B012AC051BC30CD809F68143E0557002BC06CE85
	0BE01D7025DC001F853BE0F3F035F8363C0A3F83E7108010111AA28A18220CC4
	05F147A29078848FAC478A900AA4016945BA913EE426328ACC206F5118140545
	4719A26C519EA850140BB506B51E5582AA461D4675A07A51375163A859D44734
	19AD88D647DBA0BDD011E8047416BA105D816E42B7A32FA26FA327D0AF31180C
	0DA38DB1C2786222314998B59812CC3E4C1BE61C6610338E99C362B1F2587DAC
	1DD61FCBC40AB085D82AEC51EC59EC107602FB0647C4A9E0CC70EEB8281C0F97
	8FABC01DC19DC10DE126710B7829BC26DE06EF8F67E373F0A5F8467C37FE3A7E
	02BF4090266813EC08218424C2264225A1957091F080F0924824AA11AD898144
	2E7123B192788C789938467C4B9221E9915C48D124216907E910E91CE92EE925
	994CD6223B92A3C802F20E7233F902F911F98D0445C248C24B822DB141A246A2
	436248E2B9245E5253D24972B564AE6485E409C9EB92335278292D291729A6D4
	7AA91AA99352235273D2146953697FE954E912E923D257A4A764B0325A326E32
	6C99029983321764C62908459DE242615136531A29172913540C559BEA454DA2
	1653BFA30E506765656497C986C966CBD6C89E961DA521342D9A172D85564A3B
	4E1BA6BD5BA2B4C4690967C9F625AD4B8696CCCB2D957394E3C815C9B5C9DD96
	7B274F9777934F96DF25DF29FF5001A5A0A710A890A5B05FE1A2C2CC52EA52DB
	A5ACA5454B8F2FBDA7082BEA290629AE553CA8D8AF38A7A4ACE4A194AE54A574
	41694699A6ECA89CA45CAE7C46795A85A262AFC255295739ABF2942E4B77A2A7
	D02BE9BDF4595545554F55A16ABDEA80EA829AB65AA85ABE5A9BDA4375823A43
	3D5EBD5CBD477D564345C34F234FA345E39E265E93A199A8B957B34F735E4B5B
	2B5C6BAB56A7D694B69CB69776AE768BF6031DB28E83CE1A9D069D5BBA185D86
	6EB2EE3EDD1B7AB09E855EA25E8DDE757D58DF529FABBF4F7FD0006D606DC033
	6830183124193A19661AB6188E19D18C7C8DF28D3A8D9E1B6B184719EF32EE33
	FE6862619262D26872DF54C6D4DB34DFB4DBF477333D3396598DD92D73B2B9BB
	F906F32EF317CBF4977196ED5F76C78262E167B1D5A2C7E283A59525DFB2D572
	DA4AC32AD6AAD66A84416504304A1897ADD1D6CED61BAC4F59BFB5B1B411D81C
	B7F9CDD6D036D9F688EDD472EDE59CE58DCBC7EDD4EC9876F576A3F674FB58FB
	03F6A30EAA0E4C870687C78EEA8E6CC726C749275DA724A7A34ECF9D4D9CF9CE
	EDCEF32E362EEB5CCEB922AE1EAE45AE036E326EA16ED56E8FDCD5DC13DC5BDC
	673D2C3CD67A9CF3447BFA78EEF21CF152F26279357BCD7A5B79AFF3EEF521F9
	04FB54FB3CF6D5F3E5FB76FBC17EDE7EBBFD1EACD05CC15BD1E90FFCBDFC77FB
	3F0CD00E5813F06320263020B026F0499069505E505F30253826F848F0EB10E7
	90D290FBA13AA1C2D09E30C9B0E8B0E6B0F970D7F0B2F0D108E3887511D72215
	22B9915D51D8A8B0A8A6A8B9956E2BF7AC9C88B6882E8C1E5EA5BD2A7BD595D5
	0AAB53569F8E918C61C69C8845C786C71E897DCFF4673630E7E2BCE26AE36659
	2EACBDAC676C4776397B9A63C729E34CC6DBC597C54F25D825EC4E984E7448AC
	489CE1BA70ABB92F923C93EA92E693FD930F257F4A094F694BC5A5C6A69EE4C9
	F09279BD69CA69D96983E9FAE985E9A36B6CD6EC5933CBF7E137654019AB32BA
	0454D1CF54BF5047B8453896699F5993F9262B2CEB44B674362FBB3F472F677B
	CE64AE7BEEB76B516B596B7BF254F336E58DAD735A57BF1E5A1FB7BE6783FA86
	820D131B3D361EDE44D894BCE9A77C93FCB2FC579BC337771728156C2C18DFE2
	B1A5A550A2905F38B2D5766BDD36D436EEB681EDE6DBABB67F2C62175D2D3629
	AE287E5FC22AB9FA8DE93795DF7CDA11BF63A0D4B274FF4ECC4EDECEE15D0EBB
	0E974997E5968DEFF6DBDD514E2F2F2A7FB52766CF958A6515757B097B857B47
	2B7D2BBBAA34AA7656BDAF4EACBE5DE35CD356AB58BBBD767E1F7BDFD07EC7FD
	AD754A75C575EF0E700FDCA9F7A8EF68D06AA83888399879F049635863DFB78C
	6F9B9B149A8A9B3E1CE21D1A3D1C74B8B7D9AAB9F988E291D216B845D8327D34
	FAE88DEF5CBFEB6A356CAD6FA3B5151F03C784C79E7E1FFBFDF0719FE33D2718
	275A7FD0FCA1B69DD25ED40175E474CC7626768E7645760D9EF43ED9D36DDBDD
	FEA3D18F874EA99EAA392D7BBAF40CE14CC1994F6773CFCE9D4B3F37733EE1FC
	784F4CCFFD0B11176EF506F60E5CF4B978F992FBA50B7D4E7D672FDB5D3E75C5
	E6CAC9AB8CAB9DD72CAF75F45BF4B7FF64F153FB80E540C775ABEB5D37AC6F74
	0F2E1F3C33E43074FEA6EBCD4BB7BC6E5DBBBDE2F6E070E8F09D91E891D13BEC
	3B537753EEBEB897796FE1FEC607E807450FA51E563C527CD4F0B3EECF6DA396
	A3A7C75CC7FA1F073FBE3FCE1A7FF64BC62FEF270A9E909F544CAA4C364F994D
	9D9A769FBEF174E5D38967E9CF16660A7F95FEB5F6B9CEF31F7E73FCAD7F3662
	76E205FFC5A7DF4B5ECABF3CF46AD9AB9EB980B947AF535F2FCC17BD917F73F8
	2DE36DDFBBF077930B59EFB1EF2B3FE87EE8FEE8F3F1C1A7D44F9FFE050398F3
	FC91C05ADB0000000467414D410000B18E7CFB5193000000206348524D00007A
	25000080830000F9FF000080E9000075300000EA6000003A980000176F925FC5
	46000041284944415478DA62FCFFFF3FC3B006400F3232322273812450042EFE
	1F0C18C1E0EFDFBFCCCCCC10112626A67FFFFE41D4209B405D0010408CC33E02
	A81B7F54070001C4341AC40452282D431F08000268340206180004D068040C30
	0008A0D1081860001040A31130C0002080462360800140008D46C0000380001A
	8D8001060001341A01030C000268340206180004D068040C300008A0D1081860
	001040A31130C0002080462360800140008D46C0000380001A8D800106000134
	1A01030C000288653408A805FE81C1DFBF7FFFFFFF0F61FCF9F307C8F8FAE50B
	3B0787B8B838565D0001341A0120000F32208030E021089402929060859010C5
	400061404219A8F41F78F29289890932BD0C64804A1826A6870F1F5EBF7E5D42
	42425151514D4D0D2D2600026808CF09A305192480E000C2454E95F0E0838843
	020E28090C00C8C4EF7F1800872178461E680B387C20E20CB0397D78B4C1B910
	95701188A540063333F3F7EFDF6FDEBCF9FBF76FA0A12C2C2C8282823636369A
	9A9A108D0001783597148041180A125A446805EF7F41B76E6BECE725AF849EA0
	9B207E1233CC4ED73F2D430C64D4CA06AAE4C4991713FC421BE84124081A321C
	718230EBFE342CBE8D4A1A4D94730A5617D157593D1ED98126DCE712FF4084DD
	3875FB8CED1739752EEB82B453E7B66F507E8C41E32FBF2D128AE74154DC75EA
	718C524AAD35E79C526277ADB5DE7B60790420D48A91208441A066E00779CDD5
	B6F7FF27686171AD122E6E58279ED7D8444666C9024B2AE45165940CF5C21AFD
	DA7D54990CDBFEF70EC246FFE962E128B79E7FBD6BE75A1889C44E604C35810C
	C26827439C2C74EC955C46C0976516513CC480AB08E16DFD24AEF8467C8C012A
	3B26FC61CF6A1A93633E82C3C031810F1FAF9F758667A8DE1461D638B879018B
	D2B0D08A59F17DDFEC35BD4983A7AAC2C839F70A1F027069763B0CC220146EA1
	3EC412DFFF61FA2866F773F6C77D50A76E31A90453E41C0E5C711520E73C1663
	066BE77902FEDB9071E190DB35C4EED360B07308131D3953A68EAFFABC5AE6E3
	93DAB8244E3711F9155A153F17090277A88954462F702DAA420D0FB1EA813924
	4D63387394B2D5867F7FBFD6C73CA3C4E7B284BAAA2657788363C0057F491CE5
	2B96432D58AD97668AD97ADF303B46D893D0108E8BBF8AAA4C2606B116B0506A
	206CEAEFA25162D24A8CD6A7C98084DFF596FB1CFB0840A4B9E4200CC340D4F9
	4A08945E8A6BB0E58EDC806BC0221B7620A1B4F93176DA5255561535B13C7E9E
	55FE0D8831A694BC735546125CAD68C8C38C633F7F54CEC559B1A215ADAE0AC9
	8607186BFBA6B5E0C9615C802AD2D4304DDEBBB2646C2E526C690C11D59ECBAC
	F8B786F1E6F485471926D58444F055877183AF9605DEA5CDA83E138E4B1F2A0A
	1A1886982A4420FABECBF9720D21BCE2F371BF1D4EC0DF746D77E356DA58894A
	778E24AF1B02719DB01D658EC213BAAC89DD8883710E688896CAEB8EA14395D0
	DA2A99AADE9CADAE6A6EF9760F0CCB833C68B5CBFE1380C9B24742108682707E
	2150E8053891BD07F084D65E022B672CBC84E2580824EE6EC6512A08338FBCDD
	6F5FF8DD4DD3348EE3300CF82A6CE0A8A5C40C1F4A92622F27355DC817012686
	D4619EB9CA103236797E339F9559FD22C809BE7CBEEEBBFDE176BD9C4FC7D861
	738B6F22D902639590B54844A3A4C043748EF642B1BEF0A9302C50101DA375C6
	8CD1060931F5F8A83795326CBAC13CB1F12158431BDB7E9B52B7E184A17EA686
	DA5174E1496D752A38E59A45C3D725D643188342690DF604E933426DB104EB84
	976024B3A8991730E0B281E2AE9EE74E5765FFDF808F005C5ACB0EC2300C4BD2
	166912FCFFBFC1850B374E9B84A8A6AED8091B15A7755A1F9EEDB89DB45FCB77
	1ABDDFAEF3F351680B69E091F613F05DEB226B5D37EDED9DAD8F1F72464471A2
	CA9804A29D920382AB28B8578E3A1CC9AFA5E265B3E5E95CCA74A1A44CECA06C
	B8EC33631E9A2B484DAC4B45D8782F2FC8F023C7A81CA8D040E1B7245C1D5423
	31340139B0C1D5B86309F480EDB9CE2E64DF5C06B24D6D765AA80956C530691B
	05B3AF30F087D8719C44090962D09F207822728C02FCEFACE3CF5E1F01B83483
	1D06611886D2360C5469FFFF717CC1B469670E8CCECF45A0ED0A495AA78E0D52
	AF03D0B0D45A9FEFD76359E6FB0CB1105662348A93208C93D56CEC8B77D96F6C
	5E6E465FD2F573DD04353A16DCE2A3D6A30A4A5E57B9A0906AAB25D3408F8E49
	6C274C3D2B43474BEE89512F6F3CA3EFA9476A32553A514DE161AF4C58965325
	6A10B160E0A2C21E1EE14C8DCD74B3AAF7358A8F743F2F89C661782498D49844
	338591ACC2EC805D250EC425D9C89C25F70ED8336C21BB1A7EBEF5FFAEDA7D05
	20BB4C76108661201A074414E0FF7F963661DED815077AABBAD9B378DC1F012A
	7B8CF17CBFFA6C63CE4E030235DC63C37D28712752CE1BF8355A1AD0745B443A
	167C1EBB1C1CB635FD7F1ECD6B9DDEE519C3E3515EEFED72407889ACEB8B8121
	F9C2085E42D42125B29F187A17731E9E4E45B9FF8236C40B5972B2A70E422E3A
	936E95741896BB415C574C12A1422E95855196EF8DA8F0BDD1AFBEB57198AB07
	5F09DDD0C60E6F1324BBA626299209F8BF91E7F115804E334A01108661E8AA22
	E8FD4F2B8E99974CF047F04370B6B449D3087E2588BEC82C9D87DC524BF5BA6E
	38D36AEAC31B4B61293873208EF5291398775A6F0DE2B12697930B708EBB8720
	8E24215833306568634EA3B12F7283B259E4EAF84073209F8947933913A29047
	24B44A90C2CE5EF56B5C712726E7CEBE2545656D781A7C0746E2198DEECBC8E0
	65D9080F914C25E9ED66A28909B54DBD33E276C7DD42938FDFE823B12E2C564D
	73F4F393EF2300196690C3200C03C126B168FFFFE0C0CEC4952AF5C00585E0D8
	EBF5C0AF052D41FB04D76B37498C44E2A010F919F253CAEE0E9D8805D1C757F5
	54583B53C859FA4EA218A1C4440315FE65DE6800AE79E481CE229905BA50394F
	32BAEE2960DD9FD7A1B0DB1EDB0E4C76DEAE4B7FCEEEA1C52D4D0E1BD3AD8862
	5A0420D1A4DB361478E8E90B42C16D2AB8A1718B4A2624CF5C607442E480C5DB
	87DA490085DB050A3886B887E455C5D60F7B8BEF07D0FF7F874700B2CD208741
	180682C410FEFFE1C6F58C832AD41BA01CC8C63B6B23F142D073449735A28BCD
	4846012C780E5A6D15EA8B432483E3FBDA81E446832592CFE9977C18DD69CC3A
	A6FCB4D532369BC60E00C89E3AA43A8BD5F059D460B91ED4E73662EDB09E1C31
	B19B4A2E272B6F61B15F1590677594C386A842B9CD4DA7A92E062B43CAA61C0C
	A0568B24B86565A785308B948DEE5C4BABEAFEE69093DD0C207D2530EF9C9809
	21CA57CCC9F9FB0BE1DF075F01C82EB71C00412006F2D0FB1FD800B6533431FA
	67024477B7EDF0B1A06EBD9936E32CDA1BCB8945AAEA5284C0D334E801569987
	D329291401D6515FC6EECFC173A117D5675DF3000E58057A361A238701B4AB05
	A5FC98A8CBD3E7B7BE5130481CCFD1A4F19F699B8F28BEC9CDD10C610A78B909
	ADA736AD0014B9E8A215F909069D8F85205CDAE23A6A11C0DE495A2A1C0AF576
	2675B90B10986A26A159CDC41CC479AE9A7C2121C60EF67F00E8B905A0C28C72
	188461189A9472FFF34EA2657E369BB61F840AA8217562C77F15405CC65F98DF
	A5643665D7BE08463A4C0F165A57C8EE8C2B8F0C351CE0A523F0D9610D8B77AB
	1B44F7F4146986EBA47C44E895E77F5ACBE35214E29FF9AC3300A5C09CC462DD
	352E2A5E77D43C41728171C8C7B17CF2812D66CE96201172CE8FD6A4D5294A0E
	706AAF3230D2D689E1F4688D03C246C35D5875323B7E45F96DBEB9877DA304A6
	7B7E4B6B635B40AABBBD628E7EAD9ADF22780BC086B92C310C8330D0904CFFFF
	8789CB4AD4874EEE793036482BFE4D780DAE280B067B90E307603C6A0AD36D0B
	EB32FA9464B7861743C1D24CE9F29FC1214494850D9DD609F173FBFA6AFC3BAD
	75EB193635286DF18CB4EC3620A5DC6822134EAEB7744E1C18465E57F73FC6BD
	7E1CAE0798A4742D1DCE74E7EAF9948CEA0B8C1E6959B9324E5CC615B61CAA7F
	EB2DA90F1CFCDCAA206A0091D083B9650F7C641C6D7F5D3C7F0560DA0C8C1806
	6118580768B2FFBA7050EB4569278018DB7AE92E7F13E0B4EBB5EEA6378C0946
	E051B5FE75CFA5D7D6B2F06D37124D3CBBC3A130365A0F3956394BB60F2B2CEC
	8B109820492A3FFB8496C0398110D46A1A3AE06557E194BD78205261E7808950
	F36DE2B0A481DD5D7DB3C2E83DF5B269F60A9C33B554C81FB4F745D4D926595A
	F5365F428FA9BEEA216974ABB886A594235D11527C391972B6A8A1E7D8CB2CBC
	EEF75394FD8DF34BDAF5CD854ED93F02306525490082300C86F2FF070BD42C80
	EAD98A5DD2247E05B09E46473F829E46CCAB071D345638ED20671708D74D8338
	751DDDBFC0C869CC0E1C4F3AC9896BE7A55E9E29B9C4B6C4778B492C254F1EC7
	16D5B929EF4ACBCABCC763666795B695E2228F8A8E28B31D01CD758544765B28
	C56616394CE6A0DB8467398F2EEF123A692A1132365F52F56C735462BB0BCB5F
	2E026AE07D02CE0804D48143DD195A0EC506C7D93488D382775C08B2F5FDBF5E
	01B832B703006110068AA8FB0F6C512E693F7401ED03C2253D7EE13362D19D5E
	2C749062A68E1EE6E03298556D68D3AAB1B200E68E4C08D6E322839B7BA70D6C
	9065117BC763CE5D0FBCB396DB2D7DA9748EBBE201DF5B4D67B519A9D2C1CB10
	C13F227DD2091580A798EA514CB53B4E8058EE015CA84BD2EF2D8F03386BF721
	D5EB8A53F41C27788388888E43AC0B7FFB8526522C66FD4716FA3A6034D6C6BF
	F1DFCC1D2A44015A6CF161FD2F05BD02706506390C033108B47DE9FFBF5BD575
	97C151A344CA2997D50630E0FF0F3831B8989238BF4E9B06BD0A944A76B952DE
	28B7E38C9C1F62F835EBC4934D67960819D5B178C481DD6BA546E77B173831E4
	3D293BF222D640553600B165C7DC6AAB836639EE00D1C5B55CC41EFC7AB21A34
	B9E069091CCA077C62DCAAD996BE5055C868228988E6F88A515B62D0A8D76C0F
	5B890FC3C655BAA5FB60BD3F5A7B55DAB9879A54C4F09181378AF0FC0460CA5C
	52000661204A4CBCFF815BB47D3306DC17A1C6F9E6AAE584942C714FD755F615
	337D6D10B99C7B9EECB4698B4232A981A73CFE29D39C51FDB4C12338C9859EE5
	1003446BF651FF8D0525899691CC4982828D00D7134E5EDB9BC2052054FD683E
	8EA01322589DA4EBEC67C3C9CD26C7793A42A602A6D00EE6B5860CB792D835AA
	A2E89FC3B10E3938BF7DA8EEFFE0A1B0061F003F5D3E964A825708BCE477F57E
	ED1EC02700536690C43008C3C0D890E6FFFF2DB86835A41C73233696A5A59FDD
	D104E4CA54D7E786723001A1A5DFCAA2EA25697050FF9E2E25B112EAAECE223F
	E89A377E5B7341B3C867A0AFD5C71B1A469691004CD18D0E8934BB52ACA4AA63
	C7343401E26A62ED2A845C54CBC7E2AEDC53F8E5C2DB7FF38AAD9640D9D2F9E4
	EF3C1D25894C22CD501DD7474F6F7FF5A885ED93E81C0598D6B79A460C6183E2
	5DC94CF0448270C428BF13EF3ABDCFCEA704FD0460DA8C72000461180A44EF7F
	6085B9BE0EA2FF920CECB6BEC9AF0D354ED2E7785BD1C63619144D81CF43497C
	D067ED1628F2D02F254AB95318A3D0501424361C20F9CBA8D2A0D5A5F4944E63
	A8250FABCDBE10BACC2FE33154066674048B45FB136619B25A41DECFD0670846
	E5AAAF4002169A421D8755A745B212D5DDFB6F84893416A2EEE00440D0F4DB64
	B46EC0A73CEC3DAE0A6D9DB43391CAE237566DF1B68C9E0A32586EBFBBF9058C
	F6F309C0A61924410884305018FFFF6205270D581EFCC0966B85103A7E274073
	B8C4E10CD307B147D67B2F568C834E4B61BD5979BA909F7AC5136F391CCDE430
	8E68E302FFAB80F54BDAC12CCC30CA489F9253489DDFEA4C099622A1338072D8
	24C42FB8049A467227DEBE68C5F6385FC39A928F1FB46F3139D11E6E7BFE055B
	645B17E981EB81309A4666AACC30621414AA94967D0F7937C608C66BE7DE75AC
	58F195B7C1FD39051E01E834832C8841108656B1AFF7BFEFA8353F38EDA69E40
	0592107802E06D0341995BCD289E50F023A80368B198869C5FF800129F534EA3
	47A6CDB8300DA76360B9ADBA5674EBFC450A9533E2A2187AA547409C703BAAE2
	3064FCE7514A81B6A1B2EDB43245C8F9A321B2EB3376B47A4FA2614FA2D8C42D
	8C26780B758B8C3B226DBF8A1C0D4B4FC854B8A5B7BD0CFD1474CE305D64B167
	D0A2F043F687149F99F3CBCF6596756E019834031C8A611084C6FAFFFD4FDC3A
	79D4650758B2DA0A087E4878D63444045976DB05DE9ECFFBD82B37C010FC04B6
	7854CC56CCCCD85DD0B48D55D70608CBEBC44BCCEB91FC12891B62E6AD505B9E
	0935CF758BBEDD6EBECD437665BE5E7585D141B328109F2100A2B1A49204946A
	C789F308C7A3E923E59F51A58C5078D8CA50C19DFE486B2F6489E5863C280B71
	DA78474604CDAA3C452700064ADCC4C979E25DA868E27D1767BE1DF008C0A5B9
	E5000802311058D4FB1F18954E1743FC33263E586599B6F4DF0E14539FDE5778
	93AE48E553228237D5B62A35AC3505CC60A71B8DC548C3DDFD92B279BE5F79A8
	705CD692A2427968C53F7E589BE1F16A7E789D01B4491927FA857A95CA6583C8
	23674104D4C3564FF320325D4ED78A76D254D138C30E81A53E8D0556BEEF81B4
	2E44132B17A52CDD683CC1BFCEFE793C605892AF9F4094A919846DC8EDF39A7D
	BBCD2E055E01B8348324866110881992FCFFC3B569570B9D691F908319638136
	3F9B7086A141A274BA27A18738ACABF68C13388D857910979B618F32A0626C68
	0D4389E1E07BE642CF471C98D610B909DC6AD0225110267BC563E12773E0F9D8
	15CFEA4426CD4FA799AD55D764D5E5B80D6F90931F043FA5ECEBBA3F6DCD53F4
	3AD16126CF4717555DB18BED4B36D7C64C5B9AA63395E156E6BE90C25E3E8A04
	2A6CC0726EC097C37F24780BC0A5B9E45008024150E0DDFFBA6F038CD3D5A351
	B726468330FD29DF651C0D0D52C7F3F2856761C3F03A82B48696CCA06BB74B90
	8F8B8DB49B651B9DD85C132832CF23988729D1E8E517FA2DD775630EA655C246
	EE417BFB36A6A41759F1E887E4BE973E2A15CF74B0D2D6CD4DFA377827AFEABF
	8C3A334162CAE9B7251721A4FEC37F4904076C406D496C77710481259BE010D0
	DC7575F6DC0648A4AB9336E90A3363D2A8177A7E90804F123E0520D38C720084
	41183A8CF7BFF036277D654B8C07F04360145EF9A008EC97FA4FCAC8C2AD72BD
	BD3A72647415164338CF1D83CF08CCA44E822D52CDA4C4CB6DCD4FF64CD4B774
	0CF6D441668670EC391704E00C66831A9914BD907CFECB655CDE8DAC8489DFD9
	6594340816B23B15F39DFE1AE8F5694ACEC2268EF08A23F22965E055C15E0661
	B381E0E5452D526D588D76401C2A0697C053E0FCC31E2862462806E488DEFB39
	83FCD3D0570036CE0005401886815D37F6FFF70A3A974B15047D42DD6C920B7E
	8918FE768E24AA7FE6E88065CF51FD9DFD7A6505F83E0A969E55E820007FA34B
	53326FFBE69230D136DAD0A880B5AB938C99371A61092760C0A302AF2364E58E
	454AC8D43820BE345794AC96B2242256701269045801076516421D3738A45547
	785BC6E1024D9BE857A22B6D0A5FC72C26DA6C9D4B6276E43943C7A58565349A
	B38C7A8717AD554D83BFBF76F9B905A0D34C7200846118D885FFBFB84DC09E54
	8203678490AA60A71E7F9830E3028B2FBE9C252C09EF92D1E9C836818E215130
	D4C112F79AFD5675002F53E6B773900B19766B5B0F045D1539762DCE5C051ED2
	EDEE32C934210AD46BE0A75577A4C6D3AB13B283C7CFBB4BD78425D9887EF23E
	A5CAFAD38AE3C9B1A53C40147D91A41C779115E68993C8C86D66D798ED401EDF
	9DC250B4110B5909B5076E36C144B1FA5F2BE216804B334A81108861E8B60AAE
	F7BFADA0D5E47506F47B6028A5A469921704ADEE2CE6DA10611C89C869CB5885
	12E91EB39EAEAA9A1875A464BCB1197CF3786AEB77A4E57B5F10F2EE0DE6DCF9
	1540062E93159592484FE265621D8531F946E70A782997AD1B780AA92F36B4FA
	B54ADD9209F430F613D93209ED05F4D1D2EF2253B7A9008C57F4D76658562710
	161CE840FB69A528626C3F228802D2E7C3DAFFDB24F73356FC5903B7004C9A59
	0EC3200C444D1655BDFF519BCA88B2D49E31885F14116112DB33CFBB19E7176B
	B930AB7D080A8346AEC98FC85E83B48C34E107FFED55DDD31C1697701E60F0B7
	D5DAF491BFC5566AABE5B1E79F2DC9E11C4C5A1DD21A7EE448118C1FA4220882
	05FA62CFCE6361E34ECD4DFDE47BBA201455A9B5DE2F2BBA4D3F997C0A860750
	A2578E13E37018C3462F0330396DE4A0B920EB68C40E029750EF1CCE12C8C9D3
	F1155E4056DF4A3BEEF7D834F08AD3EE46FC05E0E20C76108481200A8B3431E1
	8C31F12089D122E2FFFF9031F1132C14E9CCD4182F5C7A5B683B33FB965F1564
	5308E77EEC8771FD5240BBA7CB1D8A33EF23B9B2E44DB0DB2AADC0802C34CC48
	6D16DC5726A05CA312EB7A98DEDBA6F1B7FBE1D88167869382B84BA5D1384424
	8A2659A756237B0E46EE3D0ADE2900EEF05DF02787EA2C29708A73BBDB3F9EAF
	EE723D795F6F6A764C411B25F5C258CB52EDA46A2C23563CE8F128734A6A263E
	95CD63856725655AC54388C31A055959E7DC1F10C7318D6FD93F02506D363908
	83501006B1257465625CB930DEFF502E4C344462BA3026345A8437F3AC9E0028
	2D9D9F8FBF23A8CAB2748BCF31F5BEC78845D12FFE8A548211D406BFA8BA13F9
	19834C591A921129A34B53D1C6E4296FB6BB78BDC4F3C9B9F5A25BA5FF60D135
	D36B43E9144652127C35FB607D08A62C149D35B4B5460F709AA0BA01AF690843
	9DC63DA5FC187BDFD56FCA75166F3A088482A673455EAE19404546E1B150E233
	0E6216AB23212F955658966325216F30F35BD0B8FDE168F5D2D2EF1D88EF33FF
	0840B5D9AB20100341383F26DE71FE741636BE82602116FAEADA5808E203D85C
	6121A29CCA215A98A03B7387671E2010D8DD61BE9DFCED849D6BDD8B73BE5DA6
	593B089E52CCB6B2A0EAB2221F1393C5041A1E1CC90DC551029629F04AA99F48
	9049D1B28FF2399ECE6FC565BF59FB2E173E9AAB27747CF84D5F4A11432F740F
	E007900769416B4CEDAF3982A82C965829221CF12AC36038B249E77A3A1E76AB
	A4974ABB287C4A20C762C2D430E0A6648C049950743C1146CA54E12ACC1809A5
	414190C6336F5145B9C058E79DAE58E55701E4D381CFFA93D9423784B7994FE1
	F908C0B5B5ED300C82D0296064A6FFFFA9CBD6840D0ED865F3B10FC6B6C8B978
	FC51C2C1DB988776B91F92A9389C61E4394868718663B3BD88C2875E7487DAF7
	B955396E859E71C1F0EE4F38B2A4AB4F5D80325FAAA3DF0BFBBD643502CD4193
	6ED5950A2B683B8F9707D5AA84D915586232088E116E25C8F198539FFE4B06F1
	12F2770BC447583C0DB8922FB6F38AE6B43E0A6D12C0D4A0E862DAC808A1B920
	21D13306D3C6BBDA301A9BC338140DE176C529AA6D7F830B00FEC647002ACE64
	85611806A2B69A26876EB7FEFF2F16023645B62BCDC8699B6320102C45CBCC23
	7F9B70ADC50E45D767D95F97FB2DB1DB8F634E95A9840778177C1EE61C898EE5
	737A9E02EAB411251C34A021240CCED7472DFBBA6DC83B7BE165741ABB89F2E8
	49486E09F3DB57F296C20BC8418A85788DA463986DE269164BC83B4110E7E0DF
	2219C054CDD59DD58D5F120B9AEB49BE5F2A42D2F9A89B064D074ABCDB4D92BF
	EEA8DD876A856380F6DED0B4EA5B75E9B48B7FDBEFF1375E5E1F01E836631D84
	41200CC3690763DA2675320EDD7C03DFC167F0DD5DDC9CEC60222D1CC8FD0746
	07D91818380877F77F3FF47B006EDB769B7E58FC7305602D9B102309505945E4
	1677B3F86D41A973E03C6034339A2C51EDA8EAC89FE60048846876AFB61FBAC3
	F1314DB1767BFAB2356B717AC0BA6263908872A110C2A9D4889377E42143E6C8
	054C59FA7EC362818A5EE48246757FF3E59445AD4328532DBE95A49AC6492F93
	380F511024E5A1496B51037B4FD194B8700223CB25A9815669DA034A66E4B9E0
	97DD7E3C9D2FD7DB7D999DF9F3F8E8780B40B599E53008C3403486D06FC447EF
	7FC95209252CB3180107888864D933CF93D710C6AB232D3F1A041F3992836A1C
	B7649B6977B55EDD93ED785231A32B6243220CA1D61928A4703BC47020887009
	38D1ABE9A96B948A82677014CC083CA679FAC9510F129CC3AB699ADBA3B2AFDE
	5C33DB1C3CAB74FD5328C7D4ED128A0546C9F498AE660513D65E1A31D8BCB36B
	B192FC440799DC43B1A41E893E11CF9E60C5C76853FDCCCBF7F75FB7ADDD20E8
	F601CFEF14806B73BB02108461A82DB8FFC240350FF8C009143969D3DE5C6C68
	3BFA8AF44D8DD02E23CEA1667A40DD68444ADDEA66F5A0E1184A782284DF827A
	54402C88F6A76C336FDC339284BED606ECE3195412F743EB4AA657F86289B5F2
	4CC326E414A3C53E498B6C9947822CAB13709AFBEE87CA43DF442B0136BF9259
	1E7D9DD81934372F73A811CE26A4C785DA0987835B54B292ECA23AA097981388
	C12A0795C53C5CFAF33F9F00649BCB0DC0200C430961FF85DB421B3F73405D00
	2440C1DF438A00AB879A8926BEFB0F0D4582BE011E6605C83ACE4D05E86076E8
	9BA0C9949CC7132AA5A1524EBD69C4D86B1D65CB34423A1FE72D619A28068F9B
	C420613AD750ACD16AD95DD26CF8A4A23F3A46CDE9946D2757D165A6BAAE1B89
	E952C8D2B219A0D57D9E056DCFBE3B0ABA8E2E609DB96CFB0A1D49B31EC906B4
	47ECA63CE5EA192CC42944FF43EAAF006C9B411280200C032DF0FF1F03DA6C8A
	1EFC808EB42349B31DDF01C5538339A12B91377CB8FEF6FDE0FA9959273E0C30
	A6B74FCDE27AAB60824B720B0BE5E642D2E9D0A35014E85AC1AD5B4B38101235
	5E5D96439228270ECB831D4E422F2FB2C72247A69D37182A2C9F8D1D44552430
	379C42A83CEAEACD9E424021DA468C660BAE9A81D045F628C8438EB55AD8FDB5
	6218F4A82E5E28C279C8EB747E55D02D00DB567204200803B9FA6F5813247BF8
	70A40166D00DECB53EDD25129004278535DFA4C7135EF54926BB451E3AE98E1D
	7E8CB7D3260E3B9442E7B308D2160DC464C0C956CE68B8EB2C786CAB78D4C383
	C21CE38805717A2C1DC6085C756B819D931C403C8F937D0BC898600A3022BBE9
	02806884F8F332EA4BB206AC2B36AFE3EF71E14061AB458DD0324692F3697725
	30A7F2C3BCD9CFA699F12BC3713D02906D2E39008230101525DEFFBC0845E683
	185DB321A429D3CE9BFC0B8F2529126330203F7089C6878F855A8AEA8151BC79
	EE54527199FF8219A8A0B12024772E1B2CE9DF44E33822433B874204E81F9B7D
	08B73E294480022156D7DFBB6972853B77167661571AD55961FF6309853A9A45
	9418F2E6799FA4BB2676EE4CE47A9A5831F43185C51042C9E61F26DF1E8F0B45
	EF0B280BD7681C12E31CC7C82ED7ABB1A04B29EFD7FFB4A05B0036CE20094010
	86811418FFFF5F19D46E021EF4CE91861036F44F7D327B426D4859AF02CBAFE2
	CB44A8495E92D51334E2B85CB1093E3E04CDCEED035500081F75729CEC6E0C6E
	6ECE0356A5F732A647BC61B862E7E1C154665FCEC301E26C0493A7CA67F5E190
	20B6AFADA754B92CFD25045A22C8DD6A450EB5D597C2E65867DCF10757624791
	AFD17DAE42B3E63B6F3D047C69A20C7F99D7F02F20E54D407FF9DC5B002ACE20
	074010068229C2FF3FAC623A43095E4D8807B05DBAB3FE9AF07200905903BEA4
	2270066ED87BEC360BC7E1C010A24C55E97F17F094272CACA61983CDBC58A264
	A64228A818DD82F1A0174960819B25A6E0159ADEC01E559E824ED3631389373C
	5DD3F2DD3088F30926D3B09E79D2B11D5E9F3705164044F90322C6B0F8A25DCD
	EE0152974B81C5FD68D2450B42244F8CAB33D0238E184B2B355F5713BB7DF64F
	31FA09C0C519E0000C8230300CF5FF0F5E74D2ABCBB21F101309B457DA2F3F59
	0741E691788CCA89780A5F4AA0A900874C78780B834A622F5C0E85D975A98041
	36ADA9856777CD07FBD3DFD5E08BB2DDD384621EEC19F520582D6915D01C3689
	336DA30BCEF86CC417400AF5D0C4949978815D7605B3F6580861E598A89EE465
	CAB4D360B39A2FD1D23A769CC0453AB28B6D6204827174F4B1B7FDCCD10BB5FE
	9B625F35F411808C2B4902108461D0F2FF17A395246DC7D1AB5C9C61CBCAC794
	B7E58BB8E550B103D37DE6B9C1702BECEA71567FB4E968B364F95C8CB7552E21
	87054A984AE7EF46F9772621D9107F29419F78C6D483601D9AB72F9E1AD0CCA8
	8983C45906AE6782A61465FBA3C88C83ADB04EDC09652A257472A2B958468070
	80D3CE1F65EA4AF29740044283ED70016BCBD466BC8EC4521ACD96F8B219AD74
	7684E525BC76C0FF2A7E0460EB5C76180481284A41C3C6A4FEFF17BAAF718543
	B90FDB98F805C64898E1CE39786B436BADC7FE89635BDEEB043F03F6E0D8F051
	5EC64698CFD28AD690D7639767A73737E82FEDDA1131F379B1028643447D73D8
	5A61BD4A09947CADC9870CBA940C81A19646FA1FC1DDE86AFC09AC28F38A08CE
	EAAE564D912F7AB74294F1B469854F32D377891C97C6366A737EF9AE81AEFCD7
	CF1036AA6224B6995D1E66E15D536C539161357962CAD49AE8562294E9976B3F
	FF8EE62B001F679283300C43D166202C600312F73F173760D9A25608A862F0B3
	13C4A627A8D42891FFF0FCF7049552D6E752A7717F3CBCDE8F008035D07B3553
	81A04A9A5EB126646E734B74BAC2CD033856077D2C58645FCAAAEB549679BADF
	AEA7CB395248D62CCB6D67563A90986056248B6FBFFF6F97FA2B443FC4C62CEF
	5605D7A1EDD8BD7BA1A3B4A06C5297F294B738A338F42E8FE51E066D684D4300
	FFDCA7421655934302332BD9C88110EA2F88E4DBC600699E95B91F80349B9CF0
	47002ECE6607411808C26D693D1A12896FE1D9F77F16E3C91B07042B606766DB
	18AE243D00ED767FBE992319D75F8678BB7BA975D05F5B48E96FF93BC30201AE
	288E2E32B93CCD9FB7DB972089A8EE3DBE1E27E2F5BEA064944C070F0A1622C8
	6FE3D49D23475B8175E31EA3291D955C3137A7B18F18883534DA8FE9B5B78151
	3D2BA6C4A8B9BD67034104A724012544A455AD3995D2360300B4CA7E8271BC4E
	3BDD1BE0CC6F67789CC074C8F6517CC2BFA52ABE99D40599BE94F8394FE3EBF9
	18AE7D3AA546E9B47EDCFF6FF809C0D7D9EB200CC34038043B14464485A898BA
	F10E6CBC3F2313030B1B2BA289D314FF04C4C4DEA5AA1B5B77E72F3F3D4005E7
	F5A6EDBA8E1FC1B030181702F2486BB415D13410650FCCDBB5670224322696E6
	F4A700A22CF307E20694551AE5A32BBE06A5DA65A57CA566B96AB7BBC3F164BC
	2A757933D74C8AC208521AD0C0332FE5340A8CC9A54853114E4BA128E4AD428E
	48E3AB95942521353FFF3A331FC35AAA955E649924610F3D87A05D47BDDF4A9D
	B1296B9641F7662D6F39790013195D1D1C6D3DD27CC852CBC01283DED7F8A6B7
	77E11F630CD83CEED7DBE5DCEF7B0074CEFD4115BC05E0E2DA712A8681A0127B
	1D2B0D4222EF3D2151702A0ECB15B84328E86852C1F33AB69959A721652C6BAD
	7876FD59EFCCBF0719E7FCD7E7BA7EBCCF31B4232F88FD3C522F2ACC001C1DC4
	05F4043CDC6910691248A9F56C24556460AD9995203691E8813FC2563C627A14
	CF1A26C794C5E5FA1CC28448C5844E53C43F4A083CB61BC5A7E7C4AC58B0C429
	EE25DB3977A46A9B48CE6AE4DB0638E10D6C34FFD59CDC48838013065352584A
	F7DF87C7E57BDB6E2FAFCBD35BEB2235B56576E670FD9E5E8A1AF18D7E42AF28
	BB69E494B6272C055A74A85D3FEA8E2134FD605DF3C73D9E0F54C63EEBD5F396
	4A1A151F98A9AAB9D6B3DADF09863F01C8B8821B84611858852475C20448CCC9
	5A4CC0102C8078B00082548A684ACF9744AA60817CCE767CF6F97E99B0753646
	2BB22FB4E3D2DFAF646037E7670DB10F71999A0FCD50E7B4AD3A2F9D4C52D3C3
	C9B2D908E5B4A8BD5FE9703C3DEEB7EBE52C8099E2465090996A353C06BCD1F5
	7CB5ABB67864148A7991203AE54779F50BF5E2EA9A80B0702862839E2132387D
	8848CAD1072E69CD28A2A1C97E1E4082CD2220428800C08918B353C184775A6E
	7937C5EDF2D007ECADF933F5944037C9962CB52FE3751551E82855D9A1C979D2
	2B4E3AA10189945273A6DB382EFE6B435701A8B8922384612046B083D798E141
	835440879440013CE04113194E0F2BC931430B89F7D2F537847D1F08B32F5368
	0644894246E7355C9D51EE66A506E8B0ECD0F0CF1328D1E7D0C6B612060CBA3E
	2F86316FCC2C572ACD4885D2934EDB0A5ED5F3F121533CDD9742DC944D515B84
	4443292AD91F92A78CB319444193FBE4CC7D4DEFDDFEE0FBF8E57ABE9D8E79BB
	E6BDB650D80895386DA3C6470B31A502322EAC68EAF31A4EF4CD21ACC3AB5C56
	E13165C8B322F67C80A4114F2159D67DEC05ED7DD44A412151EADFD750F5DB9E
	9BA53FF115808A2BC741208681B1B5D2A2858E8E3F5050F0FF4F211AB2599C99
	B105453EE0C48A3DD7AF3471EEDC3B727746295500DC6375CD159F1C3A0820D3
	5CA9819CC5144822178324BBC38ABF4DFD6D4BD387F80627CF9FE11D96B10493
	C56412A5BB7ACC602AE6950F461FB6B2E9E703401CD4BEBCA3953A6A7D3A6FEB
	7AD13AEDB26099B288086DCD0AC4E9A3C7C8FA69AF1809611B91F18B9C353F3C
	29B4FEA94544CE0140758F2F6CBBDEEE8F2718A7A3E006A6159467EF2B001567
	90032008C44041628CFFFFADC115A605F1E6052F04D86DA75B7E435C513A6EF5
	78C210A8ADABA11163228AB793C5A3B88E991F151EB1869E94AB324861583409
	84B7F8F268A499DCD61878AF17872B0C2C40259DF298E9A6884AA6A32EE36876
	BC0E9A168DB0C3D02855553B1600B7E9A3D8F48B5D20CD463984F61DA826C811
	583A869FBA475FD40DEABE1AD861E48913F132B74D688FE3715E16BE96619DAB
	37D93E5E01B8B8921C00411898D1C4FF3F18AC761642E02A1C8C86B6B31DBA20
	6AC2140251C245B624B611D53D6D216C85859CC4A18B70913A694361DCDC10AA
	D9482FC3AC662CBCE429CBC91E45B2B725FB989E2D16B3517E5B6F97E6338F58
	892FB5C2E46DC9F12DB0EAC6D36504FEE27D7740AE60125D88DD939AEFD7764E
	FEE9E4DB358DFE45715406FC80B504EC92A126517B447EDD5B3B12EF1886D7FA
	0420E38C72000461186A86F7BF304174AF6568FC279144916D6DDF9796C2DAF3
	005280936AAA310F0BF1659260D73287FBAB5EFE04940C6759B7BF7AD8975204
	A6C3E3047E5B4A547B4E44193442283441D28684C84A7ACD37F359EED9589309
	857989473439271148830116B829099FE0E27430637B3F9E6766A1CA957C59FA
	52D69AB7627219673A52B395E8D8E80D926060C2016A1C3D51869F7BFF73AA2B
	AE740BC0C519A0000CC230D08EB1FF3FD8E9D6E4AA6C1F10844630CDE5F30FD0
	38E8C613E320E48C7623FCF6F38A8A483DA27AC37A3CEEB6E0C3114FBC0AE26A
	439125EFD135A652652D2F6AE545C0B115EA3239A71536B2BB9A6385F7C66E53
	930B51A8A23A7742B45E6F49C264FF25D09B5E1D143B65757986DD830E88EA36
	B4F7F8EB3C8C8C1AE7C825C03D1C9ABA71AA1052C658B2B510CEB9AB687995FC
	FE628A8F004C9C010E8030080365D9FFFFAB194EE901FA0193B94046B976FEB7
	0129D2D27B116D093C007E2AF3C52E2470B9EAD16D85ABC4BC7E47AF54B6B553
	2A29109CF6BAE1ACDCA6DB7A3DCB616475EB588E4CD5A2B4F1B49713362DA2CC
	C3C5440CB5B2FBBC5CD298328CE3611F90009BF3912907A17544AF5A9BAC07A1
	A213363D3EE2C2DE905D738EF51885C3A6B6F12D415DB0F2C75695D0F8A146FB
	3144C6C3B4E5E8F74A1E01A838A31C0061108602BBFF8D1D53DAC2E29F9FC6B8
	D1D0D7FE0D997A555A9A303FFC26586DFEFC3E19C8D97591DFE6278327B3A2E7
	2D8519537C6A19D8E49746D112AA1A2D64DA88D1D8706DFC7476D386F3D20046
	3DCBC9EE2FE8503AA22FC209816F5E8E6FDC90486903038AF370A1578E53C0E0
	AA614E4D904B3C4ADD0687117B6DE2A31AAA43D5B8C5048066DF082A6008C0D2
	715D3B43454C07FEF7FC0A40C519E5000C823054DD76FF032FC0A42DC45DC00F
	62504AFBEE5F7609C9D8453116E73AC4199228CB91321470C020001B7008D0E4
	74419455A27F99A83911A12B2A68328F0CB05A713E0756426B13692532F7844C
	4251D4AE7D91F909898D4E62EE8D90B37908D2B0A10BE08E8DCF22C8285D1E41
	E0271C5FEFC84713C3276DBAF9A5818378DFF2DD88F6EC0D4A0B3B08B5F829DD
	CF6C0210290B26CA715FA2CBB1C867F5BB0B7D0230752E0900822014ACECFE17
	2E21791F63D79E028561BAFBEFEDF94E06EF629B790A593659E82F24A594024E
	1A0DA8F09046659D91D6362DF099D66E51B9C57C3234AA34E89C1B3DD111C2FA
	48C5946950E7510377E7AFF44835EAB52C5EDFE913E97DFB628D37CF1B072162
	2CA001A82073C4F5783160401C9071AAC8BD68EDA2430B8A005321568E15B00A
	CC34F2C50A54EA80817E74F4895897C4AF874F0036AE24094010868995FF3F58
	491D92143CC803B850BA65F9FC00AFECA717D05DB8BED4EBAA8B925058029A4B
	7D9BDB6AF85077614E8D1A76609B0AEBFE428898D8186B14B1B69AD635819F7C
	33D5F986DA67A02A069B6B426D5E7F5859606E44E5C9DE693E86B17ED21A793A
	FD5CC95B13E7A1D911F0C99021D7CCC51376CCE179848C2EBBEB280A0321D8E0
	322C0847B2682035FAE0EF0D745E01D838A32B0041180622B8FFC23E45924BF1
	C715A0B4254DEFFC84BACCAAB359C479415F48462FBD37B3EF98440E185102FD
	854AA1D782E17206724311374150DE04DDE74DEBC04E74EEAC7E100EC4989132
	748779D3986791896CB9D38125E2C2BF017C90972189C9BDCBB3E778AD2C4710
	98DC74A04E1B85B92AD850829F6CA821AFDA496D8413EB534E3CA3D7B0A053F6
	CABD87267B41D297112321FEDB05BD027075063800C2200C8CF8FF0F9B491D2D
	C5E80F966C611B6D8FDF25EC63069277437194E38586B5E2DEFAB0D259F0F227
	2119046CDF9264FCD48629CBCA738EDE9176B5C8F9A9BAA4084EBDAF674A01C1
	A1DD699E0836B1D4EA76C44C6469817DEF9F1A4C4585DBD57825AECC5329C8B0
	6F37A59B77B8979F726AE2744CDCBE0BE9CEC18A0A6B1A00454C82982EE8D47A
	8A2A40236D9572D0B2F8ED83CE84199DFB4700AACE608B61100482A1A6FFFFBF
	55D7D41DB0AF979C733120EC4CEEBF01A9311781495CA91E9816CA5758351B75
	99DDFDBEDCE4025016F3B0A946D0A8550700395BEA6AD360589D6AE83AEB94FD
	E83002846901806D6FCC314C36CBF13B8E55CC4B58E00CA74D1D4BE3D305C5B6
	EF01DA8AB4BE74A6874C1DDB063F5DEC9663D6A6C03832EF9633D1C89539F662
	765493E89F97F2834D3FD1050D2776E37560183E41FC790595FD89A13C023075
	06490082300C14E4FF2F46AACDA6C8CD8B33C28186A659C70914EDF6D83C2BB8
	C87AE58267822CFFE0BFC4659B3259BBAD3D3D4479520811B7DBBAEDC2BB6AA7
	3529AF21FCC1DAE842D51CC188DD58D27D8DA9D9B3FA985B0BC55DE6EC539526
	054F37108BA2977CBDEF581815E230030CD66DC65B61CD791869C66226B17606
	93D5FDC8472703BDFFE0EB93FA2283158F181354618D88EBCCC8EFDF2CB1EDAF
	00545D01120421085A27FFFFE01B572F2066DA2754A684487943229C0C1DDFE7
	24E7D48AC18E84B4A7D4F7B4E23DC38C9B18DDE278FA483FD68221AA2C6D0D33
	EED60673ADDF58E2B1DFE301AC6D339236ABEA0DD5213E734947C33615A70CB3
	F00FDB852809CCCBEE11BF10852E7295ECF72AF8D7D805DE5A54CD57D1950401
	52B534F85A6F6D5CF06316D88F014E48A7D614F477256985F72FF465C9360D33
	92F9F1CB0BE5ABCDFA0B40C599180108C240D028F65FB01024F738D882635E36
	FB6F4319EF6CD887B66C8CE8E908A34064C5F74D8391E30E12C73598800E12D8
	81B20639099828FCC5287D0D87EAB2730A640B13C5E6E8D510C95FCF64546510
	5430C1596D01D3925E2ABCAD38E0FD57F28475D466B39D49CBA76E02B0EF09FB
	8C951549800465C43511837AC355184C56F3396A36A88F7DA147EEA817CE6A75
	BC169DAC7BE6D755EF30D6FE28F60AC0D5191C0008C2305005F75F9882E4D2F2
	70011F5221A4E9F98F264EB771D14BEDAA05E0CA1969C43C4E05272A6591B9D4
	6BEEC00BE73EF814F4287E008F7DA9042877035BBCB7DC188E5FB13CA154C1D4
	0211A43A1A9617D82C26CC2197FC7B81306E11D2A6F11E02473F8E5178A26A51
	F9227388409B1BDBC0D101785F2863EB781D18CEFC2AE0071B99C47103ECBD6B
	6184AC179A075AF308F7F5EEFCB4404A09FC5B938DE7F2350B5F769CD14F00AA
	CE2807401086A10EE3FD0F8C0CB3BE62E0CF5F0363ED68CBA98A5019117937B4
	E79A8A606677D0981CFDA507505F8C7FBA5B110E3D38654416724D8DF5FFA180
	89BB16806765E827A410B3A16B651AE27EDD212A960CE053E7E2DC1847B6E5E5
	871B16FF7C18C15D4CD203AF68C15623BF12EEE94AE01D928939D14B48CB20CE
	753B2C3F6A24549B352CA704BA1C2551BBCB06596A7A5D27301330A04CBC7F07
	E6D9BD027C7C0250756E4B0082201015A8FFFF6193740F76796FC6644AB60D0E
	C7571ECD8BBBC0214E0A92561F4FDE7370626E874E557B3CB4647A4EB5A7362C
	0AE14F46543AA59050929C780768F781E9BB76137A9A9218E95DEB7846B27529
	DCAF8401CB218BD094045FDDA7EF6C13E9C793C67E9D68FC46AF990FF97A4760
	46E70A1DACC5262299BB7DAA75D7FD680183372751541FA8A9090E49695D1395
	AB5D94E07BE47F3AC06E5E2F6D7A0BC0D595E00008C2309CF1FF1F06A7BD30D1
	0F18B92CDDDAFE83DCACC11BCE416C23B476DA81ECB39711605582565CA2C83C
	11097354DD25255C85B6A7D82DCE66B807478B5A073B66B9CA45B297B06F0E51
	8F908F0959DD231A26FB9DA31784FCBF135D6831AFEEF314ADC1F52CD426F5E1
	672EEF877D9FD1EEC6D77C4EC95AFFD4BFEBA05381A1CC15BF9BBEED4D2B501D
	BC2D415C49CB873F3923A6F685F7E2B3E7E01180AA6BC90210044293F9E9FEE7
	D52C3EDA6BD3BA45348C20FCBDA1F08817049BE7268149997161BAC29F904D81
	62C7DBBB2419200EDF2B77E48FDD32AB2C037EAA7A09CCADD496DB6480278095
	56CA22A717FBF83A24147CC4B4BA70E9BCC383F1549344882983740FAFCD90C9
	8D32BC47510A02D4B19279AE098EC3591E5FC89B50B534521EEB6D38035EBA5B
	D86D434C23D9ADA80C252DEEF6BA4F1151133D2E8AB145793775AD46C5F7F908
	C0D599E40008C3309026E2FFFF0555A1F1248872E480C4A22E4E3CEED611BBEF
	CB806D8FB5650E771A4021DA0A6277547E409F72D9EB076F2604430F32A36900
	B4BE94876A32D867926916DF1665FB3F2A0996C5765D9D3A128AF61FD692C0F7
	A8427D8EC6C4D9F19223400AC199DA7B39BA39637BBA5CBDEE702F02923EA36D
	1EE7B0D168B3F59FC051BA149C314451D91991392B834A5341D5911C8470D457
	7A8F0FFD45967DFD718F005C9D0B0E80200C43FD20DEFFB2466080D016831E40
	130326EBB6BE7EC8B931A6ADDA758756B579E78B75FF4B814F837243E63CA181
	0BBD40F2D06220D7450A960FF765CCC2DE510E54A159E0C9F48A240731B41077
	C0DD06B69AB5689D397BA97481B3498EE2DADA8536C00C7731D6322F482E4815
	C47BBA26453F9E09A9A99AAB60C5B14E454C05D9985AE39F405F2BE880F810FD
	F44EDCED95A1036E786944C5134B4EF38FF640130DFE38E7F8D01F1C9167F008
	40D5D9EC200CC330B83F826E2FC09133EFFF6E032DEB52643B45E3DADBD4A94D
	9DF8F31F39F7BD6DEBDA1ECFD71DED4E64088E6EB67F0EDB310C1AA13BF88FA5
	EB2A4928D3C40692DCA89A0D1859F57689E9067D1A8F5113D7DD931DBDB626E2
	5A629594209D4F819A736994B271F4F43925E15D985BA09EA7805EE8E40A9A1A
	FB497C345EDFCCCC0F2077D0C39791483E93E25F82857F7A385F66AD8E0B107D
	B43CFD19119522986A76913468B98CAE0C77E816A5686DCB524984B9EE813489
	DFE25700AAAE2087411886A96C4C1A7C61EC3CEDFF4F9B044D9AB2D80948DC22
	4E0511A9B11DFB625733CFD36B793F3F5F320CF818D68C0B5E8835945AD986A8
	D55FA86EFEC8940A4EC47E0AB57BAB89986C5E9514496044E6FF881160FD29F1
	5033ED2A9AC115A19FB33878A2BFC0A4EE14C89FF86E123269CA42312CCC87BA
	86CE81E9624466E8020EB87A3C10503FD52DDCE549F837B427126702D0DE8FAB
	1037EC534B810EA47141B7DCC7B012664D64F5C8D86AE90FBF3A72381C62A7A0
	8777D6D018C4BA5F5D22828E3FF377BDF80BC0D5B52B310CC2B023850E6548AF
	FD9BE6FF7F875EB3A4C7B396EC5C729D18190C58C6B2740420C6F85A9694D23C
	DFC91FAAE7F94A49DCCA372CA51C3EAFBC7ACCF274A1A6FB6608BED15D52EE0E
	19228C57CDB24A08D7F58D631AAEB7C7136F40C9DBF6C1570C91A9A613138B93
	EDBF3A3C3099E8A287FC555388EE27943F64C5B55D47D12347E9C49C2144AB6D
	D5D1B5D324C9D91F8B3311726B032949A617B6D7D9437726D70680AC83C98326
	922C73FAD89D683201AA4EDE5C6030831E42451925A7B7513B699CD9707F860D
	3F01B83A9B1D046120086B6D82079EC0D4C48307FBECF072C6A4A5B40577675A
	8D122EFC9CD82C9D85DDF97EF80121C4699ABDF7CE39926FBB97FBF1334A6FFB
	06D3EDD37918CC38C211A830DD5873CB0DC40ECB4397C35596771800F3E4FDE1
	2FD71B0323CB62AE801F6397C049E8242E2984ADAE6549AB327B5391AC4A7221
	C6D7F39095FA652D7BE7F0AB99B0376A33150F84B71965B1E29BA2A46714195F
	1643C4189C28B7EE86D4EA71A8CDD65182D9E0BA6720B414D86751EBB2218746
	DB14DD802E1ABA406655A69C58A90A1B6E2FFCFDCF34F45B7819F31680AD6B57
	6210048291280576C0FF7F64324E7808C9DE1E3114B1A5D099853BBCD9C70F80
	9412D6BCF731C61082B596F3D2A13F66D9D2F97BC721C83937894DEDF3BFF55C
	E60CD9392279228C8C397A6FD63AE716C1A3496CE2BE5FF455D5E98F4DB1AEAA
	EDC78BD471B69454CB490B2A29FDC008C891AC5EF02DA87B4086201EE85B0DF0
	9D096DABBE8E876E82DA812C7AD9629EE6A6BEB4CA82E2705199AE7765632815
	8F1E73721BDA3A75FADFB8E191BF370272165EB3298ED30937A58974235233FD
	FE27386C4E01C7F31180ABB3C9411006A2B0C12EEAC613B8411678FF7B68BC4A
	D3A6C512C579F3CAA06C486043607E60A6D3F7396331A7944208728C31E69CE5
	0A8340C728E0FA7C53FF02ECAC57B696371D9CCB75368104C18A958DFDDB0BB4
	C86283C9A28B37E5F0AC6E35913F78F107BF91B035CE28354E8D3C79D293F7A4
	516BEAC35E1C6445E08BCFF7C7F3D25F87F1C66942D8512CF8AEF80AD502D32E
	CA71AEC014BF4A966409FB4EE5739890E19756F6A86EA86B6526968E5D63451C
	8976E828B2A3A29EC041CF2B74DC2612772B6272FA1580AB2BC8412084811AD7
	153DF0032E3C85FFFFC5DBBAE002763A69A31EF6C06533092D9474A6B338572B
	C698522AA548128410FCBD40BB7277A92796694F6A17C1FEB47B16F2012EDF43
	F379FB73D0E4E06FE7349E9C8256976C44756BB244987773143766AE493941DD
	D390C0770571FCFCD40AE7B6AEF4010101FBFEE02D9573A6309163544FDAEA12
	8C820192AE777785B9C48E6C38BCB0E57C6C874E0141DA0196D45148BA8AEA03
	C6DB3875FB81FA103B57B77D7B0DEDB8B1F64220ECB58FFEA7CEA04FB927C447
	00AEAEED06401804A2266EE026DD7FB1B689F7B269E4C318BF10286838B8A885
	607F24ADB51D3E67BB5BFCD0314E23C952108DBE0CB3C6FF58CD5DEB97338C37
	3B956DE2954A5D09D9C171D6463961E6B35C8990AAA5928138560E95C389912D
	A7F40F329C686C85B150DA414281C36EED2EC1BDA9AB39D09A95A2A2289F43AD
	2B1E4EBC24ADC966D6E580E0265C7E9ECEFAF6AFEB3C85DE9A712B7BC01FD0B8
	7346233FC09E10922BFBCA01AF006C5D410E80200C4B8CC8FFBF8A076ECCAD2D
	0B8A9CF4C4421B06DA75E7EF47EABDD1C33E56FFB90F5444389F39B1E71850DB
	184142956A1939EA2C85B8BAADC856F1751090B30E5E0FB9780E18E519774280
	44261983094EFBA5A677FE68C04EA9B66D0775FCF2CC4646005A3ED385D29D5A
	A3DCD7F356886DA7286F2A5663C9B3068F04E5B2B476FBB9614C72442FE6526C
	191EEA230067D7AE042008C394736595FFFF4F1E26245406273B31701CB421ED
	40C375FC35372B4FB2DE7FA5F93457032B66F2BBDC2438C718860CAF8BA550E9
	4831812D69B31610A2456E7C4FD5C74E89492A97FE7E33C9E3C3AAF216B96DA4
	A0D385D37845E6BD437813790029811565EDF1CE3BB495D68034486D588241FD
	91ECE469AD943BE70CA608BD2061316087151E01447E04900408E627B4C5C3F0
	E90B78A1871C5B40125422830581E5CF8F9F3F21B1F50756E9414A4578ACC37D
	0B4D34E0261AA4D00316488CE06540F000859C810A6F1D20375D20FB6AFE4117
	1AC1078FA1170682BAA63FC091077607B02103EC5AE9EAEA727172414E0F8524
	ACAF5FBF024978920508203A450049190BEE38080398F1F1642C48F102892DE4
	420FDEDD870B02BDFD13D4CF4000480CFD04178C90C61BFC7C6948A306394B41
	1A60D07537E02A0D92F3402BF2C1A91BB6D60C7C25EC1F500440FCF21F5A00FE
	01362F81964A49497DF8F001D8E0E4E4E4049648000134E822808C8C454CF642
	2E03E1AD0948C4FC868DD7438209129190F605900D89337843E33FF41860C882
	CFFF90629015B40194191E4F90B527C09207187DF0540FAC7B80CD4B15300032
	E0152740000DED08A0A40CC495B1E035247C3D333C4B41620B528EC15B7DBF61
	35D56F700B07DED4F9FA15D4977AFBF60D30BD03F381B1B1B18686868484040F
	0F0F24C740004000613F4D7414105F63C1BB96F01A0B022071032CFDBF7EF9C2
	C3CBCBC5C585DCC784B73901026834020618000410D368100C2C0008A0D10818
	60001040A31130C0002080462360800140008D46C0000380001A8D8001060001
	341A01030C000268340206180004D068040C300008A0D1081860001040A31130
	C000208046236080014080010027FEDC2FBA8B5BD50000000049454E44AE4260
	82
	]]>
</Picture>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" length_in_bytes="142" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000000C0000
	001102030000009453A53100000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D866000000294944415408D76360000151209684D2
	4898353484816DD512380DC769290C9233A73084860680740300E7DA0A3F5360
	87700000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" length_in_bytes="148" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000000C0000
	001102030000009453A53100000009504C5445FF0000FFFFFF9D9DA1AA7CC3B0
	0000000174524E530040E6D8660000002F4944415408D7636000012D20567300
	D2A8986BD50A06CED04820BD124C73C2604727835A5A26C3AA554B1944434300
	1D930B4AC81F76170000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="10" length_in_bytes="159" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000440000
	00300203000000D5CE34F60000000C504C5445FF0000040404C2C2C2FFFFFF3D
	16398D0000000174524E530040E6D866000000374944415428CF630845070CAB
	D001992268E686AD64F88F0ABE8D8A8C5411CC54471830D2500D0B1ADF914104
	4D24008B9B31D560980300121925D53ECE829C0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="11" length_in_bytes="160" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000440000
	00300203000000D5CE34F60000000C504C5445FF0000040404C2C2C2FFFFFF3D
	16398D0000000174524E530040E6D866000000384944415428CF630845070CAB
	D0C04A3245D0CC0D5BC9F01F157C1B1519A92298A98E3060A4A11A1634BE2383
	089A4800163763AAC1300700059125D16DA2D8C80000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="12" length_in_bytes="127" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000440000
	000A0103000000378F6AED00000006504C5445FF000004040425ABBBC2000000
	0174524E530040E6D8660000001D4944415408D76360C00013E0AC030CFFA1E0
	039218A63A0410C0260600E5260BA949CAB7A90000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="13" length_in_bytes="111" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000010000
	001B01030000008796773700000006504C5445FF000004040425ABBBC2000000
	0174524E530040E6D8660000000D4944415408D7636A602203020072AD0DB754
	0E842B0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="14" length_in_bytes="155" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000440000
	00300203000000D5CE34F600000009504C5445FF0000040404C2C2C235D2C274
	0000000174524E530040E6D866000000364944415428CF630845070CABD00199
	2268E686AD6440036CA32223550433D511068C3454C382C6776410411309C0E2
	664C3518E600008525593A2D48DD920000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="15" length_in_bytes="156" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000440000
	00300203000000D5CE34F600000009504C5445FF0000040404C2C2C235D2C274
	0000000174524E530040E6D866000000374944415428CF630845070CABD0C04A
	3245D0CC0D5BC98006D8464546AA0866AA230C1869A886058DEFC82082261280
	C5CD986A30CC0100789D5936A24A14950000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="16" length_in_bytes="92" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000070000
	0001010300000028C5268D00000003504C5445040404C372941B0000000A4944
	4154081D6360000000020001CFC835E50000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="17" length_in_bytes="126" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000060000
	003002030000004F81E36B00000009504C5445FF0000040404C2C2C235D2C274
	0000000174524E530040E6D866000000194944415408D763080D60C85A808426
	D00A012D020101FC240046AF231F223FD6350000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="18" length_in_bytes="144" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000060000
	00560203000000912C0F2C00000009504C5445FF0000040404C2C2C235D2C274
	0000000174524E530040E6D8660000002B4944415418D363080D60C85A808426
	D00A012D020207011C24B22C03F5494706065606901B58C16C245900E0C02A10
	BAD428150000000049454E44AE426082
	]]>
</GDLPict>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[
actualGuid = FROM_GUID

! ==============================================================================
! Subroutines
! ==============================================================================

    _startID   = "4B2E107D-5D85-4805-8C08-A3D1F93ED321"
    _endID     = "5A92DF05-F12A-43CC-8B2E-36D9602637C2"

gosub "doorFrameWidth_FWM"

	_startID	= "5A92DF05-F12A-43CC-8B2E-36D9602637C2"
	_endID		= "80622B61-A050-4660-B343-54EA6636258A"
gosub "fmtypes_fwm"

! ==============================================================================
! Set Migration GUID
! ==============================================================================

setmigrationguid actualGUID

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================

! ==============================================================================
! doorFrameWidth = thickness = 0.02 problem - (AC17 --> AC18)
! ==============================================================================
"doorFrameWidth_FWM":

    if actualGuid = _startID then
	    nnn = STORED_PAR_VALUE("iInteriorType01", _interiorType01)
	    nnn = STORED_PAR_VALUE("iInteriorType02", _interiorType02)
	    nnn = STORED_PAR_VALUE("iInteriorType03", _interiorType03)
	    nnn = STORED_PAR_VALUE("iInteriorType04", _interiorType04)
	    nnn = STORED_PAR_VALUE("iInteriorType05", _interiorType05)
	    nnn = STORED_PAR_VALUE("iInteriorType06", _interiorType06)
    
	    nnn = STORED_PAR_VALUE("iInteriorTypeUnder01", _interiorTypeUnder01)
	    nnn = STORED_PAR_VALUE("iInteriorTypeUnder02", _interiorTypeUnder02)
	    nnn = STORED_PAR_VALUE("iInteriorTypeUnder03", _interiorTypeUnder03)
	    nnn = STORED_PAR_VALUE("iInteriorTypeUnder04", _interiorTypeUnder04)
	    nnn = STORED_PAR_VALUE("iInteriorTypeUnder05", _interiorTypeUnder05)
	    nnn = STORED_PAR_VALUE("iInteriorTypeUnder06", _interiorTypeUnder06)
    
	    nnn = STORED_PAR_VALUE("bDivision01", _bDivision01)
	    nnn = STORED_PAR_VALUE("bDivision02", _bDivision02)
	    nnn = STORED_PAR_VALUE("bDivision03", _bDivision03)
	    nnn = STORED_PAR_VALUE("bDivision04", _bDivision04)
	    nnn = STORED_PAR_VALUE("bDivision05", _bDivision05)
	    nnn = STORED_PAR_VALUE("bDivision06", _bDivision06)
    
	    nnn = STORED_PAR_VALUE ("nModule", _nModule)
    
	    ! iInteriorType + iInteriorTypeUnder
    
	    dim iAboveDrawers[6]
		    iAboveDrawers[1] = _interiorType01
		    iAboveDrawers[2] = _interiorType02
		    iAboveDrawers[3] = _interiorType03
		    iAboveDrawers[4] = _interiorType04
		    iAboveDrawers[5] = _interiorType05
		    iAboveDrawers[6] = _interiorType06
	    
	    dim iUnderDrawers[6]
		    iUnderDrawers[1] = _interiorTypeUnder01
		    iUnderDrawers[2] = _interiorTypeUnder02
		    iUnderDrawers[3] = _interiorTypeUnder03
		    iUnderDrawers[4] = _interiorTypeUnder04
		    iUnderDrawers[5] = _interiorTypeUnder05
		    iUnderDrawers[6] = _interiorTypeUnder06
	    
	    dim bDivision[6]
		    bDivision[1] = _bDivision01
		    bDivision[2] = _bDivision02
		    bDivision[3] = _bDivision03
		    bDivision[4] = _bDivision04
		    bDivision[5] = _bDivision05
		    bDivision[6] = _bDivision06
    
	    _bSetDoorFrameWidth = 0
	    for iMig = 1 to _nModule
		    if bDivision[iMig] = 1 then 
			    if iAboveDrawers[iMig] = INTERIOR_DRAWER | iUnderDrawers[iMig] = INTERIOR_DRAWER then
				    _bSetDoorFrameWidth = 1
				    iMig = _nModule				! break
			    endif
		    else
			    if iAboveDrawers[iMig] = INTERIOR_DRAWER then
				    _bSetDoorFrameWidth = 1
				    iMig = _nModule				! break
			    endif
		    endif
	    next iMig
    
	    if _bSetDoorFrameWidth then
		    doorFrameWidth = 0.02
		    parameters doorFrameWidth = doorFrameWidth
	    endif
    
	    actualGUID = _endID
    endif

return


! ==============================================================================
! Change string parameter to integer
! ==============================================================================
"fmtypes_fwm":
	if actualGuid = _startID then
		bHas = DELETED_PAR_VALUE ("FM_Type", FM_Type)

	!INT
		iFMType = 999
		if FM_Type = `Default Objects` then iFMType = 1
		if FM_Type = `Default Lamps` then iFMType = 2
		if FM_Type = `People` then iFMType = 3
		if FM_Type = `Elevators` then iFMType = 4
		if FM_Type = `Security and Escapes` then iFMType = 5
		if FM_Type = `Stairs` then iFMType = 6
		if FM_Type = `Work Spaces` then iFMType = 7
		if FM_Type = `Electric Facilities` then iFMType = 8
		if FM_Type = `Distribution Panels` then iFMType = 9
		if FM_Type = `Measuring Places` then iFMType = 10
		if FM_Type = `Lamps` then iFMType = 11
		if FM_Type = `HVAC Equipment` then iFMType = 12
		if FM_Type = `Sanitation` then iFMType = 13
		if FM_Type = `Locks` then iFMType = 14
		if FM_Type = `Built-in Wardrobes` then iFMType = 15
		if FM_Type = `Furniture` then iFMType = 16
		if FM_Type = `Ceilings` then iFMType = 17
		if FM_Type = `Floors` then iFMType = 18
		if FM_Type = `Outdoor Objects` then iFMType = 19
		if FM_Type = `Computers` then iFMType = 20
		if FM_Type = `Monitors` then iFMType = 21
		if FM_Type = `Software` then iFMType = 22
		if FM_Type = `Phones` then iFMType = 23
		if FM_Type = `Containers` then iFMType = 24
		if FM_Type = `Others` then iFMType = 25

	!AUT
		if FM_Type = "Standard Objekte" then iFMType = 1
		if FM_Type = "Standard Leuchten" then iFMType = 2
		if FM_Type = "Standard Lampen" then iFMType = 2
		if FM_Type = "Menschen" then iFMType = 3
		if FM_Type = "Fahrstühle" then iFMType = 4
		if FM_Type = "Sicherheit und Fluchtwege" then iFMType = 5
		if FM_Type = "Treppen" then iFMType = 6
		if FM_Type = "Arbeitsplätze" then iFMType = 7
		if FM_Type = "Elektrische Ausstattung" then iFMType = 8
		if FM_Type = "Verteilung Paneele" then iFMType = 9
		if FM_Type = "Verteilerfeld" then iFMType = 9
		if FM_Type = "Vermessungsstandorte" then iFMType = 10
		if FM_Type = "Leuchten" then iFMType = 11
		if FM_Type = "Lampen" then iFMType = 11
		if FM_Type = "HKLSE Ausstattung" then iFMType = 12
		if FM_Type = "Sanitäre Anlagen" then iFMType = 13
		if FM_Type = "Schlösser" then iFMType = 14
		if FM_Type = "Einbaugarderoben" then iFMType = 15
		if FM_Type = "Einbaukleiderschränke" then iFMType = 15
		if FM_Type = "Möbel" then iFMType = 16
		if FM_Type = "Decken" then iFMType = 17
		if FM_Type = "Fußböden" then iFMType = 18
		if FM_Type = "Objekte im Freien" then iFMType = 19
		if FM_Type = "Computer" then iFMType = 20
		if FM_Type = "Monitore" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefone" then iFMType = 23
		if FM_Type = "Container" then iFMType = 24
		if FM_Type = "Andere" then iFMType = 25

	!BRA
		if FM_Type = "Objetos padrão" then iFMType = 1
		if FM_Type = "Lâmpadas padrão" then iFMType = 2
		if FM_Type = "Pessoas" then iFMType = 3
		if FM_Type = "Elevadores" then iFMType = 4
		if FM_Type = "Segurança e Fuga" then iFMType = 5
		if FM_Type = "Escadas" then iFMType = 6
		if FM_Type = "Espaços de trabalho" then iFMType = 7
		if FM_Type = "Equipamentos elétricos" then iFMType = 8
		if FM_Type = "Painéis de distribuição" then iFMType = 9
		if FM_Type = "Medição Lugares" then iFMType = 10
		if FM_Type = "Lâmpadas" then iFMType = 11
		if FM_Type = "Equipamento AVAC" then iFMType = 12
		if FM_Type = "Instalações Sanitárias" then iFMType = 13
		if FM_Type = "Fechamentos" then iFMType = 14
		if FM_Type = "Armários Embutidos" then iFMType = 15
		if FM_Type = "Mobiliário" then iFMType = 16
		if FM_Type = "Tetos" then iFMType = 17
		if FM_Type = "Pavimentos" then iFMType = 18
		if FM_Type = "Objetos Exteriores" then iFMType = 19
		if FM_Type = "Computadores" then iFMType = 20
		if FM_Type = "Monitores" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefones" then iFMType = 23
		if FM_Type = "Recipientes" then iFMType = 24
		if FM_Type = "Outros" then iFMType = 25

	!CHE
		if FM_Type = "Standard Objekte" then iFMType = 1
		if FM_Type = "Standard Leuchten" then iFMType = 2
		if FM_Type = "Standard Lampen" then iFMType = 2
		if FM_Type = "Menschen" then iFMType = 3
		if FM_Type = "Fahrstühle" then iFMType = 4
		if FM_Type = "Sicherheit und Fluchtwege" then iFMType = 5
		if FM_Type = "Treppen" then iFMType = 6
		if FM_Type = "Arbeitsplätze" then iFMType = 7
		if FM_Type = "Elektrische Ausstattung" then iFMType = 8
		if FM_Type = "Verteilung Paneele" then iFMType = 9
		if FM_Type = "Verteilerfeld" then iFMType = 9
		if FM_Type = "Vermessungsstandorte" then iFMType = 10
		if FM_Type = "Leuchten" then iFMType = 11
		if FM_Type = "Lampen" then iFMType = 11
		if FM_Type = "HKLSE Ausstattung" then iFMType = 12
		if FM_Type = "Sanitäre Anlagen" then iFMType = 13
		if FM_Type = "Schlösser" then iFMType = 14
		if FM_Type = "Einbaukleiderschränke" then iFMType = 15
		if FM_Type = "Möbel" then iFMType = 16
		if FM_Type = "Decken" then iFMType = 17
		if FM_Type = "Fußböden" then iFMType = 18
		if FM_Type = "Fussböden" then iFMType = 18
		if FM_Type = "Objekte im Freien" then iFMType = 19
		if FM_Type = "Computer" then iFMType = 20
		if FM_Type = "Monitore" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefone" then iFMType = 23
		if FM_Type = "Container" then iFMType = 24
		if FM_Type = "Andere" then iFMType = 25

	!CHI
		if FM_Type = "默认对象" then iFMType = 1
		if FM_Type = "默认灯" then iFMType = 2
		if FM_Type = "人" then iFMType = 3
		if FM_Type = "电梯" then iFMType = 4
		if FM_Type = "保安与逃生" then iFMType = 5
		if FM_Type = "楼梯" then iFMType = 6
		if FM_Type = "工作空间" then iFMType = 7
		if FM_Type = "电气设备" then iFMType = 8
		if FM_Type = "分布面板" then iFMType = 9
		if FM_Type = "测量地点" then iFMType = 10
		if FM_Type = "灯" then iFMType = 11
		if FM_Type = "HVAC设备" then iFMType = 12
		if FM_Type = "卫生设施" then iFMType = 13
		if FM_Type = "锁" then iFMType = 14
		if FM_Type = "内置衣橱" then iFMType = 15
		if FM_Type = "家具" then iFMType = 16
		if FM_Type = "天花板" then iFMType = 17
		if FM_Type = "地板" then iFMType = 18
		if FM_Type = "室外对象" then iFMType = 19
		if FM_Type = "计算机" then iFMType = 20
		if FM_Type = "监视器" then iFMType = 21
		if FM_Type = "软件" then iFMType = 22
		if FM_Type = "电话" then iFMType = 23
		if FM_Type = "容器" then iFMType = 24
		if FM_Type = "其它" then iFMType = 25

	!CZE
		if FM_Type = "Výchozí objekty" then iFMType = 1
		if FM_Type = "výchozí lampy" then iFMType = 2
		if FM_Type = "lidé" then iFMType = 3
		if FM_Type = "výtahy" then iFMType = 4
		if FM_Type = "bezpečnost a úniky" then iFMType = 5
		if FM_Type = "schodiště" then iFMType = 6
		if FM_Type = "pracovní prostory" then iFMType = 7
		if FM_Type = "Elektrická zařízení" then iFMType = 8
		if FM_Type = "rozvaděče" then iFMType = 9
		if FM_Type = "měřiče" then iFMType = 10
		if FM_Type = "Svítidla" then iFMType = 11
		if FM_Type = "lampy" then iFMType = 11
		if FM_Type = "Lampy" then iFMType = 11
		if FM_Type = "TZB vybavení" then iFMType = 12
		if FM_Type = "Sanitární vybavení" then iFMType = 13
		if FM_Type = "zámky" then iFMType = 14
		if FM_Type = "zabudované skříně" then iFMType = 15
		if FM_Type = "Nábytek" then iFMType = 16
		if FM_Type = "stropy" then iFMType = 17
		if FM_Type = "podlahy" then iFMType = 18
		if FM_Type = "Venkovní objekty" then iFMType = 19
		if FM_Type = "počítače" then iFMType = 20
		if FM_Type = "monitory" then iFMType = 21
		if FM_Type = "software" then iFMType = 22
		if FM_Type = "telefony" then iFMType = 23
		if FM_Type = "obaly" then iFMType = 24
		if FM_Type = "jiné" then iFMType = 25
		if FM_Type = "Jiné" then iFMType = 25

	!FIN
		if FM_Type = "Oletusobjektit" then iFMType = 1
		if FM_Type = "Oletuslamput" then iFMType = 2
		if FM_Type = "Ihminen" then iFMType = 3
		if FM_Type = "Hissit" then iFMType = 4
		if FM_Type = "Turvallisuus ja poistumistiet" then iFMType = 5
		if FM_Type = "Portaat" then iFMType = 6
		if FM_Type = "Työtilat" then iFMType = 7
		if FM_Type = "Sähkölaitteet" then iFMType = 8
		if FM_Type = "Jakelutaulut" then iFMType = 9
		if FM_Type = "Mittauspaikat" then iFMType = 10
		if FM_Type = "Lamput" then iFMType = 11
		if FM_Type = "LVI-laite" then iFMType = 12
		if FM_Type = "Saniteettikalusteet" then iFMType = 13
		if FM_Type = "Viemäröinti" then iFMType = 13
		if FM_Type = "Lukot" then iFMType = 14
		if FM_Type = "Kiinteät komerot" then iFMType = 15
		if FM_Type = "Kalustus" then iFMType = 16
		if FM_Type = "Sisäkattopinnat" then iFMType = 17
		if FM_Type = "Lattiat" then iFMType = 18
		if FM_Type = "Ulkotilan objektit" then iFMType = 19
		if FM_Type = "Ulkotilojen objektit" then iFMType = 19
		if FM_Type = "Tietokoneet" then iFMType = 20
		if FM_Type = "Näytöt" then iFMType = 21
		if FM_Type = "Ohjelmat" then iFMType = 22
		if FM_Type = "Puhelimet" then iFMType = 23
		if FM_Type = "Säilytys" then iFMType = 24
		if FM_Type = "Muut" then iFMType = 25

	!FLA

	!FRA
		if FM_Type = "Objets par défaut" then iFMType = 1
		if FM_Type = "Lampes par défaut" then iFMType = 2
		if FM_Type = "Personnages" then iFMType = 3
		if FM_Type = "Ascenseurs" then iFMType = 4
		if FM_Type = "Sécurité et sorties de secours" then iFMType = 5
		if FM_Type = "Escaliers" then iFMType = 6
		if FM_Type = "Espaces de travail" then iFMType = 7
		if FM_Type = "Services électriques" then iFMType = 8
		if FM_Type = "Panneaux de distribution" then iFMType = 9
		if FM_Type = "Armoires de contrôle" then iFMType = 10
		if FM_Type = "Lampes" then iFMType = 11
		if FM_Type = "Equipement CVCA" then iFMType = 12
		if FM_Type = "Sanitaires" then iFMType = 13
		if FM_Type = "Serrurerie" then iFMType = 14
		if FM_Type = "Penderies Encastrées" then iFMType = 15
		if FM_Type = "Ameublement" then iFMType = 16
		if FM_Type = "Plafonds" then iFMType = 17
		if FM_Type = "Planchers" then iFMType = 18
		if FM_Type = "Objets extérieurs" then iFMType = 19
		if FM_Type = "Ordinateurs" then iFMType = 20
		if FM_Type = "Ecrans" then iFMType = 21
		if FM_Type = "Logiciels" then iFMType = 22
		if FM_Type = "Téléphones" then iFMType = 23
		if FM_Type = "Conteneurs" then iFMType = 24
		if FM_Type = "Autres" then iFMType = 25

	!GER
		if FM_Type = "Standard Objekte" then iFMType = 1
		if FM_Type = "Standard Leuchten" then iFMType = 2
		if FM_Type = "Standard Lampen" then iFMType = 2
		if FM_Type = "Menschen" then iFMType = 3
		if FM_Type = "Fahrstühle" then iFMType = 4
		if FM_Type = "Sicherheit und Fluchtwege" then iFMType = 5
		if FM_Type = "Treppen" then iFMType = 6
		if FM_Type = "Arbeitsplätze" then iFMType = 7
		if FM_Type = "Elektrische Ausstattung" then iFMType = 8
		if FM_Type = "Verteilung Paneele" then iFMType = 9
		if FM_Type = "Verteilerfeld" then iFMType = 9
		if FM_Type = "Vermessungsstandorte" then iFMType = 10
		if FM_Type = "Leuchten" then iFMType = 11
		if FM_Type = "Lampen" then iFMType = 11
		if FM_Type = "HKLSE Ausstattung" then iFMType = 12
		if FM_Type = "Sanitäre Anlagen" then iFMType = 13
		if FM_Type = "Schlösser" then iFMType = 14
		if FM_Type = "Einbaukleiderschränke" then iFMType = 15
		if FM_Type = "Möbel" then iFMType = 16
		if FM_Type = "Decken" then iFMType = 17
		if FM_Type = "Fußböden" then iFMType = 18
		if FM_Type = "Objekte im Freien" then iFMType = 19
		if FM_Type = "Computer" then iFMType = 20
		if FM_Type = "Monitore" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefone" then iFMType = 23
		if FM_Type = "Container" then iFMType = 24
		if FM_Type = "Andere" then iFMType = 25

	!GRE
		if FM_Type = "Αρχικά Αντικείμενα" then iFMType = 1
		if FM_Type = "Αρχικά Φωτιστικά" then iFMType = 2
		if FM_Type = "Άνθρωποι" then iFMType = 3
		if FM_Type = "Ανελκυστήρες" then iFMType = 4
		if FM_Type = "Ασφάλεια και Διαφυγή" then iFMType = 5
		if FM_Type = "Σκάλες" then iFMType = 6
		if FM_Type = "Χώροι Εργασίας" then iFMType = 7
		if FM_Type = "Ηλεκτρολ. Εγκαταστάσεις" then iFMType = 8
		if FM_Type = "Πίνακες Διανομής" then iFMType = 9
		if FM_Type = "Θέσεις Μετρήσεων" then iFMType = 10
		if FM_Type = "Φωτιστικά" then iFMType = 11
		if FM_Type = "Λάμπα" then iFMType = 11
		if FM_Type = "Εξαρτήματα HVAC" then iFMType = 12
		if FM_Type = "Υγιεινή" then iFMType = 13
		if FM_Type = "Κλειδαριές" then iFMType = 14
		if FM_Type = "Εντοιχισμένες Ντουλάπες" then iFMType = 15
		if FM_Type = "Εντοιχισμένη Ντουλάπα" then iFMType = 15
		if FM_Type = "Επίπλωση" then iFMType = 16
		if FM_Type = "Οροφές" then iFMType = 17
		if FM_Type = "Δάπεδα" then iFMType = 18
		if FM_Type = "Υπαίθρια Αντικείμενα" then iFMType = 19
		if FM_Type = "Υπολογιστές" then iFMType = 20
		if FM_Type = "Οθόνες" then iFMType = 21
		if FM_Type = "Λογισμικό" then iFMType = 22
		if FM_Type = "Τηλέφωνα" then iFMType = 23
		if FM_Type = "Κιβώτια" then iFMType = 24
		if FM_Type = "Άλλα" then iFMType = 25

	!HUN
		if FM_Type = "Alapértelmezett tárgy" then iFMType = 1
		if FM_Type = "Alapértelmezett lámpa" then iFMType = 2
		if FM_Type = "Személy" then iFMType = 3
		if FM_Type = "Felvonó" then iFMType = 4
		if FM_Type = "Biztonság- és menekülésjelző" then iFMType = 5
		if FM_Type = "Lépcsők" then iFMType = 6
		if FM_Type = "Lépcső" then iFMType = 6
		if FM_Type = "Lépcsö" then iFMType = 6
		if FM_Type = "Munkaterület" then iFMType = 7
		if FM_Type = "Elektromos berendezés" then iFMType = 8
		if FM_Type = "Elosztó" then iFMType = 9
		if FM_Type = "Mérőhely" then iFMType = 10
		if FM_Type = "Lámpa" then iFMType = 11
		if FM_Type = "Légtechnikai berendezés" then iFMType = 12
		if FM_Type = "Szaniter berendezés" then iFMType = 13
		if FM_Type = "Zár" then iFMType = 14
		if FM_Type = "Beépített szekrény" then iFMType = 15
		if FM_Type = "Bútor" then iFMType = 16
		if FM_Type = "Mennyezet" then iFMType = 17
		if FM_Type = "Padló" then iFMType = 18
		if FM_Type = "Kültéri tárgy" then iFMType = 19
		if FM_Type = "Számítógép" then iFMType = 20
		if FM_Type = "Monitor" then iFMType = 21
		if FM_Type = "Szoftver" then iFMType = 22
		if FM_Type = "Telefon" then iFMType = 23
		if FM_Type = "Konténer" then iFMType = 24
		if FM_Type = "Egyéb" then iFMType = 25

	!ITA
		if FM_Type = "Oggetti predefiniti" then iFMType = 1
		if FM_Type = "Lampade predefinite" then iFMType = 2
		if FM_Type = "Persone" then iFMType = 3
		if FM_Type = "Ascensori" then iFMType = 4
		if FM_Type = "Sicurezza e Fughe" then iFMType = 5
		if FM_Type = "Scale" then iFMType = 6
		if FM_Type = "Spazi di Lavoro" then iFMType = 7
		if FM_Type = "Funzioni Elettriche" then iFMType = 8
		if FM_Type = "Pannelli di Distribuzione" then iFMType = 9
		if FM_Type = "Posti di Misurazione" then iFMType = 10
		if FM_Type = "Lampade" then iFMType = 11
		if FM_Type = "Apparecchiatura HVAC" then iFMType = 12
		if FM_Type = "Risanamento" then iFMType = 13
		if FM_Type = "Serrature" then iFMType = 14
		if FM_Type = "Armadi a muro" then iFMType = 15
		if FM_Type = "Armadi Incassati" then iFMType = 15
		if FM_Type = "Armadi Incorporati" then iFMType = 15
		if FM_Type = "Arredo" then iFMType = 16
		if FM_Type = "Soffitti" then iFMType = 17
		if FM_Type = "Pavimenti" then iFMType = 18
		if FM_Type = "Oggetti Esterni" then iFMType = 19
		if FM_Type = "Computers" then iFMType = 20
		if FM_Type = "Monitors" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefoni" then iFMType = 23
		if FM_Type = "Contenitori" then iFMType = 24
		if FM_Type = "Altri" then iFMType = 25

	!JPN
		if FM_Type = "ﾃﾞﾌｫﾙﾄｵﾌﾞｼﾞｪｸﾄ " then iFMType = 1
		if FM_Type = "ﾃﾞﾌｫﾙﾄｵﾌﾞｼﾞｪｸﾄ" then iFMType = 1
		if FM_Type = "ﾃﾞﾌｫﾙﾄﾗﾝﾌﾟ" then iFMType = 2
		if FM_Type = "人物" then iFMType = 3
		if FM_Type = "ｴﾚﾍﾞｰﾀ" then iFMType = 4
		if FM_Type = "防犯と非常用" then iFMType = 5
		if FM_Type = "階段" then iFMType = 6
		if FM_Type = "ﾜｰｸｽﾍﾟｰｽ" then iFMType = 7
		if FM_Type = "電気設備" then iFMType = 8
		if FM_Type = "配電盤" then iFMType = 9
		if FM_Type = "測定場所" then iFMType = 10
		if FM_Type = "ﾗﾝﾌﾟ" then iFMType = 11
		if FM_Type = "設備機器" then iFMType = 12
		if FM_Type = "HVAC機器" then iFMType = 12
		if FM_Type = "排水設備" then iFMType = 13
		if FM_Type = "下水設備" then iFMType = 13
		if FM_Type = "ﾛｯｸ" then iFMType = 14
		if FM_Type = "造り付けﾜｰﾄﾞﾛｰﾌﾞ" then iFMType = 15
		if FM_Type = "家具" then iFMType = 16
		if FM_Type = "天井" then iFMType = 17
		if FM_Type = "ﾌﾛｱ" then iFMType = 18
		if FM_Type = "屋外ｵﾌﾞｼﾞｪｸﾄ" then iFMType = 19
		if FM_Type = "ｺﾝﾋﾟｭｰﾀ" then iFMType = 20
		if FM_Type = "ﾓﾆﾀ" then iFMType = 21
		if FM_Type = "ｿﾌﾄｳｪｱ" then iFMType = 22
		if FM_Type = "電話" then iFMType = 23
		if FM_Type = "ｺﾝﾃﾅ" then iFMType = 24
		if FM_Type = "その他" then iFMType = 25

	!KOR
		if FM_Type = "기본 객체" then iFMType = 1
		if FM_Type = "기본값 객체" then iFMType = 1
		if FM_Type = "기본 조명" then iFMType = 2
		if FM_Type = "사람들" then iFMType = 3
		if FM_Type = "엘리베이터" then iFMType = 4
		if FM_Type = "보안과 피난" then iFMType = 5
		if FM_Type = "계단" then iFMType = 6
		if FM_Type = "작업 공간" then iFMType = 7
		if FM_Type = "전기 설비" then iFMType = 8
		if FM_Type = "분배 패널" then iFMType = 9
		if FM_Type = "측정 장소" then iFMType = 10
		if FM_Type = "조명" then iFMType = 11
		if FM_Type = "공조설비" then iFMType = 12
		if FM_Type = "위생설비" then iFMType = 13
		if FM_Type = "잠금장치" then iFMType = 14
		if FM_Type = "붙박이 장" then iFMType = 15
		if FM_Type = "가구" then iFMType = 16
		if FM_Type = "천장" then iFMType = 17
		if FM_Type = "바닥" then iFMType = 18
		if FM_Type = "실외 객체" then iFMType = 19
		if FM_Type = "컴퓨터" then iFMType = 20
		if FM_Type = "모니터" then iFMType = 21
		if FM_Type = "소프트웨어" then iFMType = 22
		if FM_Type = "전화기" then iFMType = 23
		if FM_Type = "콘테이너" then iFMType = 24
		if FM_Type = "기타" then iFMType = 25

	!NED
		if FM_Type = "Standaardobjecten" then iFMType = 1
		if FM_Type = "Standaardlampen" then iFMType = 2
		if FM_Type = "Mensen" then iFMType = 3
		if FM_Type = "Liften" then iFMType = 4
		if FM_Type = "Beveiliging en vluchtwegen" then iFMType = 5
		if FM_Type = "Trappen" then iFMType = 6
		if FM_Type = "Werkplekken" then iFMType = 7
		if FM_Type = "ET installatie" then iFMType = 8
		if FM_Type = "Schakelkasten" then iFMType = 9
		if FM_Type = "Meetgebieden" then iFMType = 10
		if FM_Type = "Lampen" then iFMType = 11
		if FM_Type = "W-installatie" then iFMType = 12
		if FM_Type = "Afvalverwerking" then iFMType = 13
		if FM_Type = "Sloten" then iFMType = 14
		if FM_Type = "Inbouwkasten" then iFMType = 15
		if FM_Type = "Meubilair" then iFMType = 16
		if FM_Type = "Plafonds" then iFMType = 17
		if FM_Type = "Vloeren" then iFMType = 18
		if FM_Type = "Buitenobjecten" then iFMType = 19
		if FM_Type = "Computers" then iFMType = 20
		if FM_Type = "Monitoren" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefoon" then iFMType = 23
		if FM_Type = "Containers" then iFMType = 24
		if FM_Type = "Anders" then iFMType = 25
		if FM_Type = "Overig" then iFMType = 25

	!NOR
		if FM_Type = "Standard objekter" then iFMType = 1
		if FM_Type = "Andre" then iFMType = 25

	!POL
		if FM_Type = "Obiekty domyślne" then iFMType = 1
		if FM_Type = "Domyślne lampy" then iFMType = 2
		if FM_Type = "Ludzie" then iFMType = 3
		if FM_Type = "Windy" then iFMType = 4
		if FM_Type = "Bezpieczeństwo i ewakuacja" then iFMType = 5
		if FM_Type = "Schody" then iFMType = 6
		if FM_Type = "Przestrzenie robocze" then iFMType = 7
		if FM_Type = "Urządzenia elektryczne" then iFMType = 8
		if FM_Type = "Panele rozdzielające" then iFMType = 9
		if FM_Type = "Stanowiska pomiarowe" then iFMType = 10
		if FM_Type = "Lampy" then iFMType = 11
		if FM_Type = "Wyposażenie grzewczo-klimatyzac." then iFMType = 12
		if FM_Type = "Sanitarne" then iFMType = 13
		if FM_Type = "Zamki" then iFMType = 14
		if FM_Type = "Garderoby" then iFMType = 15
		if FM_Type = "Umeblowanie" then iFMType = 16
		if FM_Type = "Sufity" then iFMType = 17
		if FM_Type = "Podłogi" then iFMType = 18
		if FM_Type = "Obiekty zewnętrzne" then iFMType = 19
		if FM_Type = "Komputery" then iFMType = 20
		if FM_Type = "Monitory" then iFMType = 21
		if FM_Type = "Oprogramowanie" then iFMType = 22
		if FM_Type = "Telefony" then iFMType = 23
		if FM_Type = "Pojemniki" then iFMType = 24
		if FM_Type = "Inne" then iFMType = 25

	!POR
		if FM_Type = "Objectos por defeito" then iFMType = 1
		if FM_Type = "Lâmpadas por defeito" then iFMType = 2
		if FM_Type = "Pessoas" then iFMType = 3
		if FM_Type = "Elevadores" then iFMType = 4
		if FM_Type = "Segurança e Fuga" then iFMType = 5
		if FM_Type = "Escadas" then iFMType = 6
		if FM_Type = "Espaços de trabalho" then iFMType = 7
		if FM_Type = "Equipamentos eléctricos" then iFMType = 8
		if FM_Type = "Painéis de distribuição" then iFMType = 9
		if FM_Type = "Medição Lugares" then iFMType = 10
		if FM_Type = "Lâmpadas" then iFMType = 11
		if FM_Type = "Equipamento AVAC" then iFMType = 12
		if FM_Type = "Instalações Sanitárias" then iFMType = 13
		if FM_Type = "Fechos" then iFMType = 14
		if FM_Type = "Armários Embutidos" then iFMType = 15
		if FM_Type = "Mobiliário" then iFMType = 16
		if FM_Type = "Tectos" then iFMType = 17
		if FM_Type = "Pavimentos" then iFMType = 18
		if FM_Type = "Objectos Exteriores" then iFMType = 19
		if FM_Type = "Computadores" then iFMType = 20
		if FM_Type = "Monitores" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefones" then iFMType = 23
		if FM_Type = "Recipientes" then iFMType = 24
		if FM_Type = "Outros" then iFMType = 25

	!RUS
		if FM_Type = "Объекты по умолчанию" then iFMType = 1
		if FM_Type = "Ист.света по умолчанию" then iFMType = 2
		if FM_Type = "Люди" then iFMType = 3
		if FM_Type = "Лифты" then iFMType = 4
		if FM_Type = "Безопасность и эвакуация" then iFMType = 5
		if FM_Type = "Лестницы" then iFMType = 6
		if FM_Type = "Рабочее пространство" then iFMType = 7
		if FM_Type = "Электрические устройства" then iFMType = 8
		if FM_Type = "Распределительные щиты" then iFMType = 9
		if FM_Type = "Измеряемые места" then iFMType = 10
		if FM_Type = "Лампы" then iFMType = 11
		if FM_Type = "Источники света" then iFMType = 11
		if FM_Type = "Механическое оборудование" then iFMType = 12
		if FM_Type = "Санитария" then iFMType = 13
		if FM_Type = "Замки" then iFMType = 14
		if FM_Type = "Встроенные гардеробы" then iFMType = 15
		if FM_Type = "Гардеробы встроенные" then iFMType = 15
		if FM_Type = "Мебель" then iFMType = 16
		if FM_Type = "Потолки" then iFMType = 17
		if FM_Type = "Полы" then iFMType = 18
		if FM_Type = "Объекты снаружи" then iFMType = 19
		if FM_Type = "Компьютеры" then iFMType = 20
		if FM_Type = "Мониторы" then iFMType = 21
		if FM_Type = "Программное обеспечение" then iFMType = 22
		if FM_Type = "Телефоны" then iFMType = 23
		if FM_Type = "Контейнеры" then iFMType = 24
		if FM_Type = "Другой" then iFMType = 25
		if FM_Type = "Другие" then iFMType = 25

	!SPA
		if FM_Type = "Objetos por Defecto" then iFMType = 1
		if FM_Type = "Lámparas por Defecto" then iFMType = 2
		if FM_Type = "Personas" then iFMType = 3
		if FM_Type = "Ascensores" then iFMType = 4
		if FM_Type = "Seguridad y Evacuaciones" then iFMType = 5
		if FM_Type = "Escaleras" then iFMType = 6
		if FM_Type = "Espacios de Trabajo" then iFMType = 7
		if FM_Type = "Cuartos Eléctricos" then iFMType = 8
		if FM_Type = "Paneles de División" then iFMType = 9
		if FM_Type = "Lugares de Medidas" then iFMType = 10
		if FM_Type = "Lámparas" then iFMType = 11
		if FM_Type = "Control de Atmósfera" then iFMType = 12
		if FM_Type = "Saneamiento" then iFMType = 13
		if FM_Type = "Cerraduras" then iFMType = 14
		if FM_Type = "Armarios Empotrados" then iFMType = 15
		if FM_Type = "Mobiliario" then iFMType = 16
		if FM_Type = "Falsos Techos" then iFMType = 17
		if FM_Type = "Suelos" then iFMType = 18
		if FM_Type = "Objetos de Exterior" then iFMType = 19
		if FM_Type = "Ordenadores" then iFMType = 20
		if FM_Type = "Monitores" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Teléfonos" then iFMType = 23
		if FM_Type = "Contenedores" then iFMType = 24
		if FM_Type = "Otros" then iFMType = 25

	!SWE
		if FM_Type = "Standardelement" then iFMType = 1
		if FM_Type = "Standardarmatur" then iFMType = 2
		if FM_Type = "Människor" then iFMType = 3
		if FM_Type = "Hissar" then iFMType = 4
		if FM_Type = "Säkerhet & Utrymning" then iFMType = 5
		if FM_Type = "Trappor" then iFMType = 6
		if FM_Type = "Arbetsutrymmen" then iFMType = 7
		if FM_Type = "Elektrisk Utrustning" then iFMType = 8
		if FM_Type = "Distributionspaneler" then iFMType = 9
		if FM_Type = "Måttenhetsuppgifter" then iFMType = 10
		if FM_Type = "Armatur" then iFMType = 11
		if FM_Type = "VVS-utrustning" then iFMType = 12
		if FM_Type = "Sanitärt" then iFMType = 13
		if FM_Type = "Lås" then iFMType = 14
		if FM_Type = "Inbyggda Utrymmen" then iFMType = 15
		if FM_Type = "Möbler" then iFMType = 16
		if FM_Type = "Innertak" then iFMType = 17
		if FM_Type = "Golv" then iFMType = 18
		if FM_Type = "Element för Utomhusbruk" then iFMType = 19
		if FM_Type = "Datorer" then iFMType = 20
		if FM_Type = "Bildskärmar" then iFMType = 21
		if FM_Type = "Mjukvaror" then iFMType = 22
		if FM_Type = "Telefoner" then iFMType = 23
		if FM_Type = "Behållare" then iFMType = 24
		if FM_Type = "Annat" then iFMType = 25

	!TAI
		if FM_Type = "默認對象" then iFMType = 1
		if FM_Type = "默認燈" then iFMType = 2
		if FM_Type = "人" then iFMType = 3
		if FM_Type = "電梯" then iFMType = 4
		if FM_Type = "保安與逃生" then iFMType = 5
		if FM_Type = "樓梯" then iFMType = 6
		if FM_Type = "工作空間" then iFMType = 7
		if FM_Type = "電氣設備" then iFMType = 8
		if FM_Type = "分佈面板" then iFMType = 9
		if FM_Type = "測量地點" then iFMType = 10
		if FM_Type = "燈" then iFMType = 11
		if FM_Type = "HVAC設備" then iFMType = 12
		if FM_Type = "衛生設施" then iFMType = 13
		if FM_Type = "鎖" then iFMType = 14
		if FM_Type = "內置衣櫥" then iFMType = 15
		if FM_Type = "傢具" then iFMType = 16
		if FM_Type = "天花板" then iFMType = 17
		if FM_Type = "地板" then iFMType = 18
		if FM_Type = "室外對象" then iFMType = 19
		if FM_Type = "計算機" then iFMType = 20
		if FM_Type = "監視器" then iFMType = 21
		if FM_Type = "軟件" then iFMType = 22
		if FM_Type = "電話" then iFMType = 23
		if FM_Type = "容器" then iFMType = 24
		if FM_Type = "其它" then iFMType = 25

	!TUR
		if FM_Type = "Geçerli Objeler" then iFMType = 1
		if FM_Type = "Geçerli Aydınlatma Elemanları" then iFMType = 2
		if FM_Type = "İnsanlar" then iFMType = 3
		if FM_Type = "Asansörler" then iFMType = 4
		if FM_Type = "Güvenlik ve Çıkışlar" then iFMType = 5
		if FM_Type = "Merdivenler" then iFMType = 6
		if FM_Type = "Çalışma Alanları" then iFMType = 7
		if FM_Type = "Elektrik Hizmetleri" then iFMType = 8
		if FM_Type = "Dağıtım Levhalleri" then iFMType = 9
		if FM_Type = "Dağıtım Panelleri" then iFMType = 9
		if FM_Type = "Mekan Ölçme" then iFMType = 10
		if FM_Type = "Aydınlatma Elemanları" then iFMType = 11
		if FM_Type = "HVAC Ekipmanı" then iFMType = 12
		if FM_Type = "Banyo-Wc" then iFMType = 13
		if FM_Type = "Kilitler" then iFMType = 14
		if FM_Type = "Ankastre Dolaplar" then iFMType = 15
		if FM_Type = "Mobilya" then iFMType = 16
		if FM_Type = "Tavanlar" then iFMType = 17
		if FM_Type = "Zeminler" then iFMType = 18
		if FM_Type = "Dış Mekan Objeleri" then iFMType = 19
		if FM_Type = "Bilgisayarlar" then iFMType = 20
		if FM_Type = "Monitörler" then iFMType = 21
		if FM_Type = "Yazılım" then iFMType = 22
		if FM_Type = "Telefonlar" then iFMType = 23
		if FM_Type = "Konteynerler" then iFMType = 24
		if FM_Type = "Diğerleri" then iFMType = 25
		if FM_Type = "Diğer" then iFMType = 25

		parameters iFMType = iFMType

		actualGuid = _endID
	endif
return


]]></Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

targetGUID = TO_GUID

! ==============================================================================
! Subroutines
! ==============================================================================

gosub "fmtypes_bwm"

gosub "doorFrameWidth_BWM"

! ==============================================================================
! Set Migration GUID
! ==============================================================================

setmigrationguid targetGUID

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================



! ==============================================================================
! Migration step 1
! ==============================================================================
"doorFrameWidth_BWM":

    if targetGUID # "" then
		dim iAboveDrawers[6]
			iAboveDrawers[1] = iInteriorType01
			iAboveDrawers[2] = iInteriorType02
			iAboveDrawers[3] = iInteriorType03
			iAboveDrawers[4] = iInteriorType04
			iAboveDrawers[5] = iInteriorType05
			iAboveDrawers[6] = iInteriorType06
		
		dim iUnderDrawers[6]
			iUnderDrawers[1] = iInteriorTypeUnder01
			iUnderDrawers[2] = iInteriorTypeUnder02
			iUnderDrawers[3] = iInteriorTypeUnder03
			iUnderDrawers[4] = iInteriorTypeUnder04
			iUnderDrawers[5] = iInteriorTypeUnder05
			iUnderDrawers[6] = iInteriorTypeUnder06
		
		dim bDivision[6]
			bDivision[1] = bDivision01
			bDivision[2] = bDivision02
			bDivision[3] = bDivision03
			bDivision[4] = bDivision04
			bDivision[5] = bDivision05
			bDivision[6] = bDivision06

		for iMig = 1 to nModule
			if bDivision[iMig] = 1 then					
				if iAboveDrawers[iMig] = INTERIOR_DRAWER | iUnderDrawers[iMig] = INTERIOR_DRAWER then
					if abs(doorFrameWidth - 0.02) > EPS then
						targetGUID = ""
						iMig = nModule				! break
					endif
				endif
			else
				if iAboveDrawers[iMig] = INTERIOR_DRAWER then
					if abs(doorFrameWidth - 0.02) > EPS then
						targetGUID = ""
						iMig = nModule				! break
					endif
				endif
			endif
		next iMig
	endif

return



! ==============================================================================
! Change string parameter to integer
! ==============================================================================
"fmtypes_bwm":
	if targetGUID # "" then
		if iFMType = 1 then FM_Type = `Default Objects`
		if iFMType = 2 then FM_Type = `Default Lamps`
		if iFMType = 3 then FM_Type = `People`
		if iFMType = 4 then FM_Type = `Elevators`
		if iFMType = 5 then FM_Type = `Security and Escapes`
		if iFMType = 6 then FM_Type = `Stairs`
		if iFMType = 7 then FM_Type = `Work Spaces`
		if iFMType = 8 then FM_Type = `Electric Facilities`
		if iFMType = 9 then FM_Type = `Distribution Panels`
		if iFMType = 10 then FM_Type = `Measuring Places`
		if iFMType = 11 then FM_Type = `Lamps`
		if iFMType = 12 then FM_Type = `HVAC Equipment`
		if iFMType = 13 then FM_Type = `Sanitation`
		if iFMType = 14 then FM_Type = `Locks`
		if iFMType = 15 then FM_Type = `Built-in Wardrobes`
		if iFMType = 16 then FM_Type = `Furniture`
		if iFMType = 17 then FM_Type = `Ceilings`
		if iFMType = 18 then FM_Type = `Floors`
		if iFMType = 19 then FM_Type = `Outdoor Objects`
		if iFMType = 20 then FM_Type = `Computers`
		if iFMType = 21 then FM_Type = `Monitors`
		if iFMType = 22 then FM_Type = `Software`
		if iFMType = 23 then FM_Type = `Phones`
		if iFMType = 24 then FM_Type = `Containers`
		if iFMType = 25 then FM_Type = `Others`
		parameters FM_Type = FM_Type

	endif
return


]]></Script_BWM>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>4B2E107D-5D85-4805-8C08-A3D1F93ED321</MainGUID>
		<Version>17</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>no</AutoMigration>
	</MigrationTableElement>
	<MigrationTableElement>
		<MainGUID>5A92DF05-F12A-43CC-8B2E-36D9602637C2</MainGUID>
		<Version>0</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>no</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0"><Author>BIMobject</Author><License><Type>CC BY-ND</Type><Version>3.0</Version></License></Copyright><ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>22</Version>
		<AutoHotspots>no</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Total Width"]]></Description>
			<Value>3.02</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Depth"]]></Description>
			<Value>0.5</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Value>2.1</Value>
		</Length>
		<Integer Name="nModule">
			<Description><![CDATA["Number of Modules"]]></Description>
			<Value>4</Value>
		</Integer>
		<Integer Name="nTempModule">
			<Description><![CDATA["Number of Modules"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Boolean Name="bUniform">
			<Description><![CDATA["Uniform Module Width"]]></Description>
			<Value>0</Value>
		</Boolean>
		<String Name="frameType">
			<Description><![CDATA["Frame Type"]]></Description>
			<Value><![CDATA["Solid"]]></Value>
		</String>
		<Integer Name="iFrameType">
			<Description><![CDATA["Frame Type"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="frameWidth">
			<Description><![CDATA["Frame Width"]]></Description>
			<Value>0.02</Value>
		</Length>
		<String Name="doorType">
			<Description><![CDATA["Door Type"]]></Description>
			<Value><![CDATA["Double Sliding Door"]]></Value>
		</String>
		<Integer Name="iDoorType">
			<Description><![CDATA["Door Type"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="nEditableModule">
			<Description><![CDATA["Select Module to Edit"]]></Description>
			<Value>1</Value>
		</Integer>

		<!-- module_01: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="module_01">
			<Description><![CDATA["Module 1"]]></Description>
		</Title>
		<Length Name="modulWidth01">
			<Description><![CDATA["Module Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Boolean Name="bDivision01">
			<Description><![CDATA["Horizontal Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="divisionHeight01">
			<Description><![CDATA["Horizontal Division Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<String Name="interiorTypeAbove01">
			<Description><![CDATA["Interior Fitting above Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Shelf"]]></Value>
		</String>
		<String Name="interiorType01">
			<Description><![CDATA["Interior Fitting Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Shelf"]]></Value>
		</String>
		<Integer Name="iInteriorType01">
			<Description><![CDATA["Interior Fitting Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>5</Value>
		</Integer>
		<Integer Name="nShelves01">
			<Description><![CDATA["Number of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="nDrawers01">
			<Description><![CDATA["Number of Drawers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFront01">
			<Description><![CDATA["Number of Drawers with Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWire01">
			<Description><![CDATA["Number of Wire Basket"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangers01">
			<Description><![CDATA["Number of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="interiorTypeUnder01">
			<Description><![CDATA["Interior Fitting under Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["None"]]></Value>
		</String>
		<Integer Name="iInteriorTypeUnder01">
			<Description><![CDATA["Interior Fitting under Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nShelvesUnder01">
			<Description><![CDATA["Number of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersUnder01">
			<Description><![CDATA["Number of Drawers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFrontUnder01">
			<Description><![CDATA["Number of Drawers with Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWireUnder01">
			<Description><![CDATA["Number of Wire Basket"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangersUnder01">
			<Description><![CDATA["Number of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- module_02: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="module_02">
			<Description><![CDATA["Module 2"]]></Description>
		</Title>
		<Length Name="modulWidth02">
			<Description><![CDATA["Module Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Boolean Name="bDivision02">
			<Description><![CDATA["Horizontal Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="divisionHeight02">
			<Description><![CDATA["Horizontal Division Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<String Name="interiorTypeAbove02">
			<Description><![CDATA["Interior Fitting above Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Hanger"]]></Value>
		</String>
		<String Name="interiorType02">
			<Description><![CDATA["Interior Fitting Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Hanger"]]></Value>
		</String>
		<Integer Name="iInteriorType02">
			<Description><![CDATA["Interior Fitting Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nShelves02">
			<Description><![CDATA["Number of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="nDrawers02">
			<Description><![CDATA["Number of Drawers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFront02">
			<Description><![CDATA["Number of Drawers with Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWire02">
			<Description><![CDATA["Number of Wire Basket"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangers02">
			<Description><![CDATA["Number of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="interiorTypeUnder02">
			<Description><![CDATA["Interior Fitting under Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["None"]]></Value>
		</String>
		<Integer Name="iInteriorTypeUnder02">
			<Description><![CDATA["Interior Fitting under Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nShelvesUnder02">
			<Description><![CDATA["Number of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersUnder02">
			<Description><![CDATA["Number of Drawers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFrontUnder02">
			<Description><![CDATA["Number of Drawers with Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWireUnder02">
			<Description><![CDATA["Number of Wire Basket"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangersUnder02">
			<Description><![CDATA["Number of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- module_03: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="module_03">
			<Description><![CDATA["Module 3"]]></Description>
		</Title>
		<Length Name="modulWidth03">
			<Description><![CDATA["Module Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Boolean Name="bDivision03">
			<Description><![CDATA["Horizontal Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="divisionHeight03">
			<Description><![CDATA["Horizontal Division Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.7</Value>
		</Length>
		<String Name="interiorTypeAbove03">
			<Description><![CDATA["Interior Fitting above Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Shelf"]]></Value>
		</String>
		<String Name="interiorType03">
			<Description><![CDATA["Interior Fitting Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Shelf"]]></Value>
		</String>
		<Integer Name="iInteriorType03">
			<Description><![CDATA["Interior Fitting Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>5</Value>
		</Integer>
		<Integer Name="nShelves03">
			<Description><![CDATA["Number of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="nDrawers03">
			<Description><![CDATA["Number of Drawers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFront03">
			<Description><![CDATA["Number of Drawers with Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWire03">
			<Description><![CDATA["Number of Wire Basket"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="nHangers03">
			<Description><![CDATA["Number of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="interiorTypeUnder03">
			<Description><![CDATA["Interior Fitting under Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Drawer"]]></Value>
		</String>
		<Integer Name="iInteriorTypeUnder03">
			<Description><![CDATA["Interior Fitting under Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="nShelvesUnder03">
			<Description><![CDATA["Number of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersUnder03">
			<Description><![CDATA["Number of Drawers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="nDrawersFrontUnder03">
			<Description><![CDATA["Number of Drawers with Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWireUnder03">
			<Description><![CDATA["Number of Wire Basket"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangersUnder03">
			<Description><![CDATA["Number of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- module_04: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="module_04">
			<Description><![CDATA["Module 4"]]></Description>
		</Title>
		<Length Name="modulWidth04">
			<Description><![CDATA["Module Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Boolean Name="bDivision04">
			<Description><![CDATA["Horizontal Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="divisionHeight04">
			<Description><![CDATA["Horizontal Division Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<String Name="interiorTypeAbove04">
			<Description><![CDATA["Interior Fitting above Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Hanger"]]></Value>
		</String>
		<String Name="interiorType04">
			<Description><![CDATA["Interior Fitting Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Hanger"]]></Value>
		</String>
		<Integer Name="iInteriorType04">
			<Description><![CDATA["Interior Fitting Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nShelves04">
			<Description><![CDATA["Number of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="nDrawers04">
			<Description><![CDATA["Number of Drawers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFront04">
			<Description><![CDATA["Number of Drawers with Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWire04">
			<Description><![CDATA["Number of Wire Basket"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangers04">
			<Description><![CDATA["Number of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="interiorTypeUnder04">
			<Description><![CDATA["Interior Fitting under Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["None"]]></Value>
		</String>
		<Integer Name="iInteriorTypeUnder04">
			<Description><![CDATA["Interior Fitting under Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nShelvesUnder04">
			<Description><![CDATA["Number of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersUnder04">
			<Description><![CDATA["Number of Drawers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFrontUnder04">
			<Description><![CDATA["Number of Drawers with Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWireUnder04">
			<Description><![CDATA["Number of Wire Basket"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangersUnder04">
			<Description><![CDATA["Number of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- module_05: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="module_05">
			<Description><![CDATA["Module 5"]]></Description>
		</Title>
		<Length Name="modulWidth05">
			<Description><![CDATA["Module Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Boolean Name="bDivision05">
			<Description><![CDATA["Horizontal Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="divisionHeight05">
			<Description><![CDATA["Horizontal Division Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<String Name="interiorTypeAbove05">
			<Description><![CDATA["Interior Fitting above Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Shelf"]]></Value>
		</String>
		<String Name="interiorType05">
			<Description><![CDATA["Interior Fitting Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Shelf"]]></Value>
		</String>
		<Integer Name="iInteriorType05">
			<Description><![CDATA["Interior Fitting Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>5</Value>
		</Integer>
		<Integer Name="nShelves05">
			<Description><![CDATA["Number of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="nDrawers05">
			<Description><![CDATA["Number of Drawers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFront05">
			<Description><![CDATA["Number of Drawers with Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWire05">
			<Description><![CDATA["Number of Wire Basket"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangers05">
			<Description><![CDATA["Number of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="interiorTypeUnder05">
			<Description><![CDATA["Interior Fitting under Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["None"]]></Value>
		</String>
		<Integer Name="iInteriorTypeUnder05">
			<Description><![CDATA["Interior Fitting under Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nShelvesUnder05">
			<Description><![CDATA["Number of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersUnder05">
			<Description><![CDATA["Number of Drawers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFrontUnder05">
			<Description><![CDATA["Number of Drawers with Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWireUnder05">
			<Description><![CDATA["Number of Wire Basket"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangersUnder05">
			<Description><![CDATA["Number of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- module_06: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="module_06">
			<Description><![CDATA["Module 6"]]></Description>
		</Title>
		<Length Name="modulWidth06">
			<Description><![CDATA["Module Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Boolean Name="bDivision06">
			<Description><![CDATA["Horizontal Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="divisionHeight06">
			<Description><![CDATA["Horizontal Division Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<String Name="interiorTypeAbove06">
			<Description><![CDATA["Interior Fitting above Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Shelf"]]></Value>
		</String>
		<String Name="interiorType06">
			<Description><![CDATA["Interior Fitting Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Shelf"]]></Value>
		</String>
		<Integer Name="iInteriorType06">
			<Description><![CDATA["Interior Fitting Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>5</Value>
		</Integer>
		<Integer Name="nShelves06">
			<Description><![CDATA["Number of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="nDrawers06">
			<Description><![CDATA["Number of Drawers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFront06">
			<Description><![CDATA["Number of Drawers with Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWire06">
			<Description><![CDATA["Number of Wire Basket"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangers06">
			<Description><![CDATA["Number of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="interiorTypeUnder06">
			<Description><![CDATA["Interior Fitting under Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["None"]]></Value>
		</String>
		<Integer Name="iInteriorTypeUnder06">
			<Description><![CDATA["Interior Fitting under Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nShelvesUnder06">
			<Description><![CDATA["Number of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersUnder06">
			<Description><![CDATA["Number of Drawers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFrontUnder06">
			<Description><![CDATA["Number of Drawers with Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWireUnder06">
			<Description><![CDATA["Number of Wire Basket"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangersUnder06">
			<Description><![CDATA["Number of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_door: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door">
			<Description><![CDATA["Door"]]></Description>
		</Title>
		<String Name="doorStyle">
			<Description><![CDATA["Door Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Style 8"]]></Value>
		</String>
		<Integer Name="iDoorStyle">
			<Description><![CDATA["Door Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Integer>
		<Integer Name="iTempDoorStyle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Integer>
		<Boolean Name="bBevel">
			<Description><![CDATA["Edge Bevel"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="doorCustomPanelName">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="doorThickness">
			<Description><![CDATA["Door Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="doorFrameWidth">
			<Description><![CDATA["Door Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="mullionWidth">
			<Description><![CDATA["Mullion Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Integer Name="nHorizontalMullion">
			<Description><![CDATA["No. of Hor. Door Mullions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="nVerticalMullion">
			<Description><![CDATA["No. of Vert. Door Mullions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<RealNum Name="openingDoor1">
			<Description><![CDATA["Door 1 Position %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Length Name="openingDoorLength1">
			<Description><![CDATA["Door 1 Position %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<RealNum Name="openingDoor2">
			<Description><![CDATA["Door 2 Position %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Length Name="openingDoorLength2">
			<Description><![CDATA["Door 2 Position %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<RealNum Name="openingDoor3">
			<Description><![CDATA["Door 3 Position %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Length Name="openingDoorLength3">
			<Description><![CDATA["Door 3 Position %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- drawer: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="drawer">
			<Description><![CDATA["Drawer"]]></Description>
		</Title>
		<String Name="drawerStyle">
			<Description><![CDATA["Drawer Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="iDrawerStyle">
			<Description><![CDATA["Drawer Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="drawerFrameWidth">
			<Description><![CDATA["Drawer Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>

		<!-- gs_knob_type: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_knob_type">
			<Description><![CDATA["Knob Style"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="gs_knob_type_m">
			<Description><![CDATA["Knob Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="knob_pl_x">
			<Description><![CDATA["Horizontal Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="knob_pl_y">
			<Description><![CDATA["Vertical Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.85</Value>
		</Length>
		<String Name="gs_knob_p">
			<Description><![CDATA["Placing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Horizontal"]]></Value>
		</String>
		<Integer Name="gs_knob_p_m">
			<Description><![CDATA["Placing"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="knob_size">
			<Description><![CDATA["Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>

		<!-- gs_cornice_type: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_cornice_type">
			<Description><![CDATA["Cornice"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="gs_cornice_type_m">
			<Description><![CDATA["Cornice"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_lining">
			<Description><![CDATA["Side Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Front"]]></Value>
		</String>
		<Integer Name="gs_lining_m">
			<Description><![CDATA["Side Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Length Name="cot">
			<Description><![CDATA["Cornice Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="cooh">
			<Description><![CDATA["Cornice Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_leg_type: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_leg_type">
			<Description><![CDATA["Leg"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Style 4"]]></Value>
		</String>
		<Integer Name="gs_leg_type_m">
			<Description><![CDATA["Leg"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Length Name="leg_h">
			<Description><![CDATA["Leg Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="leg_w">
			<Description><![CDATA["Leg Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D Representation"]]></Description>
		</Title>
		<String Name="symbolType">
			<Description><![CDATA["2D Symbol Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="iSymbolType">
			<Description><![CDATA["2D Symbol Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bHangers">
			<Description><![CDATA["Show Hanger in 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_min_space: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_min_space">
			<Description><![CDATA["Minimal Space"]]></Description>
		</Title>
		<Length Name="MSFront">
			<Description><![CDATA["Minimal Space in Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Detailed"]]></Value>
		</String>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_resol">
			<Description><![CDATA["Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Showing 2D Hotspots in 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Material Name="gs_cabinet_mat">
			<Description><![CDATA["Cabinet"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matSteelCabinet">
			<Description><![CDATA["Cabinet"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="matDoorFrame">
			<Description><![CDATA["Door Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>13</Value>
		</Material>
		<Material Name="matDoorGlass">
			<Description><![CDATA["Door (Glazing)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Material>
		<Material Name="matDoorMirror">
			<Description><![CDATA["Door (Mirror)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</Material>
		<Material Name="matDoorDecor1">
			<Description><![CDATA["Door 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matDoorDecor2">
			<Description><![CDATA["Door 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</Material>
		<Material Name="gs_knob_mat">
			<Description><![CDATA["Knob"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_shelf_mat">
			<Description><![CDATA["Shelf"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matSteelShelf">
			<Description><![CDATA["Shelf"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_hanger_mat">
			<Description><![CDATA["Hanger"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_drawer_mat">
			<Description><![CDATA["Drawer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_cornice_mat">
			<Description><![CDATA["Cornice"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_leg_mat">
			<Description><![CDATA["Leg"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matWireBasket">
			<Description><![CDATA["Wire Basket"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>45</Value>
		</Material>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["INT"]]></Value>
		</String>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Furniture"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>16</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["kg"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["User Defined 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["User Defined 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["User Defined 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["User Defined 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["User Defined 5"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>

		<!-- gs_onorm_Title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_onorm_Title">
			<Description><![CDATA["ONORM Listing Parameters"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<String Name="gs_onorm_dimensions">
			<Description><![CDATA["Width/Depth/Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_manufacturer">
			<Description><![CDATA["ONORM Manufacturer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_baseheight_value">
			<Description><![CDATA["Base Height Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_baseheight">
			<Description><![CDATA["Onorm Base Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_assemblydate">
			<Description><![CDATA["Assembly Date"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext1">
			<Description><![CDATA["Additional Information 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext2">
			<Description><![CDATA["Additional Information 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_aks">
			<Description><![CDATA["AKS Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_product">
			<Description><![CDATA["Product Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_leistungbuch">
			<Description><![CDATA["Collection of Specifications ID"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_description">
			<Description><![CDATA["ONORM Description"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_number">
			<Description><![CDATA["Onorm Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_id">
			<Description><![CDATA["ID Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_admission">
			<Description><![CDATA["Admission Date"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_modification">
			<Description><![CDATA["Modification Date"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_tozonenumber">
			<Description><![CDATA["To Zone Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>
</Symbol>

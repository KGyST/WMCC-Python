<Symbol IsArchivable="no" IsPlaceable="yes" MainGUID="DE313C94-6600-4234-91B3-48099C330CAA" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="34">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="no">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>C76BC373-89AE-4368-A490-BB2485825242</MainGUID>
	<MainGUID>3FCE1BC2-9644-44D4-9D5F-4DBF6C762CA4</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["Resize_A_B_ZZYZX"]]></MName>
		<MainGUID>33A17ABE-882E-11D6-95A3-00039318F8B6</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["LibraryGlobals13"]]></MName>
		<MainGUID>063CD85B-5902-43F6-840A-66E88F707D13</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_minimalspace"]]></MName>
		<MainGUID>DFA90ED8-737C-49BB-AE78-036B478908DF</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Resize_A_B_ZZYZX"]]></MName>
		<MainGUID>33A17ABE-882E-11D6-95A3-00039318F8B6</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_cabinet_credenza"]]></MName>
		<MainGUID>384333BB-8E48-4286-B8B8-A273CD9ED639</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_cornicetyp"]]></MName>
		<MainGUID>65AACBD6-5F33-43D6-A221-F7803082C990</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_cabinet_legtyp"]]></MName>
		<MainGUID>D8AC092B-0B7F-4FF8-BCD5-30B306AC7D04</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_warddoortyp"]]></MName>
		<MainGUID>525D1544-74FD-4C01-8E9A-8D252A936981</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabcontrol"]]></MName>
		<MainGUID>D512885C-336A-4161-B8CB-EE5DC5D09FFE</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>30C7F5D1-460B-49BD-AC57-9CE6D6A61C1D</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabcontrol"]]></MName>
		<MainGUID>D512885C-336A-4161-B8CB-EE5DC5D09FFE</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_warddoortyp"]]></MName>
		<MainGUID>525D1544-74FD-4C01-8E9A-8D252A936981</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[
if not(gs_shadow) then shadow off
if gs_detlevel_3D_m = 2 then	! Detailed
	resol gs_resol
else
	if gs_detlevel_3D_m = 1 then ! Simple
		resol 3
		gs_resol = 6
	else
		END	! Off
	endif
endif

pen gs_cont_pen


!-----Definitions-----
unID = 1

if gs_knob_type_m=0 then knob_d=0
if gs_knob_type_m=1 then knob_d=0.025
if gs_knob_type_m=2 then knob_d=0.025
if gs_knob_type_m=3 then knob_d=0.03
if gs_knob_type_m=4 then knob_d=0.024
if gs_knob_type_m=5 then knob_d=0.025
if gs_knob_type_m=6 then knob_d=0.025
if gs_knob_type_m=7 then knob_d=0.03
if gs_knob_type_m=8 then knob_d=0.03


! ==============================================================================
! Hotspots
! ==============================================================================
if iCabinetForm = SHAPE_SQUARE then
	call "Resize_A_B_ZZYZX" parameters ALL

	hotspot a/2, b, ZZYZX, unID : unID = unID + 1
	hotspot a/2, b, 0, unID 	: unID = unID + 1

	!-----Leg Height-----
	if gs_leg_type_m <> 0 then
		hotspot  0, 0,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  0, 0, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  0, 0, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  0, b,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  0, b, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  0, b, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  a, b,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  a, b, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  a, b, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  a, 0,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  a, 0, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  a, 0, leg_h, unID, leg_h, 2					: unID=unID+1
	endif
else
	!-----Plan-----

	hotspot  0, B, 0, unID, A, 1+256					: unID=unID+1
	hotspot -1, B, 0, unID, A, 3						: unID=unID+1
	hotspot  A, B, 0, unID, A, 2						: unID=unID+1

	hotspot  0,  0, 0, unID, B, 1+256					: unID=unID+1
	hotspot  0, -1, 0, unID, B, 3						: unID=unID+1
	hotspot  0,  B, 0, unID, B, 2						: unID=unID+1

	hotspot  0,  0, 0, unID, sideDepth1, 1+128			: unID=unID+1
	hotspot -1,  0, 0, unID, sideDepth1, 3				: unID=unID+1
	hotspot  sideDepth1,  0, 0, unID, sideDepth1, 2		: unID=unID+1

	hotspot  A,  B, 0, unID, sideDepth2, 1+128			: unID=unID+1
	hotspot  A,  B+1, 0, unID, sideDepth2, 3			: unID=unID+1
	hotspot  A,  B-sideDepth2, 0, unID, sideDepth2, 2	: unID=unID+1

	if iCabinetForm = SHAPE_CORNER_L then
		!hotspot  sideDepth1,  B-sideDepth2, 0, unID	: unID=unID+1

		hotspot  0,  B-sideDepth2, 0, unID, sideDepth1, 1+128		: unID=unID+1
		hotspot -1,  B-sideDepth2, 0, unID, sideDepth1, 3			: unID=unID+1
		hotspot  sideDepth1,  B-sideDepth2, 0, unID, sideDepth1, 2	: unID=unID+1

		hotspot  sideDepth1,  B, 0, unID, sideDepth2, 1+128			: unID=unID+1
		hotspot  sideDepth1,  B+1, 0, unID, sideDepth2, 3			: unID=unID+1
		hotspot  sideDepth1,  B-sideDepth2, 0, unID, sideDepth2, 2	: unID=unID+1
	endif

	!-----ZZYZX-----
	hotspot  0, 0,  0,    unID, ZZYZX, 1+128				: unID=unID+1
	hotspot  0, 0, -1, 	  unID, ZZYZX, 3					: unID=unID+1
	hotspot  0, 0, ZZYZX, unID, ZZYZX, 2					: unID=unID+1

	hotspot  0, b,  0,    unID, ZZYZX, 1+128				: unID=unID+1
	hotspot  0, b, -1, 	  unID, ZZYZX, 3					: unID=unID+1
	hotspot  0, b, ZZYZX, unID, ZZYZX, 2					: unID=unID+1

	hotspot  a, b,  0,    unID, ZZYZX, 1+128				: unID=unID+1
	hotspot  a, b, -1, 	  unID, ZZYZX, 3					: unID=unID+1
	hotspot  a, b, ZZYZX, unID, ZZYZX, 2					: unID=unID+1

	hotspot  sideDepth1, 0,  0,    unID, ZZYZX, 1+128		: unID=unID+1
	hotspot  sideDepth1, 0, -1, unID, ZZYZX, 3				: unID=unID+1
	hotspot  sideDepth1, 0, ZZYZX, unID, ZZYZX, 2			: unID=unID+1

	hotspot  a, B-sideDepth2,  0,    unID, ZZYZX, 1+128		: unID=unID+1
	hotspot  a, B-sideDepth2, -1,    unID, ZZYZX, 3			: unID=unID+1
	hotspot  a, B-sideDepth2, ZZYZX, unID, ZZYZX, 2			: unID=unID+1

	if iCabinetForm = SHAPE_CORNER_L then
		hotspot  sideDepth1, B-sideDepth2,  0,    unID, ZZYZX, 1+128	: unID=unID+1
		hotspot  sideDepth1, B-sideDepth2, -1,    unID, ZZYZX, 3		: unID=unID+1
		hotspot  sideDepth1, B-sideDepth2, ZZYZX, unID, ZZYZX, 2		: unID=unID+1
	endif


	!-----Leg Height-----
	if gs_leg_type_m <> 0 then
		hotspot  0, 0,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  0, 0, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  0, 0, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  0, b,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  0, b, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  0, b, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  a, b,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  a, b, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  a, b, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  sideDepth1, 0,  0,    unID, leg_h, 1+128		: unID=unID+1
		hotspot  sideDepth1, 0, -1, unID, leg_h, 3				: unID=unID+1
		hotspot  sideDepth1, 0, leg_h, unID, leg_h, 2			: unID=unID+1

		hotspot  a, B-sideDepth2,  0,    unID, leg_h, 1+128		: unID=unID+1
		hotspot  a, B-sideDepth2, -1,    unID, leg_h, 3			: unID=unID+1
		hotspot  a, B-sideDepth2, leg_h, unID, leg_h, 2			: unID=unID+1

		if iCabinetForm = SHAPE_CORNER_L then
			hotspot  sideDepth1, B-sideDepth2,  0,    unID, leg_h, 1+128	: unID=unID+1
			hotspot  sideDepth1, B-sideDepth2, -1,    unID, leg_h, 3		: unID=unID+1
			hotspot  sideDepth1, B-sideDepth2, leg_h, unID, leg_h, 2		: unID=unID+1
		endif
	endif
endif


! ==============================================================================
! Base
! ==============================================================================
if iCabinetForm = SHAPE_SQUARE then
	add a/2, b, 0

	! ----- Credenza -----
	CALL "fa_cabinet_credenza" PARAMETERS ALL B=B-doorThickness*(iDoorType = 2)

	! ----- Cornices -----
	mulx -1
	addz zzyzx-cot
	CALL "fa_cornicetyp" PARAMETERS ALL
	del 2

	! ----- Legs -----
	CALL "fa_cabinet_legtyp" PARAMETERS A=A,B=B-doorThickness*(iDoorType = 2), iCabinetForm=iCabinetForm,
										gs_detlevel_3D_m=gs_detlevel_3D_m,
										gs_leg_type_m=gs_leg_type_m,leg_h=leg_h,leg_w=leg_w,
										cooh=cooh,gs_resol=gs_resol,gs_leg_mat=gs_leg_mat,
										gs_cont_pen=gs_cont_pen,gs_lining_m=gs_lining_m

	del 1
else
	add 0, b, 0
	! ----- Cornices -----
	addz zzyzx-cot
	CALL "fa_cornicetyp" PARAMETERS ALL
	del 1

	! ----- Credenza -----
	CALL "fa_cabinet_credenza" PARAMETERS ALL sideDepth1=sideDepth1-doorThickness*(iDoorType = 2),
											  sideDepth2=sideDepth2-doorThickness*(iDoorType = 2)

	! ----- Legs -----
	CALL "fa_cabinet_legtyp" PARAMETERS A=A,B=B, iCabinetForm=iCabinetForm,
										sideDepth1=sideDepth1-doorThickness*(iDoorType = 2),
										sideDepth2=sideDepth2-doorThickness*(iDoorType = 2),
										gs_detlevel_3D_m=gs_detlevel_3D_m,
										gs_leg_type_m=gs_leg_type_m,leg_h=leg_h,leg_w=leg_w,
										cooh=cooh,gs_resol=gs_resol,gs_leg_mat=gs_leg_mat,
										gs_cont_pen=gs_cont_pen,gs_lining_m=gs_lining_m
	del 1
endif


! ==============================================================================
! Interior Fittings
! ==============================================================================
if iFunctions <> INTERIOR_NONE then
	addz leg_h
	if iCabinetForm = SHAPE_SQUARE then
		insideA = A - corOverhangR  - corOverhangL - 2*thickness

		! ----- Vertical Panels -----
		nVerticalPanel=ceil(nDoor/2)-1
		material gs_cabinet_mat

		add corOverhangL+(doorFullWidth/nDoor)+(ceil(nDoor/2)=nDoor/2)*(doorFullWidth/nDoor)+thickness/2*(iDoorType = 2)+thickness*(iDoorType <> 2), B-thickness, thickness

		for i=1 to nVerticalPanel
			prism_ 4, zzyzx-cot-leg_h-2*thickness,
					thickness/2,0,15,
					-thickness/2,0,15,
					-thickness/2,-b+doorThickness*(iDoorType > 0)+cooh+thickness+doorThickness*(iDoorType = 1),15,
					thickness/2,-b+doorThickness*(iDoorType > 0)+cooh+thickness+doorThickness*(iDoorType = 1),15
			gosub "textureVertical_01"
			addx (doorFullWidth/nDoor)*2
		next i
		del nVerticalPanel

		! ----- Cut -----
		for i=1 to nVerticalPanel
			cutpolya 4, 1, 0,
					thickness/2,0,15,
					-thickness/2,0,15,
					-thickness/2,-b+doorThickness*(iDoorType > 0)+cooh+thickness+doorThickness*(iDoorType = 1),15,
					thickness/2,-b+doorThickness*(iDoorType > 0)+cooh+thickness+doorThickness*(iDoorType = 1),15
			addx (doorFullWidth/nDoor)*2
		next i
		del nVerticalPanel
		del 1

		! ----- Interior -----
		if iFunctions = INTERIOR_COMBINED then
			insideT = insideA
			if nDoor >= 3 then
				if iDoorType = DOOR_TYPE_SIDEHUNG then
					insideA = ((insideA-thickness*(nDoor-1))/nDoor)*(nDoor-2)+thickness*(nDoor-3)
				else
					insideA = ((insideA)/nDoor)*(nDoor-2)-thickness/2
				endif
			else
				insideA = (insideA-thickness)/2
			endif
		endif

		if iFunctions = INTERIOR_SHELVES or iFunctions = INTERIOR_COMBINED then
			add thickness+corOverhangL, B-thickness,thickness
			gosub "shelves"
			del 1
		endif

		if iFunctions = INTERIOR_COMBINED and nDoor < 3 then
			add thickness+corOverhangL, B-thickness,thickness
			addx insideA
			material gs_cabinet_mat
			prism_ 4, zzyzx-cot-leg_h-2*thickness,
					thickness,0,15,
					thickness,-b+doorThickness+cooh+thickness,15,
					0,-b+doorThickness+cooh+thickness,15,
					0,0,15
			gosub "textureVertical_01"
			del 2
		endif

		if iFunctions = INTERIOR_HANGER or iFunctions = INTERIOR_COMBINED then
			if iFunctions = INTERIOR_HANGER then
				insideTemp = insideA
				addx thickness+corOverhangL
				gosub "hangers"
				del 1
			else
				insideTemp = insideT - insideA -thickness
				addx thickness+corOverhangL+insideA+thickness
				gosub "hangers"
				del 1
			endif
		endif

		for i=1 to nVerticalPanel
			cutend
		next i

	else

		if iFunctions = INTERIOR_SHELVES then
			gosub "shelves"
		endif
		if iFunctions = INTERIOR_HANGER then
			gosub "hangers"
		endif
	endif
	del 1
endif



! ==============================================================================
! Door Settings
! ==============================================================================
if iDoorType <> DOOR_TYPE_NONE then
	bMirrored = 0
	gs_full_edit = 1
	bFormMirror = 0
	bSliding = 0
	bAngleEdit = 1
	bDividedDoorWithMirror		= 0

	if iCabinetForm = SHAPE_SQUARE then

		nDoorTemp = nDoor
		doorFullWidthTemp = doorFullWidth
		doorStartX = 0
		doorStartY = doorThickness+cooh
		if iDoorType = DOOR_TYPE_SIDEHUNG then doorStartX = cabinetStartX+thickness/2
		if iDoorType = DOOR_TYPE_SLIDING  then doorStartX  = cabinetStartX+thickness
		gosub "doorCall"

	else

		if iCabinetForm = SHAPE_CORNER_L then
			bSliding = 1
			tempDoorAngle3D		= doorAngle3D

			! For Hotspot
			if gs_knob_type_m=0 then knob_d=0
			if gs_knob_type_m=1 then knob_d=0.025
			if gs_knob_type_m=2 then knob_d=0.025
			if gs_knob_type_m=3 then knob_d=0.03
			if gs_knob_type_m=4 then knob_d=0.024
			if gs_knob_type_m=5 then knob_d=0.025
			if gs_knob_type_m=6 then knob_d=0.025
			if gs_knob_type_m=7 then knob_d=0.03
			if gs_knob_type_m=8 then knob_d=0.03

			! Door with Knob ------------------------------------------
			doorFullWidthTemp	= doorWidthB
			nDoorTemp			= nDoor
			bAngleEdit			= 0
			doorStartX			= 0
			doorStartY			= 0
			rotz 90
			mulx -1

			! angle type editing, base hotspot
			hotspot -thickness/2 - knob_pl_x, -sideDepth1 + cooh - knob_d + 0.001, knob_pl_y + leg_h + thickness/2, unID, doorAngle3D, 4+128 : unID=unID+1

			add	-B + sideDepth2 - cooh - doorThickness , -A + thickness/2, 0

			! angle type editing, center of angle
			! angle type editing, reference hotspot
			hotspot 0,					0,	knob_pl_y + leg_h + thickness/2, unID, doorAngle3D, 6+512	: unID=unID+1
			hotspot 0,					0,	knob_pl_y + leg_h + thickness/2, unID, doorAngle3D, 7		: unID=unID+1


			rotz -doorAngle3D
			add doorThickness, doorWidthA + doorThickness,0
			doorAngle3D = 0

			gosub "doorCall"

			! angle type editing, moving hotspot
			hotspot doorFullWidthTemp - knob_pl_x,	-doorThickness -knob_d,	knob_pl_y + leg_h + thickness/2, unID, doorAngle3D, 5 : unID=unID+1

			del 5

			! Door without Knob ------------------------------------------
			doorAngle3D			= tempDoorAngle3D
			bAngleEdit			= 0
			gs_full_edit		= 0
			gs_knob_type_m		= 0
			doorFullWidthTemp	= doorWidthA
			doorStartX			= 0
			doorStartY			= 0
			if iDoorStyle = 15 then
				bDividedDoorWithMirror = 1		!one door with 2 different sides
			endif

			mulx -1
			add	-A + thickness/2, B-sideDepth2 + doorThickness + cooh, 0

			gosub "doorCall"
			del 2



		else

			nDoorTemp = nDoor
			doorFullWidthTemp = doorFullWidth
			doorStartX = 0
			doorStartY = 0
			add tempSideDepth1,  cooh*(gs_lining_m=1 or gs_lining_m=3), 0
			rotz beta
			addx doorThickness/tan(beta)
			gosub "doorCall"
			del 3
		endif
	endif
endif


! ======================================================================
! END
! ======================================================================

END

! ======================================================================
! SubRoutines
! ======================================================================
"shelves":
	material gs_shelf_mat
	addz -thickness
	shelvFullHeight=zzyzx-cot-leg_h-2*thickness
	shelvesDistance=(shelvFullHeight+thickness)/(nShelves+1)

	for i=1 to nShelves
		addz shelvesDistance
		if iCabinetForm = SHAPE_SQUARE then
			prism_ 4, thickness,
					insideA,0,15,
					insideA,-b+doorThickness+cooh+thickness+doorThickness*(iDoorType = 1),15,
					0,-b+doorThickness+cooh+thickness+doorThickness*(iDoorType = 1),15,
					0,0,15
		else
			if iCabinetForm = SHAPE_CORNER_L then
				tempSideDepth1 = sideDepth1 - cooh - doorThickness
				tempSideDepth2 = sideDepth2 - cooh - doorThickness

				prism_ 4, thickness,
					thickness, b-thickness, 15,
					a-thickness-corOverhangR, b-thickness, 15,
					a-thickness-corOverhangR, b-tempSideDepth2, 15,
					tempSideDepth1, b-tempSideDepth2, 8
				gosub "textureHorizontal_02"

				prism_ 4, thickness,
					thickness, b-thickness, 8,
					tempSideDepth1, b-tempSideDepth2, 15,
					tempSideDepth1, thickness+corOverhangL, 15,
					thickness, thickness+corOverhangL, 15
				gosub "textureVertical_02"

			else
				prism_ 5, thickness,
					thickness, b-thickness, 15,
					a-thickness-corOverhangR, b-thickness, 15,
					a-thickness-corOverhangR, b-tempSideDepth2-thickness*tan(beta)+doorThickness/cos(beta), 15,
					tempSideDepth1+thickness/tan(beta)-doorThickness/sin(beta), thickness+corOverhangL, 15,
					thickness, thickness+corOverhangL, 15
				gosub "textureAlha"
			endif
		endif
	next i
	del nShelves+1
return


"hangers":
	material gs_hanger_mat

	hangerFullHeight=zzyzx-cot-leg_h-2*thickness-0.1
	hangerDistance=(hangerFullHeight)/(nHangers)
	hangerWidth = 0.03

	if iCabinetForm = SHAPE_CORNER_C then
		cutpolya 4, 1, 0,
				-1, -1, 15,
				-1, b+1, 15,
				thickness, b+1, 15,
				thickness, -1, 15

		cutpolya 4, 1, 0,
				-1, thickness+corOverhangL, 15,
				-1, -1, 15,
				a+1, -1, 15,
				a+1, thickness+corOverhangL, 15

		cutpolya 4, 1, 0,
				-1, b-thickness, 15,
				-1, b+1, 15,
				a+1, b+1, 15,
				a+1, b-thickness, 15

		cutpolya 4, 1, 0,
				a-thickness-corOverhangR, b+1, 15,
				a-thickness-corOverhangR, -1, 15,
				a+1, -1, 15,
				a+1, b+1, 15
	endif

	for i=1 to nHangers
		tempSideDepth1 = sideDepth1 - cooh - doorThickness
		tempSideDepth2 = sideDepth2 - cooh - doorThickness
		addz hangerDistance
		if iCabinetForm = SHAPE_SQUARE then
			tube 6,4,1+2+16+32,
					-hangerWidth/2,-hangerWidth/2,1,
					0,-hangerWidth/2,900,
					hangerWidth/2,-hangerWidth/2,3001,
					hangerWidth/2,-hangerWidth*1.5,1,
					0,-hangerWidth*1.5,900,
					0,-180,4001,

					-1, b-tempSideDepth2/2, 0, 0,
					0, b-tempSideDepth2/2, 0, 0,
					insideTemp, b-tempSideDepth2/2, 0, 0,
					insideTemp+1, b-tempSideDepth2/2, 0, 0
			gosub "textureHorizontal_02"
		else
			if iCabinetForm = SHAPE_CORNER_L then
				tube 6,4,1+2+16+32,
						-hangerWidth/2,-hangerWidth/2,1,
						0,-hangerWidth/2,900,
						hangerWidth/2,-hangerWidth/2,3001,
						hangerWidth/2,-hangerWidth*1.5,1,
						0,-hangerWidth*1.5,900,
						0,-180,4001,

						tempSideDepth1/2, thickness+corOverhangL-1, 0, 0,
						tempSideDepth1/2, thickness+corOverhangL, 0, 0,
						tempSideDepth1/2, b-thickness, 0, 0,
						tempSideDepth1/2, b-thickness+1, 0, 0
				gosub "textureVertical_02"

				tube 6,4,1+2+16+32,
						-hangerWidth/2,-hangerWidth/2,1,
						0,-hangerWidth/2,900,
						hangerWidth/2,-hangerWidth/2,3001,
						hangerWidth/2,-hangerWidth*1.5,1,
						0,-hangerWidth*1.5,900,
						0,-180,4001,

						thickness-1, b-tempSideDepth2/2, 0, 0,
						tempSideDepth1/2, b-tempSideDepth2/2, 0, 0,
						a-thickness-corOverhangR, b-tempSideDepth2/2, 0, 0,
						a-thickness-corOverhangR+1, b-tempSideDepth2/2, 0, 0
				gosub "textureHorizontal_02"
			else
				tube 6,4,1+2+16+32,
						-hangerWidth/2,-hangerWidth/2,1,
						0,-hangerWidth/2,900,
						hangerWidth/2,-hangerWidth/2,3001,
						hangerWidth/2,-hangerWidth*1.5,1,
						0,-hangerWidth*1.5,900,
						0,-180,4001,

						0, corOverhangL, 0, 0,
						thickness, thickness+corOverhangL, 0, 0,
						B/tan(beta), B, 0, 0,
						B/tan(beta)+cos(beta), B+sin(beta), 0, 0
				gosub "textureAlha"
			endif
		endif
	next i
	del nHangers

	if iCabinetForm = SHAPE_CORNER_C then
		cutend
		cutend
		cutend
		cutend
	endif
return


"doorCall":
	if iDoorType = DOOR_TYPE_SIDEHUNG then
		add doorStartX, doorStartY,leg_h+thickness/2
		for i=1 to nDoorTemp
			if ceil(nDoorTemp/2)=nDoorTemp/2 then
				if ceil(i/2)<>i/2  then
					bMirrored = 0
					bFormMirror = 0
				else
					bMirrored = 1
					if iDoorStyle = 18 and nDoorTemp = 2 then
						bFormMirror = 0
					else
						bFormMirror = 1
					endif
				endif
			else
				if ceil(i/2)<>i/2 and i > 1 then
					bMirrored = 1
					bFormMirror = 0
				else
					bMirrored = 0
					bFormMirror = 1
					if i = 1 then bFormMirror = 0
					if 	bDividedDoorWithMirror = 1 then bFormMirror = 1
				endif
			endif
			if iDoorStyle = 16 then bFormMirror = 0
			call "fa_warddoortyp" parameters all bNotMacro = 0,
												gs_full_edit = gs_full_edit,
												bAngleEdit = bAngleEdit,
												bMirrored = bMirrored,
												bFormMirror = bFormMirror,
												bSliding = bSliding,
												cabdoortyp_unID = unID,
												doorWidth = doorFullWidthTemp/nDoorTemp,
												doorHeight = doorHeight,
												returned_parameters cabdoortyp_unID
			unID = cabdoortyp_unID
			addx doorFullWidthTemp/nDoorTemp
		next i
		del nDoorTemp+1
	endif

	if iDoorType = DOOR_TYPE_SLIDING then
		bSliding = 1
		add doorStartX, doorStartY,leg_h+thickness
		for i=1 to nDoorTemp
			if ceil(nDoorTemp/2)=nDoorTemp/2 then
				if ceil(i/2)<>i/2 then
					bMirrored = 1
					bFormMirror = 0
					slidingOffset =  doorThickness
					knobOffset = -knob_d
				else
					bMirrored = 0
					if iDoorStyle = 18 and nDoorTemp = 2 then
						bFormMirror = 0
					else
						bFormMirror = 1
					endif
					slidingOffset = 0
					knobOffset = -knob_d - doorThickness
				endif
			else
				if ceil(i/2)<>i/2 then
					bMirrored = 0
					if i = 1 then bMirrored = 1
					bFormMirror = 0
					slidingOffset =  doorThickness
					knobOffset = -knob_d
				else
					bMirrored = 1
					bFormMirror = 1
					slidingOffset = 0
					knobOffset = -knob_d - doorThickness
				endif
			endif
			if iDoorStyle = 16 then bFormMirror = 0

			doorTempWidth = doorFullWidth/nDoorTemp

			doordirection = 0
			if not(bMirrored) then
				hostspotStart = doorTempWidth-knob_pl_x
				doordirection = -1
			else
				hostspotStart = knob_pl_x
				doordirection = 1
			endif
			openingoffset = doorTempWidth * (openingDoor[i]/100) * doordirection

			hotspot  hostspotStart, knobOffset, knob_pl_y,   			 unID, openingDoorLength[i], 1+128					: unID=unID+1
			hotspot  hostspotStart-doordirection, knobOffset, knob_pl_y, unID, openingDoorLength[i], 3						: unID=unID+1
			hotspot  hostspotStart+openingoffset, knobOffset, knob_pl_y, unID, openingDoorLength[i], 2, openingDoor[i]		: unID=unID+1

			add openingoffset, slidingOffset, 0
			call "fa_warddoortyp" parameters all bNotMacro = 0,
												gs_full_edit = gs_full_edit,
												bAngleEdit = 0,
												doorAngle3D = 0,
												bMirrored = bMirrored,
												bFormMirror = bFormMirror,
												bSliding = bSliding,
												cabdoortyp_unID = unID,
												doorWidth = doorTempWidth,
												doorHeight = doorHeight,
												returned_parameters cabdoortyp_unID
			unID = cabdoortyp_unID
			del 1
			addx doorFullWidthTemp/nDoorTemp
		next i
		del nDoorTemp+1
	endif
return


! ======================================================================
! Textures
! ======================================================================
"textureVertical_01":
	roty 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureVertical_02":
	roty 90
	rotz 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 2

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureHorizontal_01":
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureHorizontal_02":
	rotx 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureAlha":
	rotz beta+90
	roty 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 2

	coor 2, -1, -2, -3, -4

	base

	body -1
return

]]></Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[
unID = 1
pen gs_cont_pen
fill gs_fill_type
drawindex 20

if iFunctions = INTERIOR_NONE | iFunctions = INTERIOR_SHELVES | iSymbolType = 2 | iSymbolType = 3 then
	bHangers = 0
endif
hangerStartX = 0.05

! ======================================================================
! HOTSPOTS
! ======================================================================
if iCabinetForm = SHAPE_SQUARE then
	CALL "Resize_A_B_ZZYZX" Parameters ALL
	hotspot2  A/2, B, unID				: unID=unID+1
	hotspot2  A/2, B/2, unID			: unID=unID+1
else
	hotspot2  0, B, unID, A, 1+256		: unID=unID+1
	hotspot2 -1, B, unID, A, 3			: unID=unID+1
	hotspot2  A, B, unID, A, 2			: unID=unID+1

	hotspot2  0,  0, unID, B, 1+256		: unID=unID+1
	hotspot2  0, -1, unID, B, 3			: unID=unID+1
	hotspot2  0,  B, unID, B, 2			: unID=unID+1

	hotspot2  0,  0, unID, sideDepth1, 1+128		: unID=unID+1
	hotspot2 -1,  0, unID, sideDepth1, 3			: unID=unID+1
	hotspot2  sideDepth1,  0, unID, sideDepth1, 2	: unID=unID+1

	hotspot2  A,  B, unID, sideDepth2, 1+128		: unID=unID+1
	hotspot2  A,  B+1, unID, sideDepth2, 3			: unID=unID+1
	hotspot2  A,  B-sideDepth2, unID, sideDepth2, 2	: unID=unID+1

	if iCabinetForm = SHAPE_CORNER_L then
		!hotspot2  sideDepth1,  B-sideDepth2, unID	: unID=unID+1

		hotspot2  0,  B-sideDepth2, unID, sideDepth1, 1+128			: unID=unID+1
		hotspot2 -1,  B-sideDepth2, unID, sideDepth1, 3				: unID=unID+1
		hotspot2  sideDepth1,  B-sideDepth2, unID, sideDepth1, 2	: unID=unID+1

		hotspot2  sideDepth1,  B, unID, sideDepth2, 1+128			: unID=unID+1
		hotspot2  sideDepth1,  B+1, unID, sideDepth2, 3				: unID=unID+1
		hotspot2  sideDepth1,  B-sideDepth2, unID, sideDepth2, 2	: unID=unID+1
	endif
endif


! ======================================================================
! BODY
! ======================================================================
if iCabinetForm = SHAPE_SQUARE then
	! ----- Base Polygon -----
	poly2_b 5,3,gs_fill_pen,gs_back_pen,
		0,0,1,
		A,0,1,
		A,B,1,
		0,B,1,
		0,0,-1

	! ----- 2D Symbol Type -----
	if iSymbolType = 4 or iSymbolType = 5 then
		line2 0, doorThickness, a, doorThickness
	endif

	if iSymbolType > 0 and  iSymbolType < 4 then		! Draw Cabinet
		add2 -a/nDoor*2,0
			for i=1 to ceil(nDoor/2-1)
				line2 a,0,a,b
				add2 -a/nDoor*2,0
			next i
			del ceil(nDoor/2-1)
		del 1
	else
		if iSymbolType <> 6 then		! Draw Door number
			add2 -a/nDoor,0
				for i=1 TO nDoor
					line2 a,0,a,doorThickness
					add2 -a/nDoor,0
				next i
				del nDoor
			del 1
		endif
	endif

	if iSymbolType = 2 then			!Draw X
		for i=1 to int(nDoor/2)
			line2 a,0,a-a/nDoor*2,b
			line2 a-a/nDoor*2,0,a,b
			add2 -a/nDoor*2,0
		next i
		del int(nDoor/2)

		if int(nDoor/2)<>nDoor/2 then
			line2 0,0,a/nDoor,b
			line2 a/nDoor,0,0,b
		endif
	endif

	if iSymbolType = 3 then			! Draw V
		for i=1 to int(nDoor/2)
			line2 a,b,a-a/nDoor,0
			line2 a-a/nDoor,0,a-a/nDoor*2,b
			add2 -a/nDoor*2,0
		next i
		del int(nDoor/2)

		if int(nDoor/2)<>nDoor/2 then
			line2 0,0,a/nDoor,b
		endif
	endif

	if iSymbolType = 5 or iSymbolType = 6 then			!Draw Door Open
		if int(nDoor/2)<>nDoor/2 then   nn=1
		if int(nDoor/2)=nDoor/2  then	nn=0

		add2 a/nDoor*nn,0
		for i=1 to int(nDoor/2)
			arc2 0,0,a/nDoor,360-openingAngle2D,0
			line2 0,0,cos(openingAngle2D)*a/nDoor,0-sin(openingAngle2D)*a/nDoor

			arc2 2*a/nDoor,0,a/nDoor,180,180+openingAngle2D
			line2 2*a/nDoor,0,2*a/nDoor-cos(openingAngle2D)*a/nDoor,0-sin(openingAngle2D)*a/nDoor

			add2 a/nDoor*2,0
		next i
		del int(nDoor/2)
		del 1

		if int(nDoor/2)<>nDoor/2 then
				arc2 0,0,a/nDoor,360-openingAngle2D,0
				line2 0,0,cos(openingAngle2D)*a/nDoor,0-sin(openingAngle2D)*a/nDoor
		endif
	endif

	! ----- Hangers -----
	if bHangers then
		if iFunctions = INTERIOR_HANGER then
			line2 0,b/2,a,b/2
			hangerLength = a
			hangerWidth = b
			add2 0,(b-doorThickness)/2
			gosub "hangers"
			del 1
		endif

		if iFunctions = INTERIOR_COMBINED then
			if nDoor >= 3 then
				insideA = (A/nDoor)*(nDoor-2)
			else
				insideA = A/2
				line2 a/2,0,a/2,b
			endif

			line2 insideA,b/2,A,b/2
			line2 insideA,0,insideA,b
			add2 insideA,(b-doorThickness)/2
			hangerLength = a-insideA
			hangerWidth = b
			gosub "hangers"
			del 1
		endif
	endif
else
	! ----- Base Polygon -----
	put 0, 0, 1
	put 0, B, 1
	put A, B, 1
	put A, B-sideDepth2, 1
	if iCabinetForm = SHAPE_CORNER_L then put sideDepth1, B-sideDepth2, 1
	put sideDepth1, 0, 1
	put 0, 0, -1

	poly2_b nsp/3,3,gs_fill_pen,gs_back_pen,
		get(nsp)


	if iCabinetForm = SHAPE_CORNER_C then
		if abs(sideDepth1-A)< EPS or abs(sideDepth2-B) < EPS then
			beta2d = 90
		else
			beta2d = atn((B-sideDepth2)/(A-sideDepth1))
		endif
	endif

	if iSymbolType = 4 | iSymbolType = 5 then
		if iCabinetForm = SHAPE_CORNER_L then
			line2 sideDepth1-doorThickness, 0, sideDepth1-doorThickness, B-sideDepth2+doorThickness
			line2 sideDepth1-doorThickness, B-sideDepth2+doorThickness, A, B-sideDepth2+doorThickness
		else
			line2 sideDepth1-doorThickness/sin(beta2d), 0, A, B-sideDepth2+doorThickness/cos(beta2d)
		endif
	endif

	if iSymbolType = 5 or iSymbolType = 6 then			!Draw Door Open
		if iCabinetForm = SHAPE_CORNER_L then
			add2 A, B-sideDepth2
			rot2 openingAngle2D
			line2 0,0, -A+sideDepth1, 0
			line2 -A+sideDepth1, 0, -A+sideDepth1, -B+sideDepth2
			del 2
			line2 sideDepth1, 0, A-(A-sideDepth1)*cos(openingAngle2D)+(B-sideDepth2)*sin(openingAngle2D), B-sideDepth2-(A-sideDepth1)*sin(openingAngle2D)-(B-sideDepth2)*cos(openingAngle2D)
		else
			doorSize2D = sqr((B-sideDepth2)**2 + (A-sideDepth1)**2)
			arc2 sideDepth1, 0, doorSize2D, beta2d-openingAngle2D, beta2d
			add2 sideDepth1, 0
			rot2 beta2d-openingAngle2D
			line2 0, 0, doorSize2D, 0
			del 2
		endif
	endif

	! ----- Hangers -----
	if bHangers then
		line2 sideDepth1/2, 0, sideDepth1/2, B-sideDepth2+sideDepth2/2
		line2 sideDepth1/2, B-sideDepth2+sideDepth2/2, A, B-sideDepth2+sideDepth2/2

		add2 sideDepth1/2-hangerStartX, B-sideDepth2+sideDepth2/2
		hangerLength = A-sideDepth1/2+hangerStartX
		hangerWidth = sideDepth2
		gosub "hangers"
		del 1

		add2 sideDepth1/2, 0
		rot2 90
		hangerLength = B-sideDepth2+hangerStartX
		hangerWidth = sideDepth1
		gosub "hangers"
		del 2

	endif
endif


! ======================================================================
! Minimal Space
! ======================================================================
if MSFront> EPS then
	reqBMinSpace = 0
	drawindex 10
	success = LIBRARYGLOBAL ("LibraryGlobals13", "showBMinSpace", reqBMinSpace)
	if success > 0 and reqBMinSpace then
		if iCabinetForm = SHAPE_SQUARE then
			call "fa_minimalspace" parameters all 	MSType 	= 1,
													unID 	= 3000
		else
			if iCabinetForm = SHAPE_CORNER_L then
				call "fa_minimalspace" parameters all 	MSType 	= 30,
														unID 	= 3000,
														diff = sideDepth2,
														diff2 = sideDepth1,
														dob_face_type = 1
			else
				call "fa_minimalspace" parameters all 	MSType 	= 0,
														unID 	= 3000,
									returned_parameters reqBMinSpace,
														MSFillType,
														MSFillPen,
														MSFillBackPen,
														MSContLineType,
														MSContLinePen
			endif
		endif
	endif
	if reqBMinSpace <> 0 and iCabinetForm <> SHAPE_SQUARE and iCabinetForm <> SHAPE_CORNER_L then
		fill MSFillType
		line_type MSContLineType
		pen MSContLinePen
		unID = 3050

		if abs(sideDepth1-a)< EPS or abs(sideDepth2-b) < EPS then
			alpha = 90
		else
			alpha = atn((b-sideDepth2)/(a-sideDepth1))
		endif

		poly2_b 5, 2+4,MSFillPen,MSFillBackPen,
				sideDepth1,      0,      1,
				a,      b-sideDepth2,      1,
				a+MSFront*sin(alpha), b-sideDepth2-MSFront*cos(alpha),    1,
				sideDepth1+MSFront*sin(alpha),      -MSFront*cos(alpha),    1,
				sideDepth1,      0,      1

		hotspot2  sideDepth1+MSFront*sin(alpha), -MSFront*cos(alpha),	unID : unID = unID + 1
		hotspot2  a+MSFront*sin(alpha), b-sideDepth2-MSFront*cos(alpha),	unID : unID = unID + 1

		line2 sideDepth1, 0, sideDepth1+MSFront*sin(alpha),-MSFront*cos(alpha)
		line2 sideDepth1+MSFront*sin(alpha),  -MSFront*cos(alpha), a+MSFront*sin(alpha), b-sideDepth2-MSFront*cos(alpha)
		line2 a, b-sideDepth2, a+MSFront*sin(alpha), b-sideDepth2-MSFront*cos(alpha)
	endif
endif

END

! ======================================================================
! SubRoutines
! ======================================================================

"hangers":
	hangerDistance = 0.1
	add2 hangerDistance+hangerStartX, 0
	hn = hangerLength - hangerDistance -hangerStartX
	cn=int(hn/hangerDistance)
	tempHangerWidth = hangerWidth/2 - 0.05 - doorThickness
	for ii=1 TO cn
		ff=rnd(.2)
		rot2 ff*100
		line2 -doorThickness, -tempHangerWidth, doorThickness, tempHangerWidth
		del 1
		add2 hangerDistance, 0
	next ii
	del cn+1
return
]]></Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[
EPS=0.0001

dim stDetlevel3D[3]
	stDetlevel3D[1] = `Detailed`
	stDetlevel3D[2] = `Simple`
	stDetlevel3D[3] = `Off`

DIM stSymbolTypes[6]
	stSymbolTypes[1]=`Style 1`
	stSymbolTypes[2]=`Style 2`
	stSymbolTypes[3]=`Style 3`
	stSymbolTypes[4]=`Style 4`
	stSymbolTypes[5]=`Style 5`
	stSymbolTypes[6]=`Style 6`

dim stCabinetForm[3]
	stCabinetForm[1] = `Square`
	stCabinetForm[2] = `Corner-L`
	stCabinetForm[3] = `Corner-C`

SHAPE_SQUARE   = 1
SHAPE_CORNER_L = 2
SHAPE_CORNER_C = 3

dim stDoorStyle[12]
	stDoorStyle[1] = `Style 1`
	stDoorStyle[2] = `Style 2`
	stDoorStyle[3] = `Style 3`
	stDoorStyle[4] = `Style 4`
	stDoorStyle[5] = `Style 5`
	stDoorStyle[6] = `Style 6`
	stDoorStyle[7] = `Style 7`
	stDoorStyle[8] = `Style 8`
	stDoorStyle[9] = `Style 9`
	stDoorStyle[10] = `Style 10`
	stDoorStyle[11] = `Style 11`
	stDoorStyle[12] = `Custom Panel`

dim stDoorType[3]
	stDoorType[1] = `Side Hung`
	stDoorType[2] = `Sliding`
	stDoorType[3] = `None`

DOOR_TYPE_SIDEHUNG = 2
DOOR_TYPE_SLIDING = 1
DOOR_TYPE_NONE = 0

dim stKnobTypes[9]
	stKnobTypes[1]=`None`
	stKnobTypes[2]=`Style 1`
	stKnobTypes[3]=`Style 2`
	stKnobTypes[4]=`Style 3`
	stKnobTypes[5]=`Style 4`
	stKnobTypes[6]=`Style 5`
	stKnobTypes[7]=`Style 6`
	stKnobTypes[8]=`Style 7`
	stKnobTypes[9]=`Style 8`

dim stKnobPlacing[2]
	stKnobPlacing[1]=`Vertical`
	stKnobPlacing[2]=`Horizontal`

dim stInteriorType[4]
	stInteriorType[1]=`Shelf`
	stInteriorType[2]=`Hanger`
	stInteriorType[3]=`Combined`
	stInteriorType[4]=`None`

INTERIOR_NONE		= 0
INTERIOR_COMBINED	= 1
INTERIOR_HANGER		= 2
INTERIOR_SHELVES	= 3

dim stCorniceTypes[5]
	stCorniceTypes[1]=`None`
	stCorniceTypes[2]=`Style 1`
	stCorniceTypes[3]=`Style 2`
	stCorniceTypes[4]=`Style 3`
	stCorniceTypes[5]=`Style 4`

dim stCorniceOverhang[4]
	stCorniceOverhang[1]=`Front`
	stCorniceOverhang[2]=`Front and Left Side`
	stCorniceOverhang[3]=`Front and Right Side`
	stCorniceOverhang[4]=`Front and Both Side`

dim stLegTypes[7]
	stLegTypes[1]=`None`
	stLegTypes[2]=`Style 1`
	stLegTypes[3]=`Style 2`
	stLegTypes[4]=`Style 3`
	stLegTypes[5]=`Style 4`
	stLegTypes[6]=`Style 5`
	stLegTypes[7]=`Style 6`


!-----Definitions-----
thickness = 0.02


!-----Need Parameter Script and 3D-----
corOverhang  = 0
corOverhangL = 0
corOverhangR = 0
cabinetStartX = 0
if gs_cornice_type_m=0 then
	cot=0
	cooh=0
else
	if gs_lining_m=1 then
		corOverhangL = cooh
		corOverhangR = cooh
		cabinetStartX = cooh
	endif
	if gs_lining_m=2 then
		corOverhangR = cooh
		corOverhangL = 0
		cabinetStartX = 0
	endif
	if gs_lining_m=3 then
		corOverhangR = 0
		corOverhangL = cooh
		cabinetStartX = cooh
	endif
endif
corOverhang = corOverhangL+corOverhangR
if gs_leg_type_m=0 then leg_h=0
if cot=0 then cooh=0

doorHeight=ZZYZX-cot-leg_h-2*thickness*(iDoorType <> 2)-thickness*(iDoorType = 2)
if iCabinetForm = SHAPE_SQUARE then
	doorFullWidth=A-corOverhang-2*thickness*(iDoorType <> 2)-thickness*(iDoorType = 2)
else
	if iCabinetForm = SHAPE_CORNER_L then
		doorWidthA = A-sideDepth1+cooh*(gs_cornice_type_m <> 0)-corOverhangR-thickness*(iDoorType <> 2)+thickness/2*(iDoorType = 2)-doorThickness
		doorWidthB = B-sideDepth2+cooh*(gs_cornice_type_m <> 0)-corOverhangL-thickness*(iDoorType <> 2)+thickness/2*(iDoorType = 2)-doorThickness
		!doorFullWidth = min(doorWidthA, doorWidthB)
		doorFullWidth = doorWidthB
	else
		tempSideDepth1 = sideDepth1 - cooh - doorThickness*(iDoorType = 2)
		tempSideDepth2 = sideDepth2 - cooh - doorThickness*(iDoorType = 2)
		tempB = B
		tempA = A
		if gs_lining_m=3 or gs_lining_m=1 then tempB = b - cooh
		if gs_lining_m=2 or gs_lining_m=1 then tempA = a - cooh

		if abs(tempSideDepth1-tempA)< EPS or abs(tempSideDepth2-tempB) < EPS then
			beta = 90
		else
			beta = atn((tempB-tempSideDepth2)/(tempA-tempSideDepth1))
		endif

		doorFullWidth=sqr((tempB-tempSideDepth2-doorThickness/cos(beta))**2 + (tempA-tempSideDepth1-doorThickness/sin(beta))**2)
	endif
endif




]]></Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

]]></Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

dim tabTitles[6]
	tabTitles[1] = `Cabinet Dimension`
	tabTitles[2] = `Door`
	tabTitles[3] = `Accessories`
	tabTitles[4] = `Appearance`
	tabTitles[5] = `3D Representation`
	tabTitles[6] = `Minimal Space`

dim tabIcons[6]
	tabIcons[1] = "ui_tab_furniture_cabinet(1)"
	tabIcons[2] = "ui_tab_furniture_door(1)"
	tabIcons[3] = "ui_tab_furniture_leg(1)"
	tabIcons[4] = "ui_tab_furniture_appearance(1)"
	tabIcons[5] = "ui_tab_furniture_materials(1)"
	tabIcons[6] = "ui_tab_minimalspace(1)"

FILE_DEPENDENCE "ui_tab_furniture_cabinet(1)"
FILE_DEPENDENCE "ui_tab_furniture_door(1)"
FILE_DEPENDENCE "ui_tab_furniture_leg(1)"
FILE_DEPENDENCE "ui_tab_furniture_appearance(1)"
FILE_DEPENDENCE "ui_tab_furniture_materials(1)"
FILE_DEPENDENCE "ui_tab_minimalspace(1)"

dim stWardrobeSettingsUI[46]
	stWardrobeSettingsUI[1] = `Wardrobe Settings`
	stWardrobeSettingsUI[2] = `3D`
	stWardrobeSettingsUI[3] = `Resolution`
	stWardrobeSettingsUI[4] = `Shadow`
	stWardrobeSettingsUI[5] = `Cabinet`
	stWardrobeSettingsUI[6] = `Door Frame`
	stWardrobeSettingsUI[7] = `Door Glass`
	stWardrobeSettingsUI[8] = `Door Mirror`
	stWardrobeSettingsUI[9] = `Door Decor 1`
	stWardrobeSettingsUI[10] = `Door Decor 2`
	stWardrobeSettingsUI[11] = `Knob`
	stWardrobeSettingsUI[12] = `Shelf`
	stWardrobeSettingsUI[13] = `Hanger`
	stWardrobeSettingsUI[14] = `Cornice`
	stWardrobeSettingsUI[15] = `Leg`
	stWardrobeSettingsUI[16] = `2D Representation`
	stWardrobeSettingsUI[17] = `2D Symbol Type`
	stWardrobeSettingsUI[18] = `Show Hanger in 2D`
	stWardrobeSettingsUI[19] = `Contour Pen`
	stWardrobeSettingsUI[20] = `Fill Type`
	stWardrobeSettingsUI[21] = `Fill Pen`
	stWardrobeSettingsUI[22] = `Background Pen`
	stWardrobeSettingsUI[23] = `Shape`
	stWardrobeSettingsUI[24] = `Plan`
	stWardrobeSettingsUI[25] = `Section`
	stWardrobeSettingsUI[26] = `Door Style`
	stWardrobeSettingsUI[27] = `Door Type`
	stWardrobeSettingsUI[28] = `No. of Doors`
	stWardrobeSettingsUI[29] = `Door Frame Width`
	stWardrobeSettingsUI[30] = `Mullion Width`
	stWardrobeSettingsUI[31] = `Nr. of Vert. Mullions`
	stWardrobeSettingsUI[32] = `Nr. of Hor. Mullions`
	stWardrobeSettingsUI[33] = `Knob Style`
	stWardrobeSettingsUI[34] = `Horizontal Position`
	stWardrobeSettingsUI[35] = `Vertical Position`
	stWardrobeSettingsUI[36] = `Placing`
	stWardrobeSettingsUI[37] = `Size`
	stWardrobeSettingsUI[38] = `Cornice Style`
	stWardrobeSettingsUI[39] = `Side Overhang`
	stWardrobeSettingsUI[40] = `Leg Style`
	stWardrobeSettingsUI[41] = `Width`
	stWardrobeSettingsUI[42] = `Interior Fittings`
	stWardrobeSettingsUI[43] = `Type`
	stWardrobeSettingsUI[44] = `Nr. of Shelves`
	stWardrobeSettingsUI[45] = `Nr. of Hangers`
	stWardrobeSettingsUI[46] = `Custom Panel Name`

dim stToolTips[10]
	stToolTips[1] = `Width`
	stToolTips[2] = `Depth`
	stToolTips[3] = `Side Depth 1`
	stToolTips[4] = `Side Depth 2`
	stToolTips[5] = `Minimal Space in Front`
	stToolTips[6] = `Height`
	stToolTips[7] = `Leg Height`
	stToolTips[8] = `Cornice Height`
	stToolTips[9] = `Cornice Overhang`
	stToolTips[10] = `Door Thickness`

ui_dialog stWardrobeSettingsUI[1],444,266
ui_current_page gs_ui_current_page
ui_page gs_ui_current_page

call "ui_tabcontrol" parameters	controlType = 1,
								nTabs = 6,
								gs_ui_current_page = gs_ui_current_page,
								tabTitles = tabTitles,
								tabIcons = tabIcons


! ======================================================================
! Page 1
! ======================================================================

ui_page 1

x1			= 10
yStart		= 40
xHalfLevel 	= 225
xEndLevel	= 440
yHalfLevel 	= 115

hRow		= 18
lineSpace	= 30

wDescript1	= 80
wBox1		= 65

ui_separator xHalfLevel, 32, xHalfLevel, 266
ui_separator x1, yHalfLevel, xHalfLevel-2, yHalfLevel

ui_style 0, 1
ui_outfield stWardrobeSettingsUI[23],	x1,		yStart,	wDescript1,	hRow								! Shape
ui_outfield stWardrobeSettingsUI[25],	xHalfLevel+10,		yStart,	wDescript1,	hRow					! Section
ui_outfield stWardrobeSettingsUI[24],	x1,	 yHalfLevel+10,	wDescript1,	hRow							! Plan
ui_style 0, 0
y1 = yStart + 20

ui_infield{3} "iCabinetForm", 55,	y1,	150, 45,
		4, 20, 3, 1, 35, 34, 35, 34,																	! ui_wardrobe_floor.png
			1, stCabinetForm[1], 1,
			2, stCabinetForm[2], 2,
			3, stCabinetForm[3], 3 ui_tooltip stWardrobeSettingsUI[23]

if iCabinetForm = SHAPE_SQUARE then
	PictStartX = 75
	PictStartY  = 167
	ui_pict 21, PictStartX, PictStartY, 66, 40 , 1														! ui_wardrobe_plan_square.png
	ui_infield "A", PictStartX+7,	PictStartY-hRow-4,	wBox1,	hRow  ui_tooltip stToolTips[1]			! Width
	ui_infield "B", PictStartX-wBox1-2,	PictStartY+15,	wBox1,	hRow  ui_tooltip stToolTips[2]			! Depth
else
	PictStartX = 75
	PictStartY  = 167
	if iCabinetForm = SHAPE_CORNER_L then
		ui_pict 22, PictStartX, PictStartY, 74, 74 , 1													! ui_wardrobe_plan_L.png
	else
		ui_pict 23, PictStartX, PictStartY, 74, 74 , 1													! ui_wardrobe_plan_C.png
	endif
	ui_infield "A", PictStartX+7,	PictStartY-hRow-4,	wBox1,	hRow  ui_tooltip stToolTips[1]			! Width
	ui_infield "B", PictStartX-wBox1-2,	PictStartY+30,	wBox1,	hRow  ui_tooltip stToolTips[2]			! Depth
	ui_infield "sideDepth1", PictStartX+7, PictStartY+77,	wBox1,	hRow  ui_tooltip stToolTips[3]		! Side Depth 1
	ui_infield "sideDepth2", PictStartX+76, PictStartY+15,	wBox1,	hRow  ui_tooltip stToolTips[4]		! Side Depth 2
endif


! ------ 2. Column - Section -------
PictStartX = xHalfLevel +85
PictStartY  = 70
ui_pict 24, PictStartX, PictStartY, 68, 165 , 1															! ui_wardrobe_sect_01.png
ui_infield "cot", PictStartX-wBox1-2, PictStartY-5,	wBox1,	hRow  ui_tooltip stToolTips[8]				! Cornice Height
ui_infield "cooh", PictStartX-wBox1-2, PictStartY+17,	wBox1,	hRow  ui_tooltip stToolTips[9]			! Cornice Overhang
ui_infield "leg_h", PictStartX-wBox1-2, PictStartY+140,	wBox1,	hRow  ui_tooltip stToolTips[7]			! Leg Height
ui_infield "doorThickness", PictStartX+13, PictStartY+167,	wBox1,	hRow  ui_tooltip stToolTips[10]		! Door Thickness
ui_infield "ZZYZX", PictStartX+70, PictStartY+70,	wBox1,	hRow  ui_tooltip stToolTips[6]		! Height



! ======================================================================
! Page 2
! ======================================================================

ui_page 2

x1			= 10
yStart		= 37
xHalfLevel 	= 225
xEndLevel	= 440

hRow		= 18
hPict		= 85
lineSpace	= 24

wDescript1	= 100
wDescript2	= 80
wBox1		= 75
wBox2		= 100
wPict		= 120

ui_separator xHalfLevel, 32, xHalfLevel, 266


! ------ 1. Column - Door -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[26],	x1,	y1,	xHalfLevel-x1-12-wPict , hRow						! Door Style
ui_infield{3} "iDoorStyle", xHalfLevel - wPict - 10, y1-4, wPict, hPict,
	2, "ui_WardDoorTyp(1)", 20, 5,																		! ui_WardDoorTyp(1).png
	65,hPict,60,80,
	2, stDoorStyle[1], 1,
	14, stDoorStyle[2], 13,
	4, stDoorStyle[3], 3,
	10, stDoorStyle[4], 9,
	5, stDoorStyle[5], 4,
	6, stDoorStyle[6], 5,
	15, stDoorStyle[7], 14,
	16, stDoorStyle[8], 15,
	17, stDoorStyle[9], 16,
	18, stDoorStyle[10], 17,
	19, stDoorStyle[11], 18,
	11, stDoorStyle[12], 10 ui_tooltip  stWardrobeSettingsUI[26]
y1 = y1 + hPict +5

ui_outfield stWardrobeSettingsUI[27], x1 , y1, xHalfLevel-x1-12-wBox2, hRow							! Door Type
ui_infield{3} "iDoorType", xHalfLevel - wBox2-10, y1-2,	wBox2, hRow,
		8, "", 3, 1, 0, 0, 0, 0,
		1, stDoorType[1], 2,
		2, stDoorType[2], 1,
		3, stDoorType[3], 0   ui_tooltip stWardrobeSettingsUI[27]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[28], x1 , y1, xHalfLevel-x1-12-wBox1, hRow								! No. Of Doors
ui_infield "nDoor", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[28]
y1 = y1 + lineSpace

if iDoorStyle <> 10 then
	ui_outfield stWardrobeSettingsUI[29], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Door Frame Width
	ui_infield "doorFrameWidth", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[29]
	y1 = y1 + lineSpace

	ui_outfield stWardrobeSettingsUI[30], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Mullion Width
	ui_infield "mullionWidth", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[30]
	y1 = y1 + lineSpace

	ui_outfield stWardrobeSettingsUI[31], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Nr. of Vert. Mullions
	ui_infield "nVerticalMullion", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[31]
	y1 = y1 + lineSpace

	ui_outfield stWardrobeSettingsUI[32], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Nr. of Hor. Mullions
	ui_infield "nHorizontalMullion", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[32]
	y1 = y1 + lineSpace
else
	ui_outfield stWardrobeSettingsUI[46], x1 , y1, xHalfLevel-x1-12-wBox1, hRow							! Custom Panel Name
	y1 = y1 + lineSpace
	ui_infield "doorCustomPanelName", x1+10, y1-2,	xHalfLevel-x1-20, hRow		ui_tooltip stWardrobeSettingsUI[46]
endif

! ------ 2. Column - Knob -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[33],	xHalfLevel +10,	y1,	xEndlevel-xHalfLevel-22-wPict , hRow	! Knob Style
ui_infield{3} "gs_knob_type_m", xEndLevel - wPict - 10, y1-4, wPict, hPict,
	2, "Knob_Types_N(13)",12,4,
	65,hPict,60,80,
	1, stKnobTypes[2], 1,
	2, stKnobTypes[3], 2,
	3, stKnobTypes[4], 3,
	4, stKnobTypes[5], 4,
	5, stKnobTypes[6], 5,
	6, stKnobTypes[7], 6,
	7, stKnobTypes[8], 7,
	8, stKnobTypes[9], 8,
	9, stKnobTypes[1], 0 ui_tooltip  stWardrobeSettingsUI[33]
y1 = y1 + hPict +5

ui_outfield stWardrobeSettingsUI[34], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-x1-22-wBox1, hRow			! Horizontal Position
ui_infield "knob_pl_x", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[34]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[35], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-x1-22-wBox1, hRow			! Vertical Position
ui_infield "knob_pl_y", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[35]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[36], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-x1-22-wBox1, hRow			! Placing
ui_infield "gs_knob_p", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[36]
!		8, "", 2, 1, 0, 0, 0, 0,
!		1, stKnobPlacing[1], 1,
!		2, stKnobPlacing[2], 2   ui_tooltip stWardrobeSettingsUI[36]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[37], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-x1-22-wBox1, hRow			! Size
ui_infield "knob_size", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[37]



! ======================================================================
! Page 3
! ======================================================================

ui_page 3

x1			= 10
yStart		= 37
xHalfLevel 	= 225
xEndLevel	= 440
yHalfLevel 	= 200

hRow		= 18
hPict		= 85
lineSpace	= 24

wDescript1	= 100
wDescript2	= 80
wBox1		= 75
wBox2		= 100
wPict		= 120

ui_separator xHalfLevel, 32, xHalfLevel, yHalfLevel - 2
ui_separator x1, yHalfLevel, xEndLevel, yHalfLevel


! ------ 1. Column - Cornice -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[38],	x1,	y1,	xHalfLevel-x1-12-wPict , hRow						! Cornice Style
ui_infield{3} "gs_cornice_type_m", xHalfLevel - wPict - 10, y1-4, wPict, hPict,
	2, "ui_CabCorniceTyp(2)", 6,2,																		! ui_CabCorniceTyp(2).png
	65,hPict,60,20,
	1, stCorniceTypes[2], 1,
	2, stCorniceTypes[3], 2,
	3, stCorniceTypes[4], 3,
	4, stCorniceTypes[5], 4,
	5, stCorniceTypes[1], 0 ui_tooltip  stWardrobeSettingsUI[38]
y1 = y1 + hPict + linespace

ui_outfield stWardrobeSettingsUI[39], x1 , y1, xHalfLevel-x1-74, hRow								! Side Overhang
ui_infield{3} "gs_lining_m", xHalfLevel - 64, y1-2, 54, 34,
		3, "ui_CorniceOverhang(13)", 4, 1, 54, 34, 50, 30,
		1, stCorniceOverhang[1], 4,
		2, stCorniceOverhang[2], 3,
		3, stCorniceOverhang[3], 2,
		4, stCorniceOverhang[4], 1   ui_tooltip stWardrobeSettingsUI[39]


! ------ 2. Column - Leg -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[40],	xHalfLevel +10,	y1,	xEndlevel-xHalfLevel-22-wPict , hRow	! Leg Style
ui_infield{3} "gs_leg_type_m", xEndLevel - wPict - 10, y1-4, wPict, hPict,
	2, "ui_CabLegTyp(1)", 8,2,																			! ui_CabLegTyp(1).png
	65,hPict,60,60,
	1, stLegTypes[2], 1,
	2, stLegTypes[3], 2,
	3, stLegTypes[4], 3,
	4, stLegTypes[5], 4,
	5, stLegTypes[6], 5,
	6, stLegTypes[7], 6,
	7, stLegTypes[1], 0 ui_tooltip  stWardrobeSettingsUI[40]
y1 = y1 + hPict + linespace

ui_outfield stWardrobeSettingsUI[41], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-x1-22-wBox1, hRow			! Width
ui_infield "leg_w", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[41]
y1 = y1 + lineSpace


! ------ 3. Column - Interior Fittings -------
y1 = yHalfLevel + lineSpace/2
ui_outfield stWardrobeSettingsUI[42], x1 , y1, xHalfLevel-x1-10, hRow										! Interior Fittings

ui_outfield stWardrobeSettingsUI[43], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-x1-22-wBox1, hRow			! Type
ui_infield{3} "iFunctions", xEndLevel - wBox1-10, y1-2,	wBox1, hRow,
		8, "", 4, 1, 0, 0, 0, 0,
		1, stInteriorType[1], 3,
		2, stInteriorType[2], 2,
		3, stInteriorType[3], 1,
		4, stInteriorType[4], 0   ui_tooltip stWardrobeSettingsUI[43]
y1 = y1 + lineSpace

if iFunctions = INTERIOR_SHELVES or iFunctions = INTERIOR_COMBINED then
	ui_outfield stWardrobeSettingsUI[44], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-x1-22-wBox1, hRow			! Nr. of Shelves
	ui_infield "nShelves", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[44]
endif

if iFunctions = INTERIOR_COMBINED then
	ui_outfield stWardrobeSettingsUI[45], x1 , y1, xHalfLevel-x1-12-wBox1, hRow									! Nr. of Hangers
	ui_infield "nHangers", xHalfLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[45]
endif

if iFunctions = INTERIOR_HANGER then
	ui_outfield stWardrobeSettingsUI[45], xHalfLevel + 10 , y1, xEndlevel-xHalfLevel-x1-22-wBox1, hRow			! Nr. of Hangers
	ui_infield "nHangers", xEndLevel - wBox1-10, y1-2,	wBox1, hRow		ui_tooltip stWardrobeSettingsUI[45]
endif


! ======================================================================
! Page 4
! ======================================================================

ui_page 4

x1			= 10
yStart		= 45
xHalfLevel 	= 230
xEndLevel	= 440

hRow		= 18
hPenBox		= 22
hFillBox	= 24
hMatBox		= 24
lineSpace	= 34

wDescript1	= 150
wDescript2	= 80
wBox1		= 90
wPenBox		= 35
wFillBox	= 80
wMatBox		= 130

ui_style 0, 1
ui_outfield stWardrobeSettingsUI[16],	x1,		yStart,	wDescript1,	hRow								! 2D Representation
ui_style 0, 0
y1 = yStart + lineSpace


x1 = x1 +5
ui_outfield stWardrobeSettingsUI[17],	x1,	y1,	wDescript1,	hRow										! 2D Symbol Type
y1 = y1 + lineSpace

ui_infield{3} "iSymbolType", 30, y1-10, 79, 64,
	3,"2Dstypcab(13)",8,2,
	79,64,75,60,
	1, stSymbolTypes[1], 1,
	5, stSymbolTypes[2], 2,
	6, stSymbolTypes[3], 3,
	2, stSymbolTypes[4], 4,
	4, stSymbolTypes[5], 5,
	3, stSymbolTypes[6], 6 ui_tooltip  stWardrobeSettingsUI[17]
y1 = y1 + 2*lineSpace

ui_infield{3} "bHangers", x1, y1-2, xHalfLevel-x1, hRow,													! Show Hanger in 2D
	7, "",
	2,
	1, 20, 20, 20, 20,
	0, stWardrobeSettingsUI[18], 0,
	1, stWardrobeSettingsUI[18], 1	ui_tooltip stWardrobeSettingsUI[18]


! ------ 2. Column - 2D Representation -------

y1 =  yStart + lineSpace
ui_outfield stWardrobeSettingsUI[19], xHalfLevel + 10 , y1, wDescript2, hRow							! Contour Pen
ui_infield "gs_cont_pen",	xEndLevel - wPenBox - 10, y1-4, wPenBox, hPenBox  ui_tooltip stWardrobeSettingsUI[19]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[20], xHalfLevel + 10, y1, wDescript2,	hRow							! Fill Type
ui_infield "gs_fill_type",	xEndLevel - wFillBox - 10, y1-5, wFillBox, hFillBox  ui_tooltip stWardrobeSettingsUI[20]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[22], xHalfLevel + 10, y1, wDescript1,	hRow							! Fill Pen
ui_infield "gs_fill_pen",	xEndLevel - wPenBox - 10, y1-4, wPenBox, hPenBox  ui_tooltip stWardrobeSettingsUI[21]
y1 = y1 + lineSpace

ui_outfield stWardrobeSettingsUI[22], xHalfLevel + 10, y1, wDescript1,	hRow							! Fill Background Pen
ui_infield "gs_back_pen",	xEndLevel - wPenBox -10 , y1-4, wPenBox, hPenBox  ui_tooltip stWardrobeSettingsUI[22]



! ======================================================================
! Page 5
! ======================================================================

ui_page 5

x1			= 10
yStart		= 40
xHalfLevel 	= 240
xEndLevel	= 440

hRow		= 18
hMatBox		= 24
lineSpace1	= 28
lineSpace2	= 24

wDescript1	= 115
wDescript2	= 80
wBox1		= 80
wMatBox		= 100
wPictBox	= 15


! ------ 1. Column - 3D -------
y1 = yStart
ui_outfield stWardrobeSettingsUI[2], x1 , y1, wDescript1, hRow		  											! 3D
ui_infield{3} "gs_detlevel_3D_m", x1+wDescript1+2, y1-4, wBox1, hRow,
		8, "", 3, 1, 0, 0, 0, 0,
		1, stDetlevel3D[1], 2,
		2, stDetlevel3D[2], 1,
		3, stDetlevel3D[3], 0   ui_tooltip stWardrobeSettingsUI[2]
y1 = y1 + lineSpace2

ui_outfield stWardrobeSettingsUI[3], x1 , y1, wDescript1, hRow		  											! Resolution
ui_infield "gs_resol", x1+wDescript1+2, y1-4, wBox1, hRow  ui_tooltip stWardrobeSettingsUI[3]
y1 = y1 + lineSpace2

y1 = yStart
ui_infield{3} "gs_shadow", xHalfLevel, y1-2, 440-xHalfLevel, hRow,													! Shadow
	7, "",
	2,
	1, 20, 20, 20, 20,
	0, stWardrobeSettingsUI[4], 0,
	1, stWardrobeSettingsUI[4], 1	ui_tooltip stWardrobeSettingsUI[4]
y1 = y1 + lineSpace2*2 - 2


ui_separator 0, y1, 444, y1
yStart = y1 + lineSpace2*0.5

! ------ 1. Column - Materials -------
y1 = yStart
ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[5]												! ui_mat(1).png
ui_outfield stWardrobeSettingsUI[5], x1 + wPictBox, y1, wDescript2,	hRow		  								! Cabinet
ui_infield "gs_cabinet_mat", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[5]
y1 = y1 + lineSpace1

flag = 4 * (iDoorStyle = 1 or iDoorStyle = 8 or iDoorStyle = 10 or iDoorType = DOOR_TYPE_NONE)
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[6]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[6]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[6], x1 + wPictBox, y1, wDescript2,	hRow, flag	  								! Door Frame
ui_infield "matDoorFrame", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[6]
y1 = y1 + lineSpace1

flag = 4 * (iDoorStyle <> 3 and iDoorStyle <> 5 and iDoorStyle <> 7 and iDoorStyle <> 9 and iDoorStyle <> 12 or iDoorType = DOOR_TYPE_NONE)
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[7]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[7]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[7], x1 + wPictBox, y1, wDescript2,	hRow, flag  								! Door Glass
ui_infield "matDoorGlass", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[7]
y1 = y1 + lineSpace1

flag = 4 * (iDoorStyle <> 14 and iDoorStyle <> 15 or iDoorType = DOOR_TYPE_NONE)
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[8]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[8]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[8], x1 + wPictBox, y1, wDescript2,	hRow, flag  								! Door Mirror
ui_infield "matDoorMirror", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[8]
y1 = y1 + lineSpace1

flag = 4 * (iDoorStyle = 3 or iDoorStyle = 5 or iDoorStyle = 7 or iDoorStyle = 9 or iDoorStyle = 10 or iDoorStyle = 12 or iDoorType = DOOR_TYPE_NONE)
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[9]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[9]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[9], x1 + wPictBox, y1, wDescript2,	hRow, flag  								! Door Decor 1
ui_infield "matDoorDecor1", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[9]
y1 = y1 + lineSpace1

flag = 4 * (iDoorStyle < 16 or iDoorType = DOOR_TYPE_NONE)
if not(flag) then
	ui_pict 1, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[10]											! ui_mat(1).png
else
	ui_pict 2, x1, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[10]											! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[10], x1 + wPictBox, y1, wDescript2,	hRow, flag  							! Door Decor 2
ui_infield "matDoorDecor2", x1 + wPictBox+wDescript2+2, y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[10]
y1 = y1 + lineSpace1


! ------ 2. Column - Materials -------
y1 = yStart
flag = 4 * (gs_knob_type_m=0 or iDoorType = DOOR_TYPE_NONE)
if not(flag) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[11]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[11]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[11], xHalfLevel + wPictBox, y1, wDescript2,	hRow, flag  					! Knob
ui_infield "gs_knob_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[11]
y1 = y1 + lineSpace1

flag = 4 * not(iFunctions=INTERIOR_SHELVES )
if not(flag) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[12]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[12]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[12], xHalfLevel + wPictBox, y1, wDescript2,	hRow, flag  					! Shelf
ui_infield "gs_shelf_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[12]
y1 = y1 + lineSpace1

flag = 4 * not(iFunctions=INTERIOR_HANGER or iFunctions=INTERIOR_COMBINED and iCabinetForm = SHAPE_SQUARE )
if not(flag) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[13]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[13]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[13], xHalfLevel + wPictBox, y1, wDescript2,	hRow, flag  					! Hanger
ui_infield "gs_hanger_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[13]
y1 = y1 + lineSpace1

flag = 4 * (gs_cornice_type_m=0)
if not(flag) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[14]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[14]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[14], xHalfLevel + wPictBox, y1, wDescript2,	hRow, flag  					! Cornice
ui_infield "gs_cornice_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[14]
y1 = y1 + lineSpace1

flag = 4 * (gs_leg_type_m=0)
if not(flag) then
	ui_pict 1, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[15]									! ui_mat(1).png
else
	ui_pict 2, xHalfLevel, y1-3, 12, 17 , 1 ui_tooltip stWardrobeSettingsUI[15]									! ui_mat_lock(1).png
endif
ui_outfield stWardrobeSettingsUI[15], xHalfLevel + wPictBox, y1, wDescript2,	hRow, flag  					! Leg
ui_infield "gs_leg_mat", xEndLevel - wMatBox -2 , y1-4, wMatBox, hMatBox  ui_tooltip stWardrobeSettingsUI[15]
y1 = y1 + lineSpace1



! ======================================================================
! Page 6
! ======================================================================

ui_page 6

hRow		= 18
wBox1		= 75


ui_style 0, 0

if iCabinetForm = SHAPE_SQUARE then
	PictStartX = 150
	PictStartY  = 95
	ui_pict 10, PictStartX, PictStartY, 113, 127 , 1													! ui_minimal_square.png
	ui_infield "A", PictStartX+20,	PictStartY-hRow-2,	wBox1,	hRow  ui_tooltip stToolTips[1]			! Width
	ui_infield "B", PictStartX+115,	PictStartY+27,	wBox1,	hRow  ui_tooltip stToolTips[2]				! Depth
	ui_infield "MSFront", PictStartX+115, PictStartY+84,	wBox1,	hRow  ui_tooltip stToolTips[5]		! Minimal Space in Front
endif

if iCabinetForm = SHAPE_CORNER_L then
	PictStartX = 135
	PictStartY  = 65
	ui_pict 11, PictStartX, PictStartY, 164, 166 , 1													! ui_minimal_L.png
	ui_infield "A", PictStartX+55,	PictStartY-hRow-2,	wBox1,	hRow  ui_tooltip stToolTips[1]			! Width
	ui_infield "B", PictStartX-wBox1-2,	PictStartY+70,	wBox1,	hRow  ui_tooltip stToolTips[2]			! Depth
	ui_infield "sideDepth1", PictStartX-10, PictStartY+169,	wBox1,	hRow  ui_tooltip stToolTips[3]		! Side Depth 1
	ui_infield "sideDepth2", PictStartX+170, PictStartY+30,	wBox1,	hRow  ui_tooltip stToolTips[4]		! Side Depth 2
	ui_infield "MSFront", PictStartX+70, PictStartY+169,	wBox1,	hRow  ui_tooltip stToolTips[5]		! Minimal Space in Front
	ui_infield "MSFront", PictStartX+170, PictStartY+80,	wBox1,	hRow  ui_tooltip stToolTips[5]		! Minimal Space in Front
endif

if iCabinetForm = SHAPE_CORNER_C then
	PictStartX = 160
	PictStartY  = 65
	ui_pict 12, PictStartX, PictStartY, 164, 190 , 1													! ui_minimal_C.png
	ui_infield "A", PictStartX+30,	PictStartY-hRow-2,	wBox1,	hRow  ui_tooltip stToolTips[1]			! Width
	ui_infield "B", PictStartX-wBox1-2,	PictStartY+50,	wBox1,	hRow  ui_tooltip stToolTips[2]			! Depth
	ui_infield "sideDepth1", PictStartX-10, PictStartY+147,	wBox1,	hRow  ui_tooltip stToolTips[3]		! Side Depth 1
	ui_infield "sideDepth2", PictStartX+130, PictStartY+30,	wBox1,	hRow  ui_tooltip stToolTips[4]		! Side Depth 2
	ui_infield "MSFront", PictStartX+120, PictStartY+180,	wBox1,	hRow  ui_tooltip stToolTips[5]		! Minimal Space in Front
endif
]]></Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

call "FM_types" parameters all

if gs_ui_current_page > 6 then
	gs_ui_current_page = 6
	parameters gs_ui_current_page = gs_ui_current_page
endif

call "ui_tabcontrol" parameters	controlType = 1,
								nTabs = 6,
								gs_ui_current_page = gs_ui_current_page


minDist = 0.3
values "a" range [minDist, ]
values "b" range [minDist, ]
!values "zzyzx" range ( max ( leg_h+2*thickness+(gs_cornice_type_m>0)*cot, minDist), )
values "zzyzx" range [leg_h+minDist+(gs_cornice_type_m>0)*cot, ]


! ==============================================================================
! Cabinet Shape
! ==============================================================================
! ----- Cabinet Shape -----
values "cabinetForm" stCabinetForm		! Square(1), Corner-L(2), Corner-C(3)
values "iCabinetForm"  SHAPE_SQUARE, SHAPE_CORNER_L, SHAPE_CORNER_C
if GLOB_MODPAR_NAME = "cabinetForm" then
	iCabinetForm = 1
	for i = 1 to vardim1(stCabinetForm)
		if cabinetForm= stCabinetForm[i] then	iCabinetForm = i
	next i
	parameters iCabinetForm = iCabinetForm
else
	iCabinetForm = max(min(iCabinetForm,3),1)
	parameters cabinetForm = stCabinetForm[iCabinetForm]
endif

if iTempForm <> iCabinetForm then
	if iCabinetForm = SHAPE_SQUARE then
		B = sideDepth2
		parameters B = B
	else
		if iTempForm = SHAPE_SQUARE then
			B = A
			parameters B = B
		endif
	endif

	iTempForm = iCabinetForm
	parameters iTempForm = iTempForm
endif

if iCabinetForm = SHAPE_SQUARE then
	hideparameter "sideDepth1", "sideDepth2"
	lock "sideDepth1", "sideDepth2"
endif

if iCabinetForm = SHAPE_CORNER_L then
	values "sideDepth1" range [0.1, A]
	values "sideDepth2" range [0.1, B]
endif

if iCabinetForm = SHAPE_CORNER_C then
	values "sideDepth1" range [0.1, A-0.1]
	values "sideDepth2" range [0.1, B-0.1]
endif


! ==============================================================================
! Door Settings
! ==============================================================================
! ----- Door Style -----
dim doorStyleNumber[12]
	doorStyleNumber[1] = 1
	doorStyleNumber[2] = 13
	doorStyleNumber[3] = 3
	doorStyleNumber[4] = 9
	doorStyleNumber[5] = 4
	doorStyleNumber[6] = 5
	doorStyleNumber[7] = 14
	doorStyleNumber[8] = 15
	doorStyleNumber[9] = 16
	doorStyleNumber[10] = 17
	doorStyleNumber[11] = 18
	doorStyleNumber[12] = 10

values "iDoorStyle" doorStyleNumber
values "doorStyle" stDoorStyle
if GLOB_MODPAR_NAME = "doorStyle" then
	iDoorStyle = 1
	for i = 1 to vardim1(stDoorStyle)
		if doorStyle = stDoorStyle[i] then iDoorStyle = doorStyleNumber[i]
	next i
	parameters iDoorStyle = iDoorStyle
else
	for i = 1 to vardim1(stDoorStyle)
		if iDoorStyle = doorStyleNumber[i] then doorStyle = stDoorStyle[i]
	next i
	parameters doorStyle = doorStyle
endif

! ----- Door Type -----
if iCabinetForm = SHAPE_SQUARE then
	values "doorType" stDoorType		! Side Hung(2), Sliding(1), None(0)
	values "iDoorType" DOOR_TYPE_NONE, DOOR_TYPE_SLIDING, DOOR_TYPE_SIDEHUNG
else
	values "doorType" stDoorType[1], stDoorType[3]
	values "iDoorType" DOOR_TYPE_NONE, DOOR_TYPE_SIDEHUNG
endif
if GLOB_MODPAR_NAME = "doorType" then
	iDoorType = 2
	for i = 1 to vardim1(stDoorType)
		if doorType = stDoorType[i] then	iDoorType = 3-i
	next i
	parameters iDoorType = iDoorType
else
	iDoorType = max(min(iDoorType,2),0)
	parameters doorType = stDoorType[3-iDoorType]
endif

if iDoorType = DOOR_TYPE_NONE then
	hideparameter "nDoor", "doorStyle", "iDoorStyle", "doorThickness", "doorFrameWidth", "mullionWidth", "nVerticalMullion", "nHorizontalMullion", "bBevel", "doorAngle3D"
	lock "nDoor", "doorStyle", "iDoorStyle", "doorThickness", "doorFrameWidth", "mullionWidth", "nVerticalMullion", "nHorizontalMullion", "bBevel", "doorAngle3D"

	hideparameter "matDoorFrame", "matDoorGlass", "matDoorMirror", "matDoorDecor1", "matDoorDecor2"
	lock "matDoorFrame", "matDoorGlass", "matDoorMirror", "matDoorDecor1", "matDoorDecor2"

	hideparameter "gs_knob_type", "gs_knob_type_m", "knob_pl_x", "knob_pl_y", "gs_knob_p", "gs_knob_p_m", "knob_size", "gs_knob_mat"
	lock "gs_knob_type", "gs_knob_type_m", "knob_pl_x", "knob_pl_y", "gs_knob_p", "gs_knob_p_m", "knob_size", "gs_knob_mat"
endif

! ----- Door Number -----
if iCabinetForm = SHAPE_SQUARE then
	tempDoorNumber = 1
	if iDoorType = DOOR_TYPE_SLIDING then tempDoorNumber = 2
	values "nDoor" range [tempDoorNumber, ]
else
	if iCabinetForm = SHAPE_CORNER_C then
		values "nDoor" range [1, 2]
	else
		values "nDoor" 1
		lock "nDoor"
		hideparameter "nDoor"
	endif
endif

if GLOB_MODPAR_NAME = "doorType" | GLOB_MODPAR_NAME = "iDoorType" then
	if nDoor = 1 & (iDoorType = DOOR_TYPE_SLIDING) then
		nDoor = 2
		parameters nDoor = nDoor
	endif
endif

! ----- Door and Knob Parameters Macro -----
call "fa_warddoortyp" parameters all bNotMacro = 0,
									gs_full_edit = 1,
									doorWidth=doorFullWidth/nDoor,
									doorHeight=doorHeight

! ==============================================================================
! Door Opening
! ==============================================================================
openingRange = 0.9
doorTempWidth = doorFullWidth/nDoor

knob_w = 0
if gs_knob_type_m >=1 & gs_knob_type_m <=3 then knob_w= 0.02
if gs_knob_type_m >=4 & gs_knob_type_m <=8 then
	if gs_knob_p_m = 1 then	! Horizontal
		knob_w= 0.1
	else
		knob_w= 0.012
	endif
endif

minLengthKnob = knob_pl_x + knob_w
slidingRange = 1 - (minLengthKnob/doorTempWidth)

if GLOB_MODPAR_NAME = "nDoor" then
	for kk = 1 to nDoor
		openingDoor[kk] = 0
		openingDoorLength[kk] = 0
		parameters openingDoorLength[kk] = openingDoorLength[kk], openingDoor[kk] = openingDoor[kk]
	next kk
endif

if GLOB_MODPAR_NAME = "openingDoor" then
	for kk = 1 to nDoor
		if (ceil(nDoor/2)<>nDoor/2)  and (kk = 2 and nDoor>2) then
			if openingDoor[kk] > openingRange*100 then
				openingDoor[kk] = openingRange*100
				parameters openingDoor[kk] = openingDoor[kk]
			endif

			if openingDoor[kk] < -openingRange*100 then
				openingDoor[kk] = -openingRange*100
				parameters openingDoor[kk] = openingDoor[kk]
			endif
		else
			if openingDoor[kk] > openingRange*100 then
				openingDoor[kk] = openingRange*100
				parameters openingDoor[kk] = openingDoor[kk]
			endif

			if openingDoor[kk] < 0 then
				openingDoor[kk] = 0
				parameters openingDoor[kk] = openingDoor[kk]
			endif
		endif

		openingDoorLength[kk] = doorTempWidth * (openingDoor[kk]/100)
		parameters openingDoorLength[kk] = openingDoorLength[kk]
	next kk
else
	! Comment:
	! odd Door Number 	- 1, 2, 3, A, B, A, B ...
	! even Door Number	- A, B, A, B, A, B, A ...

	for kk = 1 to nDoor

		if iDoorType = DOOR_TYPE_SLIDING then
			if (ceil(nDoor/2)<>nDoor/2)  & nDoor > 2 & (kk >= 1 & kk <= 3) then
				! Maximum Range
				if kk = 1 then	! (1)
					if openingDoorLength[kk] > (doorTempWidth * slidingRange + openingDoorLength[kk+1]) then
						openingDoorLength[kk] = (doorTempWidth * slidingRange + openingDoorLength[kk+1])
						parameters openingDoorLength[kk] = openingDoorLength[kk]
					endif
				endif
				if kk = 2 then	! (2)
					if openingDoorLength[kk] > (doorTempWidth * slidingRange - openingDoorLength[kk+1]) then
						openingDoorLength[kk] = (doorTempWidth * slidingRange - openingDoorLength[kk+1])
						parameters openingDoorLength[kk] = openingDoorLength[kk]
					endif
				endif
				if kk = 3 then	! (3)
					if openingDoorLength[kk] > (doorTempWidth * slidingRange - openingDoorLength[kk-1]) then
						openingDoorLength[kk] = (doorTempWidth * slidingRange - openingDoorLength[kk-1])
						parameters openingDoorLength[kk] = openingDoorLength[kk]
					endif
				endif
				! Minimum Range
				if kk = 2 then	! (2)
					if openingDoorLength[kk] < -(doorTempWidth * slidingRange - openingDoorLength[kk-1]) then
						openingDoorLength[kk] = -(doorTempWidth * slidingRange - openingDoorLength[kk-1])
						parameters openingDoorLength[kk] = openingDoorLength[kk]
					endif
				else	! (1), (3)
					if openingDoorLength[kk] < eps then
						openingDoorLength[kk] = 0
						parameters openingDoorLength[kk] = openingDoorLength[kk]
					endif
				endif
			else
				! Maximum Range
				if ceil(kk/2)<>kk/2 exor (ceil(nDoor/2)<>nDoor/2)  then ! (A)
					if openingDoorLength[kk] > (doorTempWidth * slidingRange - openingDoorLength[kk+1]) then
						openingDoorLength[kk] = (doorTempWidth * slidingRange - openingDoorLength[kk+1])
						parameters openingDoorLength[kk] = openingDoorLength[kk]
					endif
				else	! (B)
					if openingDoorLength[kk] > (doorTempWidth * slidingRange - openingDoorLength[kk-1]) then
						openingDoorLength[kk] = (doorTempWidth * slidingRange - openingDoorLength[kk-1])
						parameters openingDoorLength[kk] = openingDoorLength[kk]
					endif
				endif
				! Minimum Range (A), (B)
				if openingDoorLength[kk] < 0 then
					openingDoorLength[kk] = 0
					parameters openingDoorLength[kk] = openingDoorLength[kk]
				endif
			endif
		else
			if (ceil(nDoor/2)<>nDoor/2)  and (kk = 2 and nDoor>2) then
				if openingDoorLength[kk] > doorTempWidth*slidingRange then
					openingDoorLength[kk] = doorTempWidth*slidingRange
					parameters openingDoorLength[kk] = openingDoorLength[kk]
				endif

				if openingDoorLength[kk] < -doorTempWidth*slidingRange then
					openingDoorLength[kk] = -doorTempWidth*slidingRange
					parameters openingDoorLength[kk] = openingDoorLength[kk]
				endif
			else
				if openingDoorLength[kk] > doorTempWidth*slidingRange then
					openingDoorLength[kk] = doorTempWidth*slidingRange
					parameters openingDoorLength[kk] = openingDoorLength[kk]
				endif

				if openingDoorLength[kk] < 0 then
					openingDoorLength[kk] = 0
					parameters openingDoorLength[kk] = openingDoorLength[kk]
				endif
			endif
		endif

		openingDoor[kk] = (openingDoorLength[kk]/doorTempWidth)*100
		parameters openingDoor[kk] = openingDoor[kk]
	next kk
endif



! ==============================================================================
! Knob
! ==============================================================================
! ----- Knob Style-----
values "gs_knob_type_m" 0,1,2,3,4,5,6,7,8
values "gs_knob_type" stKnobTypes
if GLOB_MODPAR_NAME = "gs_knob_type" then
	gs_knob_type_m = 1
	for i = 1 to vardim1(stKnobTypes)
		if gs_knob_type = stKnobTypes[i] then gs_knob_type_m = i-1
	next i
	parameters gs_knob_type_m = gs_knob_type_m
else
	gs_knob_type_m = max(min(gs_knob_type_m,8),0)
	parameters gs_knob_type = stKnobTypes[gs_knob_type_m+1]
endif

! ----- Knob Placing-----
values "gs_knob_p_m" 0,1
values "gs_knob_p" stKnobPlacing
if GLOB_MODPAR_NAME = "gs_knob_p" then
	gs_knob_type_m = 1
	for i = 1 to vardim1(stKnobPlacing)
		if gs_knob_p = stKnobPlacing[i] then gs_knob_p_m = i-1
	next i
	parameters gs_knob_p_m = gs_knob_p_m
else
	gs_knob_p_m = max(min(gs_knob_p_m,1),0)
	parameters gs_knob_p = stKnobPlacing[gs_knob_p_m+1]
endif


! ==============================================================================
! Interior Fittings
! ==============================================================================
! ----- Interior Fittings -----
if iCabinetForm = SHAPE_SQUARE then
	values "iFunctions" 0,1,2,3
	values "gs_functions" stInteriorType
else
	values "iFunctions" 0,2,3
	values "gs_functions" stInteriorType[1], stInteriorType[2], stInteriorType[4]
endif
if GLOB_MODPAR_NAME = "gs_functions" then
	gs_knob_type_m = 0
	for i = 1 to vardim1(stInteriorType)
		if gs_functions = stInteriorType[i] then iFunctions = 4 - i
	next i
	parameters iFunctions = iFunctions
else
	iFunctions = max(min(iFunctions,3),0)
	parameters gs_functions = stInteriorType[4-iFunctions]
endif

! ----- Shelves and Hangers -----
values "nShelves" range [1, ]
values "nHangers" range [1, 2]
if iFunctions = INTERIOR_NONE then
	lock "nHangers", "nShelves", "gs_hanger_mat", "gs_shelf_mat"
	hideparameter "nHangers", "nShelves", "gs_hanger_mat", "gs_shelf_mat"
else
	if iFunctions = INTERIOR_SHELVES then
		lock "nHangers", "gs_hanger_mat"
		hideparameter "nHangers", "gs_hanger_mat"
	endif
	if iFunctions = INTERIOR_HANGER then
		lock "nShelves", "gs_shelf_mat"
		hideparameter "nShelves", "gs_shelf_mat"
	endif
endif


! ==============================================================================
! Cornice
! ==============================================================================
! ----- Cornice Style -----
values "gs_cornice_type" stCorniceTypes[2], stCorniceTypes[3], stCorniceTypes[4], stCorniceTypes[5], stCorniceTypes[1]
values "gs_cornice_type_m" 0,1,2,3,4
if GLOB_MODPAR_NAME = "gs_cornice_type" then
	gs_cornice_type_m= 0
	for i = 1 to vardim1(stCorniceTypes)
		if gs_cornice_type = stCorniceTypes[i] then gs_cornice_type_m = i -1
	next i
	parameters gs_cornice_type_m = gs_cornice_type_m
else
	gs_cornice_type_m = max(min(gs_cornice_type_m,4),0)
	parameters gs_cornice_type = stCorniceTypes[gs_cornice_type_m+1]
endif

! ----- Cornice Overhang-----
values "gs_lining" stCorniceOverhang
values "gs_lining_m" 1,2,3,4
if GLOB_MODPAR_NAME = "gs_lining" then
	gs_lining_m = 0
	for i = 1 to vardim1(stCorniceOverhang)
		if gs_lining = stCorniceOverhang[i] then gs_lining_m= 5-i
	next i
	parameters gs_lining_m = gs_lining_m
else
	gs_lining_m = max(min(gs_lining_m,4),1)
	parameters gs_lining = stCorniceOverhang[5-gs_lining_m]
endif


if gs_cornice_type_m = 0 then
	hideparameter "gs_lining", "gs_lining_m", "cot", "cooh", "gs_cornice_mat"
	lock "gs_lining", "gs_lining_m", "cot", "cooh", "gs_cornice_mat"
endif

values "cot" range (0,)
if gs_cornice_type_m=1  then values "cooh" range [0,)
if gs_cornice_type_m=2 or gs_cornice_type_m=3  then values "cooh" range [1/2*cot,)
if gs_cornice_type_m=4 then values "cooh" range [3/4*cot,)


! ==============================================================================
! Leg
! ==============================================================================
! ----- Leg Style-----
values "gs_leg_type_m" 0,1,2,3,4,5,6
values "gs_leg_type" stLegTypes
if GLOB_MODPAR_NAME = "gs_leg_type" then
	gs_leg_type_m = 1
	for i = 1 to vardim1(stLegTypes)
		if gs_leg_type = stLegTypes[i] then gs_leg_type_m = i-1
	next i
	parameters gs_leg_type_m = gs_leg_type_m
else
	gs_leg_type_m = max(min(gs_leg_type_m,6),0)
	parameters gs_leg_type = stLegTypes[gs_leg_type_m+1]
endif

!values "leg_h" range [0, min (ZZYZX-2*thickness-(gs_cornice_type_m>0)*cot, ZZYZX-mindist)]
!values "leg_h" range [0, ZZYZX-mindist-(gs_cornice_type_m>0)*cot]
values "leg_h" range [0, mindist]
values "leg_w" range (0, min(a/2, b/2))

if gs_leg_type_m=0 then
	hideparameter "gs_leg_mat", "leg_h", "leg_w"
	lock "gs_leg_mat", "leg_h", "leg_w"
endif


! ==============================================================================
! 2D Style
! ==============================================================================
! ----- 2D Symbol Type -----
if iDoorType = DOOR_TYPE_SLIDING or iDoorType = DOOR_TYPE_NONE then
	if iCabinetForm = SHAPE_SQUARE then
		values "symbolType" stSymbolTypes[1], stSymbolTypes[2], stSymbolTypes[3], stSymbolTypes[4]
		values "iSymbolType" 1, 2, 3, 4
	else
		values "symbolType" stSymbolTypes[1], stSymbolTypes[4]
		values "iSymbolType" 1, 4
	endif
else
	if iCabinetForm = SHAPE_SQUARE then
		values "symbolType" stSymbolTypes		! Type 1(1),Type 2(2),Type 3(3),Type 4(4), Type 5(5), Type 6(6)
		values "iSymbolType" 1, 2, 3, 4, 5, 6
	else
		values "symbolType" stSymbolTypes[1], stSymbolTypes[4], stSymbolTypes[5], stSymbolTypes[6]
		values "iSymbolType" 1, 4, 5, 6
	endif
endif
if GLOB_MODPAR_NAME = "symbolType" then
	iSymbolType = 1
	for i = 1 to vardim1(stSymbolTypes)
		if symbolType = stSymbolTypes[i] then	iSymbolType = i
	next i
	parameters iSymbolType = iSymbolType
else
	iSymbolType = max(min(iSymbolType,6),1)
	parameters symbolType= stSymbolTypes[iSymbolType]
endif

lock "openingAngle2D"
hideparameter "openingAngle2D"

if iFunctions = INTERIOR_NONE | iFunctions = INTERIOR_SHELVES | iSymbolType = 2 | iSymbolType = 3 then
	hideparameter "bHangers"
	lock "bHangers"
endif

if gs_cont_pen=0 then parameters gs_cont_pen=4
if gs_fill_pen=0 then parameters gs_fill_pen=19


! ==============================================================================
! Minimal Space
! ==============================================================================
values "MSFront" range [0, ]


! ==============================================================================
! 3D Representation
! ==============================================================================
! ----- 3D Representation -----
values "gs_detlevel_3D" stDetlevel3D		! Off(0), Simple(1), Detailed(2)
values "gs_detlevel_3D_m" 0, 1, 2
if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = 2
	for i = 1 to vardim1(stDetlevel3D)
		if gs_detlevel_3D = stDetlevel3D[i] then	gs_detlevel_3D_m = 3-i
	next i
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D_m = max(min(gs_detlevel_3D_m,2),0)
	parameters gs_detlevel_3D = stDetlevel3D[3-gs_detlevel_3D_m]
endif

values "gs_resol" range [3, )
if gs_resol<3 then parameters gs_resol=3

]]></Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[Wardrobe: freestanding or modular unit, with corner option.]]>
</Comment>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[Shape, side hung or sliding doors, door, knob, cornice or leg styles, shelf, hanger, 2D symbols, minimal space]]>
</Keywords>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="18338" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	008008020000004C5CF69C000000097048597300002E2300002E230178A53F76
	00000A396943435050686F746F73686F70204943432070726F66696C65000078
	DA9D96775454D71687CFBD777AA1CD30025286DEBBC000D27B935E4561981960
	28030E3334B121A2021145449A224850C480D150245644B1101454B007240828
	311845542C6F46D68BAEACBCF7F2F2FBE3AC6FEDB3F7B9FBECBDCF5A170092A7
	2F9797064B0190CA13F0833C9CE911915174EC0080011E608029004C5646BA5F
	B07B0810C9CBCD859E2172025F0401F07A58BC0270D3D033804E07FF9FA459E9
	7C81E89800119BB339192C11178838254B902EB6CF8A981A972C66182566BE28
	4111CB893961910D3EFB2CB2A398D9A93CB688C539A7B353D962EE15F1B64C21
	47C488AF880B33B99C2C11DF12B1468A30952BE237E2D8540E33030014496C17
	70588922361131891F12E422E2E500E048095F71DC572CE0640BC49772494BCF
	E173131205741D962EDDD4DA9A41F7E464A5700402C300262B99C967D35DD252
	D399BC1C0016EFFC5932E2DAD24545B634B5B6B434343332FDAA50FF75F36F4A
	DCDB457A19F8B96710ADFF8BEDAFFCD21A0060CC896AB3F38B2DAE0A80CE2D00
	C8DDFB62D3380080A4A86F1DD7BFBA0F4D3C2F890241BA8DB1715656961197C3
	321217F40FFD4F87BFA1AFBE67243EEE8FF2D05D39F14C618A802EAE1B2B2D25
	4DC8A767A433591CBAE19F87F81F07FE751E06419C780E9FC313458489A68CCB
	4B10B59BC7E60AB8693C3A97F79F9AF80FC3FEA4C5B91689D2F81150638C80D4
	752A407EED07280A1120D1FBC55DFFA36FBEF830207E79E12A938B73FFEF37FD
	67C1A5E225839BF039CE252884CE12F23317F7C4CF12A0010148022A9007CA40
	1DE800436006AC802D70046EC01BF8831010095603164804A9800FB2401ED804
	0A4131D809F6806A50071A41336805C741273805CE834BE01AB8016E83FB6014
	4C80676016BC060B10046121324481E421154813D287CC2006640FB941BE5010
	1409C54209100F124279D066A8182A83AAA17AA819FA1E3A099D87AE4083D05D
	680C9A867E87DEC1084C82A9B012AC051BC30CD809F68143E0557002BC06CE85
	0BE01D7025DC001F853BE0F3F035F8363C0A3F83E7108010111AA28A18220CC4
	05F147A29078848FAC478A900AA4016945BA913EE426328ACC206F5118140545
	4719A26C519EA850140BB506B51E5582AA461D4675A07A51375163A859D44734
	19AD88D647DBA0BDD011E8047416BA105D816E42B7A32FA26FA327D0AF31180C
	0DA38DB1C2786222314998B59812CC3E4C1BE61C6610338E99C362B1F2587DAC
	1DD61FCBC40AB085D82AEC51EC59EC107602FB0647C4A9E0CC70EEB8281C0F97
	8FABC01DC19DC10DE126710B7829BC26DE06EF8F67E373F0A5F8467C37FE3A7E
	02BF4090266813EC08218424C2264225A1957091F080F0924824AA11AD898144
	2E7123B192788C789938467C4B9221E9915C48D124216907E910E91CE92EE925
	994CD6223B92A3C802F20E7233F902F911F98D0445C248C24B822DB141A246A2
	436248E2B9245E5253D24972B564AE6485E409C9EB92335278292D291729A6D4
	7AA91AA99352235273D2146953697FE954E912E923D257A4A764B0325A326E32
	6C99029983321764C62908459DE242615136531A29172913540C559BEA454DA2
	1653BFA30E506765656497C986C966CBD6C89E961DA521342D9A172D85564A3B
	4E1BA6BD5BA2B4C4690967C9F625AD4B8696CCCB2D957394E3C815C9B5C9DD96
	7B274F9777934F96DF25DF29FF5001A5A0A710A890A5B05FE1A2C2CC52EA52DB
	A5ACA5454B8F2FBDA7082BEA290629AE553CA8D8AF38A7A4ACE4A194AE54A574
	41694699A6ECA89CA45CAE7C46795A85A262AFC255295739ABF2942E4B77A2A7
	D02BE9BDF4595545554F55A16ABDEA80EA829AB65AA85ABE5A9BDA4375823A43
	3D5EBD5CBD477D564345C34F234FA345E39E265E93A199A8B957B34F735E4B5B
	2B5C6BAB56A7D694B69CB69776AE768BF6031DB28E83CE1A9D069D5BBA185D86
	6EB2EE3EDD1B7AB09E855EA25E8DDE757D58DF529FABBF4F7FD0006D606DC033
	6830183124193A19661AB6188E19D18C7C8DF28D3A8D9E1B6B184719EF32EE33
	FE6862619262D26872DF54C6D4DB34DFB4DBF477333D3396598DD92D73B2B9BB
	F906F32EF317CBF4977196ED5F76C78262E167B1D5A2C7E283A59525DFB2D572
	DA4AC32AD6AAD66A84416504304A1897ADD1D6CED61BAC4F59BFB5B1B411D81C
	B7F9CDD6D036D9F688EDD472EDE59CE58DCBC7EDD4EC9876F576A3F674FB58FB
	03F6A30EAA0E4C870687C78EEA8E6CC726C749275DA724A7A34ECF9D4D9CF9CE
	EDCEF32E362EEB5CCEB922AE1EAE45AE036E326EA16ED56E8FDCD5DC13DC5BDC
	673D2C3CD67A9CF3447BFA78EEF21CF152F26279357BCD7A5B79AFF3EEF521F9
	04FB54FB3CF6D5F3E5FB76FBC17EDE7EBBFD1EACD05CC15BD1E90FFCBDFC77FB
	3F0CD00E5813F06320263020B026F0499069505E505F30253826F848F0EB10E7
	90D290FBA13AA1C2D09E30C9B0E8B0E6B0F970D7F0B2F0D108E3887511D72215
	22B9915D51D8A8B0A8A6A8B9956E2BF7AC9C88B6882E8C1E5EA5BD2A7BD595D5
	0AAB53569F8E918C61C69C8845C786C71E897DCFF4673630E7E2BCE26AE36659
	2EACBDAC676C4776397B9A63C729E34CC6DBC597C54F25D825EC4E984E7448AC
	489CE1BA70ABB92F923C93EA92E693FD930F257F4A094F694BC5A5C6A69EE4C9
	F09279BD69CA69D96983E9FAE985E9A36B6CD6EC5933CBF7E137654019AB32BA
	0454D1CF54BF5047B8453896699F5993F9262B2CEB44B674362FBB3F472F677B
	CE64AE7BEEB76B516B596B7BF254F336E58DAD735A57BF1E5A1FB7BE6783FA86
	820D131B3D361EDE44D894BCE9A77C93FCB2FC579BC337771728156C2C18DFE2
	B1A5A550A2905F38B2D5766BDD36D436EEB681EDE6DBABB67F2C62175D2D3629
	AE287E5FC22AB9FA8DE93795DF7CDA11BF63A0D4B274FF4ECC4EDECEE15D0EBB
	0E974997E5968DEFF6DBDD514E2F2F2A7FB52766CF958A6515757B097B857B47
	2B7D2BBBAA34AA7656BDAF4EACBE5DE35CD356AB58BBBD767E1F7BDFD07EC7FD
	AD754A75C575EF0E700FDCA9F7A8EF68D06AA83888399879F049635863DFB78C
	6F9B9B149A8A9B3E1CE21D1A3D1C74B8B7D9AAB9F988E291D216B845D8327D34
	FAE88DEF5CBFEB6A356CAD6FA3B5151F03C784C79E7E1FFBFDF0719FE33D2718
	275A7FD0FCA1B69DD25ED40175E474CC7626768E7645760D9EF43ED9D36DDBDD
	FEA3D18F874EA99EAA392D7BBAF40CE14CC1994F6773CFCE9D4B3F37733EE1FC
	784F4CCFFD0B11176EF506F60E5CF4B978F992FBA50B7D4E7D672FDB5D3E75C5
	E6CAC9AB8CAB9DD72CAF75F45BF4B7FF64F153FB80E540C775ABEB5D37AC6F74
	0F2E1F3C33E43074FEA6EBCD4BB7BC6E5DBBBDE2F6E070E8F09D91E891D13BEC
	3B537753EEBEB897796FE1FEC607E807450FA51E563C527CD4F0B3EECF6DA396
	A3A7C75CC7FA1F073FBE3FCE1A7FF64BC62FEF270A9E909F544CAA4C364F994D
	9D9A769FBEF174E5D38967E9CF16660A7F95FEB5F6B9CEF31F7E73FCAD7F3662
	76E205FFC5A7DF4B5ECABF3CF46AD9AB9EB980B947AF535F2FCC17BD917F73F8
	2DE36DDFBBF077930B59EFB1EF2B3FE87EE8FEE8F3F1C1A7D44F9FFE050398F3
	FC91C05ADB0000000467414D410000B18E7CFB5193000000206348524D00007A
	25000080830000F9FF000080E9000075300000EA6000003A980000176F925FC5
	4600003CC94944415478DA62FCFFFF3FC32818380010404CA34130B000208058
	469A87FFFCF9F3F3E7CFDFBF7FFFFAF50B4802B97FC100CE8690CCCCCC40913B
	77EEC8C8C8181B1BF3F3F3D3C83D0001C438A48B207890FD0203609001B9FFFE
	FD838843C2F4DF3FA008C88F4C4C4C8C8C20FF02150049881A0817280B118468
	FF07A680DCCF9F3F7FF9F20568B2989898919191AAAA2AD5BD0010805932B801
	200481E099C0936EE8BF1E7AF0126F64132BF0713C100D1098F54702BC6DB38D
	9D45503437137C03D2159A7BFA31F0306409BD1F9A5D283D96342041F05570EC
	E9161CFC7A1ABABB99D19F80F2AA520E23918006991911B7B6FE04A09D8C6E00
	0461204A116405F6EAFE3F4CD00554CE9E360CA0FD200D39527877FC68000992
	26434ABE01F1586A4D28819C6F7187D90CFD13538F70F253F1906808142B81A2
	E194AD56F826DE5F223949295066B7F3F618F7DB5B83016636C6A0D31063287F
	55EF5D553FA1340560AD8C75188461203A943ACA5F30D09FE8CCCAFFE70B1012
	CAD8A80E42E9995350618EC72CB6DFDD396DFE8010424AA95487A2B87975E825
	F5A73C74F73F6B3E12E1ED3894E38E78EF9D7306E37028604235A035A0C84429
	24C516553F74D94D7ADD3A91EEF15C97D9E6CC6A9EC0E1CABA212B592D31AAF6
	497C3FEF71EA871787E7162C1141DF18632B9BFE04107522001828F7EFDF8714
	23C05084D46B90508784269009F4062C05FF830710131280A45C886FE15901C8
	02A65F50F833307CFFFA55545414280F0CCCBF7FFEFDFAF99DE1EFBFDFE072EB
	D74F5068FEFCF903C4F8F9EDC7B71F960E2E572F9C79FBE43E0313C35F60A5FB
	F7C7F7F7EFB46D3DE41454D64E69E115E460626081B70219991980F60145FE33
	8072C9AF1FBFFE397A821D0C72363C19416217681F2433510500041075224041
	41E1E8D1A31F3F7E04A74A26787902773DBC6400A659907F99812997095C84FC
	81A47A4E0E0E601E6264F8074CC9FF41E2C0E20B58A9FE023659FE00993F7E7D
	FBF645585C4A515171CFD68D6F1FDF0666A1DFBFBE0111D38F3F0C6CA0F86282
	78879181E91F2330E22DED9D3EBD7BFBFCFA392E012E90ED0CCCC0B861051645
	2CCCECFC3C6C5C3C8C0CFF1941210F7416D0350C40FD8CD0840164FF65626102
	270346782A81240B48A6A422000820EA4400A4EE7AF0E081A4A4380B130B2480
	810898AEFEFE8134ECC095002899FED0D4D5BF76E9E2A7F76F8085C71F50AAFD
	C62F286464E570FED8C14FCF6F812ACC5F3F18C0D106F4F43FA6FFC0980406E8
	F7CF3F4C3D238106FFF9F5E3C7C7A72CECBC2C4C8CCC1C9C8C1C4065C0721C18
	C4E05208529FFF6364666166616763E56261606203AA00463BF33F067081050C
	74604401039C1914E80CE0340FB2E92FC37F26487A618118078901A4E40FCFA0
	54040001582F9B148461200AE74F2A2E720D51BCFF25DCF400A2A0D085E8CA4D
	C7248DDF44ED094A16434220E49BF7F2C862FF00D0C418AF97F3F3764267254B
	19D37B7CD94932B7A926348EB998EDFEF0B80F437F5C474EF739492D3BD4488B
	92885F75B6DB04EF01020F14AAD09C220A84A71ACBB31AC851D2F7378CE68353
	8B31E38CE63FD7345D5B5354EC38836A113CA1E1AC06069B311B65D206C156A3
	D8CD88EBECE3AFA7CDFF2D5DB0011F01582DA31C8441208802BB946EA3F73F9F
	F104FE186B5BF0B118BD40F922610961E62DC389062849F07E3D1FF75BB9CE0A
	5812A7C542588A04EE4EEFCAB6E65054B3CD17D49FCC10E2D88BC0626CA21924
	E99C9EC0E2184657250CBCE3087612975D14552796A5FEAA715C3B70A40BABA9
	5592395128CEB8BFEC3571D734227ADDAB31477CBC70FC7B1348ED1E51BD0D47
	E3FF8BF8C39FE3BF3F8593C647005ACB2D07421806629936482BEE7F5A1E613D
	41E204F0876801359318BF18C0A0432DD13F5461ADEC5345B4212ACE3067954A
	83024A311649098BD13F7AA74D066C28AF9B128D751F1B6DAA46BCCBE946773E
	D5CD5E4E8C62F111DEC3F5B59028BB7D2B6A6A2B6833EC5C8CDAE13F398FEDFB
	844A83A5691F25AD6A22954EC7C9CA7070EA7E7F8C40FA44D9FF02B062463900
	82300CDD647AFFF32A827D5BE404F841208111D6766BDCF62F08761CB8E96293
	925BA1117D222182AABF4E9EDDB08EA422B01E79085297B28797C3503BBE6DF6
	BF1A8FEA829AB877C1970582F26FD2100844D8C5524A6A029AF0D03810053C27
	4EB304FFC40A7B2A6C70D1EBEC7D2CD1442BC0EB557F967D58A33E99D15D79FB
	0460BD5C92000461184AB178FF03A3E34B3A301E800D0B59E0246D3EC73680DF
	EAB5E0F7008ED066874067A4DBD415A420A0E0DD557C408939B4641362D28888
	891C7C6A6EAB566D0FC9D581A7A840669417AD3BAB70A58920C8568998CFBB4B
	B25BAF6D3AD2A7FDA07997005D0FE855702FAF5028B2B798EF3D5BFF885C8677
	0AB74F00D6CB250B60108481403FF73F70ADCD04173D80AB6EACFA4832E03601
	7A564BB97C30BB430A40AC1463C96281FC3CBBE82A042061E67483B6DF4C7486
	116748659ECA0612EA8F47941076AC803EA375C995B158ADB6013F63D8C29C78
	575EBA446B71D07879B5C4A98414FB9639E6A2BF5685C5E91D659DF837E1BFD5
	3622E813801533CA01180461E8D8F4FE2736AC7DCD160FA0F1471349A0508A27
	2B203A50FB21A1512035ED6B28457E8D706ABB1B74324FF152AC2BB704C262C5
	AC1F49282B9AB0A558391ABB6BE41BC14F96230D86FD712A6406582DECC13836
	E1F5A254C9751ABCEB6E79145035D44CAFCFCFC43F51F3E2DE89E8E07A0560C5
	DA8E000641D8A175FF7D5BC5E6413B81FE7A724A88099C64806C1C7C029F4D03
	C357BBCA8BD8AC6C0F2643159772326CBD447722154A99A8A0D4E64432FBB88C
	5F78D8408FAF5D9818866E5273553860CDB5EB70B467EE415CA1D63DEFF2F6B8
	123419812830B9FCD750C18B0E4075C737FFF9FBAFE31D80D72B006B66940230
	08C35075EEFEE71D2A5D5E54F000FE16446863D28737FF03464C83B6B0C01AEB
	7A26AADB5F36DC98DC32EA56BFBA42D05E9C6A73DAB22F71501097365DC52C21
	7A5C6A05F550AF3AC3CF6545844AB629732C1766B680789C9D35EDEACB6A80BB
	F148E5920217AE259035AAF834E17A6AFDE4F9BBEBD02F002B6694032008C350
	44B9FF8575DAF6A9E100F047026129EDB66EE5072473DABBDE41C0818298F072
	819443355DE380E8CDAD84ED3895523CB11CB4FED057873FE87146A34563E941
	3DC0108F25A1D7D952691BCEA15D95B60AD0AA6277B5D9493A3D7128095A3D1D
	CDB2CCF95CD71B327D13E3E701F83F4F5CB21E0158B1B61C80411026A8BBFF7D
	CD60A575C9F6AFDF4623F485C71A60A6D1B49744FB654263D40896C43E2A128D
	CA4E74E295135909CC8FED12C88ADB90D581AE6E18FDA329C3273D009234B0D7
	4511B1A5A8932535FC140A45562A0B6E9DD2381E56BE316E82D93989B557EB15
	B9CA997DE997FB1B81F2BF4ED5ED118035735B0118846128DB60FFFFBF3376C9
	E910F6EEA3521422CDA56EB6A1C7E7FA157BCFB0058707370543B9413AEC4331
	6116CDE28FC4B5F14BB64913F087C25A0B7A2F13AF623467D2C14DFC053AA12B
	8693499FCB2E334A13926F0A1B2949E3193D6DF319A368848A353D911EF1BAC5
	66D48BAF811FD02DC54BF076E1F60AC09AB9E40008C24014A9C2FDCF5B09CE07
	4DDCB3279094F23A336C7C019A5A2121CFD2ADD039966024766A83DB17354AED
	800EDD0C0874B4BA28EEF9C1AAE5B4B4076EDC83238AA5F8544DD99FC44E0C2C
	10C7ADB43C1ADEA4005716DA03568DA9030EBF3321424FEEE060C26EEEB2EE07
	8F92D6FCD7E10A6EC7F733B1570B3D02B066763900C2200C5E08DEFFBE8AC4B6
	34C6F8BC1390F153BEB26D058084AB6DA2E5E8F33F1F4C2BDFDC0678B83383CD
	127552997C06C3B0044913125F464DDAB70CD16722140187D98FB96F233190A4
	B9F9AD4EAE9CC1AA50D03B0F56AF4E612EEC5DADAB91FCD6A47AE31313E083A1
	49E166FA9ED3E73BEC15A28D44F408C09A1918010C823050C4BAFFC0564B1EDB
	EB008EA007C9279CEB8210A030D2221FF3F7E6C2D812333534637AF7C4A0565B
	633DA67E61F1620A1F6872C23DE898AD2E05F31862CDF0C6C5DDD5DCE400CB3A
	6E11E01CB6D5A9327E3D44308258A2FF0556BAE10A0534AA7564CF64EA5E5D11
	529B6BF84046813FF67C3799831BF008C09AB925010C8230D0D7FD2FDCB11436
	62DB7FBD814E24C972CE03968FF9D3CCBE80902882BC90F0C1A4A9BA3E340675
	85BAF1517CB7990C38BB81479682B3EC1EA658626B9545C33235E2B69362AC43
	E9B249D3EE992BB6E22218E3450D7CC7E018DE2F2A2DCFAEDEFEE85F53E88B86
	4E9D470056AD2D05801004EE4A7BFF13AF360F850E1004F511858A3A8E5E9E0B
	421E232537ADBE748514904AF410D917732F2E60BD7E459F6E8ABF35928B4575
	831895300380224A5F33C81F35969C4D8E830A8BBF68208258A0F462D4076C23
	322872F46E8BC2FE6CEE6B5F4F030467E163F0A2FDC0878B21680BC0AA192401
	0C8230108BE3FF1F5CA024D14BCFFEC00908C9EACD248C5B4F491C6319C79E72
	98C5CA8CE8A9AF080B0C1946F373AC7AAF4A640823E21724E3526483778C58C4
	CA629873D5DA8487D293EAB8ABD3CB63BFB4E41B04E1C64CD509AD1403E0C600
	B29104CE02238ACD47F33E4DC51C3FF823E9F59BE8966E9F00AC99510AC0200C
	43ABB5ECFEC795819D493AB603F8ABA02036CD4B8F72006520E52F0060E09C24
	EC54AFB53B6B7AC824C2D93917736A19D34649FE3E2021AE9457B319ECBA5DBD
	BD9667AFEF020105743ED5DAE506940232A023040236B040B7A960DCC362F04A
	AA64A3EAA1C0E0870767653A3CFF69A87E98ECD0C10A7804A0CD5C6E00066118
	9A86EE3F31D4C59F13E7960510C24AECE72F3FC07B14AD8D26A64C2CA3B72128
	99F58A93182B46DD2F88A3FABB9A1E044E0F951130138C97026D9843B0A6A615
	261B5FB085A92DE945A836DAC6761BDC71AB5D811061F8DECE1B41A1FDC49549
	3097BD6DA1EB90F81FD3DFE7158055333A02180461680FF79FB882CD0B3DCF01
	5CC0AF9817209719201F18360D52DDF809BCA5B45E47CDCEA46142D87FBC9CC0
	BEF800E54530F03D098F25340538C8646A5EB3ADC15B0FCCA898A3A4E4AE9121
	5C27511E80AE5C1694ED27239C3B74AC321CFF6BBA9725ED07DCE0758687CAE7
	94F82E34B6C6EE16233E0158358324004118064A451CFFFF530F7A40D1242DBC
	004FDC9C29B42159E67540CFE6956E3A66251440CB526309D2519974DD272BEC
	F90C161B4C430A1A033B94572B3C8B6C74EB30389E07857A7F0A30AB0CAE80B0
	C6BC718E297B1306CB074C35067D7DDEB23B135B5C8DF9A32CC64F9429C569AE
	222A05378216A3A7EB36A6CDB88C4EB4C1F87E015835A31400421088D66EF73F
	F04296BE1982FDAF5F21CA50475FF722C029A8AEE7362A3263320B2A5152C2D0
	F52D0D02BE83E4B03E2082A618530762FE5CCE9E1A0D9F822876230023432860
	DE668AF2C09487B9B23EFBD0532C800C85057555DB34FA88C89049F5C6E3C119
	50C1DD9F547EAE3F65E0D6DA02B06AEE380083300C4D00F5FE0746A4F147550F
	C0C2C0C04040B1FD72330B92C3A292ACF21483FC126D13BF311FA3DA2D9D27A0
	49BF7AE7C4D04287BBB4442186E87B73DA4AB4B596C0CD9C07215180A5208FAB
	F0A8CFE0712989D5357846ECCDA2153D9B6098CC39A059A9188AE25A495B1667
	FEC781BEF562137E0560D58C52000661183AA7ECFEE71DD86E79A96307F05710
	B1C59826D9CC82005E73E9E2FA2BBC93F620874280BA22C3EB4136AD336639D5
	9328402D5C99D2679A5D79105F809D08D1E4BEA4DF552E2BC2D6703FDD5A157B
	5CEFC313C55F41ABB230B5575345F789532EC2CD129D4DE159FC84CF2F18E13F
	60A327FC08C0AAB9D8000C824054B109FBEF5BB1F24E4D0770021395E37E371F
	60B0249FED6DC5A63FA10E445D0E31DDA7093F894948FFCEB4A7844858C2C6B1
	518E10122399C445CCBFA9ADD5B262216AC2A7CE906B6D7B2D1823777E877965
	1E4D8299F465D924C5381AB40BC93C4A42419FA2FD0261D1D0E308B9FBAD7BFB
	0460D50C72000841186824FEFFC38668A7B87BF1E8D1C4780052CBC04B1784DF
	D7B7B885419508D0F4CE0D93F4A43A47F7481E00906E90C0F339BDBB2F257147
	B66B5050A7797FE493211ABC52F3D380979A44DD2571019423978ABE6C28C85C
	0ED83C04C70054E540F051A7E8FFE39741FC43095A02D06E26490082301054F2
	FF1F5BC6A43B963E40CF5C2820DB4CF3F11CE013729EDDA0E130641AB6393975
	7FAB24A60B3E7CAD4407BD4E710209AD7CB4F835A93FA6E89A928E1D878C86C8
	D0B9B7412724C1A50103A31A686F7507284D605B5363ABA27685EABE41794A52
	20516ADF49FF2730EB1280757349021804612854EDFD0F6CB1CD67BA70AD4740
	0693F03C19453C943775B599A16CF99B2B894CD9D10D0B8426D4DD2C64C26067
	07504DCCA07187DB352D7B386B254ABB756901CE8AFCF11ED48C86CF62A95693
	CB42E5BAED9FE4EC2ABFEF24B02697778CB3E3818ED25A534C292394EDD3C746
	7A1F39AF00AC9AB901C0200C03139326FBAFEB27E830555A360003127A0E9330
	3F9ED57AF36EFF583ED5F834972D6B9ECDBD437E347A79343D70FBA614100844
	C7F0E1E4BBD74E6BA473451428E795E936E807202E464975FD99F30DB669D2D6
	C55CB80AF75FD89F1C26030F0444E9A195FBB06DFBFC31E7EC3BF804A0D58C91
	000661180629EDFF1F0CB99EE5B0752C3B1B878923FD1A41AD2406296DF45977
	54ACFF2D9731E8B3F3194BA03B09F9700B28A6E87943E165751F6850FB8C9829
	143CEEC7929B7476EE0E5C69E7318DFE8518210C5D2556E5B8569D2894FEAFB1
	042ECC180EEB856010C5878F7522825E015835A31C804110868EB9DDFFC00B30
	DA4A96F9ED093491D4F2DA9D9B30AF3C9CFBA9356D3E046208E72DE70CD27F20
	352B15725431A3AC778DFA13C9F5564CB5F3325233BC8D62CACB14C0F4A1F484
	D08C5B6C946A13D6493B5B5933EFCC464C76AA340C57E0F1F527A4402876FDFB
	A08BF86CFC845F015835831C804110084A89FDFF7F2BD2C250D3F4EC034C0CA0
	2CECEC3464E8C282463EE04114FAD8464563A4C5C4A0CFC11E9A230A30AFD2FD
	D58BB9849B65F43A9C151F95121D50F2B6048C1864F364C60B99DA2E73508B27
	E1567BC09503B0A16C4912C6726DC1F54483F927DCBFDADFF8146E016835A31C
	0001108466AEFB1FB8A9ED41B5D6775D019121F26D1887D6B6A151C41359186C
	68ABB2CEC4FAA0A0CFA5BDCB5D73D10C819E0BFAC50091EBAD656325B3BEA522
	A7B6D734E1539736CC0D706CB751192E012D6287DF15D8534191E2DC1446997E
	718E22A7BEBF7BEF3ED61F5A7408C0BAB923010C82407440F4FEE7CD24127D4B
	DA54361616CEC8475C7639E6803146A3742D0CD6A1664D31BC0BA56B1C6B9933
	2E473C21DECB3B4C4A23DC76C6D8E329524159C485394A935AA567C9AC48F67A
	E8425B1371097CE2A4591AF49F52FD5640749DA1BF102B7EDA48DB3E55C65D98
	D97E00FF29BBBD02B06E06370083300C0451D4FDF74569393B0806E0C91B641C
	FB72ED02BC9ED7CCE7AEEFB740A28B715A310E4124D3F2F3CA0549B42502D496
	50B5DD523FCF43CF3876394CBF42F050009E718FD99B888E961502CD9A6213DD
	75B037043C206A38F0C75A93CA65384870F8933DC0B456071449231D51E8B965
	7F51347E015837A31C804110863A3E96DDFFBA0A6C6D2131FBF604463452DAE7
	513491DCEC7493C74051916E347BD9580567F181BDA253760CC972F1889DA016
	421DD482EBE2A29CD63ACB419656EA40C5FE49A3D0180ECDBFE673578318FDA9
	405E1B82488E005CC579EA748E52B485452CBD4B396C4FC47E3B3D1809BC02B0
	6EC638008420103C0DFFFFAF8DC8EE5078BD851F30810C30FB6E101BDC0D95C4
	D232323DF95A5E0EA9692DC82D8BA2F5562AFE32D99126A689019F0C1227B4D1
	668B3F500E5DCBFBF69F312D8CA79BC51CE3933610C624E152404493FA239650
	941084FF3EA481707246A583055AC8604CFA75FCBBF53F6C414700D6CD280760
	1084A1539CDEFFBE03A54517B76F2FA08944FB28F51C864674D6BB9E4B6FF448
	78F7C3FE0FA7A6B32465FABD918385A22ADD31BC07CBCE439659098594D239C4
	678C96588FEC15879BFCD8B451491108B63DB631018C086F117CAF4A27F69518
	C1EA4262B02870F6EB8A949E9728B7DA52FA50D02FA678EADC8600AC9B490EC0
	200C03D9FEFFE286147B8A847AE6019CD892F1E4A69AE8C63295777B42AF923E
	2AE905D24C6659F839A9301D9E74AC46DAD9E8D9823CA441B039BC3A957EB2D6
	9AB16B5D44EBF9916BA053110A7449A5FBF2449140A10B6A730E6940C95B4A25
	5D5DC866401A9FB22AE6DDFA41FF9305DDFD035E015839931B00611808E208FA
	6F186134B3860A92278F0872A0F51EDE28C80001F12E4451E958721344F738E3
	596B78643FEDAC49A09666FDC19CC793685376B454B2E645157D9514E3184A81
	2D5FB43E6F90218D1BD0CB54E51A5F825D3BA5F83B03FF2A1EC32D37B7C2AAD8
	072B6C286616DB2CFCFD4320787767E4335E016839A314804118860626BBFF79
	85D6F9920D7680ED027E14AD69D2E453452C3FC121FBA023872B74B26B04C93C
	1EAE58463BD09EE43E5005B79C8D436D4002BECA211CBEB7AD73C443EDB58661
	ECA8C0CD8ABAB5E22BE50B99A528414C0FD576096EF83539E10E10A1CAEC48EF
	170B00EA49B1D9DC13A39CD9D82CE1BDD33FFE68419700AC5B390EC03008730E
	F5FFFF6DAAB4B601A97BC62C28421C06ECA3AB0855F68C4BE6B46401ACE8A1A1
	0C463AB483C445D4F1F9E891AA6B23BDA8EECD5161A2309157C848D9F670386E
	93C1ACB20B9912D1AB4560BCF2EB534BE8ABCD6AA13E0F43C66FBE6AC240E4DC
	E8BDFD5911C5913E5B825E015839B71B8061100656E963FF855B129FADA6EA77
	26402208903967DD16C43F0C65A75D4579611C3E94AEC86315763BD9DBE5CF3A
	9CB68A276974A24BF6D56D37C3C66110504163DC0D0B11422ABE8533E2851AB4
	A8A93751D8F666F386D7C36F19F33BBF020533F5A230FAA1B014931C53D8FAEB
	71DFC3E4AABC750168B9A32400411008A042F5E3FD4FDB9818BBDB34FEEB1D18
	1078B8701F20F69CE119423FCE0E40B32D1DCF1FF826298BE99BAB935571A525
	19472D6D7C7408ED27B000170A558AC2E0454B6CE05FFE914FCCA5CFAE2F0FEE
	16F5FA8D2951058103477C38CE43C67781F6F6800FF5B0B9146FBA921C02B072
	46390083200C45E7FDCF6BA2826901B764BF1E418DB1A57DDE346216EF80C344
	6CDE90BEA3192376ADF564E30DC0BC5297EAEC7D8E210CAD1643C4CF2A998301
	1B567BF1EB47028A14AFA4F8CE941860843F86B54691CBA8CE88EED8B16538A2
	0541DB2410D9922596ECDF6539F7FF55C1C51BB00560E50C9200064118A875FC
	FF870BED640317CF7E416640C226B7A988043134EA07A7087FA2EE03F09D5614
	949E956305DF1ECBA6EC3D328E6DD54ECAD9EA45F6736E044E3CDFF40D5157AF
	A0573101EC0C0BB3860ED07A547C0FD1A8D24B76DD130E3AE1DD469D1FE52D61
	9B79675BDE3A2FE878F18B5105BF00AC9CC10DC0200CC44AF75F9906D94950C5
	9B05E017293E5F6ECBB916CE41354C15080166B9C34750F6DA1F2DABAA04DE10
	28871C141431A4406D2747BB1436B7B25234E83BCA21BE125E9EA6495BBBF349
	D44FEEAE58D69EB98789A129C64EF3790D98BD45E6AF79D4EF1F491E89D8452D
	6509C0CAB51D01088330E0FAE3FEE36A4193507580AE400F28796D7B802F5DAF
	E2AA18007D525177F47331A5C152D52C1EB52805D818C22FC9F4195CBED4394B
	441794FA94B68314704D3A4CAED068B2C0167AE182BCDBEF4A8671D2B96D6C84
	24F071A61DC0ECD491D2853E3FD021B7187A55A3D2FDF5C3FC9D497BE5A1B700
	AC9C510E002008425B76FF1BE71A0FEDA3EF8E10AB50047F2F6ED581B6BB5372
	8F5ED960499990EA68B37A098ED72C540E9F208284464A59A53B2CE8578C1B6A
	094A733F8B1AF6946E93B3351CFE1F8F0F40B917CFA81B6142A934A52115CDE3
	4A4F138E1B12448CC775D0DEF48F1C7004A0E5DC52000661200831F7BF719B66
	6723947ED703282251F298DD9FE15C924A0F10F745CF0F8FB4B146C82500CB9D
	E70EF22B3DAF1C48A50652D49358E6A16F082BE071FC40EB5D108599DCB28B01
	64330A4D5E48AF4AB588C210161335EDD8C749E75A54138AE815DBEBC39D8CAF
	4EEF90BFE723002D679004300883401DFFFFE5D8618153AFEDDD63C490AC7CB9
	92241455166A95425749C3BC361B85278F52975279805C46C8F66CF77F534038
	DA4A1B6935874084835897185927378DAD0ED3D0934F8183AC280FF3C204DB6F
	794734161A9A85E0A737279456F0AAF19F66418F00AC5CC111C02008AB2DD6FD
	E7ED0195243A81BEC50F0A3101CE4E4B918CD515E8D5169AD6908B2B139846B8
	D5E536B6C4383BBC6F4968A5C6E31D308E21B87FA1D25BA4C53A8D7C3FB73930
	9604F772723E117A7E092B1073D3B2BF83E0D7AFA5D00BF080EFC0B71125F521
	C669A1A0ED83B3B5E973FD02B0722536008320B080EEBF70AD7A8F4907700583
	E13EEE360F20CC98874C42100337ADB6DF0564738F1E3A5383726623DC06142F
	C592E520A662B6658DF25C7CB3AAC9002A1D2ECA7015C2E340B63CB7573C4B1B
	33AB7FFA8A1568595111D0D4C10D0D50A2DB11C642646143F1EEFFE2951A715D
	925B02B072C6380083300C14A4FFFF2F55688BCFE9D0CEEC482C5108E7D8C7EE
	37B80176BCAF2CBFF02AFDE41FCA70AA0E3133A3801818923D37534EC9941D21
	FDB2E34B43A91C18D4EC39C6ABED56F85277D41C267ADF18E2D66428D2F7D7F1
	797BA802F695F8132EFA46AA01F143A89972E56B595D7EFF2F8BFE89011BBBD0
	23002D6770003008C2C0A2DD7F636BE1129CA075013F884493FB30297FD34599
	FC818D0DE51D1A672899A4F1EE417391DEA8F96461078F2C55501094764AB115
	DB461FB78AAAFDE64E38C9A59967B756A8EB66B4AD904F31B312A09985028085
	88B27B55E6F9CBC76AEA453C6F8EC9BE662AFFE1483CEB15809633BA01100681
	2836BAFFBC261204DE852EA07C768002C7BDFB32B4AF20B0ACFBC15A2278BABE
	9DBE181E31269F3EC5139867AD0861AA385D4A6A0E3ADC560CBAE8AA088A257F
	151B45480D859B1C0A90D97D331D4BEA51BF0638F2CC0BD9D19D682D40B586B9
	D9CE2A9AD2156D6D3FE4B54EBD02D07246370082301035B4C429DCC011DC7F12
	DCC098D82095EB69E200FA43F8E00B12AE85BBF7A5A498D920799A975256AB47
	DCB54C96369A8D49A3625E83FE21BF33EFD84249D4D214BDB1800AE14A045A9F
	E7F04A1129119ADD2B77C5E7155E9913BBE2885608A1147C0D7D8C1338AA4680
	1F5680B532F6112541D0ED1D7096D3051CDF7DAB4DC99A7AF3217ED2E14B0031
	51B10606A67E1656565129D94F1FBF820EA4FDF71F521A43D64A83F7A480CEEF
	8354CFA095B9D07DBF902E0F287A585818619B59FE421B86E0E20ABA580A72D8
	032B33B8C4FF035A50050E6C60C1C20A5A5C049E696784CCCF404E890275E4C0
	4B4DC087E780CF7307F71C98E1EBE098A1278783EAE3DFBFBEC96898AB997BBF
	7EFF1E9EF651669C508F31A60A0008206A1641A0C301406DB8BFBF80E909B4DE
	ED2F237C7014B6F916DAE600EFD26302AF1E871EB608AE1921CB3E5941BD38C8
	AC24787415347100D9A201D9A1C708DE75C4CA0A894BC8F19FD03E2D68B6F81F
	13F4D40348E501D9FD0859A9F807B6DA197CB21764CE199A014131C4F44F4A56
	51455BFFD3D7BFC0AC8039F6408B3A0020006DE772033008C35084AAEE3F3081
	F26C97095A16E0809404FFF2B53C7D7940276A891D0D00A27B0E91DC3B68B5DD
	D286F63B7971724D9A52DEEF760B5FBB68C24EB524EC01BFE52CDFC0348995AB
	8D96040FD7FA30CC2A342FDB4C8309B85D71CE08B52E617D514AC60E25D17511
	C032B4C5619E6FF04F6CB0CF23002B679003300802C18A4DD3FF7FD7569A6520
	B1773FE04134C0B2C35646CC990D32D6B6CBCEAA358CED893D3EBEFADA6E4CA0
	F4F80B9A00E40A114181A31FD0ED4BEC69503408138F1245CBD21501AD78A5B4
	5341952A9D0FF73B0CEC3343AFA539C77871F5A6893A4E4A134622E2F34767AC
	6AC4DE84FC09C0DAB9A5000CC2405088BDFF895B9BCC6811FAEB1522C86EF691
	C3CEB8AB5BC68124105A997398DDAD6F6DD2ED35372C9D781F9D90F249D27295
	DC5E4A9A464F07C92588E92E2A012BB931A153191764586C33BF7F6833199CB8
	55012A2C351D78D1223115F8D2977AC6A7262D3BD8D87641EDD71C777068AF00
	B49C490E80201004A326FEFFC13AA35D0507EFC81D42C884597A592AD2CBBC97
	1857B8159D4A82594052CB946BF4FF542705A03807993AFED16D323F0E554BB6
	E259F1970F10BF6B4CBFE180E3568AD3FB5037EFA9299E7CB7EEC1FA07032DC4
	ACF323D205311749D6687D23E40DD50793FB4F20F6AE47005ACEC00840188481
	55BAFFC6452FF9B081AE5038281FC2C728E21A20E0CC2E720C2E1ADB1B8BA1CB
	8280E69D534F38046A6DBB36B9A58BEBF0DC0AC38E2ED551C6D87B1F0381E11D
	3A6F1D2805D347D6E1655E7384D44D4049DDFC406C5493B1A4EEA4F836C7E6AC
	C19A9B953F05E015809533B901000481A0D27FC90A660F8C05F8F56704C3B13B
	3F17324A702F66D575D5554CB9597274798A80B0C7284D47902F90BD3B252B65
	15EF1D5635C8A98D4F7681536B31863D1DE10F3ABB660DD6BB6243030A141223
	1933B1650E00CB2BC16949195EE7CA4E20DE4BFBAF17E1FDF1318E00B45C810D
	C0200C4A97FAFFC32AB340BD607B4013532A45E14B9724593DA9214535B06AAB
	B73CB6E2C1F10E757687230D3D0D18F771BD620611E9E692B30ED1C110FAFE95
	29B50D503E6F3BB42B1FBCF6E54A67AE9D58694FB2895773A6ED8959AD3294B8
	BB2D5151DF96F67AAFDF9F10F00AC0DA15E4000C82B09128FF7FAF99325B68B6
	ECAC572F2644026D29275350778F7BC08EB279410AAA4754EA00FC0A52E1BBB9
	C55F9802DE2DED85E21D8D29BBCB557E1BA55750DE465056797C6A0C95DA7F80
	C91CA60421063B5ED657A9F74DD1BB88069B24CB8CCAAD7C291BB4681DBBAAAE
	CF46B31F278CDB43E71140D4CC01EC6C6C9FBF7DBE73E182B4A4181B1B0B64E7
	E37FD809DED0F17DD0E5239081DF3F90AD76A0A219B298EB3FB48504B9FA0A76
	142F23F4B831F8A905E0BD8F2CE0D5E8FF6147DAC09791401B32E09D61E0E14E
	70850EED7530FD874432F8C050C8D426748331282621671B8087F0A03D41ECAB
	B218A87A620D4000D6AEE00860108415EDF9EAB5FBAFD701FCF50BA509680770
	017D88024988EB16C2474A5E863EFD3E8FAB659CD188958D12A59E91DC702434
	DA9074F261A909D8468DDC9741ACCBEC9C8F8911F629930D956158B405500AB1
	8F6ACEF2F9D68D8807984D68A1BFD9E022D1B809C83BBF327BA5324F8636B4C2
	5CFA8F452F6C055E0144DDF38240D793B0B07130318117D8402E7100B7D6C1AD
	3FC87024A83882F404FE83CF58FF0F3F4D05341A09DDE4083964055C90FC878C
	1743B61380671B18A103CCF0B332FF41533E341A808520E80408C87C28786419
	5C9FFFFEFB0F7AAE07680925230374AAF91F649B1FB03C6363E5B875E128330B
	978C183F07273B23520F1FBE3682EAE3D20001583BA31C00611086669B5113EF
	7F41FF3C805F82082D6AF47B375802247429AF9D031C62F0959B4BE172FF180F
	0A527804961BEF331519C6246E9C69C121B5CC6EE564B841AA3567DF3E3B17D9
	5835A9892FFDD6DB5B8ED0220CA5829E2025484D935300E44A7CFF6302700D13
	C5F157EDDBEAADB24C736B8CCCFA67C87457C29700AC9D4B0EC02008446B43DB
	78FFEB5669E6C3A2AEF5088A6618E4B1F500B8EF260115C04955E17A109A7201
	7B65D39D40E6C2A7E78551909231DF306D8F06B3D57E81BF2126C709DB5A6995
	C805216816F8ABEE3060556CA0F529B3873DBE5011CCB385F0BB9AB1818B793D
	37B5EF7BFCF14C8B1BB1717D02B076C548008020A8FAFF8FEBB404EC5ADAFC40
	439DA8045AF900A66ADE5916221C0241E8C7934FA90DFD87C87CA126B96B7610
	DD8F70B5529A15945020D54A1D047ADD53C0C4C9D3B56BCC12679017D6BD25F4
	B9189D2083A4BF9A1E23214472908347B19EC0C051F5CFDE86DA1CB00560ED0A
	8E0006419888FB2FDC4AC524F8E9D70DE4042590C0551C006044E0CA28488F65
	AAA74D0069E67CADF0A7D7123C482A295509CEBEE47D3995C668A60DEF1AB6C1
	8041D7D88A4D054AC957BBAA8A18C779D5A86766703D538968349525F6F1B6E8
	324C0ED4A55DB5F3E5B7FFB37317882D01683B83158061108632B6FFFFDF96E8
	86492C3BEC34E8ADF756B1FA12AF8F76C2AFEB35C59786C78585B459A87E60E9
	75471AC87233982A7775E3B858A00C1F8259A3D5D52C3243D145BCA5AD107AD6
	681840081C07BE586FD50E67642C209DF07D4CCC913C57115A2400F54C270225
	2760B274C0BC04019BFE628F00AC9D510E803008439DF1FE173603E98311E3D7
	3E3CC11220654029D78ED177BC92ACB2A429D3DCF26E0BC3C9C9407735DD47C9
	850A461CADFF4998EA86A09DB94A6CBD820D93AAA683CEBECDE090F312BB2FA1
	0864B740A479DB21240F3FE8E7136579A47EDD3DD18C2EDE34A45CDF945C3115
	4B28820C668B78DD25D8672AF923043D02D0762E2900833010356D53BCFF790B
	B6F34911ECB64B37228832199237C7DAEDF5FE77F39CF8E74D2C67B2BCDF989B
	40024F14581B043233800448E7D48A2654D8D76C304A45528D703AA7C171A88D
	E869C8512EC78264136EBC53333D8B647E36B4FF681D991C218DA5EE6194171A
	BD911C6E4276E0BE334F7A7B9723B2A482A717F0872D710BC0DA19240108C230
	B015F9FF871D71BA090E07F5E40BB894214D42B27FDBDC1EB3D2DE8E4FC03554
	72AAA4CEA1892E5280E304C63775DDDE4CE63482B75074B0C24A748DE40DB531
	9A5D006FA935CA3254699318A7DBABC2E834A547F7249329B66E669584C01960
	A96F9135F9F55A1F03337741AFA5B0641DCADFD5B14B00D6AE200760108431C2
	FF7F3C30B6E5A2ECB69BF1A824404B69DCB9E56B087264850EDAA8842A6B5FA5
	6B137656FBEAA41C4F777852395C906C3FA2571C0B725951BD7CC994F3B29935
	BADACD8203A5E061A30981EF531D60A1C1086612098E85F433FAC18835640D0B
	49DC17456D9369D5EF0CE51280B5734B021004A1A836ED7FC32514F7C0D8649F
	2D4140791FF797D5AF2EFE531FEB25A8EDCF2EFAB3217A133BAC55AEA4F31417
	3B4B370A79A0E4857D0DD80F5BB7C2C00D52DDE3A46FA529397D4DCF68A29AE9
	7CF46054B987E7244A26BEDE262C93FEFBED76833D6D1939F31E55352336371D
	9E7B13C8255B024F21FCE203D0EE250063579003200CC21C62FCFF7F37A6B4A8
	043DF88325A334A1B468B13E95E58B125BFAD9A6320DAC2A582869E34606745D
	18E1BCC23BD03D6D845EC0C47963C13B23CB252C7346E42C08A565DF50B1E679
	3608BF4CF31F989BC25223040EE1D2CE66D295389A16164BC153FCAF7152C266
	5C0C05291B4E3D4560D673B1815BA1999397DF495AEF9E91336F0E01E83AA315
	8041108AD6B6FFFFDF886C74AE812CF710043D04C655B23C3E7139357ABACD29
	974DAD2C5BEC5551D6D4C0107CEDF224F7A59FFC464246454152037D7A04FC03
	2E4D09AAE8AAFB5AE103D298C8067EFFD29C84032A193A146BE44560E6CF36D4
	BFA3F4697DAA9731B6F5D8BE84C87B5C756986C298BFA018AD773AAB8FC552F2
	D62B005F67B004200802D16CECFF7F38B08165D191EAA8072FA2C28395FE65CE
	B599F4CF5B4DDF608249C8BFC8F54794AB47F12020B2B2AB97B8DEDAD204B759
	F709421D59165F7598E3A9F9FF0C9A53664D34966A04A5017E7CE6B2FF761541
	780F90418EEA22990CCA1A32D07ECC4420503D5E95D9F5FADDAE90EA316E1BB3
	0E1F0128BB961580611006636CFFFFB93B68A74974504FBBF5D05028A5BEA239
	27F577F200A6FF3B257609E6683D09BCA851AEA4959D697FE3A3572C0AE2BED5
	A1DE4C45906A59C521A9276C00428684C5FAB8969A4BD757C1A18084A39AAC0F
	CA720287A61C83261688C7EC36E56731812241997182B03304BCD18A533ECF16
	85B51DFE75755B52AFF7BC02F07505360083206C26FE7FB19685B62C266CFBC0
	080AD2DACE7E347EEE9CAFE07B89B4230453EA9206BABFEC26D3876225B165E2
	E36058AF9BEE2F7219B0C1BBA64A2867A4A18E4A880961E585122D08C3BCB2A9
	2C49D8AC1609492266119656061AA20483903E5BFD9D4C6CA1459AA30CCE4D6B
	0BCE547B6A80F1D75620FBE3E9B5653F6FA45B00C2CE5809401086A172E7FFFF
	B0C56AF322E700BA32303094344D937D857F56563953D8FAFC796D184D8A2CF3
	204C3124880CAB32451C24707A6F4FA27339C84950972E31DD5C759E5812E855
	DD5888F641CC62DF1431196C97661B2DF87D49458D7581CBA816796311D38366
	E354280CB4BBF6FCC59BECE3E17E3BA7695D7A4731717809C0D715D8000C82B0
	81FEFFF160DAD6C598E0072A865684B65709BD52293A02BBAF897B40C127709E
	0E204542C0CD7BC1D661846A830EE12900955BD2411418EC912D67047B555212
	AA24F34111813988361952FFC784E9DF23672A6984BABAE61A6346BDD65CA0CF
	50A5E0A0F1932C970CA0A56FBAE95542BF30978A051DE0FC0940D719A5000CC2
	309431EF7F62D78EF6A54CB7EE5F445034A66932FE1E8776035BBCA5198D1B26
	FCAAC29DC1C8EAF182D42820320C189543F672930079CDE2A49DBAB91AEAB15C
	97BD937A3134088ABB16A3CCDAEA7E9D58F5256D8DD0EE747DC5AC42B2E4B73F
	0E32E41D33E3503066CD3AD0E8A3E4DDEA916BC0F67A4C5F7CF577635A14730B
	C0D719A80008834074B2FEFF73838859F8BCD158AB7F5039F5E96DFFC77F9318
	FD4A34D3DFC99070202135359DD3FBA22972166445C7A0F8327BAB16AE5F7EEC
	61CE157482C34F252F4DCD2766E11CDA33FC2C27F922178C6448FA0938C94453
	E618D79A9A124F06F8EAC7654285877DB5DEEBA2CC463BDBA96EE446EF1DA653
	91598C09565AE81680B033C001108461A012FEFFE2C598F6E63461C12F40195D
	BA76B3A598ED836AFF9CEF6096B015A2D8D3114CF07FCDC0B96A98B4A35766A1
	760B1CBE19B2DC4EFA4E94056BF2A03E2C4EE66AAF4CDE78F674D07FE1AD8443
	495A19E9761DB6C962CC542C788D80D6B098C3008FD70CCC0EDDABFCE4BF40DE
	FC9DEB29AD70BF05E0EB0A720004619823F0FF072B68DA8E29A8DC3871201B74
	B44DF34A6BFE3304BCC1A876AC6A4F3A8BA8CE625DA1524FD227028B16F26561
	FF18B1F0958F9E7082D23AD2236FB9152B6E33303FB864715D8351A86D7766AD
	85EE1FED885748E97C8257E01B61E6BF7DFA49796E08ADCC7C480E4F5419D4B8
	CF1CC3351AFC2CF969788EC5250069D7B2032008C3602FFEFF7F0175AD1A4DF0
	E4950307C256B6B2F62F23F6822690F16A2170F880827C8EF72B15C250E3B807
	7F38AB9AB5069E7CC0D12A33B15BB2E185BE910A8786793E30BB5117169D698B
	0847D4800CC88CDC8B344C7E1D0138458D75F9269EC26714B69C97E9797A770B
	615CACD6FB0E417F7A10C61F9DE7E5397E31654B6D9BE53AF7D90560ED4A7200
	0461A04D97A8FF7FAE82CE1488097AF3CA1D5A66FD599E0E4397075521057515
	287EEF9A42B2BBE2914B0BF47362D569172B7D3931878E84BC60C3F9B1BB28BA
	AC2C9AA31A90D35A19162D19128D416F8CF0A6A40789AC9A120105B811998EBB
	6C7B32627A9F302DBAEAF077F7CE8640DD39F2278E73A0404F0474BEFDAF5FA5
	F9C9FAE25D2E01583BB71C004118080A4ABCFF7549A432DB8AC6C79F17808484
	B22DD3EDCF74341A884655BAB7C8E8CD5DA219562E1B3E8776355146C5318111
	5290FCBA2797F254DC044FA5706345A16C4488169C85D8977C06A0BEAFBC1E52
	58210F548E2591029A6BE90C70BF853997B904947174579AAC9031D499AA2DAB
	E8E9763DF7676CB965425FCFEC6B496D04A25D00D6AE6507601084454DF6FFDF
	BB415968C946B278DBD9E84182F228EDEF7C4124C2551E933D57E774DE78CA5D
	03786B44E46A0DC72C1462FE87126EE0464D8795E4C5B2A5142BF5F1E047AA11
	CA189368F73CD8447B1F84FD5271EFB2482720DCCE4F9A9C6FBD55DAD878004B
	E204EA8F39AC5F5F0F847611E32E50FCFA4A5FBD05A0ED5C52008641201A2C52
	E8FD8FABD28CA321904D37DD266413113F0CF37EB02A88943949B51A9EEE350B
	CF6BC1BD3EE7D4AC76C507402298DBADB8D7761D4D3831F9844EEDC205EF4B13
	799AF136F261E11F116E1F65870CD7322ABAB0118F3E77484209ECE81E6950AD
	C562341BA6D931E9FE7DD248AB6520F17D783A33600FC32B006B6790023008C4
	4028EDFFFF5BBB5A636645107AEAC10F88089B4936FF26E50782C14A8B8E7610
	118EEA0532A66521C548EB23F591347B34118EB2840FCB49A440C79E67B36083
	5E7B7E66C11B09AF12CF3966AD7EEE4AA14C965B2133345300395EE45B0147E7
	987139B69ACFD63060BDC1158AEDE47C872B1F90E01580B57349011086816803
	0ADEFFB8DA18994F75513782BB1EA0D0CCBC69E6BF4E79C22388AAE35CB7A8F4
	6091AC60B8F1EB4E9ED5993DC3DB4A461EEDF91B832A8DB2DB4C3E32C4F1282B
	1662A76F617F09FBC125EEA2434BB047D281146101BDCEDA528F456AE4059CD9
	9692C86E36B294FFCD7A15A75F8359F3959FCF9700B49DD11180200C43F1F870
	FF79C15693473907D015E02894A4791F6F80D3AB7C0BE7B68402B6B6535D82E1
	B21A881773068CBBCBFA143DC1B3369472282F510FC439909375724644A7DA99
	13AAF63949860E59E61AA15BA649487DEC6B6E100268DAE8559AF03C7A2B870B
	2229E6BDFDCFF1EE00FE9892BC05A0ED8C72008441186A32EF7F5EA315A4B478
	02FDDFC7B20F600D7DFDB207D0E88BAB5E0AE751D336353082D88684E77D205B
	F6404E8D321BA3597BFDF3057279B2A440640FA9EBC3581A2931B82C31A94A09
	844C31DB52CBBF219351FF72EB20A805519976B7DF172105A9A14AC5C87941BC
	DD1D0DDD9F24C99717F4D37AE823006BD7B2032008C330247E80576FFEFFE781
	6693871B9D33DEE1CC05C296B2B5DD4C144444929CB7FD9068B829F19539273D
	40347F13597C162DD8152EDC747F5847CD4C1DD6E502B91A112B76A40FB8128F
	6970F25AE1A88DDEBD299482FF6FABE77997652E01B102B2ADA027D040B507A7
	D0AB459511F6B7890A43EB6F3CA261B97F1C4C27483F02889A39E0CBE7CFFCFC
	FC72D62EA03321405BE2400532284BFCFCF1EBD72F20F5F3C78FAF9F3E32B3B0
	F2F0F08B29A9810EEE068A7DFFFCEDEB77C83DBDDFBEFCE40205D67F26C8E53C
	9015E6B0F372219527A483045D2B019E71FB0FD95D016A6231FD876EBB801C03
	0AD9D40DDEDEFA1F321BF10FBA1901BC60037EEC19E41E3FC81145CC8CBF99A1
	5B1618D11B783400000144CD3B64DCDDDD7EFF813616FF8103F4CFEFDFA043F6
	FEFEF9073BF60A9839800959525E49545A0EA880113A260F0A431D230B2575AD
	BFBF8131F60B182F3F7F7EFBF3F32790FDFBC7CF5FBFBE7DFEF8EED7EF3F10B9
	EF9F7FFFF9F719BAC7037CF52FE8BE37265656702B80053C220B29DE40CDAFBF
	907BE3197EFF064D7401E3F0F75FC65FFF40E72DC2D64F83EB803FFF2037CBFC
	87DC7CCE88540CE11D8DA710000460ED0C52108861280A8E206A19A7D39D20B8
	76E5C6E33B77AAA0A93F4D6B6A47EC01A6CB2CF3F9494AC3EB720EC87918AC96
	CB87F7F7696286736E1C9DD9EBD975DDBAF5EFDCB155A118EBB51F781FAC357D
	DFD2B1C1AC7A68D2BF2C678928D9BF5C6FC7D399418182703116401C4803AA4C
	E4A70ABE293611351CF994CCAB4274039270E9D5806CD3BC465C0BBFFC1E7C56
	F5D33FA933536E91897F28DEA2B89A8F00A25A0400BB42C07206E8B8EF3F7EDC
	BF77EFE1A347C03C212323C3C7C7078C0176106003ED5964061D15038C003636
	20173CA8C6CA0A2481F1C40A3AB38919733506308280310134FCEBD7AF409526
	E69690E39680524051602C02C9DFE07802862F5021301E80D1C6C9C9ADAE6328
	2625FDEB3BB0AEF902D4FEEDD37B665656607E60E6E000AA61FCFBF31FEC1C5F
	F0FD7390D96766C8BC1CF4226A6C239DD4BD48092080A81601BFC1610449D7DC
	3C3C020202C0100656094242421CECEC2CE050864615B0A9040AAEDF0CB0D596
	D0B92770A1C10C3A7392098C410478DF1F0B84E4E2E2025633DFBE7D03B241E5
	0F5802682C270707F2295990760B30948CCCADA0E754FEFB0B8C04603C328346
	ADFF25E4D701D500F3DC8FEFDF7E02D30B30A37CFFF2E3EBD75F3FBF03A3EFCF
	CF1F7FC0878F322235FC21A7B6629DA9A5100004100B958A9FFF406F40220048
	C216913133838313184CC0F4CF025EB40C195F0495FE90A3A7606734434CF90B
	3DC8013CF50B6A2CFD819806E9614344FF432E1C40DA41C402036CE0F880B081
	2CC8514C402780B60E82B670B283AF176610159704CF3E32C1230C32A307EA36
	FE05D9082439D83990CF8B80843E3C37507179284000D6AE24074010069AB844
	FEFFD14A7A14753A03C85D7B22909042693AD085E5FBD683C0B499B93B569E33
	ACC0811317B8883DC49D27ABC2CD14434B016518CB5811727D81F64D077A204E
	BE05D5FF583B41870A6DC8C536D44F1783A9A5562B0E55BAA48644D5152AFC11
	5B10660EDE08DD30B2A7541D668A5FA278C6D8D042FA2B51E911402C14863EC4
	654007898989018B0860B803B90E0E0E409F400A13780A82143E90CC010C3968
	52FA0F5B40073B291BA2057C3CC35FF87131905D3188BBD960E79723150BF024
	C908AF3161CE031571A04AFC1FA855F60D622FE844A67FFF61750964B8102802
	8C12337373C84678F0FAA27FC8E53E24E1FF0435A77F502B07000420ED5A5600
	0041181DFDFFAF2DA45A8E8DE85A270F42B37C116A5F17E026661C7D44F801DD
	D3DD897B69FEA3D587FA0B49462D122730303C645ACB6EE1DBBBD41BAB5A7E4F
	D453C05C2ABA9E4F813F7D9A81311FC3C6BD603049AB92ECA4B7341BA0C2C4C1
	0C0276F3FFB5E4164054A803E08EC06C9FE13A671FEDF023781043021D121C10
	125C79FEF9850190D52097D1C89909797F0B6C3C9C11761B0333C452C8FD5490
	7A02D2EF83D43D0CE0F3FCC0F9041AF4906618B045676868A8AEAE0E6403C521
	7140C9518A000144EDE3EB498C333CF1841649C8A915C2F80303908409892D78
	AE82672648B9072131E38911A96A019F13F71F3440025E170FAC122026004DFB
	FCF93330AC353535555555C5C5C581D91D52DB3362BBEB872400104003130164
	4412FE9C043FD5105ED0C1630B1E0D90580192C0121C18CAA02366C100D28006
	32BE7FFF0E69CE41AB19B0E2F7EFDF03DDA0A6A6064CF5C07A8E878707DEE882
	CFD250E24D8000A2D5495C8304A01DF00007907C03892A784C0093F99B376FA0
	E76F82CFC9BF7FFF3E30C481091F98EA797979E16D5CF8AD3294378400026898
	4700913104CF3AA00EF3B76FC8753EA4D30E097AC8380475EF740608A0911E01
	030E0002886934080616000418005247A2A8B0DD7B4F0000000049454E44AE42
	6082
	]]>
</Picture>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" length_in_bytes="142" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000000C0000
	001102030000009453A53100000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D866000000294944415408D76360000151209684D2
	4898353484816DD512380DC769290C9233A73084860680740300E7DA0A3F5360
	87700000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" length_in_bytes="148" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000000C0000
	001102030000009453A53100000009504C5445FF0000FFFFFF9D9DA1AA7CC3B0
	0000000174524E530040E6D8660000002F4944415408D7636000012D20567300
	D2A8986BD50A06CED04820BD124C73C2604727835A5A26C3AA554B1944434300
	1D930B4AC81F76170000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="10" length_in_bytes="347" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000710000
	007F04030000002A5A309300000018504C5445FF0000040404FAFAFAFBFBFBFC
	FCFCFDFDFDFEFEFEFFFFFF39AB6A180000000174524E530040E6D866000000E7
	49444154785EED97316E03310C04753FD015919E901FC44F489B22085B37315B
	C377D47E3FB095AB03AEBB60176039A0A8512196BA9464965227B0A6C90324F2
	6C4F7E4E3E9562E8F0777B4F69BEC390883BEA63C88E74462DCBCA92EB5A2992
	38ADC8BF2352A4489122458A1429D201921CF4FF7698CF3F75CB92EF789D56F8
	DDC1904CDC70E6ACD8B13B209BF0D399DD1D6CFA1CE99E3BAE4FBEBE34679F83
	ECB9D1733A3DA7E38B9C3362F6FC673EE5533EE5533EE5533EE5533EE5533E4F
	76C9D4B7FDFAC4055BAADE465CE78E141123537BE0D8CBDC7205FF785869BDB5
	9EA9D65FEA3D3FBECCEF1A08EBD7510000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="11" length_in_bytes="393" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000A40000
	00A60403000000A653397900000018504C5445FF00000404040808080C0C0C1C
	1C1C292929333333FFFFFF1903E4410000000174524E530040E6D86600000115
	49444154785EED9B416AC33010453537980F819EA7A09EA0D07D7A03A145AE5F
	258B7461A3C6F6284ECD7B2B81E1F134D816189CAEB8A5AD4C3CDAE89A6A14C6
	A0CAE8590EC4A344C32ABDA130AC71DBF5DB258872DBBB2956294F92472A4D1A
	B071941350A2448912254A942851A2448912254A94285FFDA38E7C9F8D97DC90
	94F3C7F977F9DD56EFD229E7AFD37DF9F9E067BCBA20F3C1CABA7096D1952685
	575A1A30CBC35496F8CA125F4925955452C95B9D4A4EC8FD2BA9A4D2A4F04AF9
	0BCDB2CC638DD595A9C3CACA4DCA1A5F598F5E49E5F8FBB21CB5924A2AA9E484
	A4921392679C4A2A258FAE34FD87597A23BAB2A13E658EF4746CF955DBA3D2BB
	FFAEF88A1F5AACA3D4DC55FD69D472C6568E9FE50F0961F660252F7219000000
	0049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="12" length_in_bytes="1128" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000A40000
	00BE040300000049D6B98F0000002A504C5445FF00000404040808080909090F
	0F0FF4F4F4F5F5F5F8F8F8FAFAFAFBFBFBFCFCFCFDFDFDFEFEFEFFFFFF2C217D
	3D0000000174524E530040E6D866000003E249444154785EED9AC16ADC301086
	E5D007902FBD34813C425FA50FD447D843EF3524E7D690DE57B07B6B1B0F58B7
	B535F32E651B939FC2EEAC2612252DFE8F82FDF83D7C8C58903BC637CE98C679
	A7666CCD48EFF4B42FC82566D59605B3FCDBF1957F533FDEDFFAF605F1C79CFF
	82EBC1169A98FCF97935AD733762CB4148BC6BDAB39A7B3352129177E775F7F6
	964C93E0C3AB2053A2DA48A140D5904845E48A5C912B7245AEC815B92257E48A
	5C91F4BF2357E48A5C916DEB6B239BF61F90E8984AC8C0030BC53D08A5C8243F
	9992BC135F0D29937C911025C47A48FA98586E48B6B7B590DC4FD245D9B0DC57
	43CE92E4E67B62A1875AC8C710BE0509F298F6D56639A5EB241264E6B1040927
	9348A4851ECB907092DFC912DE9522E1A42C8905483829472797241E0B907072
	2F1B9C7C2B42C2C9991620338F254838D93F1FF4F2A904092729C0AA34162003
	0F3273041F6E9A91707290740D18DCB423E1E4261229352D48ECC90416DC3423
	E1E4E7BD740134B86947C2C98181829B76249C9C770930B86947C24909810083
	9B0A32734F2A6E0269DB938A9B401AF6A45A1348E39E54DC04D2B82715378134
	ED49C54D206D7B52711348E39E54DC04D2E0A4E62690054EC24D05697212890A
	5277527713488393BA9B405A9C54DD04D2E0A4EE269016275537812C74126E02
	59E624320259E624720F6499934818812C72123944204B9C4438D00F204B9C44
	FA4304B2C049845964D49170323343E0A823054E6625F5734FA38A8493B94C9A
	39AA48389997390D5D7FA7BFDB809379E949F6A75F97F0F014829379A17E33EA
	124538999574907824BEF5BE3D1338999BEDE8F43414F2B5FC4A3373BCF082A9
	F124732E710E1305797097D250764B967074526F79E5BC4BD9AA73922EA0A456
	5372D30947A7B76C7E9F4FF94E76DDE87272952BD1BC4C5269D9FAA773C94D08
	974AB6796EC24989EE424BEF9773B8A93B19329C849B0627752FFD729EA4CF71
	72E79CA1A6C149BDA5F3CBF954CFC9066E1A9CD45AE23CD749D3347BF5EE4E1C
	F3DEB236CFC3747CE1EEA65DDE8BDBC6A3260DFADD9DFD2ED83FBB300B6977F7
	CE65B744CD40FADD9D3D4BC830E977B72598A676772BB1BB89BBDB5EF38D84D3
	7B32A1A4B5E644F3C93D49D893E669724FFA9EB4D74CA7F7E49D19A8B8893D69
	CEFB85C994B1278D35D53D59EE26F66459CD4E304FDCDD4535B9FBD349ECC902
	3703E94EDA6B4ACAB8BBAD6E6638699DA6EA64D1DED49DB4BB0927EBD49444D8
	93756AF642F88F53A9E69CE064A59A5BDAC2C93A353F309CAC5593E164B569C2
	C96A35039CAC5633A064AD9A8292D56ABA7AF1AE7A1A947CD53551F255D76C9A
	EACCB67E4B205F75FC5AB3246BCDB5A6F254F217B0FCDB74085994DC00000000
	49454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="20" length_in_bytes="211" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000690000
	00220403000000AE33EAA600000012504C5445FF00000404041313131C1C1CFB
	FBFBFFFFFF72C3B4590000000174524E530040E6D8660000006549444154785E
	EDD4B109C0300C44D17326B037D10A194188ECBF4AC08D6DAE51AE0818FCCB83
	A752F8B5D29668A9C0B50E5D3D734E4BA581D5BDAD3AEA28CFAAB69452DC50DE
	CF7C5663980A28CA14155094292AA02853544051A6A880A22CF3F979D8A61773
	181B85BFDFEC8A0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="21" length_in_bytes="173" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000420000
	002802030000003755C44700000009504C5445FF0000FFFFFF0404045E8126FB
	0000000174524E530040E6D866000000484944415428CF636060686240021C0A
	40820B5904CC59850216605583690E266840E16153D3D1816E1707C3D4506490
	C0A08521B2AA015D0453D7A8C86016C18C412D227461A41600D5E3C3AD1D8BE6
	C90000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="22" length_in_bytes="266" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000004A0000
	004A0403000000EEFEDF420000001E504C5445FF0000FFFFFF0404040808080B
	0B0B0C0C0C1C1C1C2929293333333434343022012C0000000174524E530040E6
	D8660000009049444154785EED964B0EC33008051137A8DBEEE91C2E3D4B6F5D
	27CBA0F853A2A80B6663598C786C6C212BA6E21157C20BBE428B895EFDB9E6B0
	8630D3CB2AB4D0CA16F7BA1D53B650A56B6102D6B114C612AFB4D24A2BADF8AB
	C57E4F2C2C2B50CFF7E7E867BA8BC75B8F13ADE7949556F9272B2DB0014B8924
	F6B70E0960BB5143BD746831C35F3CEC08F4EACFF505161475BA180795BA0000
	000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="23" length_in_bytes="274" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000004A0000
	004A020300000061BE2AE200000009504C5445FF0000FFFFFF0404045E8126FB
	0000000174524E530040E6D866000000AD49444154785EEDD4310AC3300C05D0
	4FA69053948EB94F85461D4564CA05B2874EC5A72C1453ECFC5FD2B9F42FC60F
	498B8D002C68325E5EC754A1BD942EBBAE93F374B2834F75EB5ABADCAF178CD8
	6E6D6200E6A34D8992079B77D5FBBBF637FDE6537ED5BBF05F3380EA5C58084B
	36039B0B0B61C966607361212CD90C6C2E2C84259B81CD8585B06433B0F9DB4A
	6E8771ED8E48EE35B1731EA0C81D36E0244B3DC4BADC5B2B3527753CEF098419
	37CFF3E9E4B50000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="24" length_in_bytes="315" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000440000
	00A50403000000172546A60000000F504C5445FF0000040404ADADADC2C2C2FF
	FFFFF8B9C7530000000174524E530040E6D866000000D049444154785EEDD8C1
	09C3300C85616B83F79A2E10C802A513A478FF991A09524382A580293D543F39
	3E3E94AB0B8912242C6188175BEC265BA64CCF4E8F52A484132252840C1571CF
	9DDA2DDAEDB5D663FB4468ABFB3277272402450B14EDB74A2A62CAEC290255D8
	57005A1C51DA2D837F64DD973F53524925955452492595545249259554524985
	C7CECAF3D4497126E34AF4D8F651A09FD40A039B5CD75D11AAE54E48444A81AF
	B45BBEAF90E82A422A227414E2E22DB0481E94FDA9F37A5071303105EE04BAF3
	27D40694F896375988093E431E97F40000000049454E44AE426082
	]]>
</GDLPict>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

actualGUID = FROM_GUID

! ==============================================================================
! Subroutines
! ==============================================================================

	_startID	= "07EF8521-E37B-4DE3-88E5-55D95EC8D322"
	_endID		= "F555ABC7-F305-49DC-8A7B-2A34BBEA2E40"
gosub "fmtypes_fwm"

! ==============================================================================
! Set Migration GUID
! ==============================================================================

setmigrationguid actualGUID

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================

! ==============================================================================
! Change string parameter to integer
! ==============================================================================
"fmtypes_fwm":
	if actualGuid = _startID then
		bHas = DELETED_PAR_VALUE ("FM_Type", FM_Type)

	!INT
		iFMType = 999
		if FM_Type = `Default Objects` then iFMType = 1
		if FM_Type = `Default Lamps` then iFMType = 2
		if FM_Type = `People` then iFMType = 3
		if FM_Type = `Elevators` then iFMType = 4
		if FM_Type = `Security and Escapes` then iFMType = 5
		if FM_Type = `Stairs` then iFMType = 6
		if FM_Type = `Work Spaces` then iFMType = 7
		if FM_Type = `Electric Facilities` then iFMType = 8
		if FM_Type = `Distribution Panels` then iFMType = 9
		if FM_Type = `Measuring Places` then iFMType = 10
		if FM_Type = `Lamps` then iFMType = 11
		if FM_Type = `HVAC Equipment` then iFMType = 12
		if FM_Type = `Sanitation` then iFMType = 13
		if FM_Type = `Locks` then iFMType = 14
		if FM_Type = `Built-in Wardrobes` then iFMType = 15
		if FM_Type = `Furniture` then iFMType = 16
		if FM_Type = `Ceilings` then iFMType = 17
		if FM_Type = `Floors` then iFMType = 18
		if FM_Type = `Outdoor Objects` then iFMType = 19
		if FM_Type = `Computers` then iFMType = 20
		if FM_Type = `Monitors` then iFMType = 21
		if FM_Type = `Software` then iFMType = 22
		if FM_Type = `Phones` then iFMType = 23
		if FM_Type = `Containers` then iFMType = 24
		if FM_Type = `Others` then iFMType = 25

	!AUT
		if FM_Type = "Standard Objekte" then iFMType = 1
		if FM_Type = "Standard Leuchten" then iFMType = 2
		if FM_Type = "Standard Lampen" then iFMType = 2
		if FM_Type = "Menschen" then iFMType = 3
		if FM_Type = "Fahrstühle" then iFMType = 4
		if FM_Type = "Sicherheit und Fluchtwege" then iFMType = 5
		if FM_Type = "Treppen" then iFMType = 6
		if FM_Type = "Arbeitsplätze" then iFMType = 7
		if FM_Type = "Elektrische Ausstattung" then iFMType = 8
		if FM_Type = "Verteilung Paneele" then iFMType = 9
		if FM_Type = "Verteilerfeld" then iFMType = 9
		if FM_Type = "Vermessungsstandorte" then iFMType = 10
		if FM_Type = "Leuchten" then iFMType = 11
		if FM_Type = "Lampen" then iFMType = 11
		if FM_Type = "HKLSE Ausstattung" then iFMType = 12
		if FM_Type = "Sanitäre Anlagen" then iFMType = 13
		if FM_Type = "Schlösser" then iFMType = 14
		if FM_Type = "Einbaugarderoben" then iFMType = 15
		if FM_Type = "Einbaukleiderschränke" then iFMType = 15
		if FM_Type = "Möbel" then iFMType = 16
		if FM_Type = "Decken" then iFMType = 17
		if FM_Type = "Fußböden" then iFMType = 18
		if FM_Type = "Objekte im Freien" then iFMType = 19
		if FM_Type = "Computer" then iFMType = 20
		if FM_Type = "Monitore" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefone" then iFMType = 23
		if FM_Type = "Container" then iFMType = 24
		if FM_Type = "Andere" then iFMType = 25

	!BRA
		if FM_Type = "Objetos padrão" then iFMType = 1
		if FM_Type = "Lâmpadas padrão" then iFMType = 2
		if FM_Type = "Pessoas" then iFMType = 3
		if FM_Type = "Elevadores" then iFMType = 4
		if FM_Type = "Segurança e Fuga" then iFMType = 5
		if FM_Type = "Escadas" then iFMType = 6
		if FM_Type = "Espaços de trabalho" then iFMType = 7
		if FM_Type = "Equipamentos elétricos" then iFMType = 8
		if FM_Type = "Painéis de distribuição" then iFMType = 9
		if FM_Type = "Medição Lugares" then iFMType = 10
		if FM_Type = "Lâmpadas" then iFMType = 11
		if FM_Type = "Equipamento AVAC" then iFMType = 12
		if FM_Type = "Instalações Sanitárias" then iFMType = 13
		if FM_Type = "Fechamentos" then iFMType = 14
		if FM_Type = "Armários Embutidos" then iFMType = 15
		if FM_Type = "Mobiliário" then iFMType = 16
		if FM_Type = "Tetos" then iFMType = 17
		if FM_Type = "Pavimentos" then iFMType = 18
		if FM_Type = "Objetos Exteriores" then iFMType = 19
		if FM_Type = "Computadores" then iFMType = 20
		if FM_Type = "Monitores" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefones" then iFMType = 23
		if FM_Type = "Recipientes" then iFMType = 24
		if FM_Type = "Outros" then iFMType = 25

	!CHE
		if FM_Type = "Standard Objekte" then iFMType = 1
		if FM_Type = "Standard Leuchten" then iFMType = 2
		if FM_Type = "Standard Lampen" then iFMType = 2
		if FM_Type = "Menschen" then iFMType = 3
		if FM_Type = "Fahrstühle" then iFMType = 4
		if FM_Type = "Sicherheit und Fluchtwege" then iFMType = 5
		if FM_Type = "Treppen" then iFMType = 6
		if FM_Type = "Arbeitsplätze" then iFMType = 7
		if FM_Type = "Elektrische Ausstattung" then iFMType = 8
		if FM_Type = "Verteilung Paneele" then iFMType = 9
		if FM_Type = "Verteilerfeld" then iFMType = 9
		if FM_Type = "Vermessungsstandorte" then iFMType = 10
		if FM_Type = "Leuchten" then iFMType = 11
		if FM_Type = "Lampen" then iFMType = 11
		if FM_Type = "HKLSE Ausstattung" then iFMType = 12
		if FM_Type = "Sanitäre Anlagen" then iFMType = 13
		if FM_Type = "Schlösser" then iFMType = 14
		if FM_Type = "Einbaukleiderschränke" then iFMType = 15
		if FM_Type = "Möbel" then iFMType = 16
		if FM_Type = "Decken" then iFMType = 17
		if FM_Type = "Fußböden" then iFMType = 18
		if FM_Type = "Fussböden" then iFMType = 18
		if FM_Type = "Objekte im Freien" then iFMType = 19
		if FM_Type = "Computer" then iFMType = 20
		if FM_Type = "Monitore" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefone" then iFMType = 23
		if FM_Type = "Container" then iFMType = 24
		if FM_Type = "Andere" then iFMType = 25

	!CHI
		if FM_Type = "默认对象" then iFMType = 1
		if FM_Type = "默认灯" then iFMType = 2
		if FM_Type = "人" then iFMType = 3
		if FM_Type = "电梯" then iFMType = 4
		if FM_Type = "保安与逃生" then iFMType = 5
		if FM_Type = "楼梯" then iFMType = 6
		if FM_Type = "工作空间" then iFMType = 7
		if FM_Type = "电气设备" then iFMType = 8
		if FM_Type = "分布面板" then iFMType = 9
		if FM_Type = "测量地点" then iFMType = 10
		if FM_Type = "灯" then iFMType = 11
		if FM_Type = "HVAC设备" then iFMType = 12
		if FM_Type = "卫生设施" then iFMType = 13
		if FM_Type = "锁" then iFMType = 14
		if FM_Type = "内置衣橱" then iFMType = 15
		if FM_Type = "家具" then iFMType = 16
		if FM_Type = "天花板" then iFMType = 17
		if FM_Type = "地板" then iFMType = 18
		if FM_Type = "室外对象" then iFMType = 19
		if FM_Type = "计算机" then iFMType = 20
		if FM_Type = "监视器" then iFMType = 21
		if FM_Type = "软件" then iFMType = 22
		if FM_Type = "电话" then iFMType = 23
		if FM_Type = "容器" then iFMType = 24
		if FM_Type = "其它" then iFMType = 25

	!CZE
		if FM_Type = "Výchozí objekty" then iFMType = 1
		if FM_Type = "výchozí lampy" then iFMType = 2
		if FM_Type = "lidé" then iFMType = 3
		if FM_Type = "výtahy" then iFMType = 4
		if FM_Type = "bezpečnost a úniky" then iFMType = 5
		if FM_Type = "schodiště" then iFMType = 6
		if FM_Type = "pracovní prostory" then iFMType = 7
		if FM_Type = "Elektrická zařízení" then iFMType = 8
		if FM_Type = "rozvaděče" then iFMType = 9
		if FM_Type = "měřiče" then iFMType = 10
		if FM_Type = "Svítidla" then iFMType = 11
		if FM_Type = "lampy" then iFMType = 11
		if FM_Type = "Lampy" then iFMType = 11
		if FM_Type = "TZB vybavení" then iFMType = 12
		if FM_Type = "Sanitární vybavení" then iFMType = 13
		if FM_Type = "zámky" then iFMType = 14
		if FM_Type = "zabudované skříně" then iFMType = 15
		if FM_Type = "Nábytek" then iFMType = 16
		if FM_Type = "stropy" then iFMType = 17
		if FM_Type = "podlahy" then iFMType = 18
		if FM_Type = "Venkovní objekty" then iFMType = 19
		if FM_Type = "počítače" then iFMType = 20
		if FM_Type = "monitory" then iFMType = 21
		if FM_Type = "software" then iFMType = 22
		if FM_Type = "telefony" then iFMType = 23
		if FM_Type = "obaly" then iFMType = 24
		if FM_Type = "jiné" then iFMType = 25
		if FM_Type = "Jiné" then iFMType = 25

	!FIN
		if FM_Type = "Oletusobjektit" then iFMType = 1
		if FM_Type = "Oletuslamput" then iFMType = 2
		if FM_Type = "Ihminen" then iFMType = 3
		if FM_Type = "Hissit" then iFMType = 4
		if FM_Type = "Turvallisuus ja poistumistiet" then iFMType = 5
		if FM_Type = "Portaat" then iFMType = 6
		if FM_Type = "Työtilat" then iFMType = 7
		if FM_Type = "Sähkölaitteet" then iFMType = 8
		if FM_Type = "Jakelutaulut" then iFMType = 9
		if FM_Type = "Mittauspaikat" then iFMType = 10
		if FM_Type = "Lamput" then iFMType = 11
		if FM_Type = "LVI-laite" then iFMType = 12
		if FM_Type = "Saniteettikalusteet" then iFMType = 13
		if FM_Type = "Viemäröinti" then iFMType = 13
		if FM_Type = "Lukot" then iFMType = 14
		if FM_Type = "Kiinteät komerot" then iFMType = 15
		if FM_Type = "Kalustus" then iFMType = 16
		if FM_Type = "Sisäkattopinnat" then iFMType = 17
		if FM_Type = "Lattiat" then iFMType = 18
		if FM_Type = "Ulkotilan objektit" then iFMType = 19
		if FM_Type = "Ulkotilojen objektit" then iFMType = 19
		if FM_Type = "Tietokoneet" then iFMType = 20
		if FM_Type = "Näytöt" then iFMType = 21
		if FM_Type = "Ohjelmat" then iFMType = 22
		if FM_Type = "Puhelimet" then iFMType = 23
		if FM_Type = "Säilytys" then iFMType = 24
		if FM_Type = "Muut" then iFMType = 25

	!FLA

	!FRA
		if FM_Type = "Objets par défaut" then iFMType = 1
		if FM_Type = "Lampes par défaut" then iFMType = 2
		if FM_Type = "Personnages" then iFMType = 3
		if FM_Type = "Ascenseurs" then iFMType = 4
		if FM_Type = "Sécurité et sorties de secours" then iFMType = 5
		if FM_Type = "Escaliers" then iFMType = 6
		if FM_Type = "Espaces de travail" then iFMType = 7
		if FM_Type = "Services électriques" then iFMType = 8
		if FM_Type = "Panneaux de distribution" then iFMType = 9
		if FM_Type = "Armoires de contrôle" then iFMType = 10
		if FM_Type = "Lampes" then iFMType = 11
		if FM_Type = "Equipement CVCA" then iFMType = 12
		if FM_Type = "Sanitaires" then iFMType = 13
		if FM_Type = "Serrurerie" then iFMType = 14
		if FM_Type = "Penderies Encastrées" then iFMType = 15
		if FM_Type = "Ameublement" then iFMType = 16
		if FM_Type = "Plafonds" then iFMType = 17
		if FM_Type = "Planchers" then iFMType = 18
		if FM_Type = "Objets extérieurs" then iFMType = 19
		if FM_Type = "Ordinateurs" then iFMType = 20
		if FM_Type = "Ecrans" then iFMType = 21
		if FM_Type = "Logiciels" then iFMType = 22
		if FM_Type = "Téléphones" then iFMType = 23
		if FM_Type = "Conteneurs" then iFMType = 24
		if FM_Type = "Autres" then iFMType = 25

	!GER
		if FM_Type = "Standard Objekte" then iFMType = 1
		if FM_Type = "Standard Leuchten" then iFMType = 2
		if FM_Type = "Standard Lampen" then iFMType = 2
		if FM_Type = "Menschen" then iFMType = 3
		if FM_Type = "Fahrstühle" then iFMType = 4
		if FM_Type = "Sicherheit und Fluchtwege" then iFMType = 5
		if FM_Type = "Treppen" then iFMType = 6
		if FM_Type = "Arbeitsplätze" then iFMType = 7
		if FM_Type = "Elektrische Ausstattung" then iFMType = 8
		if FM_Type = "Verteilung Paneele" then iFMType = 9
		if FM_Type = "Verteilerfeld" then iFMType = 9
		if FM_Type = "Vermessungsstandorte" then iFMType = 10
		if FM_Type = "Leuchten" then iFMType = 11
		if FM_Type = "Lampen" then iFMType = 11
		if FM_Type = "HKLSE Ausstattung" then iFMType = 12
		if FM_Type = "Sanitäre Anlagen" then iFMType = 13
		if FM_Type = "Schlösser" then iFMType = 14
		if FM_Type = "Einbaukleiderschränke" then iFMType = 15
		if FM_Type = "Möbel" then iFMType = 16
		if FM_Type = "Decken" then iFMType = 17
		if FM_Type = "Fußböden" then iFMType = 18
		if FM_Type = "Objekte im Freien" then iFMType = 19
		if FM_Type = "Computer" then iFMType = 20
		if FM_Type = "Monitore" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefone" then iFMType = 23
		if FM_Type = "Container" then iFMType = 24
		if FM_Type = "Andere" then iFMType = 25

	!GRE
		if FM_Type = "Αρχικά Αντικείμενα" then iFMType = 1
		if FM_Type = "Αρχικά Φωτιστικά" then iFMType = 2
		if FM_Type = "Άνθρωποι" then iFMType = 3
		if FM_Type = "Ανελκυστήρες" then iFMType = 4
		if FM_Type = "Ασφάλεια και Διαφυγή" then iFMType = 5
		if FM_Type = "Σκάλες" then iFMType = 6
		if FM_Type = "Χώροι Εργασίας" then iFMType = 7
		if FM_Type = "Ηλεκτρολ. Εγκαταστάσεις" then iFMType = 8
		if FM_Type = "Πίνακες Διανομής" then iFMType = 9
		if FM_Type = "Θέσεις Μετρήσεων" then iFMType = 10
		if FM_Type = "Φωτιστικά" then iFMType = 11
		if FM_Type = "Λάμπα" then iFMType = 11
		if FM_Type = "Εξαρτήματα HVAC" then iFMType = 12
		if FM_Type = "Υγιεινή" then iFMType = 13
		if FM_Type = "Κλειδαριές" then iFMType = 14
		if FM_Type = "Εντοιχισμένες Ντουλάπες" then iFMType = 15
		if FM_Type = "Εντοιχισμένη Ντουλάπα" then iFMType = 15
		if FM_Type = "Επίπλωση" then iFMType = 16
		if FM_Type = "Οροφές" then iFMType = 17
		if FM_Type = "Δάπεδα" then iFMType = 18
		if FM_Type = "Υπαίθρια Αντικείμενα" then iFMType = 19
		if FM_Type = "Υπολογιστές" then iFMType = 20
		if FM_Type = "Οθόνες" then iFMType = 21
		if FM_Type = "Λογισμικό" then iFMType = 22
		if FM_Type = "Τηλέφωνα" then iFMType = 23
		if FM_Type = "Κιβώτια" then iFMType = 24
		if FM_Type = "Άλλα" then iFMType = 25

	!HUN
		if FM_Type = "Alapértelmezett tárgy" then iFMType = 1
		if FM_Type = "Alapértelmezett lámpa" then iFMType = 2
		if FM_Type = "Személy" then iFMType = 3
		if FM_Type = "Felvonó" then iFMType = 4
		if FM_Type = "Biztonság- és menekülésjelző" then iFMType = 5
		if FM_Type = "Lépcsők" then iFMType = 6
		if FM_Type = "Lépcső" then iFMType = 6
		if FM_Type = "Lépcsö" then iFMType = 6
		if FM_Type = "Munkaterület" then iFMType = 7
		if FM_Type = "Elektromos berendezés" then iFMType = 8
		if FM_Type = "Elosztó" then iFMType = 9
		if FM_Type = "Mérőhely" then iFMType = 10
		if FM_Type = "Lámpa" then iFMType = 11
		if FM_Type = "Légtechnikai berendezés" then iFMType = 12
		if FM_Type = "Szaniter berendezés" then iFMType = 13
		if FM_Type = "Zár" then iFMType = 14
		if FM_Type = "Beépített szekrény" then iFMType = 15
		if FM_Type = "Bútor" then iFMType = 16
		if FM_Type = "Mennyezet" then iFMType = 17
		if FM_Type = "Padló" then iFMType = 18
		if FM_Type = "Kültéri tárgy" then iFMType = 19
		if FM_Type = "Számítógép" then iFMType = 20
		if FM_Type = "Monitor" then iFMType = 21
		if FM_Type = "Szoftver" then iFMType = 22
		if FM_Type = "Telefon" then iFMType = 23
		if FM_Type = "Konténer" then iFMType = 24
		if FM_Type = "Egyéb" then iFMType = 25

	!ITA
		if FM_Type = "Oggetti predefiniti" then iFMType = 1
		if FM_Type = "Lampade predefinite" then iFMType = 2
		if FM_Type = "Persone" then iFMType = 3
		if FM_Type = "Ascensori" then iFMType = 4
		if FM_Type = "Sicurezza e Fughe" then iFMType = 5
		if FM_Type = "Scale" then iFMType = 6
		if FM_Type = "Spazi di Lavoro" then iFMType = 7
		if FM_Type = "Funzioni Elettriche" then iFMType = 8
		if FM_Type = "Pannelli di Distribuzione" then iFMType = 9
		if FM_Type = "Posti di Misurazione" then iFMType = 10
		if FM_Type = "Lampade" then iFMType = 11
		if FM_Type = "Apparecchiatura HVAC" then iFMType = 12
		if FM_Type = "Risanamento" then iFMType = 13
		if FM_Type = "Serrature" then iFMType = 14
		if FM_Type = "Armadi a muro" then iFMType = 15
		if FM_Type = "Armadi Incassati" then iFMType = 15
		if FM_Type = "Armadi Incorporati" then iFMType = 15
		if FM_Type = "Arredo" then iFMType = 16
		if FM_Type = "Soffitti" then iFMType = 17
		if FM_Type = "Pavimenti" then iFMType = 18
		if FM_Type = "Oggetti Esterni" then iFMType = 19
		if FM_Type = "Computers" then iFMType = 20
		if FM_Type = "Monitors" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefoni" then iFMType = 23
		if FM_Type = "Contenitori" then iFMType = 24
		if FM_Type = "Altri" then iFMType = 25

	!JPN
		if FM_Type = "ﾃﾞﾌｫﾙﾄｵﾌﾞｼﾞｪｸﾄ " then iFMType = 1
		if FM_Type = "ﾃﾞﾌｫﾙﾄｵﾌﾞｼﾞｪｸﾄ" then iFMType = 1
		if FM_Type = "ﾃﾞﾌｫﾙﾄﾗﾝﾌﾟ" then iFMType = 2
		if FM_Type = "人物" then iFMType = 3
		if FM_Type = "ｴﾚﾍﾞｰﾀ" then iFMType = 4
		if FM_Type = "防犯と非常用" then iFMType = 5
		if FM_Type = "階段" then iFMType = 6
		if FM_Type = "ﾜｰｸｽﾍﾟｰｽ" then iFMType = 7
		if FM_Type = "電気設備" then iFMType = 8
		if FM_Type = "配電盤" then iFMType = 9
		if FM_Type = "測定場所" then iFMType = 10
		if FM_Type = "ﾗﾝﾌﾟ" then iFMType = 11
		if FM_Type = "設備機器" then iFMType = 12
		if FM_Type = "HVAC機器" then iFMType = 12
		if FM_Type = "排水設備" then iFMType = 13
		if FM_Type = "下水設備" then iFMType = 13
		if FM_Type = "ﾛｯｸ" then iFMType = 14
		if FM_Type = "造り付けﾜｰﾄﾞﾛｰﾌﾞ" then iFMType = 15
		if FM_Type = "家具" then iFMType = 16
		if FM_Type = "天井" then iFMType = 17
		if FM_Type = "ﾌﾛｱ" then iFMType = 18
		if FM_Type = "屋外ｵﾌﾞｼﾞｪｸﾄ" then iFMType = 19
		if FM_Type = "ｺﾝﾋﾟｭｰﾀ" then iFMType = 20
		if FM_Type = "ﾓﾆﾀ" then iFMType = 21
		if FM_Type = "ｿﾌﾄｳｪｱ" then iFMType = 22
		if FM_Type = "電話" then iFMType = 23
		if FM_Type = "ｺﾝﾃﾅ" then iFMType = 24
		if FM_Type = "その他" then iFMType = 25

	!KOR
		if FM_Type = "기본 객체" then iFMType = 1
		if FM_Type = "기본값 객체" then iFMType = 1
		if FM_Type = "기본 조명" then iFMType = 2
		if FM_Type = "사람들" then iFMType = 3
		if FM_Type = "엘리베이터" then iFMType = 4
		if FM_Type = "보안과 피난" then iFMType = 5
		if FM_Type = "계단" then iFMType = 6
		if FM_Type = "작업 공간" then iFMType = 7
		if FM_Type = "전기 설비" then iFMType = 8
		if FM_Type = "분배 패널" then iFMType = 9
		if FM_Type = "측정 장소" then iFMType = 10
		if FM_Type = "조명" then iFMType = 11
		if FM_Type = "공조설비" then iFMType = 12
		if FM_Type = "위생설비" then iFMType = 13
		if FM_Type = "잠금장치" then iFMType = 14
		if FM_Type = "붙박이 장" then iFMType = 15
		if FM_Type = "가구" then iFMType = 16
		if FM_Type = "천장" then iFMType = 17
		if FM_Type = "바닥" then iFMType = 18
		if FM_Type = "실외 객체" then iFMType = 19
		if FM_Type = "컴퓨터" then iFMType = 20
		if FM_Type = "모니터" then iFMType = 21
		if FM_Type = "소프트웨어" then iFMType = 22
		if FM_Type = "전화기" then iFMType = 23
		if FM_Type = "콘테이너" then iFMType = 24
		if FM_Type = "기타" then iFMType = 25

	!NED
		if FM_Type = "Standaardobjecten" then iFMType = 1
		if FM_Type = "Standaardlampen" then iFMType = 2
		if FM_Type = "Mensen" then iFMType = 3
		if FM_Type = "Liften" then iFMType = 4
		if FM_Type = "Beveiliging en vluchtwegen" then iFMType = 5
		if FM_Type = "Trappen" then iFMType = 6
		if FM_Type = "Werkplekken" then iFMType = 7
		if FM_Type = "ET installatie" then iFMType = 8
		if FM_Type = "Schakelkasten" then iFMType = 9
		if FM_Type = "Meetgebieden" then iFMType = 10
		if FM_Type = "Lampen" then iFMType = 11
		if FM_Type = "W-installatie" then iFMType = 12
		if FM_Type = "Afvalverwerking" then iFMType = 13
		if FM_Type = "Sloten" then iFMType = 14
		if FM_Type = "Inbouwkasten" then iFMType = 15
		if FM_Type = "Meubilair" then iFMType = 16
		if FM_Type = "Plafonds" then iFMType = 17
		if FM_Type = "Vloeren" then iFMType = 18
		if FM_Type = "Buitenobjecten" then iFMType = 19
		if FM_Type = "Computers" then iFMType = 20
		if FM_Type = "Monitoren" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefoon" then iFMType = 23
		if FM_Type = "Containers" then iFMType = 24
		if FM_Type = "Anders" then iFMType = 25
		if FM_Type = "Overig" then iFMType = 25

	!NOR
		if FM_Type = "Standard objekter" then iFMType = 1
		if FM_Type = "Andre" then iFMType = 25

	!POL
		if FM_Type = "Obiekty domyślne" then iFMType = 1
		if FM_Type = "Domyślne lampy" then iFMType = 2
		if FM_Type = "Ludzie" then iFMType = 3
		if FM_Type = "Windy" then iFMType = 4
		if FM_Type = "Bezpieczeństwo i ewakuacja" then iFMType = 5
		if FM_Type = "Schody" then iFMType = 6
		if FM_Type = "Przestrzenie robocze" then iFMType = 7
		if FM_Type = "Urządzenia elektryczne" then iFMType = 8
		if FM_Type = "Panele rozdzielające" then iFMType = 9
		if FM_Type = "Stanowiska pomiarowe" then iFMType = 10
		if FM_Type = "Lampy" then iFMType = 11
		if FM_Type = "Wyposażenie grzewczo-klimatyzac." then iFMType = 12
		if FM_Type = "Sanitarne" then iFMType = 13
		if FM_Type = "Zamki" then iFMType = 14
		if FM_Type = "Garderoby" then iFMType = 15
		if FM_Type = "Umeblowanie" then iFMType = 16
		if FM_Type = "Sufity" then iFMType = 17
		if FM_Type = "Podłogi" then iFMType = 18
		if FM_Type = "Obiekty zewnętrzne" then iFMType = 19
		if FM_Type = "Komputery" then iFMType = 20
		if FM_Type = "Monitory" then iFMType = 21
		if FM_Type = "Oprogramowanie" then iFMType = 22
		if FM_Type = "Telefony" then iFMType = 23
		if FM_Type = "Pojemniki" then iFMType = 24
		if FM_Type = "Inne" then iFMType = 25

	!POR
		if FM_Type = "Objectos por defeito" then iFMType = 1
		if FM_Type = "Lâmpadas por defeito" then iFMType = 2
		if FM_Type = "Pessoas" then iFMType = 3
		if FM_Type = "Elevadores" then iFMType = 4
		if FM_Type = "Segurança e Fuga" then iFMType = 5
		if FM_Type = "Escadas" then iFMType = 6
		if FM_Type = "Espaços de trabalho" then iFMType = 7
		if FM_Type = "Equipamentos eléctricos" then iFMType = 8
		if FM_Type = "Painéis de distribuição" then iFMType = 9
		if FM_Type = "Medição Lugares" then iFMType = 10
		if FM_Type = "Lâmpadas" then iFMType = 11
		if FM_Type = "Equipamento AVAC" then iFMType = 12
		if FM_Type = "Instalações Sanitárias" then iFMType = 13
		if FM_Type = "Fechos" then iFMType = 14
		if FM_Type = "Armários Embutidos" then iFMType = 15
		if FM_Type = "Mobiliário" then iFMType = 16
		if FM_Type = "Tectos" then iFMType = 17
		if FM_Type = "Pavimentos" then iFMType = 18
		if FM_Type = "Objectos Exteriores" then iFMType = 19
		if FM_Type = "Computadores" then iFMType = 20
		if FM_Type = "Monitores" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Telefones" then iFMType = 23
		if FM_Type = "Recipientes" then iFMType = 24
		if FM_Type = "Outros" then iFMType = 25

	!RUS
		if FM_Type = "Объекты по умолчанию" then iFMType = 1
		if FM_Type = "Ист.света по умолчанию" then iFMType = 2
		if FM_Type = "Люди" then iFMType = 3
		if FM_Type = "Лифты" then iFMType = 4
		if FM_Type = "Безопасность и эвакуация" then iFMType = 5
		if FM_Type = "Лестницы" then iFMType = 6
		if FM_Type = "Рабочее пространство" then iFMType = 7
		if FM_Type = "Электрические устройства" then iFMType = 8
		if FM_Type = "Распределительные щиты" then iFMType = 9
		if FM_Type = "Измеряемые места" then iFMType = 10
		if FM_Type = "Лампы" then iFMType = 11
		if FM_Type = "Источники света" then iFMType = 11
		if FM_Type = "Механическое оборудование" then iFMType = 12
		if FM_Type = "Санитария" then iFMType = 13
		if FM_Type = "Замки" then iFMType = 14
		if FM_Type = "Встроенные гардеробы" then iFMType = 15
		if FM_Type = "Гардеробы встроенные" then iFMType = 15
		if FM_Type = "Мебель" then iFMType = 16
		if FM_Type = "Потолки" then iFMType = 17
		if FM_Type = "Полы" then iFMType = 18
		if FM_Type = "Объекты снаружи" then iFMType = 19
		if FM_Type = "Компьютеры" then iFMType = 20
		if FM_Type = "Мониторы" then iFMType = 21
		if FM_Type = "Программное обеспечение" then iFMType = 22
		if FM_Type = "Телефоны" then iFMType = 23
		if FM_Type = "Контейнеры" then iFMType = 24
		if FM_Type = "Другой" then iFMType = 25
		if FM_Type = "Другие" then iFMType = 25

	!SPA
		if FM_Type = "Objetos por Defecto" then iFMType = 1
		if FM_Type = "Lámparas por Defecto" then iFMType = 2
		if FM_Type = "Personas" then iFMType = 3
		if FM_Type = "Ascensores" then iFMType = 4
		if FM_Type = "Seguridad y Evacuaciones" then iFMType = 5
		if FM_Type = "Escaleras" then iFMType = 6
		if FM_Type = "Espacios de Trabajo" then iFMType = 7
		if FM_Type = "Cuartos Eléctricos" then iFMType = 8
		if FM_Type = "Paneles de División" then iFMType = 9
		if FM_Type = "Lugares de Medidas" then iFMType = 10
		if FM_Type = "Lámparas" then iFMType = 11
		if FM_Type = "Control de Atmósfera" then iFMType = 12
		if FM_Type = "Saneamiento" then iFMType = 13
		if FM_Type = "Cerraduras" then iFMType = 14
		if FM_Type = "Armarios Empotrados" then iFMType = 15
		if FM_Type = "Mobiliario" then iFMType = 16
		if FM_Type = "Falsos Techos" then iFMType = 17
		if FM_Type = "Suelos" then iFMType = 18
		if FM_Type = "Objetos de Exterior" then iFMType = 19
		if FM_Type = "Ordenadores" then iFMType = 20
		if FM_Type = "Monitores" then iFMType = 21
		if FM_Type = "Software" then iFMType = 22
		if FM_Type = "Teléfonos" then iFMType = 23
		if FM_Type = "Contenedores" then iFMType = 24
		if FM_Type = "Otros" then iFMType = 25

	!SWE
		if FM_Type = "Standardelement" then iFMType = 1
		if FM_Type = "Standardarmatur" then iFMType = 2
		if FM_Type = "Människor" then iFMType = 3
		if FM_Type = "Hissar" then iFMType = 4
		if FM_Type = "Säkerhet & Utrymning" then iFMType = 5
		if FM_Type = "Trappor" then iFMType = 6
		if FM_Type = "Arbetsutrymmen" then iFMType = 7
		if FM_Type = "Elektrisk Utrustning" then iFMType = 8
		if FM_Type = "Distributionspaneler" then iFMType = 9
		if FM_Type = "Måttenhetsuppgifter" then iFMType = 10
		if FM_Type = "Armatur" then iFMType = 11
		if FM_Type = "VVS-utrustning" then iFMType = 12
		if FM_Type = "Sanitärt" then iFMType = 13
		if FM_Type = "Lås" then iFMType = 14
		if FM_Type = "Inbyggda Utrymmen" then iFMType = 15
		if FM_Type = "Möbler" then iFMType = 16
		if FM_Type = "Innertak" then iFMType = 17
		if FM_Type = "Golv" then iFMType = 18
		if FM_Type = "Element för Utomhusbruk" then iFMType = 19
		if FM_Type = "Datorer" then iFMType = 20
		if FM_Type = "Bildskärmar" then iFMType = 21
		if FM_Type = "Mjukvaror" then iFMType = 22
		if FM_Type = "Telefoner" then iFMType = 23
		if FM_Type = "Behållare" then iFMType = 24
		if FM_Type = "Annat" then iFMType = 25

	!TAI
		if FM_Type = "默認對象" then iFMType = 1
		if FM_Type = "默認燈" then iFMType = 2
		if FM_Type = "人" then iFMType = 3
		if FM_Type = "電梯" then iFMType = 4
		if FM_Type = "保安與逃生" then iFMType = 5
		if FM_Type = "樓梯" then iFMType = 6
		if FM_Type = "工作空間" then iFMType = 7
		if FM_Type = "電氣設備" then iFMType = 8
		if FM_Type = "分佈面板" then iFMType = 9
		if FM_Type = "測量地點" then iFMType = 10
		if FM_Type = "燈" then iFMType = 11
		if FM_Type = "HVAC設備" then iFMType = 12
		if FM_Type = "衛生設施" then iFMType = 13
		if FM_Type = "鎖" then iFMType = 14
		if FM_Type = "內置衣櫥" then iFMType = 15
		if FM_Type = "傢具" then iFMType = 16
		if FM_Type = "天花板" then iFMType = 17
		if FM_Type = "地板" then iFMType = 18
		if FM_Type = "室外對象" then iFMType = 19
		if FM_Type = "計算機" then iFMType = 20
		if FM_Type = "監視器" then iFMType = 21
		if FM_Type = "軟件" then iFMType = 22
		if FM_Type = "電話" then iFMType = 23
		if FM_Type = "容器" then iFMType = 24
		if FM_Type = "其它" then iFMType = 25

	!TUR
		if FM_Type = "Geçerli Objeler" then iFMType = 1
		if FM_Type = "Geçerli Aydınlatma Elemanları" then iFMType = 2
		if FM_Type = "İnsanlar" then iFMType = 3
		if FM_Type = "Asansörler" then iFMType = 4
		if FM_Type = "Güvenlik ve Çıkışlar" then iFMType = 5
		if FM_Type = "Merdivenler" then iFMType = 6
		if FM_Type = "Çalışma Alanları" then iFMType = 7
		if FM_Type = "Elektrik Hizmetleri" then iFMType = 8
		if FM_Type = "Dağıtım Levhalleri" then iFMType = 9
		if FM_Type = "Dağıtım Panelleri" then iFMType = 9
		if FM_Type = "Mekan Ölçme" then iFMType = 10
		if FM_Type = "Aydınlatma Elemanları" then iFMType = 11
		if FM_Type = "HVAC Ekipmanı" then iFMType = 12
		if FM_Type = "Banyo-Wc" then iFMType = 13
		if FM_Type = "Kilitler" then iFMType = 14
		if FM_Type = "Ankastre Dolaplar" then iFMType = 15
		if FM_Type = "Mobilya" then iFMType = 16
		if FM_Type = "Tavanlar" then iFMType = 17
		if FM_Type = "Zeminler" then iFMType = 18
		if FM_Type = "Dış Mekan Objeleri" then iFMType = 19
		if FM_Type = "Bilgisayarlar" then iFMType = 20
		if FM_Type = "Monitörler" then iFMType = 21
		if FM_Type = "Yazılım" then iFMType = 22
		if FM_Type = "Telefonlar" then iFMType = 23
		if FM_Type = "Konteynerler" then iFMType = 24
		if FM_Type = "Diğerleri" then iFMType = 25
		if FM_Type = "Diğer" then iFMType = 25

		parameters iFMType = iFMType

		actualGuid = _endID
	endif
return


]]></Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0"><![CDATA[

targetGUID = TO_GUID

! ==============================================================================
! Subroutines
! ==============================================================================

gosub "fmtypes_bwm"

! ==============================================================================
! Set Migration GUID
! ==============================================================================

setmigrationguid targetGUID

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================

! ==============================================================================
! Change string parameter to integer
! ==============================================================================
"fmtypes_bwm":
	if targetGUID # "" then
		if iFMType = 1 then FM_Type = `Default Objects`
		if iFMType = 2 then FM_Type = `Default Lamps`
		if iFMType = 3 then FM_Type = `People`
		if iFMType = 4 then FM_Type = `Elevators`
		if iFMType = 5 then FM_Type = `Security and Escapes`
		if iFMType = 6 then FM_Type = `Stairs`
		if iFMType = 7 then FM_Type = `Work Spaces`
		if iFMType = 8 then FM_Type = `Electric Facilities`
		if iFMType = 9 then FM_Type = `Distribution Panels`
		if iFMType = 10 then FM_Type = `Measuring Places`
		if iFMType = 11 then FM_Type = `Lamps`
		if iFMType = 12 then FM_Type = `HVAC Equipment`
		if iFMType = 13 then FM_Type = `Sanitation`
		if iFMType = 14 then FM_Type = `Locks`
		if iFMType = 15 then FM_Type = `Built-in Wardrobes`
		if iFMType = 16 then FM_Type = `Furniture`
		if iFMType = 17 then FM_Type = `Ceilings`
		if iFMType = 18 then FM_Type = `Floors`
		if iFMType = 19 then FM_Type = `Outdoor Objects`
		if iFMType = 20 then FM_Type = `Computers`
		if iFMType = 21 then FM_Type = `Monitors`
		if iFMType = 22 then FM_Type = `Software`
		if iFMType = 23 then FM_Type = `Phones`
		if iFMType = 24 then FM_Type = `Containers`
		if iFMType = 25 then FM_Type = `Others`
		parameters FM_Type = FM_Type

	endif
return


]]></Script_BWM>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>07EF8521-E37B-4DE3-88E5-55D95EC8D322</MainGUID>
		<Version>17</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>no</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0"><Author>BIMobject</Author><License><Type>CC BY-ND</Type><Version>3.0</Version></License></Copyright><ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>22</Version>
		<AutoHotspots>no</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Width"]]></Description>
			<Value>0.9</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Depth"]]></Description>
			<Value>0.5</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Value>2.1</Value>
		</Length>
		<String Name="cabinetForm">
			<Description><![CDATA["Cabinet Shape"]]></Description>
			<Value><![CDATA["Square"]]></Value>
		</String>
		<Integer Name="iCabinetForm">
			<Description><![CDATA["Cabinet Shape"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iTempForm">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="sideDepth1">
			<Description><![CDATA["Side Depth 1"]]></Description>
			<Value>0.5</Value>
		</Length>
		<Length Name="sideDepth2">
			<Description><![CDATA["Side Depth 2"]]></Description>
			<Value>0.5</Value>
		</Length>

		<!-- gs_door: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door">
			<Description><![CDATA["Door"]]></Description>
		</Title>
		<String Name="doorStyle">
			<Description><![CDATA["Door Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Style 8"]]></Value>
		</String>
		<Integer Name="iDoorStyle">
			<Description><![CDATA["Door Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Integer>
		<Integer Name="iTempDoorStyle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Integer>
		<Boolean Name="bBevel">
			<Description><![CDATA["Edge Bevel"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="doorType">
			<Description><![CDATA["Door Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Side Hung"]]></Value>
		</String>
		<Integer Name="iDoorType">
			<Description><![CDATA["Door Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="nDoor">
			<Description><![CDATA["No. of Doors"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<String Name="doorCustomPanelName">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="doorThickness">
			<Description><![CDATA["Door Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="doorFrameWidth">
			<Description><![CDATA["Door Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="mullionWidth">
			<Description><![CDATA["Mullion Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Integer Name="nVerticalMullion">
			<Description><![CDATA["No. of Vert. Door Mullions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHorizontalMullion">
			<Description><![CDATA["No. of Hor. Door Mullions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Angle Name="doorAngle3D">
			<Description><![CDATA["Door Opening Angle 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<RealNum Name="openingDoor">
			<Description><![CDATA["Door Position %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
				<AVal Row="5">0</AVal>
			</ArrayValues>
		</RealNum>
		<Length Name="openingDoorLength">
			<Description><![CDATA["Door Position %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
				<AVal Row="5">0</AVal>
			</ArrayValues>
		</Length>

		<!-- gs_knob_type: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_knob_type">
			<Description><![CDATA["Knob Style"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="gs_knob_type_m">
			<Description><![CDATA["Knob Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="knob_pl_x">
			<Description><![CDATA["Horizontal Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="knob_pl_y">
			<Description><![CDATA["Vertical Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.85</Value>
		</Length>
		<String Name="gs_knob_p">
			<Description><![CDATA["Placing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Horizontal"]]></Value>
		</String>
		<Integer Name="gs_knob_p_m">
			<Description><![CDATA["Placing"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="knob_size">
			<Description><![CDATA["Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>

		<!-- interior: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="interior">
			<Description><![CDATA["Interior Fittings"]]></Description>
		</Title>
		<String Name="gs_functions">
			<Description><![CDATA["Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["None"]]></Value>
		</String>
		<Integer Name="iFunctions">
			<Description><![CDATA["Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nShelves">
			<Description><![CDATA["No. of Shelves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="nHangers">
			<Description><![CDATA["No. of Hangers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_cornice_type: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_cornice_type">
			<Description><![CDATA["Cornice"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="gs_cornice_type_m">
			<Description><![CDATA["Cornice"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_lining">
			<Description><![CDATA["Side Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Front"]]></Value>
		</String>
		<Integer Name="gs_lining_m">
			<Description><![CDATA["Side Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Length Name="cot">
			<Description><![CDATA["Cornice Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="cooh">
			<Description><![CDATA["Cornice Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>

		<!-- gs_leg_type: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_leg_type">
			<Description><![CDATA["Leg"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="gs_leg_type_m">
			<Description><![CDATA["Leg"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="leg_h">
			<Description><![CDATA["Leg Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="leg_w">
			<Description><![CDATA["Leg Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D Representation"]]></Description>
		</Title>
		<String Name="symbolType">
			<Description><![CDATA["2D Symbol Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Style 1"]]></Value>
		</String>
		<Integer Name="iSymbolType">
			<Description><![CDATA["2D Symbol Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Angle Name="openingAngle2D">
			<Description><![CDATA["Opening Angle in 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Angle>
		<Boolean Name="bHangers">
			<Description><![CDATA["Show Hanger in 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_min_space: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_min_space">
			<Description><![CDATA["Minimal Space"]]></Description>
		</Title>
		<Length Name="MSFront">
			<Description><![CDATA["Minimal Space in Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Detailed"]]></Value>
		</String>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_resol">
			<Description><![CDATA["Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Showing 2D Hotspots in 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Material Name="gs_cabinet_mat">
			<Description><![CDATA["Cabinet"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matDoorFrame">
			<Description><![CDATA["Door Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>13</Value>
		</Material>
		<Material Name="matDoorGlass">
			<Description><![CDATA["Door (Glazing)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Material>
		<Material Name="matDoorMirror">
			<Description><![CDATA["Door (Mirror)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</Material>
		<Material Name="matDoorDecor1">
			<Description><![CDATA["Door 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matDoorDecor2">
			<Description><![CDATA["Door 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</Material>
		<Material Name="gs_knob_mat">
			<Description><![CDATA["Knob"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_shelf_mat">
			<Description><![CDATA["Shelf"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_hanger_mat">
			<Description><![CDATA["Hanger"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_cornice_mat">
			<Description><![CDATA["Cornice"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_leg_mat">
			<Description><![CDATA["Leg"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["INT"]]></Value>
		</String>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Furniture"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>16</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["kg"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["User Defined 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["User Defined 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["User Defined 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["User Defined 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["User Defined 5"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>

		<!-- gs_onorm_Title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_onorm_Title">
			<Description><![CDATA["ONORM Listing Parameters"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<String Name="gs_onorm_dimensions">
			<Description><![CDATA["Width/Depth/Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_manufacturer">
			<Description><![CDATA["ONORM Manufacturer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_baseheight_value">
			<Description><![CDATA["Base Height Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_baseheight">
			<Description><![CDATA["Onorm Base Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_assemblydate">
			<Description><![CDATA["Assembly Date"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext1">
			<Description><![CDATA["Additional Information 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext2">
			<Description><![CDATA["Additional Information 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_aks">
			<Description><![CDATA["AKS Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_product">
			<Description><![CDATA["Product Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_leistungbuch">
			<Description><![CDATA["Collection of Specifications ID"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_description">
			<Description><![CDATA["ONORM Description"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_number">
			<Description><![CDATA["Onorm Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_id">
			<Description><![CDATA["ID Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_admission">
			<Description><![CDATA["Admission Date"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_modification">
			<Description><![CDATA["Modification Date"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_tozonenumber">
			<Description><![CDATA["To Zone Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>
</Symbol>

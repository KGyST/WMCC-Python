{
    "834CF51D-3A9D-4619-9ADC-432F98CE329E": {
        "error_message": {
            "title": "Bad parameter type",
            "description": "A parameter is given a bad data, like string instead of int.",
            "constant": "ERR_BAD_PARAM_TYPE"
        },
        "additional_data": {
            "name": "handle_st"
        }
    },
    "2135BA5E-C4DF-4240-8DAA-C02AE3E2C1A2": {
        "error_message": {
            "title": "Nonexisting source object",
            "description": "The Source object Object refers to doesn't exist or there is a typo in Source object name in category data file or the associated filename",
            "constant": "ERR_NONEXISTING_OBJECT"
        },
        "additional_data": {}
    },
    "0A21DADF-7427-4313-B731-821E530F8B50": {
        "error_message": {
            "title": "Nonexisting source object",
            "description": "The Source object Object refers to doesn't exist or there is a typo in Source object name in category data file or the associated filename",
            "constant": "ERR_NONEXISTING_OBJECT"
        },
        "additional_data": {}
    },
    "103E47FF-95AB-4B37-A301-10EF9448E19B": {
        "object_name": "commons_Placeable_LCF_name.lcf",
        "base64_encoded_object": ""
    },
    "24F9B48C-5065-44D8-922E-2CE2DBD2D53E": {
        "error_message": {
            "title": "Unspecified error",
            "description": "An unspecified error occured",
            "constant": "ERR_UNSPECIFIED"
        },
        "additional_data": {
            "error_message": [
                "could not convert string to float: '#FFFFFF'"
            ],
            "request": {
                "productName": "Generic material",
                "template": {
                    "materialParameters": [],
                    "materials": [
                        {
                            "name": "Generic material",
                            "Colour": "#FFFFFF",
                            "Texture": null,
                            "Transparency": "0",
                            "Glossiness": "0",
                            "Reflectivity": "0"
                        }
                    ],
                    "ARCHICAD_template": {
                        "category": "commons",
                        "main_macroset_version": "18"
                    }
                },
                "variationsData": []
            }
        },
        "traceback": "Traceback (most recent call last):\n  File \"D:/Git/WMCC Python/worker/worker.py\", line 77, in testWorker\n    result = createBrandedProduct(job['data'])\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1902, in createBrandedProduct\n    translationDict\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1622, in unitConvert\n    / _UnitLib[inTranslationLib[\"ARCHICAD\"][\"Measurement\"]]\nValueError: could not convert string to float: '#FFFFFF'\n"
    },
    "65FF9C26-5F79-4D56-B05E-8CF39B97F623": {
        "error_message": {
            "title": "Unspecified error",
            "description": "An unspecified error occured",
            "constant": "ERR_UNSPECIFIED"
        },
        "additional_data": {
            "error_message": [
                "could not convert string to float: '#FFFFFF'"
            ],
            "request": {
                "productName": "Generic material",
                "template": {
                    "materialParameters": [],
                    "materials": [
                        {
                            "name": "Generic material",
                            "Colour": "#FFFFFF",
                            "Texture": null,
                            "Transparency": "0",
                            "Glossiness": "0",
                            "Reflectivity": "0"
                        }
                    ],
                    "ARCHICAD_template": {
                        "category": "commons",
                        "main_macroset_version": "18"
                    }
                },
                "variationsData": []
            }
        },
        "traceback": "Traceback (most recent call last):\n  File \"D:/Git/WMCC Python/worker/worker.py\", line 77, in testWorker\n    result = createBrandedProduct(job['data'])\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1902, in createBrandedProduct\n    translationDict\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1622, in unitConvert\n    / _UnitLib[inTranslationLib[\"ARCHICAD\"][\"Measurement\"]]\nValueError: could not convert string to float: '#FFFFFF'\n"
    },
    "0E69CBB8-EF0D-4F68-8B4C-C306D769D863": {
        "error_message": {
            "title": "Unspecified error",
            "description": "An unspecified error occured",
            "constant": "ERR_UNSPECIFIED"
        },
        "additional_data": {
            "error_message": [
                "could not convert string to float: '#FFFFFF'"
            ],
            "request": {
                "productName": "Generic material",
                "template": {
                    "materialParameters": [],
                    "materials": [
                        {
                            "name": "Generic material",
                            "Colour": "#FFFFFF",
                            "Texture": null,
                            "Transparency": "0",
                            "Glossiness": "0",
                            "Reflectivity": "0"
                        }
                    ],
                    "ARCHICAD_template": {
                        "category": "commons",
                        "main_macroset_version": "18"
                    }
                },
                "variationsData": []
            }
        },
        "traceback": "Traceback (most recent call last):\n  File \"D:/Git/WMCC Python/worker/worker.py\", line 77, in testWorker\n    result = createBrandedProduct(job['data'])\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1902, in createBrandedProduct\n    translationDict\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1622, in unitConvert\n    / _UnitLib[inTranslationLib[\"ARCHICAD\"][\"Measurement\"]]\nValueError: could not convert string to float: '#FFFFFF'\n"
    },
    "5B77CEC5-6D10-4FAE-8A72-10DC1B9B6F00": {
        "error_message": {
            "title": "Unspecified error",
            "description": "An unspecified error occured",
            "constant": "ERR_UNSPECIFIED"
        },
        "additional_data": {
            "error_message": [
                "could not convert string to float: '#FFFFFF'"
            ],
            "request": {
                "productName": "Generic material",
                "template": {
                    "materialParameters": [],
                    "materials": [
                        {
                            "name": "Generic material",
                            "Colour": "#FFFFFF",
                            "Texture": null,
                            "Transparency": "0",
                            "Glossiness": "0",
                            "Reflectivity": "0"
                        }
                    ],
                    "ARCHICAD_template": {
                        "category": "commons",
                        "main_macroset_version": "18"
                    }
                },
                "variationsData": []
            }
        },
        "traceback": "Traceback (most recent call last):\n  File \"D:/Git/WMCC Python/worker/worker.py\", line 77, in testWorker\n    result = createBrandedProduct(job['data'])\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1902, in createBrandedProduct\n    translationDict\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1622, in unitConvert\n    / _UnitLib[inTranslationLib[\"ARCHICAD\"][\"Measurement\"]]\nValueError: could not convert string to float: '#FFFFFF'\n"
    },
    "F8A1E226-2AE7-47B0-BC5B-6033045094BB": {
        "error_message": {
            "title": "Unspecified error",
            "description": "An unspecified error occured",
            "constant": "ERR_UNSPECIFIED"
        },
        "additional_data": {
            "error_message": [
                "could not convert string to float: '#FFFFFF'"
            ],
            "request": {
                "productName": "Generic material",
                "template": {
                    "materialParameters": [],
                    "materials": [
                        {
                            "name": "Generic material",
                            "Colour": "#FFFFFF",
                            "Texture": null,
                            "Transparency": "0",
                            "Glossiness": "0",
                            "Reflectivity": "0"
                        }
                    ],
                    "ARCHICAD_template": {
                        "category": "commons",
                        "main_macroset_version": "18"
                    }
                },
                "variationsData": []
            }
        },
        "traceback": "Traceback (most recent call last):\n  File \"D:/Git/WMCC Python/worker/worker.py\", line 77, in testWorker\n    result = createBrandedProduct(job['data'])\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1902, in createBrandedProduct\n    translationDict\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1622, in unitConvert\n    / _UnitLib[inTranslationLib[\"ARCHICAD\"][\"Measurement\"]]\nValueError: could not convert string to float: '#FFFFFF'\n"
    },
    "E838857E-1738-416B-89FB-ED6D447E28EA": {
        "error_message": {
            "title": "Unspecified error",
            "description": "An unspecified error occured",
            "constant": "ERR_UNSPECIFIED"
        },
        "additional_data": {
            "error_message": [
                "could not convert string to float: '#FFFFFF'"
            ],
            "request": {
                "productName": "Generic material",
                "template": {
                    "materialParameters": [],
                    "materials": [
                        {
                            "name": "Generic material",
                            "Colour": "#FFFFFF",
                            "Texture": null,
                            "Transparency": "0",
                            "Glossiness": "0",
                            "Reflectivity": "0"
                        }
                    ],
                    "ARCHICAD_template": {
                        "category": "commons",
                        "main_macroset_version": "18"
                    }
                },
                "variationsData": []
            }
        },
        "traceback": "Traceback (most recent call last):\n  File \"D:/Git/WMCC Python/worker/worker.py\", line 77, in testWorker\n    result = createBrandedProduct(job['data'])\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1902, in createBrandedProduct\n    material[parameter],\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1622, in unitConvert\n    if \"Measurement\" in inTranslationLib[\"ARCHICAD\"]:\nValueError: could not convert string to float: '#FFFFFF'\n"
    },
    "78DB36FA-E872-4511-A8B0-182B1B87CD59": {
        "error_message": {
            "title": "Unspecified error",
            "description": "An unspecified error occured",
            "constant": "ERR_UNSPECIFIED"
        },
        "additional_data": {
            "error_message": [
                "could not convert string to float: '#FFFFFF'"
            ],
            "request": {
                "productName": "Generic material",
                "template": {
                    "materialParameters": [],
                    "materials": [
                        {
                            "name": "Generic material",
                            "Colour": "#FFFFFF",
                            "Texture": null,
                            "Transparency": "0",
                            "Glossiness": "0",
                            "Reflectivity": "0"
                        }
                    ],
                    "ARCHICAD_template": {
                        "category": "commons",
                        "main_macroset_version": "18"
                    }
                },
                "variationsData": []
            }
        },
        "traceback": "Traceback (most recent call last):\n  File \"D:/Git/WMCC Python/worker/worker.py\", line 77, in testWorker\n    result = createBrandedProduct(job['data'])\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1902, in createBrandedProduct\n    material[parameter],\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1622, in unitConvert\n    if \"Measurement\" in inTranslationLib[\"ARCHICAD\"]:\nValueError: could not convert string to float: '#FFFFFF'\n"
    },
    "BDADC476-64AC-49B1-8D4F-1322F8384195": {
        "object_name": "commons_Generic material.lcf",
        "base64_encoded_object": "R0xDRmXAeh4AAQAAAAAAAAAAABgAAAAATUFJTgAAAAAAAAAAAAAAAAAAABQ="
    },
    "B9AEDB99-3AD0-4A5F-945A-3EC9B07D27FB": {
        "error_message": {
            "title": "Unspecified error",
            "description": "An unspecified error occured",
            "constant": "ERR_UNSPECIFIED"
        },
        "additional_data": {
            "error_message": [
                "'int' object is not subscriptable"
            ],
            "request": {
                "productName": "Generic material",
                "template": {
                    "materialParameters": [],
                    "materials": [
                        {
                            "name": "Generic material",
                            "Colour": "#FFFFFF",
                            "Texture": null,
                            "Transparency": "0",
                            "Glossiness": "0",
                            "Reflectivity": "0"
                        }
                    ],
                    "ARCHICAD_template": {
                        "category": "commons",
                        "main_macroset_version": "18"
                    }
                },
                "variationsData": []
            }
        },
        "traceback": "Traceback (most recent call last):\n  File \"D:/Git/WMCC Python/worker/worker.py\", line 77, in testWorker\n    result = createBrandedProduct(job['data'])\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1906, in createBrandedProduct\n    translationDict\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1621, in unitConvert\n    return [unitConvert(inParameterName, par, inTranslationLib) for par in inParameterValue]\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1621, in <listcomp>\n    return [unitConvert(inParameterName, par, inTranslationLib) for par in inParameterValue]\n  File \"D:\\Git\\WMCC Python\\src\\WMCC.py\", line 1616, in unitConvert\n    if inParameterValue[0] == \"#\":\nTypeError: 'int' object is not subscriptable\n"
    }
}